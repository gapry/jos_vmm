!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACKCIADDR	net/lwip/netif/ppp/ipcp.c	495;"	d	file:
ACKCICHAP	net/lwip/netif/ppp/lcp.c	653;"	d	file:
ACKCICHAR	net/lwip/netif/ppp/lcp.c	641;"	d	file:
ACKCIDNS	net/lwip/netif/ppp/ipcp.c	522;"	d	file:
ACKCILONG	net/lwip/netif/ppp/lcp.c	668;"	d	file:
ACKCILQR	net/lwip/netif/ppp/lcp.c	680;"	d	file:
ACKCISHORT	net/lwip/netif/ppp/lcp.c	629;"	d	file:
ACKCIVJ	net/lwip/netif/ppp/ipcp.c	467;"	d	file:
ACKCIVOID	net/lwip/netif/ppp/lcp.c	620;"	d	file:
ACTUALCOUNT_MASK	kern/e100.h	32;"	d
ADDCIADDR	net/lwip/netif/ppp/ipcp.c	399;"	d	file:
ADDCICHAP	net/lwip/netif/ppp/lcp.c	551;"	d	file:
ADDCICHAR	net/lwip/netif/ppp/lcp.c	574;"	d	file:
ADDCIDNS	net/lwip/netif/ppp/ipcp.c	418;"	d	file:
ADDCILONG	net/lwip/netif/ppp/lcp.c	559;"	d	file:
ADDCILQR	net/lwip/netif/ppp/lcp.c	566;"	d	file:
ADDCISHORT	net/lwip/netif/ppp/lcp.c	544;"	d	file:
ADDCIVJ	net/lwip/netif/ppp/ipcp.c	382;"	d	file:
ADDCIVOID	net/lwip/netif/ppp/lcp.c	538;"	d	file:
AF_INET	net/lwip/include/lwip/sockets.h	118;"	d
AF_UNSPEC	net/lwip/include/lwip/sockets.h	117;"	d
ALT	kern/console.c	220;"	d	file:
ANNOUNCE_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	65;"	d
ANNOUNCE_NUM	net/lwip/include/ipv4/lwip/autoip.h	64;"	d
ANNOUNCE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	66;"	d
API_EVENT	net/lwip/include/lwip/api.h	158;"	d
API_LIB_DEBUG	net/lwip/include/lwip/opt.h	1497;"	d
API_MSG_DEBUG	net/lwip/include/lwip/opt.h	1504;"	d
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARGBEGIN	inc/args.h	79;"	d
ARGC	inc/args.h	98;"	d
ARGEND	inc/args.h	92;"	d
ARGF	inc/args.h	93;"	d
ARPH_HWLEN	net/lwip/netif/etharp.c	81;"	d	file:
ARPH_HWLEN_SET	net/lwip/netif/etharp.c	84;"	d	file:
ARPH_PROTOLEN	net/lwip/netif/etharp.c	82;"	d	file:
ARPH_PROTOLEN_SET	net/lwip/netif/etharp.c	85;"	d	file:
ARP_MAXAGE	net/lwip/netif/etharp.c	69;"	d	file:
ARP_MAXPENDING	net/lwip/netif/etharp.c	77;"	d	file:
ARP_QUEUEING	net/lwip/include/lwip/opt.h	336;"	d
ARP_REPLY	net/lwip/include/netif/etharp.h	132;"	d
ARP_REQUEST	net/lwip/include/netif/etharp.h	131;"	d
ARP_TABLE_SIZE	net/lwip/include/lwip/opt.h	328;"	d
ARP_TMR_INTERVAL	net/lwip/include/netif/etharp.h	123;"	d
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/net/ns.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testinput.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testoutput.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echosrv.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echotest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/httpd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testtime.asm	/^#define ASM 1$/;"	d
ASM	obj/user/writemotd.asm	/^#define ASM 1$/;"	d
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	66;"	d
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	76;"	d
AUTH_H	net/lwip/netif/ppp/auth.h	54;"	d
AUTOIP_DEBUG	net/lwip/include/lwip/opt.h	1680;"	d
AUTOIP_STATE_ANNOUNCING	net/lwip/include/ipv4/lwip/autoip.h	74;"	d
AUTOIP_STATE_BOUND	net/lwip/include/ipv4/lwip/autoip.h	75;"	d
AUTOIP_STATE_OFF	net/lwip/include/ipv4/lwip/autoip.h	72;"	d
AUTOIP_STATE_PROBING	net/lwip/include/ipv4/lwip/autoip.h	73;"	d
AUTOIP_TICKS_PER_SECOND	net/lwip/include/ipv4/lwip/autoip.h	57;"	d
AUTOIP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	56;"	d
BCMP	net/lwip/netif/ppp/ppp.h	210;"	d
BCOPY	net/lwip/netif/ppp/ppp.h	211;"	d
BIG_ENDIAN	net/lwip/include/lwip/arch.h	40;"	d
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BUFFSIZE	obj/user/echosrv.asm	/^#define BUFFSIZE 32$/;"	d
BUFFSIZE	user/echosrv.c	7;"	d	file:
BUFFSIZE	user/echotest.c	5;"	d	file:
BUFFSIZE	user/httpd.c	11;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BYTE_ORDER	net/lwip/jos/arch/cc.h	38;"	d
BZERO	net/lwip/netif/ppp/ppp.h	212;"	d
C	kern/console.c	287;"	d	file:
CAPSLOCK	kern/console.c	222;"	d	file:
CBCP_OPT	net/lwip/netif/ppp/lcp.h	82;"	d
CBCP_SUPPORT	net/lwip/include/lwip/opt.h	1302;"	d
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CCP_SUPPORT	net/lwip/include/lwip/opt.h	1309;"	d
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD $/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHAPCS_CLOSED	net/lwip/netif/ppp/chap.h	103;"	d
CHAPCS_INITIAL	net/lwip/netif/ppp/chap.h	102;"	d
CHAPCS_LISTEN	net/lwip/netif/ppp/chap.h	105;"	d
CHAPCS_OPEN	net/lwip/netif/ppp/chap.h	107;"	d
CHAPCS_PENDING	net/lwip/netif/ppp/chap.h	104;"	d
CHAPCS_RESPONSE	net/lwip/netif/ppp/chap.h	106;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	71;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	81;"	d
CHAPSS_BADAUTH	net/lwip/netif/ppp/chap.h	118;"	d
CHAPSS_CLOSED	net/lwip/netif/ppp/chap.h	113;"	d
CHAPSS_INITIAL	net/lwip/netif/ppp/chap.h	112;"	d
CHAPSS_INITIAL_CHAL	net/lwip/netif/ppp/chap.h	115;"	d
CHAPSS_OPEN	net/lwip/netif/ppp/chap.h	116;"	d
CHAPSS_PENDING	net/lwip/netif/ppp/chap.h	114;"	d
CHAPSS_RECHALLENGE	net/lwip/netif/ppp/chap.h	117;"	d
CHAP_CHALLENGE	net/lwip/netif/ppp/chap.h	87;"	d
CHAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1354;"	d
CHAP_DEFTRANSMITS	net/lwip/include/lwip/opt.h	1358;"	d
CHAP_DIGEST_MD5	net/lwip/netif/ppp/chap.h	82;"	d
CHAP_FAILURE	net/lwip/netif/ppp/chap.h	90;"	d
CHAP_H	net/lwip/netif/ppp/chap.h	69;"	d
CHAP_HEADERLEN	net/lwip/netif/ppp/chap.h	76;"	d
CHAP_MICROSOFT	net/lwip/netif/ppp/chap.h	84;"	d
CHAP_PEER	net/lwip/netif/ppp/auth.c	93;"	d	file:
CHAP_RESPONSE	net/lwip/netif/ppp/chap.h	88;"	d
CHAP_SUCCESS	net/lwip/netif/ppp/chap.h	89;"	d
CHAP_SUPPORT	net/lwip/include/lwip/opt.h	1288;"	d
CHAP_WITHPEER	net/lwip/netif/ppp/auth.c	92;"	d	file:
CHECK	user/faultregs.c	44;"	d	file:
CHECK	user/faultregs.c	66;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CHECKSUM_CHECK_IP	net/lwip/include/lwip/opt.h	1433;"	d
CHECKSUM_CHECK_TCP	net/lwip/include/lwip/opt.h	1447;"	d
CHECKSUM_CHECK_UDP	net/lwip/include/lwip/opt.h	1440;"	d
CHECKSUM_GEN_IP	net/lwip/include/lwip/opt.h	1412;"	d
CHECKSUM_GEN_TCP	net/lwip/include/lwip/opt.h	1426;"	d
CHECKSUM_GEN_UDP	net/lwip/include/lwip/opt.h	1419;"	d
CHPMS_H	net/lwip/netif/ppp/chpms.h	58;"	d
CILEN_ADDR	net/lwip/netif/ppp/ipcp.c	77;"	d	file:
CILEN_ADDRS	net/lwip/netif/ppp/ipcp.c	78;"	d	file:
CILEN_CBCP	net/lwip/netif/ppp/lcp.c	88;"	d	file:
CILEN_CHAP	net/lwip/netif/ppp/lcp.c	85;"	d	file:
CILEN_CHAR	net/lwip/netif/ppp/lcp.c	83;"	d	file:
CILEN_COMPRESS	net/lwip/netif/ppp/ipcp.c	75;"	d	file:
CILEN_LONG	net/lwip/netif/ppp/lcp.c	86;"	d	file:
CILEN_LQR	net/lwip/netif/ppp/lcp.c	87;"	d	file:
CILEN_SHORT	net/lwip/netif/ppp/lcp.c	84;"	d	file:
CILEN_VJ	net/lwip/netif/ppp/ipcp.c	76;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/ipcp.c	74;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/lcp.c	82;"	d	file:
CI_ACCOMPRESSION	net/lwip/netif/ppp/lcp.h	69;"	d
CI_ADDR	net/lwip/netif/ppp/ipcp.h	65;"	d
CI_ADDRS	net/lwip/netif/ppp/ipcp.h	63;"	d
CI_ASYNCMAP	net/lwip/netif/ppp/lcp.h	64;"	d
CI_AUTHTYPE	net/lwip/netif/ppp/lcp.h	65;"	d
CI_CALLBACK	net/lwip/netif/ppp/lcp.h	70;"	d
CI_COMPRESSTYPE	net/lwip/netif/ppp/ipcp.h	64;"	d
CI_EPDISC	net/lwip/netif/ppp/lcp.h	73;"	d
CI_MAGICNUMBER	net/lwip/netif/ppp/lcp.h	67;"	d
CI_MRRU	net/lwip/netif/ppp/lcp.h	71;"	d
CI_MRU	net/lwip/netif/ppp/lcp.h	63;"	d
CI_MS_DNS1	net/lwip/netif/ppp/ipcp.h	68;"	d
CI_MS_DNS2	net/lwip/netif/ppp/ipcp.h	70;"	d
CI_MS_WINS1	net/lwip/netif/ppp/ipcp.h	67;"	d
CI_MS_WINS2	net/lwip/netif/ppp/ipcp.h	69;"	d
CI_PCOMPRESSION	net/lwip/netif/ppp/lcp.h	68;"	d
CI_QUALITY	net/lwip/netif/ppp/lcp.h	66;"	d
CI_SSNHF	net/lwip/netif/ppp/lcp.h	72;"	d
CLOSED	net/lwip/include/lwip/tcp.h	/^  CLOSED      = 0,$/;"	e	enum:tcp_state
CLOSE_WAIT	net/lwip/include/lwip/tcp.h	/^  CLOSE_WAIT  = 7,$/;"	e	enum:tcp_state
CLOSING	net/lwip/include/lwip/tcp.h	/^  CLOSING     = 8,$/;"	e	enum:tcp_state
CMDBUF_SIZE	kern/monitor.c	17;"	d	file:
CMDBUF_SIZE	obj/kern/kernel.asm	/^#define CMDBUF_SIZE	80	\/\/ enough for one VGA text line$/;"	d
CMDBYTE	inc/kbdreg.h	60;"	d
CMDOFST	kern/e100.h	18;"	d
CODENAME	net/lwip/netif/ppp/ipcp.c	115;"	d	file:
CODENAME	net/lwip/netif/ppp/lcp.c	130;"	d	file:
CODEREJ	net/lwip/netif/ppp/fsm.h	75;"	d
COLOR	lib/printfmt.c	/^int COLOR = 0x000000ce;$/;"	v
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONFACK	net/lwip/netif/ppp/fsm.h	70;"	d
CONFNAK	net/lwip/netif/ppp/fsm.h	71;"	d
CONFREJ	net/lwip/netif/ppp/fsm.h	72;"	d
CONFREQ	net/lwip/netif/ppp/fsm.h	69;"	d
CONSBUFSIZE	kern/console.c	386;"	d	file:
CR0_AM	inc/mmu.h	88;"	d
CR0_CD	inc/mmu.h	90;"	d
CR0_EM	inc/mmu.h	83;"	d
CR0_ET	inc/mmu.h	85;"	d
CR0_MP	inc/mmu.h	82;"	d
CR0_NE	inc/mmu.h	86;"	d
CR0_NW	inc/mmu.h	89;"	d
CR0_PE	inc/mmu.h	81;"	d
CR0_PG	inc/mmu.h	91;"	d
CR0_TS	inc/mmu.h	84;"	d
CR0_WP	inc/mmu.h	87;"	d
CR4_DE	inc/mmu.h	96;"	d
CR4_MCE	inc/mmu.h	94;"	d
CR4_PCE	inc/mmu.h	93;"	d
CR4_PSE	inc/mmu.h	95;"	d
CR4_PVI	inc/mmu.h	98;"	d
CR4_TSD	inc/mmu.h	97;"	d
CR4_VME	inc/mmu.h	99;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	219;"	d	file:
CU_IDLE	kern/e100.h	14;"	d
CU_RESUME	kern/e100.h	17;"	d
CU_START	kern/e100.h	16;"	d
CU_SUSPEND	kern/e100.h	15;"	d
ChallengeResponse	net/lwip/netif/ppp/chpms.c	/^ChallengeResponse( u_char *challenge, \/* IN   8 octets *\/$/;"	f	file:
ChapAuthPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthPeer(int unit, char *our_name, int digest)$/;"	f
ChapAuthWithPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthWithPeer(int unit, char *our_name, int digest)$/;"	f
ChapChallengeTimeout	net/lwip/netif/ppp/chap.c	/^ChapChallengeTimeout(void *arg)$/;"	f	file:
ChapGenChallenge	net/lwip/netif/ppp/chap.c	/^ChapGenChallenge(chap_state *cstate)$/;"	f	file:
ChapInit	net/lwip/netif/ppp/chap.c	/^ChapInit(int unit)$/;"	f	file:
ChapInput	net/lwip/netif/ppp/chap.c	/^ChapInput(int unit, u_char *inpacket, int packet_len)$/;"	f	file:
ChapLowerDown	net/lwip/netif/ppp/chap.c	/^ChapLowerDown(int unit)$/;"	f	file:
ChapLowerUp	net/lwip/netif/ppp/chap.c	/^ChapLowerUp(int unit)$/;"	f	file:
ChapMS	net/lwip/netif/ppp/chpms.c	/^ChapMS( chap_state *cstate, char *rchallenge, int rchallenge_len, char *secret, int secret_len)$/;"	f
ChapMS_LANMan	net/lwip/netif/ppp/chpms.c	/^ChapMS_LANMan( char *rchallenge,$/;"	f	file:
ChapMS_NT	net/lwip/netif/ppp/chpms.c	/^ChapMS_NT( char *rchallenge,$/;"	f	file:
ChapProtocolReject	net/lwip/netif/ppp/chap.c	/^ChapProtocolReject(int unit)$/;"	f	file:
ChapReceiveChallenge	net/lwip/netif/ppp/chap.c	/^ChapReceiveChallenge(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveFailure	net/lwip/netif/ppp/chap.c	/^ChapReceiveFailure(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapReceiveResponse	net/lwip/netif/ppp/chap.c	/^ChapReceiveResponse(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveSuccess	net/lwip/netif/ppp/chap.c	/^ChapReceiveSuccess(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapRechallenge	net/lwip/netif/ppp/chap.c	/^ChapRechallenge(void *arg)$/;"	f	file:
ChapResponseTimeout	net/lwip/netif/ppp/chap.c	/^ChapResponseTimeout(void *arg)$/;"	f	file:
ChapSendChallenge	net/lwip/netif/ppp/chap.c	/^ChapSendChallenge(chap_state *cstate)$/;"	f	file:
ChapSendResponse	net/lwip/netif/ppp/chap.c	/^ChapSendResponse(chap_state *cstate)$/;"	f	file:
ChapSendStatus	net/lwip/netif/ppp/chap.c	/^ChapSendStatus(chap_state *cstate, int code)$/;"	f	file:
Collapse	net/lwip/netif/ppp/chpms.c	/^Collapse(u_char *in, u_char *out)$/;"	f	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	57;"	d
DECODEL	net/lwip/netif/ppp/vj.c	107;"	d	file:
DECODES	net/lwip/netif/ppp/vj.c	118;"	d	file:
DECODEU	net/lwip/netif/ppp/vj.c	129;"	d	file:
DECPTR	net/lwip/netif/ppp/ppp.h	208;"	d
DEFAULT	net/ns.h	6;"	d
DEFAULT_ACCEPTMBOX_SIZE	net/lwip/include/lwip/opt.h	1043;"	d
DEFAULT_RAW_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1016;"	d
DEFAULT_TCP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1034;"	d
DEFAULT_THREAD_NAME	net/lwip/include/lwip/opt.h	989;"	d
DEFAULT_THREAD_PRIO	net/lwip/include/lwip/opt.h	1007;"	d
DEFAULT_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	998;"	d
DEFAULT_UDP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1025;"	d
DEFEND_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	69;"	d
DEFLOOPBACKFAIL	net/lwip/netif/ppp/lcp.h	165;"	d
DEPTH	user/forktree.c	5;"	d	file:
DHCP_ACK	net/lwip/include/lwip/dhcp.h	188;"	d
DHCP_AUTOIP_COOP_STATE_OFF	net/lwip/include/lwip/dhcp.h	178;"	d
DHCP_AUTOIP_COOP_STATE_ON	net/lwip/include/lwip/dhcp.h	179;"	d
DHCP_BACKING_OFF	net/lwip/include/lwip/dhcp.h	174;"	d
DHCP_BOOTREPLY	net/lwip/include/lwip/dhcp.h	182;"	d
DHCP_BOOTREQUEST	net/lwip/include/lwip/dhcp.h	181;"	d
DHCP_BOUND	net/lwip/include/lwip/dhcp.h	172;"	d
DHCP_BROADCAST_FLAG	net/lwip/include/lwip/dhcp.h	197;"	d
DHCP_BROADCAST_MASK	net/lwip/include/lwip/dhcp.h	198;"	d
DHCP_CHADDR_LEN	net/lwip/include/lwip/dhcp.h	93;"	d
DHCP_CHADDR_OFS	net/lwip/include/lwip/dhcp.h	151;"	d
DHCP_CHECKING	net/lwip/include/lwip/dhcp.h	170;"	d
DHCP_CIADDR_OFS	net/lwip/include/lwip/dhcp.h	147;"	d
DHCP_CLIENT_PORT	net/lwip/include/lwip/dhcp.h	159;"	d
DHCP_COARSE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	21;"	d
DHCP_COARSE_TIMER_SECS	net/lwip/include/lwip/dhcp.h	19;"	d
DHCP_COOKIE_OFS	net/lwip/include/lwip/dhcp.h	156;"	d
DHCP_DEBUG	net/lwip/include/lwip/opt.h	1673;"	d
DHCP_DECLINE	net/lwip/include/lwip/dhcp.h	187;"	d
DHCP_DISCOVER	net/lwip/include/lwip/dhcp.h	184;"	d
DHCP_DOES_ARP_CHECK	net/lwip/include/lwip/opt.h	490;"	d
DHCP_FILE_LEN	net/lwip/include/lwip/dhcp.h	97;"	d
DHCP_FILE_OFS	net/lwip/include/lwip/dhcp.h	153;"	d
DHCP_FINE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	23;"	d
DHCP_FLAGS_OFS	net/lwip/include/lwip/dhcp.h	146;"	d
DHCP_GIADDR_OFS	net/lwip/include/lwip/dhcp.h	150;"	d
DHCP_HLEN_ETH	net/lwip/include/lwip/dhcp.h	195;"	d
DHCP_HLEN_OFS	net/lwip/include/lwip/dhcp.h	142;"	d
DHCP_HOPS_OFS	net/lwip/include/lwip/dhcp.h	143;"	d
DHCP_HTYPE_ETH	net/lwip/include/lwip/dhcp.h	193;"	d
DHCP_HTYPE_OFS	net/lwip/include/lwip/dhcp.h	141;"	d
DHCP_INFORM	net/lwip/include/lwip/dhcp.h	191;"	d
DHCP_INFORMING	net/lwip/include/lwip/dhcp.h	169;"	d
DHCP_INIT	net/lwip/include/lwip/dhcp.h	164;"	d
DHCP_MAX_DNS	net/lwip/include/lwip/dhcp.h	55;"	d
DHCP_MIN_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	100;"	d
DHCP_MSG_LEN	net/lwip/include/lwip/dhcp.h	154;"	d
DHCP_MSG_OFS	net/lwip/include/lwip/dhcp.h	139;"	d
DHCP_NAK	net/lwip/include/lwip/dhcp.h	189;"	d
DHCP_OFF	net/lwip/include/lwip/dhcp.h	175;"	d
DHCP_OFFER	net/lwip/include/lwip/dhcp.h	185;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	103;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	108;"	d
DHCP_OPTIONS_OFS	net/lwip/include/lwip/dhcp.h	157;"	d
DHCP_OPTION_BOOTFILE	net/lwip/include/lwip/dhcp.h	232;"	d
DHCP_OPTION_BROADCAST	net/lwip/include/lwip/dhcp.h	208;"	d
DHCP_OPTION_CLIENT_ID	net/lwip/include/lwip/dhcp.h	230;"	d
DHCP_OPTION_DNS_SERVER	net/lwip/include/lwip/dhcp.h	204;"	d
DHCP_OPTION_END	net/lwip/include/lwip/dhcp.h	210;"	d
DHCP_OPTION_HOSTNAME	net/lwip/include/lwip/dhcp.h	205;"	d
DHCP_OPTION_IP_TTL	net/lwip/include/lwip/dhcp.h	206;"	d
DHCP_OPTION_LEASE_TIME	net/lwip/include/lwip/dhcp.h	214;"	d
DHCP_OPTION_MAX_MSG_SIZE	net/lwip/include/lwip/dhcp.h	224;"	d
DHCP_OPTION_MAX_MSG_SIZE_LEN	net/lwip/include/lwip/dhcp.h	225;"	d
DHCP_OPTION_MESSAGE_TYPE	net/lwip/include/lwip/dhcp.h	217;"	d
DHCP_OPTION_MESSAGE_TYPE_LEN	net/lwip/include/lwip/dhcp.h	218;"	d
DHCP_OPTION_MTU	net/lwip/include/lwip/dhcp.h	207;"	d
DHCP_OPTION_OVERLOAD	net/lwip/include/lwip/dhcp.h	215;"	d
DHCP_OPTION_PAD	net/lwip/include/lwip/dhcp.h	201;"	d
DHCP_OPTION_PARAMETER_REQUEST_LIST	net/lwip/include/lwip/dhcp.h	222;"	d
DHCP_OPTION_REQUESTED_IP	net/lwip/include/lwip/dhcp.h	213;"	d
DHCP_OPTION_ROUTER	net/lwip/include/lwip/dhcp.h	203;"	d
DHCP_OPTION_SERVER_ID	net/lwip/include/lwip/dhcp.h	221;"	d
DHCP_OPTION_SUBNET_MASK	net/lwip/include/lwip/dhcp.h	202;"	d
DHCP_OPTION_T1	net/lwip/include/lwip/dhcp.h	227;"	d
DHCP_OPTION_T2	net/lwip/include/lwip/dhcp.h	228;"	d
DHCP_OPTION_TCP_TTL	net/lwip/include/lwip/dhcp.h	209;"	d
DHCP_OPTION_TFTP_SERVERNAME	net/lwip/include/lwip/dhcp.h	231;"	d
DHCP_OPTION_US	net/lwip/include/lwip/dhcp.h	229;"	d
DHCP_OP_OFS	net/lwip/include/lwip/dhcp.h	140;"	d
DHCP_OVERLOAD_FILE	net/lwip/include/lwip/dhcp.h	236;"	d
DHCP_OVERLOAD_NONE	net/lwip/include/lwip/dhcp.h	235;"	d
DHCP_OVERLOAD_SNAME	net/lwip/include/lwip/dhcp.h	237;"	d
DHCP_OVERLOAD_SNAME_FILE	net/lwip/include/lwip/dhcp.h	238;"	d
DHCP_PERMANENT	net/lwip/include/lwip/dhcp.h	171;"	d
DHCP_REBINDING	net/lwip/include/lwip/dhcp.h	166;"	d
DHCP_REBOOTING	net/lwip/include/lwip/dhcp.h	165;"	d
DHCP_RELEASE	net/lwip/include/lwip/dhcp.h	190;"	d
DHCP_RENEWING	net/lwip/include/lwip/dhcp.h	167;"	d
DHCP_REQUEST	net/lwip/include/lwip/dhcp.h	186;"	d
DHCP_REQUESTING	net/lwip/include/lwip/dhcp.h	163;"	d
DHCP_SECS_OFS	net/lwip/include/lwip/dhcp.h	145;"	d
DHCP_SELECTING	net/lwip/include/lwip/dhcp.h	168;"	d
DHCP_SERVER_PORT	net/lwip/include/lwip/dhcp.h	160;"	d
DHCP_SIADDR_OFS	net/lwip/include/lwip/dhcp.h	149;"	d
DHCP_SNAME_LEN	net/lwip/include/lwip/dhcp.h	95;"	d
DHCP_SNAME_OFS	net/lwip/include/lwip/dhcp.h	152;"	d
DHCP_XID_OFS	net/lwip/include/lwip/dhcp.h	144;"	d
DHCP_YIADDR_OFS	net/lwip/include/lwip/dhcp.h	148;"	d
DISCREQ	net/lwip/netif/ppp/lcp.h	81;"	d
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
DNS_DEBUG	net/lwip/include/lwip/opt.h	1701;"	d
DNS_DOES_NAME_CHECK	net/lwip/include/lwip/opt.h	600;"	d
DNS_FLAG1_AUTHORATIVE	net/lwip/core/dns.c	110;"	d	file:
DNS_FLAG1_OPCODE_INVERSE	net/lwip/core/dns.c	108;"	d	file:
DNS_FLAG1_OPCODE_STANDARD	net/lwip/core/dns.c	109;"	d	file:
DNS_FLAG1_OPCODE_STATUS	net/lwip/core/dns.c	107;"	d	file:
DNS_FLAG1_RD	net/lwip/core/dns.c	112;"	d	file:
DNS_FLAG1_RESPONSE	net/lwip/core/dns.c	106;"	d	file:
DNS_FLAG1_TRUNC	net/lwip/core/dns.c	111;"	d	file:
DNS_FLAG2_ERR_MASK	net/lwip/core/dns.c	114;"	d	file:
DNS_FLAG2_ERR_NAME	net/lwip/core/dns.c	116;"	d	file:
DNS_FLAG2_ERR_NONE	net/lwip/core/dns.c	115;"	d	file:
DNS_FLAG2_RA	net/lwip/core/dns.c	113;"	d	file:
DNS_MAX_NAME_LENGTH	net/lwip/include/lwip/opt.h	590;"	d
DNS_MAX_RETRIES	net/lwip/core/dns.c	97;"	d	file:
DNS_MAX_SERVERS	net/lwip/include/lwip/opt.h	595;"	d
DNS_MAX_TTL	net/lwip/core/dns.c	102;"	d	file:
DNS_MSG_SIZE	net/lwip/include/lwip/opt.h	612;"	d
DNS_RRCLASS_CH	net/lwip/include/lwip/dns.h	65;"	d
DNS_RRCLASS_CS	net/lwip/include/lwip/dns.h	64;"	d
DNS_RRCLASS_FLUSH	net/lwip/include/lwip/dns.h	67;"	d
DNS_RRCLASS_HS	net/lwip/include/lwip/dns.h	66;"	d
DNS_RRCLASS_IN	net/lwip/include/lwip/dns.h	63;"	d
DNS_RRTYPE_A	net/lwip/include/lwip/dns.h	45;"	d
DNS_RRTYPE_CNAME	net/lwip/include/lwip/dns.h	49;"	d
DNS_RRTYPE_HINFO	net/lwip/include/lwip/dns.h	57;"	d
DNS_RRTYPE_MB	net/lwip/include/lwip/dns.h	51;"	d
DNS_RRTYPE_MD	net/lwip/include/lwip/dns.h	47;"	d
DNS_RRTYPE_MF	net/lwip/include/lwip/dns.h	48;"	d
DNS_RRTYPE_MG	net/lwip/include/lwip/dns.h	52;"	d
DNS_RRTYPE_MINFO	net/lwip/include/lwip/dns.h	58;"	d
DNS_RRTYPE_MR	net/lwip/include/lwip/dns.h	53;"	d
DNS_RRTYPE_MX	net/lwip/include/lwip/dns.h	59;"	d
DNS_RRTYPE_NS	net/lwip/include/lwip/dns.h	46;"	d
DNS_RRTYPE_NULL	net/lwip/include/lwip/dns.h	54;"	d
DNS_RRTYPE_PTR	net/lwip/include/lwip/dns.h	56;"	d
DNS_RRTYPE_SOA	net/lwip/include/lwip/dns.h	50;"	d
DNS_RRTYPE_TXT	net/lwip/include/lwip/dns.h	60;"	d
DNS_RRTYPE_WKS	net/lwip/include/lwip/dns.h	55;"	d
DNS_SERVER_ADDRESS	net/lwip/core/dns.c	87;"	d	file:
DNS_SERVER_PORT	net/lwip/core/dns.c	92;"	d	file:
DNS_STATE_ASKING	net/lwip/core/dns.c	121;"	d	file:
DNS_STATE_DONE	net/lwip/core/dns.c	122;"	d	file:
DNS_STATE_NEW	net/lwip/core/dns.c	120;"	d	file:
DNS_STATE_UNUSED	net/lwip/core/dns.c	119;"	d	file:
DNS_TABLE_SIZE	net/lwip/include/lwip/opt.h	585;"	d
DNS_TMR_INTERVAL	net/lwip/include/lwip/dns.h	42;"	d
DNS_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	607;"	d
DesEncrypt	net/lwip/netif/ppp/chpms.c	/^DesEncrypt( u_char *clear, \/* IN  8 octets *\/$/;"	f	file:
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/ns.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testinput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testoutput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echosrv.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echotest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/httpd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testtime.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/writemotd.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	226;"	d	file:
E100DEVID	kern/e100.h	5;"	d
E100VENDID	kern/e100.h	4;"	d
E100_SOFTRST	kern/e100.h	6;"	d
E2BIG	net/lwip/include/lwip/arch.h	75;"	d
EACCES	net/lwip/include/lwip/arch.h	81;"	d
EADDRINUSE	net/lwip/include/lwip/arch.h	168;"	d
EADDRNOTAVAIL	net/lwip/include/lwip/arch.h	169;"	d
EADV	net/lwip/include/lwip/arch.h	138;"	d
EAFNOSUPPORT	net/lwip/include/lwip/arch.h	167;"	d
EAGAIN	net/lwip/include/lwip/arch.h	79;"	d
EAI_FAIL	net/lwip/include/lwip/netdb.h	53;"	d
EAI_MEMORY	net/lwip/include/lwip/netdb.h	54;"	d
EAI_NONAME	net/lwip/include/lwip/netdb.h	51;"	d
EAI_SERVICE	net/lwip/include/lwip/netdb.h	52;"	d
EALREADY	net/lwip/include/lwip/arch.h	184;"	d
EARGF	inc/args.h	95;"	d
EBADE	net/lwip/include/lwip/arch.h	120;"	d
EBADF	net/lwip/include/lwip/arch.h	77;"	d
EBADFD	net/lwip/include/lwip/arch.h	147;"	d
EBADMSG	net/lwip/include/lwip/arch.h	144;"	d
EBADR	net/lwip/include/lwip/arch.h	121;"	d
EBADRQC	net/lwip/include/lwip/arch.h	124;"	d
EBADSLT	net/lwip/include/lwip/arch.h	125;"	d
EBFONT	net/lwip/include/lwip/arch.h	129;"	d
EBUSY	net/lwip/include/lwip/arch.h	84;"	d
ECHILD	net/lwip/include/lwip/arch.h	78;"	d
ECHOREP	net/lwip/netif/ppp/lcp.h	80;"	d
ECHOREQ	net/lwip/netif/ppp/lcp.h	79;"	d
ECHRNG	net/lwip/include/lwip/arch.h	112;"	d
ECOMM	net/lwip/include/lwip/arch.h	140;"	d
ECONNABORTED	net/lwip/include/lwip/arch.h	173;"	d
ECONNREFUSED	net/lwip/include/lwip/arch.h	181;"	d
ECONNRESET	net/lwip/include/lwip/arch.h	174;"	d
EDEADLK	net/lwip/include/lwip/arch.h	103;"	d
EDEADLOCK	net/lwip/include/lwip/arch.h	127;"	d
EDESTADDRREQ	net/lwip/include/lwip/arch.h	159;"	d
EDOM	net/lwip/include/lwip/arch.h	101;"	d
EDOTDOT	net/lwip/include/lwip/arch.h	143;"	d
EDQUOT	net/lwip/include/lwip/arch.h	192;"	d
EEXIST	net/lwip/include/lwip/arch.h	85;"	d
EFACount	kern/e100.c	/^		uint16_t EFACount;$/;"	m	struct:e100_ru	file:
EFAULT	net/lwip/include/lwip/arch.h	82;"	d
EFBIG	net/lwip/include/lwip/arch.h	95;"	d
EHOSTDOWN	net/lwip/include/lwip/arch.h	182;"	d
EHOSTUNREACH	net/lwip/include/lwip/arch.h	183;"	d
EIDRM	net/lwip/include/lwip/arch.h	111;"	d
EILSEQ	net/lwip/include/lwip/arch.h	154;"	d
EINPROGRESS	net/lwip/include/lwip/arch.h	185;"	d
EINTR	net/lwip/include/lwip/arch.h	72;"	d
EINVAL	net/lwip/include/lwip/arch.h	90;"	d
EIO	net/lwip/include/lwip/arch.h	73;"	d
EISCONN	net/lwip/include/lwip/arch.h	176;"	d
EISDIR	net/lwip/include/lwip/arch.h	89;"	d
EISNAM	net/lwip/include/lwip/arch.h	190;"	d
EL2HLT	net/lwip/include/lwip/arch.h	119;"	d
EL2NSYNC	net/lwip/include/lwip/arch.h	113;"	d
EL3HLT	net/lwip/include/lwip/arch.h	114;"	d
EL3RST	net/lwip/include/lwip/arch.h	115;"	d
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ELIBACC	net/lwip/include/lwip/arch.h	149;"	d
ELIBBAD	net/lwip/include/lwip/arch.h	150;"	d
ELIBEXEC	net/lwip/include/lwip/arch.h	153;"	d
ELIBMAX	net/lwip/include/lwip/arch.h	152;"	d
ELIBSCN	net/lwip/include/lwip/arch.h	151;"	d
ELNRNG	net/lwip/include/lwip/arch.h	116;"	d
ELOOP	net/lwip/include/lwip/arch.h	108;"	d
EMEDIUMTYPE	net/lwip/include/lwip/arch.h	195;"	d
EMFILE	net/lwip/include/lwip/arch.h	92;"	d
EMLINK	net/lwip/include/lwip/arch.h	99;"	d
EMSGSIZE	net/lwip/include/lwip/arch.h	160;"	d
EMULTIHOP	net/lwip/include/lwip/arch.h	142;"	d
ENABLE_LOOPBACK	net/lwip/include/lwip/netif.h	37;"	d
ENAMETOOLONG	net/lwip/include/lwip/arch.h	104;"	d
ENAVAIL	net/lwip/include/lwip/arch.h	189;"	d
ENCODE	net/lwip/netif/ppp/vj.c	86;"	d	file:
ENCODEZ	net/lwip/netif/ppp/vj.c	96;"	d	file:
ENETDOWN	net/lwip/include/lwip/arch.h	170;"	d
ENETRESET	net/lwip/include/lwip/arch.h	172;"	d
ENETUNREACH	net/lwip/include/lwip/arch.h	171;"	d
ENFILE	net/lwip/include/lwip/arch.h	91;"	d
ENOANO	net/lwip/include/lwip/arch.h	123;"	d
ENOBUFS	net/lwip/include/lwip/arch.h	175;"	d
ENOCSI	net/lwip/include/lwip/arch.h	118;"	d
ENODATA	net/lwip/include/lwip/arch.h	131;"	d
ENODEV	net/lwip/include/lwip/arch.h	87;"	d
ENOENT	net/lwip/include/lwip/arch.h	70;"	d
ENOEXEC	net/lwip/include/lwip/arch.h	76;"	d
ENOLCK	net/lwip/include/lwip/arch.h	105;"	d
ENOLINK	net/lwip/include/lwip/arch.h	137;"	d
ENOMEDIUM	net/lwip/include/lwip/arch.h	194;"	d
ENOMEM	net/lwip/include/lwip/arch.h	80;"	d
ENOMSG	net/lwip/include/lwip/arch.h	110;"	d
ENONET	net/lwip/include/lwip/arch.h	134;"	d
ENOPKG	net/lwip/include/lwip/arch.h	135;"	d
ENOPROTOOPT	net/lwip/include/lwip/arch.h	162;"	d
ENOSPC	net/lwip/include/lwip/arch.h	96;"	d
ENOSR	net/lwip/include/lwip/arch.h	133;"	d
ENOSTR	net/lwip/include/lwip/arch.h	130;"	d
ENOSYS	net/lwip/include/lwip/arch.h	106;"	d
ENOTBLK	net/lwip/include/lwip/arch.h	83;"	d
ENOTCONN	net/lwip/include/lwip/arch.h	177;"	d
ENOTDIR	net/lwip/include/lwip/arch.h	88;"	d
ENOTEMPTY	net/lwip/include/lwip/arch.h	107;"	d
ENOTNAM	net/lwip/include/lwip/arch.h	188;"	d
ENOTSOCK	net/lwip/include/lwip/arch.h	158;"	d
ENOTTY	net/lwip/include/lwip/arch.h	93;"	d
ENOTUNIQ	net/lwip/include/lwip/arch.h	146;"	d
ENSRBADFAMILY	net/lwip/include/lwip/arch.h	207;"	d
ENSRBADNAME	net/lwip/include/lwip/arch.h	206;"	d
ENSRBADQUERY	net/lwip/include/lwip/arch.h	205;"	d
ENSRBADRESP	net/lwip/include/lwip/arch.h	208;"	d
ENSRCNAMELOOP	net/lwip/include/lwip/arch.h	216;"	d
ENSRCONNREFUSED	net/lwip/include/lwip/arch.h	209;"	d
ENSRDESTRUCTION	net/lwip/include/lwip/arch.h	214;"	d
ENSRFILE	net/lwip/include/lwip/arch.h	212;"	d
ENSRFORMERR	net/lwip/include/lwip/arch.h	200;"	d
ENSRNODATA	net/lwip/include/lwip/arch.h	199;"	d
ENSRNOMEM	net/lwip/include/lwip/arch.h	213;"	d
ENSRNOTFOUND	net/lwip/include/lwip/arch.h	202;"	d
ENSRNOTIMP	net/lwip/include/lwip/arch.h	203;"	d
ENSROF	net/lwip/include/lwip/arch.h	211;"	d
ENSROK	net/lwip/include/lwip/arch.h	198;"	d
ENSRQUERYDOMAINTOOLONG	net/lwip/include/lwip/arch.h	215;"	d
ENSRREFUSED	net/lwip/include/lwip/arch.h	204;"	d
ENSRSERVFAIL	net/lwip/include/lwip/arch.h	201;"	d
ENSRTIMEOUT	net/lwip/include/lwip/arch.h	210;"	d
ENTRY	net/lwip/jos/arch/longjmp.S	/^#define ENTRY(x) \\$/;"	d
ENTRY	obj/net/ns.asm	/^#define ENTRY(x) \\$/;"	d
ENVGENSHIFT	kern/env.c	20;"	d	file:
ENVX	inc/env.h	31;"	d
ENV_CREATE	kern/env.h	36;"	d
ENV_CREATE2	kern/env.h	31;"	d
ENV_FREE	inc/env.h	34;"	d
ENV_NOT_RUNNABLE	inc/env.h	36;"	d
ENV_RUNNABLE	inc/env.h	35;"	d
ENXIO	net/lwip/include/lwip/arch.h	74;"	d
EOPNOTSUPP	net/lwip/include/lwip/arch.h	165;"	d
EOVERFLOW	net/lwip/include/lwip/arch.h	145;"	d
EPERM	net/lwip/include/lwip/arch.h	69;"	d
EPFNOSUPPORT	net/lwip/include/lwip/arch.h	166;"	d
EPIPE	net/lwip/include/lwip/arch.h	100;"	d
EPROTO	net/lwip/include/lwip/arch.h	141;"	d
EPROTONOSUPPORT	net/lwip/include/lwip/arch.h	163;"	d
EPROTOTYPE	net/lwip/include/lwip/arch.h	161;"	d
ERANGE	net/lwip/include/lwip/arch.h	102;"	d
EREMCHG	net/lwip/include/lwip/arch.h	148;"	d
EREMOTE	net/lwip/include/lwip/arch.h	136;"	d
EREMOTEIO	net/lwip/include/lwip/arch.h	191;"	d
ERESTART	net/lwip/include/lwip/arch.h	155;"	d
EROFS	net/lwip/include/lwip/arch.h	98;"	d
ERRNO	net/lwip/jos/lwipopts.h	61;"	d
ERR_ABRT	net/lwip/include/lwip/err.h	60;"	d
ERR_ARG	net/lwip/include/lwip/err.h	67;"	d
ERR_BUF	net/lwip/include/lwip/err.h	54;"	d
ERR_CLSD	net/lwip/include/lwip/err.h	62;"	d
ERR_CONN	net/lwip/include/lwip/err.h	63;"	d
ERR_IF	net/lwip/include/lwip/err.h	71;"	d
ERR_INPROGRESS	net/lwip/include/lwip/err.h	74;"	d
ERR_ISCONN	net/lwip/include/lwip/err.h	72;"	d
ERR_IS_FATAL	net/lwip/include/lwip/err.h	58;"	d
ERR_MEM	net/lwip/include/lwip/err.h	53;"	d
ERR_OK	net/lwip/include/lwip/err.h	52;"	d
ERR_RST	net/lwip/include/lwip/err.h	61;"	d
ERR_RTE	net/lwip/include/lwip/err.h	56;"	d
ERR_TIMEOUT	net/lwip/include/lwip/err.h	55;"	d
ERR_TO_ERRNO_TABLE_SIZE	net/lwip/api/sockets.c	145;"	d	file:
ERR_USE	net/lwip/include/lwip/err.h	69;"	d
ERR_VAL	net/lwip/include/lwip/err.h	65;"	d
ESCAPE_P	net/lwip/netif/ppp/ppp.c	135;"	d	file:
ESHUTDOWN	net/lwip/include/lwip/arch.h	178;"	d
ESOCKTNOSUPPORT	net/lwip/include/lwip/arch.h	164;"	d
ESPIPE	net/lwip/include/lwip/arch.h	97;"	d
ESRCH	net/lwip/include/lwip/arch.h	71;"	d
ESRMNT	net/lwip/include/lwip/arch.h	139;"	d
ESTABLISHED	net/lwip/include/lwip/tcp.h	/^  ESTABLISHED = 4,$/;"	e	enum:tcp_state
ESTALE	net/lwip/include/lwip/arch.h	186;"	d
ESTRPIPE	net/lwip/include/lwip/arch.h	156;"	d
ETHARP_DEBUG	net/lwip/include/lwip/opt.h	1476;"	d
ETHARP_FIND_ONLY	net/lwip/netif/etharp.c	118;"	d	file:
ETHARP_HWADDR_LEN	net/lwip/include/netif/etharp.h	56;"	d
ETHARP_STATE_EMPTY	net/lwip/netif/etharp.c	/^  ETHARP_STATE_EMPTY = 0,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_PENDING	net/lwip/netif/etharp.c	/^  ETHARP_STATE_PENDING,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_STABLE	net/lwip/netif/etharp.c	/^  ETHARP_STATE_STABLE$/;"	e	enum:etharp_state	file:
ETHARP_STATS	net/lwip/include/lwip/opt.h	1157;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	202;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	205;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	201;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	204;"	d
ETHARP_TRUST_IP_MAC	net/lwip/include/lwip/opt.h	348;"	d
ETHARP_TRY_HARD	net/lwip/netif/etharp.c	117;"	d	file:
ETHERMTU	net/lwip/include/netif/ppp_oe.h	135;"	d
ETHTYPE_ARP	net/lwip/include/netif/etharp.h	125;"	d
ETHTYPE_IP	net/lwip/include/netif/etharp.h	126;"	d
ETHTYPE_PPPOE	net/lwip/include/netif/etharp.h	128;"	d
ETHTYPE_PPPOEDISC	net/lwip/include/netif/etharp.h	127;"	d
ETH_PAD_SIZE	net/lwip/include/netif/etharp.h	52;"	d
ETIME	net/lwip/include/lwip/arch.h	132;"	d
ETIMEDOUT	net/lwip/include/lwip/arch.h	180;"	d
ETOOMANYREFS	net/lwip/include/lwip/arch.h	179;"	d
ETXTBSY	net/lwip/include/lwip/arch.h	94;"	d
EUCLEAN	net/lwip/include/lwip/arch.h	187;"	d
EUNATCH	net/lwip/include/lwip/arch.h	117;"	d
EUSERS	net/lwip/include/lwip/arch.h	157;"	d
EWOULDBLOCK	net/lwip/include/lwip/arch.h	109;"	d
EXDEV	net/lwip/include/lwip/arch.h	86;"	d
EXFULL	net/lwip/include/lwip/arch.h	122;"	d
EXTPHYSMEM	inc/memlayout.h	88;"	d
E_BAD_ENV	inc/error.h	8;"	d
E_BAD_PATH	inc/error.h	23;"	d
E_BAD_REQ	user/httpd.c	9;"	d	file:
E_EOF	inc/error.h	17;"	d
E_FAULT	inc/error.h	14;"	d
E_FILE_EXISTS	inc/error.h	24;"	d
E_INVAL	inc/error.h	10;"	d
E_IPC_NOT_RECV	inc/error.h	16;"	d
E_MAX_OPEN	inc/error.h	21;"	d
E_NOT_EXEC	inc/error.h	25;"	d
E_NOT_FOUND	inc/error.h	22;"	d
E_NOT_SUPP	inc/error.h	26;"	d
E_NO_DISK	inc/error.h	20;"	d
E_NO_FREE_ENV	inc/error.h	12;"	d
E_NO_MEM	inc/error.h	11;"	d
E_UNSPECIFIED	inc/error.h	7;"	d
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
Env_map_segment	kern/env.c	/^Env_map_segment(pde_t *pgdir, uintptr_t la, size_t size, physaddr_t pa, int perm)$/;"	f	file:
Expand	net/lwip/netif/ppp/chpms.c	/^Expand(u_char *in, u_char *out)$/;"	f	file:
F	net/lwip/netif/ppp/md5.c	71;"	d	file:
FDTABLE	lib/fd.c	8;"	d	file:
FD_CLR	net/lwip/include/lwip/sockets.h	277;"	d
FD_ISSET	net/lwip/include/lwip/sockets.h	278;"	d
FD_SET	net/lwip/include/lwip/sockets.h	276;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	273;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	275;"	d
FD_ZERO	net/lwip/include/lwip/sockets.h	279;"	d
FEC_PR	inc/mmu.h	125;"	d
FEC_U	inc/mmu.h	127;"	d
FEC_WR	inc/mmu.h	126;"	d
FF	net/lwip/netif/ppp/md5.c	81;"	d	file:
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	41;"	d	file:
FIN_WAIT_1	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_1  = 5,$/;"	e	enum:tcp_state
FIN_WAIT_2	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_2  = 6,$/;"	e	enum:tcp_state
FIONBIO	net/lwip/include/lwip/sockets.h	254;"	d
FIONREAD	net/lwip/include/lwip/sockets.h	251;"	d
FL_AC	inc/mmu.h	119;"	d
FL_AF	inc/mmu.h	104;"	d
FL_CF	inc/mmu.h	102;"	d
FL_DF	inc/mmu.h	109;"	d
FL_ID	inc/mmu.h	122;"	d
FL_IF	inc/mmu.h	108;"	d
FL_IOPL_0	inc/mmu.h	112;"	d
FL_IOPL_1	inc/mmu.h	113;"	d
FL_IOPL_2	inc/mmu.h	114;"	d
FL_IOPL_3	inc/mmu.h	115;"	d
FL_IOPL_MASK	inc/mmu.h	111;"	d
FL_NT	inc/mmu.h	116;"	d
FL_OF	inc/mmu.h	110;"	d
FL_PF	inc/mmu.h	103;"	d
FL_RF	inc/mmu.h	117;"	d
FL_SF	inc/mmu.h	106;"	d
FL_TF	inc/mmu.h	107;"	d
FL_VIF	inc/mmu.h	120;"	d
FL_VIP	inc/mmu.h	121;"	d
FL_VM	inc/mmu.h	118;"	d
FL_ZF	inc/mmu.h	105;"	d
FOLD_U32T	net/lwip/core/ipv4/inet_chksum.c	69;"	d	file:
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	70;"	d
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	80;"	d
FSM_DEFMAXCONFREQS	net/lwip/include/lwip/opt.h	1338;"	d
FSM_DEFMAXNAKLOOPS	net/lwip/include/lwip/opt.h	1342;"	d
FSM_DEFMAXTERMREQS	net/lwip/include/lwip/opt.h	1334;"	d
FSM_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1330;"	d
FSM_H	net/lwip/netif/ppp/fsm.h	55;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon4
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon4
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon4
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon4
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon4
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon4
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon4
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon4
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
FdSock	inc/fd.h	/^struct FdSock {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
G	net/lwip/netif/ppp/md5.c	72;"	d	file:
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	17;"	d
GD_KT	inc/memlayout.h	16;"	d
GD_TSS	inc/memlayout.h	20;"	d
GD_UD	inc/memlayout.h	19;"	d
GD_UT	inc/memlayout.h	18;"	d
GETCHAR	net/lwip/netif/ppp/ppp.h	176;"	d
GETLONG	net/lwip/netif/ppp/ppp.h	193;"	d
GETSHORT	net/lwip/netif/ppp/ppp.h	184;"	d
GG	net/lwip/netif/ppp/md5.c	86;"	d	file:
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Get7Bits	net/lwip/netif/ppp/chpms.c	/^Get7Bits( u_char *input, int startBit)$/;"	f	file:
GetMask	net/lwip/netif/ppp/ppp.c	/^GetMask(u32_t addr)$/;"	f
H	net/lwip/netif/ppp/md5.c	73;"	d	file:
HEADERLEN	net/lwip/netif/ppp/fsm.h	63;"	d
HH	net/lwip/netif/ppp/md5.c	91;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	65;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	67;"	d	file:
HOST_NOT_FOUND	net/lwip/include/lwip/netdb.h	56;"	d
HTTP_VERSION	user/httpd.c	7;"	d	file:
HWTYPE_ETHERNET	net/lwip/netif/etharp.c	79;"	d	file:
HexToDecimal	kern/monitor.c	/^unsigned int HexToDecimal(char * in)$/;"	f
I	net/lwip/netif/ppp/md5.c	74;"	d	file:
ICMP6_DUR	net/lwip/include/ipv6/lwip/icmp.h	46;"	d
ICMP6_ECHO	net/lwip/include/ipv6/lwip/icmp.h	48;"	d
ICMP6_ER	net/lwip/include/ipv6/lwip/icmp.h	49;"	d
ICMP6_TE	net/lwip/include/ipv6/lwip/icmp.h	47;"	d
ICMPH_CODE	net/lwip/include/ipv4/lwip/icmp.h	110;"	d
ICMPH_CODE_SET	net/lwip/include/ipv4/lwip/icmp.h	113;"	d
ICMPH_TYPE	net/lwip/include/ipv4/lwip/icmp.h	109;"	d
ICMPH_TYPE_SET	net/lwip/include/ipv4/lwip/icmp.h	112;"	d
ICMP_DEBUG	net/lwip/include/lwip/opt.h	1518;"	d
ICMP_DEST_UNREACH_DATASIZE	net/lwip/core/ipv4/icmp.c	57;"	d	file:
ICMP_DUR	net/lwip/include/ipv4/lwip/icmp.h	48;"	d
ICMP_DUR_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_ECHO	net/lwip/include/ipv4/lwip/icmp.h	51;"	d
ICMP_ER	net/lwip/include/ipv4/lwip/icmp.h	47;"	d
ICMP_IR	net/lwip/include/ipv4/lwip/icmp.h	57;"	d
ICMP_IRQ	net/lwip/include/ipv4/lwip/icmp.h	56;"	d
ICMP_PP	net/lwip/include/ipv4/lwip/icmp.h	53;"	d
ICMP_RD	net/lwip/include/ipv4/lwip/icmp.h	50;"	d
ICMP_SQ	net/lwip/include/ipv4/lwip/icmp.h	49;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1179;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1231;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	170;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	173;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	169;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	172;"	d
ICMP_TE	net/lwip/include/ipv4/lwip/icmp.h	52;"	d
ICMP_TE_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TS	net/lwip/include/ipv4/lwip/icmp.h	54;"	d
ICMP_TSR	net/lwip/include/ipv4/lwip/icmp.h	55;"	d
ICMP_TTL	net/lwip/include/lwip/opt.h	452;"	d
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IFF_PASSIVE	net/lwip/netif/ppp/ppp_oe.c	188;"	d	file:
IGMP_ADD_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	73;"	d
IGMP_DEBUG	net/lwip/include/lwip/opt.h	1525;"	d
IGMP_DEL_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	72;"	d
IGMP_GROUP_DELAYING_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	77;"	d
IGMP_GROUP_IDLE_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	78;"	d
IGMP_GROUP_NON_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	76;"	d
IGMP_JOIN_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	69;"	d
IGMP_LEAVE_GROUP	net/lwip/include/ipv4/lwip/igmp.h	64;"	d
IGMP_MEMB_QUERY	net/lwip/include/ipv4/lwip/igmp.h	61;"	d
IGMP_MINLEN	net/lwip/include/ipv4/lwip/igmp.h	54;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1186;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1232;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	178;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	181;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	177;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	180;"	d
IGMP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/igmp.h	67;"	d
IGMP_TTL	net/lwip/include/ipv4/lwip/igmp.h	53;"	d
IGMP_V1_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	68;"	d
IGMP_V1_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	62;"	d
IGMP_V2_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	63;"	d
II	net/lwip/netif/ppp/md5.c	96;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img $(OBJDIR)\/fs\/fs.img$/;"	m
INADDR_ANY	net/lwip/include/lwip/sockets.h	127;"	d
INADDR_BROADCAST	net/lwip/include/lwip/sockets.h	128;"	d
INADDR_LOOPBACK	net/lwip/include/ipv4/lwip/ip_addr.h	81;"	d
INADDR_NONE	net/lwip/include/ipv4/lwip/ip_addr.h	80;"	d
INCPTR	net/lwip/netif/ppp/ppp.h	207;"	d
INCR	net/lwip/netif/ppp/vj.c	45;"	d	file:
INCR	net/lwip/netif/ppp/vj.c	47;"	d	file:
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INET_DEBUG	net/lwip/include/lwip/opt.h	1532;"	d
IN_BADCLASS	net/lwip/include/ipv4/lwip/ip_addr.h	112;"	d
IN_CLASSA	net/lwip/include/ipv4/lwip/ip_addr.h	88;"	d
IN_CLASSA_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	91;"	d
IN_CLASSA_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	92;"	d
IN_CLASSA_NET	net/lwip/include/ipv4/lwip/ip_addr.h	89;"	d
IN_CLASSA_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	90;"	d
IN_CLASSB	net/lwip/include/ipv4/lwip/ip_addr.h	94;"	d
IN_CLASSB_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	97;"	d
IN_CLASSB_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	98;"	d
IN_CLASSB_NET	net/lwip/include/ipv4/lwip/ip_addr.h	95;"	d
IN_CLASSB_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	96;"	d
IN_CLASSC	net/lwip/include/ipv4/lwip/ip_addr.h	100;"	d
IN_CLASSC_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	103;"	d
IN_CLASSC_NET	net/lwip/include/ipv4/lwip/ip_addr.h	101;"	d
IN_CLASSC_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	102;"	d
IN_CLASSD	net/lwip/include/ipv4/lwip/ip_addr.h	105;"	d
IN_CLASSD_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	108;"	d
IN_CLASSD_NET	net/lwip/include/ipv4/lwip/ip_addr.h	106;"	d
IN_CLASSD_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	107;"	d
IN_EXPERIMENTAL	net/lwip/include/ipv4/lwip/ip_addr.h	111;"	d
IN_LOOPBACKNET	net/lwip/include/ipv4/lwip/ip_addr.h	114;"	d
IN_MULTICAST	net/lwip/include/ipv4/lwip/ip_addr.h	109;"	d
IOCPARM_MASK	net/lwip/include/lwip/sockets.h	236;"	d
IOC_IN	net/lwip/include/lwip/sockets.h	239;"	d
IOC_INOUT	net/lwip/include/lwip/sockets.h	240;"	d
IOC_OUT	net/lwip/include/lwip/sockets.h	238;"	d
IOC_VOID	net/lwip/include/lwip/sockets.h	237;"	d
IOM_BEGIN	inc/isareg.h	125;"	d
IOM_END	inc/isareg.h	126;"	d
IOM_SIZE	inc/isareg.h	127;"	d
IOPHYSMEM	inc/memlayout.h	87;"	d
IO_AHA0	inc/isareg.h	63;"	d
IO_AHA1	inc/isareg.h	66;"	d
IO_BMS1	inc/isareg.h	46;"	d
IO_BMS2	inc/isareg.h	45;"	d
IO_BT0	inc/isareg.h	62;"	d
IO_BT1	inc/isareg.h	65;"	d
IO_CGA	inc/isareg.h	82;"	d
IO_CGASIZE	inc/isareg.h	103;"	d
IO_COM1	inc/isareg.h	88;"	d
IO_COM2	inc/isareg.h	58;"	d
IO_COM3	inc/isareg.h	86;"	d
IO_COM4	inc/isareg.h	54;"	d
IO_COMSIZE	inc/isareg.h	102;"	d
IO_DMA1	inc/isareg.h	18;"	d
IO_DMA2	inc/isareg.h	29;"	d
IO_DMAPG	inc/isareg.h	27;"	d
IO_DMASIZE	inc/isareg.h	104;"	d
IO_DPGSIZE	inc/isareg.h	105;"	d
IO_FD1	inc/isareg.h	87;"	d
IO_FD2	inc/isareg.h	74;"	d
IO_FDCSIZE	inc/isareg.h	106;"	d
IO_GAME	inc/isareg.h	41;"	d
IO_GAMSIZE	inc/isareg.h	108;"	d
IO_ICU1	inc/isareg.h	19;"	d
IO_ICU2	inc/isareg.h	28;"	d
IO_ICUSIZE	inc/isareg.h	109;"	d
IO_ISABEGIN	inc/isareg.h	15;"	d
IO_ISAEND	inc/isareg.h	90;"	d
IO_ISASIZES	inc/isareg.h	100;"	d
IO_KBD	inc/isareg.h	23;"	d
IO_KBDSIZE	inc/isareg.h	110;"	d
IO_LPT1	inc/isareg.h	75;"	d
IO_LPT2	inc/isareg.h	50;"	d
IO_LPT3	inc/isareg.h	80;"	d
IO_LPTSIZE	inc/isareg.h	111;"	d
IO_MDA	inc/isareg.h	79;"	d
IO_MDASIZE	inc/isareg.h	112;"	d
IO_NMI	inc/isareg.h	26;"	d
IO_NPX	inc/isareg.h	30;"	d
IO_NPXSIZE	inc/isareg.h	115;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_PMP1	inc/isareg.h	20;"	d
IO_PMP2	inc/isareg.h	36;"	d
IO_PMPSIZE	inc/isareg.h	117;"	d
IO_PPI	inc/isareg.h	24;"	d
IO_RTC	inc/isareg.h	25;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTCSIZE	inc/isareg.h	113;"	d
IO_TIMER1	inc/isareg.h	21;"	d
IO_TIMER2	inc/isareg.h	22;"	d
IO_TMRSIZE	inc/isareg.h	114;"	d
IO_UHA0	inc/isareg.h	64;"	d
IO_VGA	inc/isareg.h	81;"	d
IO_VGASIZE	inc/isareg.h	116;"	d
IO_WD1	inc/isareg.h	40;"	d
IO_WD2	inc/isareg.h	35;"	d
IO_WDCSIZE	inc/isareg.h	107;"	d
IO_WDS	inc/isareg.h	70;"	d
IP	net/ns.h	4;"	d
IP4_ADDR	net/lwip/include/ipv4/lwip/ip_addr.h	116;"	d
IP6_ADDR	net/lwip/include/ipv6/lwip/ip_addr.h	71;"	d
IPADDR	user/echotest.c	6;"	d	file:
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	67;"	d
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	77;"	d
IPCP_H	net/lwip/netif/ppp/ipcp.h	55;"	d
IPCP_VJMODE_OLD	net/lwip/netif/ppp/ipcp.h	72;"	d
IPCP_VJMODE_RFC1172	net/lwip/netif/ppp/ipcp.h	73;"	d
IPCP_VJMODE_RFC1332	net/lwip/netif/ppp/ipcp.h	74;"	d
IPCP_VJ_COMP	net/lwip/netif/ppp/ipcp.h	77;"	d
IPCP_VJ_COMP_OLD	net/lwip/netif/ppp/ipcp.h	78;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1172;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1230;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	194;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	197;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	193;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	196;"	d
IPH_CHKSUM	net/lwip/include/ipv4/lwip/ip.h	151;"	d
IPH_CHKSUM_SET	net/lwip/include/ipv4/lwip/ip.h	159;"	d
IPH_HL	net/lwip/include/ipv4/lwip/ip.h	144;"	d
IPH_ID	net/lwip/include/ipv4/lwip/ip.h	147;"	d
IPH_ID_SET	net/lwip/include/ipv4/lwip/ip.h	155;"	d
IPH_LEN	net/lwip/include/ipv4/lwip/ip.h	146;"	d
IPH_LEN_SET	net/lwip/include/ipv4/lwip/ip.h	154;"	d
IPH_OFFSET	net/lwip/include/ipv4/lwip/ip.h	148;"	d
IPH_OFFSET_SET	net/lwip/include/ipv4/lwip/ip.h	156;"	d
IPH_PROTO	net/lwip/include/ipv4/lwip/ip.h	150;"	d
IPH_PROTO	net/lwip/include/ipv6/lwip/ip.h	99;"	d
IPH_PROTO_SET	net/lwip/include/ipv4/lwip/ip.h	158;"	d
IPH_TOS	net/lwip/include/ipv4/lwip/ip.h	145;"	d
IPH_TTL	net/lwip/include/ipv4/lwip/ip.h	149;"	d
IPH_TTL_SET	net/lwip/include/ipv4/lwip/ip.h	157;"	d
IPH_V	net/lwip/include/ipv4/lwip/ip.h	143;"	d
IPH_VHLTOS_SET	net/lwip/include/ipv4/lwip/ip.h	153;"	d
IPPROTO_IP	net/lwip/include/lwip/sockets.h	122;"	d
IPPROTO_TCP	net/lwip/include/lwip/sockets.h	123;"	d
IPPROTO_UDP	net/lwip/include/lwip/sockets.h	124;"	d
IPPROTO_UDPLITE	net/lwip/include/lwip/sockets.h	125;"	d
IPTOS_LOWCOST	net/lwip/include/lwip/sockets.h	201;"	d
IPTOS_LOWDELAY	net/lwip/include/lwip/sockets.h	198;"	d
IPTOS_MINCOST	net/lwip/include/lwip/sockets.h	202;"	d
IPTOS_PREC	net/lwip/include/lwip/sockets.h	214;"	d
IPTOS_PREC_CRITIC_ECP	net/lwip/include/lwip/sockets.h	217;"	d
IPTOS_PREC_FLASH	net/lwip/include/lwip/sockets.h	219;"	d
IPTOS_PREC_FLASHOVERRIDE	net/lwip/include/lwip/sockets.h	218;"	d
IPTOS_PREC_IMMEDIATE	net/lwip/include/lwip/sockets.h	220;"	d
IPTOS_PREC_INTERNETCONTROL	net/lwip/include/lwip/sockets.h	216;"	d
IPTOS_PREC_MASK	net/lwip/include/lwip/sockets.h	213;"	d
IPTOS_PREC_NETCONTROL	net/lwip/include/lwip/sockets.h	215;"	d
IPTOS_PREC_PRIORITY	net/lwip/include/lwip/sockets.h	221;"	d
IPTOS_PREC_ROUTINE	net/lwip/include/lwip/sockets.h	222;"	d
IPTOS_RELIABILITY	net/lwip/include/lwip/sockets.h	200;"	d
IPTOS_THROUGHPUT	net/lwip/include/lwip/sockets.h	199;"	d
IPTOS_TOS	net/lwip/include/lwip/sockets.h	197;"	d
IPTOS_TOS_MASK	net/lwip/include/lwip/sockets.h	196;"	d
IP_ADDRESSES_AND_ID_MATCH	net/lwip/core/ipv4/ip_frag.c	91;"	d	file:
IP_ADDR_ANY	net/lwip/include/ipv4/lwip/ip_addr.h	77;"	d
IP_ADDR_ANY	net/lwip/include/ipv6/lwip/ip_addr.h	41;"	d
IP_ADDR_ANY_VALUE	net/lwip/core/ipv4/ip_addr.c	44;"	d	file:
IP_ADDR_BROADCAST	net/lwip/include/ipv4/lwip/ip_addr.h	78;"	d
IP_ADDR_BROADCAST_VALUE	net/lwip/core/ipv4/ip_addr.c	45;"	d	file:
IP_ADD_MEMBERSHIP	net/lwip/include/lwip/sockets.h	168;"	d
IP_DEBUG	net/lwip/include/lwip/opt.h	1539;"	d
IP_DEFAULT_TTL	net/lwip/include/lwip/opt.h	432;"	d
IP_DF	net/lwip/include/ipv4/lwip/ip.h	127;"	d
IP_DF	net/lwip/netif/ppp/vjbsdhdr.h	33;"	d
IP_DROP_MEMBERSHIP	net/lwip/include/lwip/sockets.h	169;"	d
IP_FORWARD	net/lwip/include/lwip/opt.h	362;"	d
IP_FRAG	net/lwip/include/lwip/opt.h	389;"	d
IP_FRAG_MAX_MTU	net/lwip/include/lwip/opt.h	425;"	d
IP_FRAG_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	417;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	66;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	68;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	57;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	59;"	d
IP_HLEN	net/lwip/include/ipv4/lwip/ip.h	55;"	d
IP_HLEN	net/lwip/include/ipv6/lwip/ip.h	46;"	d
IP_MF	net/lwip/include/ipv4/lwip/ip.h	128;"	d
IP_MF	net/lwip/netif/ppp/vjbsdhdr.h	34;"	d
IP_MULTICAST_IF	net/lwip/include/lwip/sockets.h	171;"	d
IP_MULTICAST_LOOP	net/lwip/include/lwip/sockets.h	172;"	d
IP_MULTICAST_TTL	net/lwip/include/lwip/sockets.h	170;"	d
IP_OFFMASK	net/lwip/include/ipv4/lwip/ip.h	129;"	d
IP_OFFMASK	net/lwip/netif/ppp/vjbsdhdr.h	35;"	d
IP_OPTIONS_ALLOWED	net/lwip/include/lwip/opt.h	371;"	d
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	/^  IP_PCB;$/;"	m	struct:ip_pcb
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	80;"	d
IP_PCB	net/lwip/include/ipv6/lwip/ip.h	71;"	d
IP_PCB	net/lwip/include/lwip/raw.h	/^  IP_PCB;$/;"	m	struct:raw_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb_listen
IP_PCB	net/lwip/include/lwip/udp.h	/^  IP_PCB;$/;"	m	struct:udp_pcb
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	71;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	73;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	62;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	64;"	d
IP_PROTO_ICMP	net/lwip/include/ipv4/lwip/ip.h	57;"	d
IP_PROTO_ICMP	net/lwip/include/ipv6/lwip/ip.h	48;"	d
IP_PROTO_IGMP	net/lwip/include/ipv4/lwip/igmp.h	52;"	d
IP_PROTO_TCP	net/lwip/include/ipv4/lwip/ip.h	60;"	d
IP_PROTO_TCP	net/lwip/include/ipv6/lwip/ip.h	51;"	d
IP_PROTO_UDP	net/lwip/include/ipv4/lwip/ip.h	58;"	d
IP_PROTO_UDP	net/lwip/include/ipv6/lwip/ip.h	49;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv4/lwip/ip.h	59;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv6/lwip/ip.h	50;"	d
IP_REASSEMBLY	net/lwip/include/lwip/opt.h	380;"	d
IP_REASS_CHECK_OVERLAP	net/lwip/core/ipv4/ip_frag.c	68;"	d	file:
IP_REASS_DEBUG	net/lwip/include/lwip/opt.h	1546;"	d
IP_REASS_FLAG_LASTFRAG	net/lwip/core/ipv4/ip_frag.c	79;"	d	file:
IP_REASS_FREE_OLDEST	net/lwip/core/ipv4/ip_frag.c	76;"	d	file:
IP_REASS_MAXAGE	net/lwip/include/lwip/opt.h	398;"	d
IP_REASS_MAX_PBUFS	net/lwip/include/lwip/opt.h	408;"	d
IP_RF	net/lwip/include/ipv4/lwip/ip.h	126;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1164;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1229;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	186;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	189;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	185;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	188;"	d
IP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/ip_frag.h	49;"	d
IP_TOS	net/lwip/include/lwip/sockets.h	141;"	d
IP_TTL	net/lwip/include/lwip/sockets.h	142;"	d
IRQ_ERROR	inc/trap.h	38;"	d
IRQ_IDE	inc/trap.h	37;"	d
IRQ_KBD	inc/trap.h	34;"	d
IRQ_OFFSET	kern/picirq.h	16;"	d
IRQ_SERIAL	inc/trap.h	35;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	36;"	d
IRQ_TIMER	inc/trap.h	33;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MALLOC_H	inc/malloc.h	2;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_NS_H	inc/ns.h	4;"	d
JOS_INC_PERROR_H	net/lwip/jos/arch/perror.h	2;"	d
JOS_INC_QUEUE_H	inc/queue.h	36;"	d
JOS_INC_SETJMP_H	net/lwip/jos/arch/setjmp.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_THREADQ_H	net/lwip/jos/arch/threadq.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_E100_H	kern/e100.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PCI_H	kern/pci.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TIME_H	kern/time.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_LONGJMP_GCCATTR	net/lwip/jos/arch/i386/setjmp.h	6;"	d
JOS_LWIP_LWIPOPTS_H	net/lwip/jos/lwipopts.h	2;"	d
JOS_MACHINE_SETJMP_H	net/lwip/jos/arch/i386/setjmp.h	2;"	d
JOS_MULTIENV	kern/env.h	11;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	29;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	82;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	95;"	d
KSTKSIZE	inc/memlayout.h	96;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=6$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP := .\/$/;"	m
LANManResp	net/lwip/netif/ppp/chpms.c	/^    u_char LANManResp[24];$/;"	m	struct:__anon11	file:
LAST_ACK	net/lwip/include/lwip/tcp.h	/^  LAST_ACK    = 9,$/;"	e	enum:tcp_state
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	69;"	d
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	79;"	d
LCP_ECHOINTERVAL	net/lwip/include/lwip/opt.h	1363;"	d
LCP_H	net/lwip/netif/ppp/lcp.h	55;"	d
LCP_MAXECHOFAILS	net/lwip/include/lwip/opt.h	1368;"	d
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LENCIADDR	net/lwip/netif/ppp/ipcp.c	339;"	d	file:
LENCICBCP	net/lwip/netif/ppp/lcp.c	512;"	d	file:
LENCICHAP	net/lwip/netif/ppp/lcp.c	508;"	d	file:
LENCIDNS	net/lwip/netif/ppp/ipcp.c	340;"	d	file:
LENCILONG	net/lwip/netif/ppp/lcp.c	510;"	d	file:
LENCILQR	net/lwip/netif/ppp/lcp.c	511;"	d	file:
LENCISHORT	net/lwip/netif/ppp/lcp.c	509;"	d	file:
LENCIVJ	net/lwip/netif/ppp/ipcp.c	338;"	d	file:
LENCIVOID	net/lwip/netif/ppp/lcp.c	507;"	d	file:
LINK_STATS	net/lwip/include/lwip/opt.h	1150;"	d
LINK_STATS	net/lwip/include/lwip/opt.h	1228;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	210;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	213;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	209;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	212;"	d
LISTEN	net/lwip/include/lwip/tcp.h	/^  LISTEN      = 1,$/;"	e	enum:tcp_state
LIST_EMPTY	inc/queue.h	142;"	d
LIST_EMPTY	net/lwip/netif/ppp/ppp_oe.c	122;"	d	file:
LIST_ENTRY	inc/queue.h	129;"	d
LIST_ENTRY	net/lwip/netif/ppp/ppp_oe.c	112;"	d	file:
LIST_FIRST	inc/queue.h	147;"	d
LIST_FIRST	net/lwip/netif/ppp/ppp_oe.c	124;"	d	file:
LIST_FOREACH	inc/queue.h	160;"	d
LIST_FOREACH	net/lwip/netif/ppp/ppp_oe.c	126;"	d	file:
LIST_HEAD	inc/queue.h	109;"	d
LIST_HEAD	net/lwip/netif/ppp/ppp_oe.c	104;"	d	file:
LIST_HEAD_INITIALIZER	inc/queue.h	118;"	d
LIST_HEAD_INITIALIZER	net/lwip/netif/ppp/ppp_oe.c	109;"	d	file:
LIST_INIT	inc/queue.h	168;"	d
LIST_INIT	net/lwip/netif/ppp/ppp_oe.c	131;"	d	file:
LIST_INSERT_AFTER	inc/queue.h	177;"	d
LIST_INSERT_AFTER	net/lwip/netif/ppp/ppp_oe.c	135;"	d	file:
LIST_INSERT_BEFORE	inc/queue.h	190;"	d
LIST_INSERT_BEFORE	net/lwip/netif/ppp/ppp_oe.c	143;"	d	file:
LIST_INSERT_HEAD	inc/queue.h	201;"	d
LIST_INSERT_HEAD	net/lwip/netif/ppp/ppp_oe.c	150;"	d	file:
LIST_NEXT	inc/queue.h	153;"	d
LIST_NEXT	net/lwip/netif/ppp/ppp_oe.c	157;"	d	file:
LIST_REMOVE	inc/queue.h	212;"	d
LIST_REMOVE	net/lwip/netif/ppp/ppp_oe.c	159;"	d	file:
LITTLE_ENDIAN	net/lwip/include/lwip/arch.h	36;"	d
LNKOFST	kern/e100.h	20;"	d
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	52;"	d
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	59;"	d
LOG2NENV	inc/env.h	29;"	d
LOG_CRITICAL	net/lwip/netif/ppp/pppdebug.h	/^LOG_CRITICAL = 0,$/;"	e	enum:__anon13
LOG_DEBUG	net/lwip/netif/ppp/pppdebug.h	/^LOG_DEBUG    = 7$/;"	e	enum:__anon13
LOG_DETAIL	net/lwip/netif/ppp/pppdebug.h	/^LOG_DETAIL   = 6,$/;"	e	enum:__anon13
LOG_ERR	net/lwip/netif/ppp/pppdebug.h	/^LOG_ERR      = 1,$/;"	e	enum:__anon13
LOG_INFO	net/lwip/netif/ppp/pppdebug.h	/^LOG_INFO     = 5,$/;"	e	enum:__anon13
LOG_NOTICE	net/lwip/netif/ppp/pppdebug.h	/^LOG_NOTICE   = 2,$/;"	e	enum:__anon13
LOG_WARNING	net/lwip/netif/ppp/pppdebug.h	/^LOG_WARNING  = 3,$/;"	e	enum:__anon13
LS_ACKRCVD	net/lwip/netif/ppp/fsm.h	87;"	d
LS_ACKSENT	net/lwip/netif/ppp/fsm.h	88;"	d
LS_CLOSED	net/lwip/netif/ppp/fsm.h	82;"	d
LS_CLOSING	net/lwip/netif/ppp/fsm.h	84;"	d
LS_INITIAL	net/lwip/netif/ppp/fsm.h	80;"	d
LS_OPENED	net/lwip/netif/ppp/fsm.h	89;"	d
LS_REQSENT	net/lwip/netif/ppp/fsm.h	86;"	d
LS_STARTING	net/lwip/netif/ppp/fsm.h	81;"	d
LS_STOPPED	net/lwip/netif/ppp/fsm.h	83;"	d
LS_STOPPING	net/lwip/netif/ppp/fsm.h	85;"	d
LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT	net/lwip/include/lwip/opt.h	177;"	d
LWIP_ARCH_CC_H	net/lwip/jos/arch/cc.h	2;"	d
LWIP_ARCH_PERF_H	net/lwip/jos/arch/perf.h	2;"	d
LWIP_ARCH_SYS_ARCH_H	net/lwip/jos/arch/sys_arch.h	2;"	d
LWIP_ARCH_THREAD_H	net/lwip/jos/arch/thread.h	2;"	d
LWIP_ARP	net/lwip/include/lwip/opt.h	321;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	64;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	67;"	d
LWIP_AUTOIP	net/lwip/include/lwip/opt.h	502;"	d
LWIP_AUTOIP_RAND	net/lwip/core/ipv4/autoip.c	82;"	d	file:
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	762;"	d
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	765;"	d
LWIP_CHKSUM	net/lwip/core/ipv4/inet_chksum.c	56;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	58;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	63;"	d	file:
LWIP_COMPAT_SOCKETS	net/lwip/include/lwip/opt.h	1083;"	d
LWIP_COMPAT_SOCKETS	net/lwip/jos/lwipopts.h	16;"	d
LWIP_DBG_FRESH	net/lwip/include/lwip/debug.h	59;"	d
LWIP_DBG_HALT	net/lwip/include/lwip/debug.h	61;"	d
LWIP_DBG_LEVEL_OFF	net/lwip/include/lwip/debug.h	43;"	d
LWIP_DBG_LEVEL_SERIOUS	net/lwip/include/lwip/debug.h	45;"	d
LWIP_DBG_LEVEL_SEVERE	net/lwip/include/lwip/debug.h	46;"	d
LWIP_DBG_LEVEL_WARNING	net/lwip/include/lwip/debug.h	44;"	d
LWIP_DBG_MASK_LEVEL	net/lwip/include/lwip/debug.h	47;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/include/lwip/opt.h	1461;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	58;"	d
LWIP_DBG_OFF	net/lwip/include/lwip/debug.h	52;"	d
LWIP_DBG_ON	net/lwip/include/lwip/debug.h	50;"	d
LWIP_DBG_STATE	net/lwip/include/lwip/debug.h	57;"	d
LWIP_DBG_TRACE	net/lwip/include/lwip/debug.h	55;"	d
LWIP_DBG_TYPES_ON	net/lwip/include/lwip/opt.h	1469;"	d
LWIP_DEBUG	net/lwip/jos/lwipopts.h	49;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	80;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	93;"	d
LWIP_DHCP	net/lwip/include/lwip/opt.h	483;"	d
LWIP_DHCP	net/lwip/jos/lwipopts.h	15;"	d
LWIP_DHCP_AUTOIP_COOP	net/lwip/include/lwip/opt.h	510;"	d
LWIP_DNS	net/lwip/include/lwip/opt.h	580;"	d
LWIP_DNS_API_DECLARE_H_ERRNO	net/lwip/include/lwip/netdb.h	38;"	d
LWIP_DNS_API_DECLARE_STRUCTS	net/lwip/include/lwip/netdb.h	46;"	d
LWIP_DNS_API_DEFINE_ERRORS	net/lwip/include/lwip/netdb.h	42;"	d
LWIP_DNS_API_HOSTENT_STORAGE	net/lwip/api/netdb.c	60;"	d	file:
LWIP_ERROR	net/lwip/include/lwip/debug.h	72;"	d
LWIP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ACCEPT,$/;"	e	enum:lwip_event
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	761;"	d
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	764;"	d
LWIP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_CONNECTED,$/;"	e	enum:lwip_event
LWIP_EVENT_ERR	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ERR$/;"	e	enum:lwip_event
LWIP_EVENT_POLL	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_POLL,$/;"	e	enum:lwip_event
LWIP_EVENT_RECV	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_RECV,$/;"	e	enum:lwip_event
LWIP_EVENT_SENT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_SENT,$/;"	e	enum:lwip_event
LWIP_HAVE_LOOPIF	net/lwip/include/lwip/opt.h	881;"	d
LWIP_HAVE_SLIPIF	net/lwip/include/lwip/opt.h	893;"	d
LWIP_ICMP	net/lwip/include/lwip/opt.h	445;"	d
LWIP_IGMP	net/lwip/include/lwip/opt.h	567;"	d
LWIP_LOOPBACK_MAX_PBUFS	net/lwip/include/lwip/opt.h	852;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	57;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	66;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	14;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	98;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	58;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	67;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	100;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	16;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	56;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	65;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	15;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	99;"	d
LWIP_MAX	net/lwip/include/lwip/def.h	38;"	d
LWIP_MEMPOOL	net/lwip/core/memp.c	117;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	123;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	130;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	137;"	d	file:
LWIP_MEMPOOL	net/lwip/core/stats.c	103;"	d	file:
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	44;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	55;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	64;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp_std.h	97;"	d
LWIP_MEM_ALIGN	net/lwip/include/lwip/mem.h	96;"	d
LWIP_MEM_ALIGN_SIZE	net/lwip/include/lwip/mem.h	92;"	d
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	192;"	d	file:
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	203;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	193;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	204;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	194;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	205;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	189;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	199;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	190;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	200;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	191;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	201;"	d	file:
LWIP_MIN	net/lwip/include/lwip/def.h	39;"	d
LWIP_NETCONN	net/lwip/include/lwip/opt.h	1063;"	d
LWIP_NETIF_API	net/lwip/include/lwip/opt.h	809;"	d
LWIP_NETIF_HOSTNAME	net/lwip/include/lwip/opt.h	802;"	d
LWIP_NETIF_HWADDRHINT	net/lwip/include/lwip/opt.h	836;"	d
LWIP_NETIF_LINK_CALLBACK	net/lwip/include/lwip/opt.h	825;"	d
LWIP_NETIF_LOOPBACK	net/lwip/include/lwip/opt.h	844;"	d
LWIP_NETIF_LOOPBACK_MULTITHREADING	net/lwip/include/lwip/opt.h	869;"	d
LWIP_NETIF_STATUS_CALLBACK	net/lwip/include/lwip/opt.h	817;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	101;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	22;"	d
LWIP_PLATFORM_ASSERT	net/lwip/jos/arch/cc.h	35;"	d
LWIP_PLATFORM_BYTESWAP	net/lwip/include/ipv4/lwip/inet.h	66;"	d
LWIP_PLATFORM_DIAG	net/lwip/jos/arch/cc.h	34;"	d
LWIP_POSIX_SOCKETS_IO_NAMES	net/lwip/include/lwip/opt.h	1092;"	d
LWIP_PROVIDE_ERRNO	net/lwip/jos/arch/perror.c	2;"	d	file:
LWIP_PROVIDE_ERRNO	net/lwip/jos/lwipopts.h	18;"	d
LWIP_RAW	net/lwip/include/lwip/opt.h	464;"	d
LWIP_SNMP	net/lwip/include/lwip/opt.h	523;"	d
LWIP_SNMP_OBJ_ID_LEN	net/lwip/include/lwip/snmp.h	88;"	d
LWIP_SOCKET	net/lwip/include/lwip/opt.h	1075;"	d
LWIP_SO_RCVBUF	net/lwip/include/lwip/opt.h	1115;"	d
LWIP_SO_RCVTIMEO	net/lwip/include/lwip/opt.h	1108;"	d
LWIP_STATS	net/lwip/include/lwip/opt.h	1134;"	d
LWIP_STATS	net/lwip/jos/lwipopts.h	13;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1143;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1238;"	d
LWIP_STATS_DISPLAY	net/lwip/jos/lwipopts.h	14;"	d
LWIP_STATS_LARGE	net/lwip/include/lwip/stats.h	47;"	d
LWIP_TCP	net/lwip/include/lwip/opt.h	650;"	d
LWIP_TCPIP_CORE_LOCKING	net/lwip/include/lwip/opt.h	1056;"	d
LWIP_TCP_KEEPALIVE	net/lwip/include/lwip/opt.h	1101;"	d
LWIP_TIMEVAL_PRIVATE	net/lwip/include/lwip/sockets.h	290;"	d
LWIP_UDP	net/lwip/include/lwip/opt.h	624;"	d
LWIP_UDPLITE	net/lwip/include/lwip/opt.h	631;"	d
LWIP_UNUSED_ARG	net/lwip/include/lwip/arch.h	63;"	d
LcpEchoCheck	net/lwip/netif/ppp/lcp.c	/^LcpEchoCheck (fsm *f)$/;"	f	file:
LcpEchoTimeout	net/lwip/netif/ppp/lcp.c	/^LcpEchoTimeout (void *arg)$/;"	f	file:
LcpLinkFailure	net/lwip/netif/ppp/lcp.c	/^LcpLinkFailure (fsm *f)$/;"	f	file:
LcpSendEchoRequest	net/lwip/netif/ppp/lcp.c	/^LcpSendEchoRequest (fsm *f)$/;"	f	file:
LinkPhase	net/lwip/netif/ppp/lcp.h	/^} LinkPhase;$/;"	t	typeref:enum:__anon12
LogCodes	net/lwip/netif/ppp/pppdebug.h	/^} LogCodes;$/;"	t	typeref:enum:__anon13
MAGIC_H	net/lwip/netif/ppp/magic.h	55;"	d
MAKEHEADER	net/lwip/netif/ppp/ppp.h	223;"	d
MASK	net/ns.h	5;"	d
MAX	inc/types.h	48;"	d
MAXARGS	kern/monitor.c	265;"	d	file:
MAXERROR	inc/error.h	28;"	d
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXMALLOC	lib/malloc.c	/^	MAXMALLOC = 1024*1024	\/* max size of one allocated chunk *\/$/;"	e	enum:__anon7	file:
MAXNAMELEN	inc/fs.h	17;"	d
MAXNAMELEN	net/lwip/include/lwip/opt.h	1398;"	d
MAXOPEN	fs/serv.c	40;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAXPENDING	obj/user/echosrv.asm	/^#define MAXPENDING 5    \/\/ Max connection requests$/;"	d
MAXPENDING	user/echosrv.c	8;"	d	file:
MAXPENDING	user/httpd.c	12;"	d	file:
MAXSECRETLEN	net/lwip/include/lwip/opt.h	1399;"	d
MAX_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	96;"	d
MAX_CONFLICTS	net/lwip/include/ipv4/lwip/autoip.h	67;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_HDR	net/lwip/netif/ppp/vj.h	31;"	d
MAX_IRQS	kern/picirq.h	9;"	d
MAX_NT_PASSWORD	net/lwip/netif/ppp/chpms.h	60;"	d
MAX_RESPONSE_LENGTH	net/lwip/netif/ppp/chap.h	97;"	d
MAX_RING_SZ	kern/e100.h	12;"	d
MAX_SIZE	net/lwip/netif/slipif.c	62;"	d	file:
MAX_SLOTS	net/lwip/netif/ppp/vj.h	30;"	d
MBOXSLOTS	net/lwip/jos/arch/sys_arch.c	14;"	d	file:
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MD5Final	net/lwip/netif/ppp/md5.c	/^MD5Final (unsigned char hash[], MD5_CTX *mdContext)$/;"	f
MD5Init	net/lwip/netif/ppp/md5.c	/^MD5Init (MD5_CTX *mdContext)$/;"	f
MD5Update	net/lwip/netif/ppp/md5.c	/^MD5Update(MD5_CTX *mdContext, unsigned char *inBuf, unsigned int inLen)$/;"	f
MD5_CTX	net/lwip/netif/ppp/md5.h	/^} MD5_CTX;$/;"	t	typeref:struct:__anon8
MD5_H	net/lwip/netif/ppp/md5.h	41;"	d
MD5_SIGNATURE_SIZE	net/lwip/netif/ppp/chap.h	83;"	d
MD5_SUPPORT	net/lwip/include/lwip/opt.h	1323;"	d
MEMCPY	net/lwip/include/lwip/opt.h	76;"	d
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	104;"	d	file:
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	95;"	d	file:
MEMP_DEBUG	net/lwip/include/lwip/opt.h	1567;"	d
MEMP_MAX	net/lwip/include/lwip/memp.h	/^  MEMP_MAX$/;"	e	enum:__anon18
MEMP_NUM_ARP_QUEUE	net/lwip/include/lwip/opt.h	250;"	d
MEMP_NUM_IGMP_GROUP	net/lwip/include/lwip/opt.h	260;"	d
MEMP_NUM_NETBUF	net/lwip/include/lwip/opt.h	276;"	d
MEMP_NUM_NETBUF	net/lwip/jos/lwipopts.h	30;"	d
MEMP_NUM_NETCONN	net/lwip/include/lwip/opt.h	284;"	d
MEMP_NUM_NETCONN	net/lwip/jos/lwipopts.h	31;"	d
MEMP_NUM_PBUF	net/lwip/include/lwip/opt.h	191;"	d
MEMP_NUM_PBUF	net/lwip/jos/lwipopts.h	25;"	d
MEMP_NUM_RAW_PCB	net/lwip/include/lwip/opt.h	199;"	d
MEMP_NUM_REASSDATA	net/lwip/include/lwip/opt.h	240;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/include/lwip/opt.h	268;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/jos/lwipopts.h	32;"	d
MEMP_NUM_TCPIP_MSG_API	net/lwip/include/lwip/opt.h	293;"	d
MEMP_NUM_TCPIP_MSG_INPKT	net/lwip/include/lwip/opt.h	302;"	d
MEMP_NUM_TCP_PCB	net/lwip/include/lwip/opt.h	216;"	d
MEMP_NUM_TCP_PCB	net/lwip/jos/lwipopts.h	27;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/include/lwip/opt.h	224;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/jos/lwipopts.h	28;"	d
MEMP_NUM_TCP_SEG	net/lwip/include/lwip/opt.h	232;"	d
MEMP_NUM_TCP_SEG	net/lwip/jos/lwipopts.h	29;"	d
MEMP_NUM_UDP_PCB	net/lwip/include/lwip/opt.h	208;"	d
MEMP_NUM_UDP_PCB	net/lwip/jos/lwipopts.h	26;"	d
MEMP_OVERFLOW_CHECK	net/lwip/include/lwip/opt.h	128;"	d
MEMP_POOL_FIRST	net/lwip/include/lwip/memp.h	74;"	d
MEMP_POOL_HELPER_FIRST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_FIRST = ((u8_t)$/;"	e	enum:__anon19
MEMP_POOL_HELPER_LAST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_LAST = ((u8_t)$/;"	e	enum:__anon19
MEMP_POOL_LAST	net/lwip/include/lwip/memp.h	75;"	d
MEMP_SANITY_CHECK	net/lwip/include/lwip/opt.h	136;"	d
MEMP_SANITY_CHECK	net/lwip/jos/lwipopts.h	59;"	d
MEMP_SANITY_REGION_AFTER	net/lwip/core/memp.c	85;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	88;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	90;"	d	file:
MEMP_SANITY_REGION_BEFORE	net/lwip/core/memp.c	77;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	80;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	82;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	103;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	94;"	d	file:
MEMP_STATS	net/lwip/include/lwip/opt.h	1216;"	d
MEMP_STATS	net/lwip/include/lwip/opt.h	1236;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	235;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	245;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	237;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	247;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	243;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	249;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	236;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	246;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	238;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	248;"	d
MEMP_USE_CUSTOM_POOLS	net/lwip/include/lwip/opt.h	155;"	d
MEM_ALIGNMENT	net/lwip/include/lwip/opt.h	107;"	d
MEM_ALIGNMENT	net/lwip/jos/lwipopts.h	23;"	d
MEM_DEBUG	net/lwip/include/lwip/opt.h	1560;"	d
MEM_LIBC_MALLOC	net/lwip/include/lwip/opt.h	98;"	d
MEM_SIZE	net/lwip/include/lwip/opt.h	115;"	d
MEM_SIZE	net/lwip/jos/lwipopts.h	35;"	d
MEM_SIZE_ALIGNED	net/lwip/core/mem.c	170;"	d	file:
MEM_STATS	net/lwip/include/lwip/opt.h	1209;"	d
MEM_STATS	net/lwip/include/lwip/opt.h	1235;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	217;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	227;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	224;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	230;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	225;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	231;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	218;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	228;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	219;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	229;"	d
MEM_USE_POOLS	net/lwip/include/lwip/opt.h	145;"	d
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	677;"	d	file:
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	679;"	d	file:
MIB_NODE_AR	net/lwip/include/lwip/snmp_structs.h	91;"	d
MIB_NODE_EX	net/lwip/include/lwip/snmp_structs.h	97;"	d
MIB_NODE_LR	net/lwip/include/lwip/snmp_structs.h	95;"	d
MIB_NODE_RA	net/lwip/include/lwip/snmp_structs.h	93;"	d
MIB_NODE_SC	net/lwip/include/lwip/snmp_structs.h	89;"	d
MIB_OBJECT_NONE	net/lwip/include/lwip/snmp_structs.h	55;"	d
MIB_OBJECT_NOT_ACCESSIBLE	net/lwip/include/lwip/snmp_structs.h	63;"	d
MIB_OBJECT_READ_ONLY	net/lwip/include/lwip/snmp_structs.h	60;"	d
MIB_OBJECT_READ_WRITE	net/lwip/include/lwip/snmp_structs.h	61;"	d
MIB_OBJECT_SCALAR	net/lwip/include/lwip/snmp_structs.h	56;"	d
MIB_OBJECT_TAB	net/lwip/include/lwip/snmp_structs.h	57;"	d
MIB_OBJECT_WRITE_ONLY	net/lwip/include/lwip/snmp_structs.h	62;"	d
MIN	inc/types.h	42;"	d
MIN_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	95;"	d
MIN_SIZE	net/lwip/core/mem.c	165;"	d	file:
MIN_SIZE_ALIGNED	net/lwip/core/mem.c	168;"	d	file:
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MSCHAP_SUPPORT	net/lwip/include/lwip/opt.h	1295;"	d
MSG_DONTWAIT	net/lwip/include/lwip/sockets.h	134;"	d
MSG_MORE	net/lwip/include/lwip/sockets.h	135;"	d
MSG_OOB	net/lwip/include/lwip/sockets.h	133;"	d
MSG_PEEK	net/lwip/include/lwip/sockets.h	131;"	d
MSG_WAITALL	net/lwip/include/lwip/sockets.h	132;"	d
MS_CHAP_RESPONSE_LEN	net/lwip/netif/ppp/chap.h	85;"	d
MS_ChapResponse	net/lwip/netif/ppp/chpms.c	/^} MS_ChapResponse;$/;"	t	typeref:struct:__anon11	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (MULTIBOOT_MEMORY_INFO | MULTIBOOT_PAGE_ALIGN)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
MULTIBOOT_MEMORY_INFO	kern/entry.S	/^#define MULTIBOOT_MEMORY_INFO (1<<1)$/;"	d
MULTIBOOT_PAGE_ALIGN	kern/entry.S	/^#define MULTIBOOT_PAGE_ALIGN  (1<<0)$/;"	d
MakeKey	net/lwip/netif/ppp/chpms.c	/^MakeKey( u_char *key,    \/* IN  56 bit DES key missing parity bits *\/$/;"	f	file:
NAKCIADDR	net/lwip/netif/ppp/ipcp.c	592;"	d	file:
NAKCICHAP	net/lwip/netif/ppp/lcp.c	760;"	d	file:
NAKCICHAR	net/lwip/netif/ppp/lcp.c	772;"	d	file:
NAKCIDNS	net/lwip/netif/ppp/ipcp.c	624;"	d	file:
NAKCILONG	net/lwip/netif/ppp/lcp.c	794;"	d	file:
NAKCILQR	net/lwip/netif/ppp/lcp.c	805;"	d	file:
NAKCISHORT	net/lwip/netif/ppp/lcp.c	783;"	d	file:
NAKCIVJ	net/lwip/netif/ppp/ipcp.c	612;"	d	file:
NAKCIVOID	net/lwip/netif/ppp/lcp.c	750;"	d	file:
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	194;"	d	file:
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	30;"	d
NETCONNTYPE_DATAGRAM	net/lwip/include/lwip/api.h	60;"	d
NETCONNTYPE_GROUP	net/lwip/include/lwip/api.h	59;"	d
NETCONN_CLOSE	net/lwip/include/lwip/api.h	/^  NETCONN_CLOSE$/;"	e	enum:netconn_state
NETCONN_CONNECT	net/lwip/include/lwip/api.h	/^  NETCONN_CONNECT,$/;"	e	enum:netconn_state
NETCONN_COPY	net/lwip/include/lwip/api.h	55;"	d
NETCONN_EVT_RCVMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVMINUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_RCVPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVPLUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDMINUS$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDPLUS,$/;"	e	enum:netconn_evt
NETCONN_INVALID	net/lwip/include/lwip/api.h	/^  NETCONN_INVALID    = 0,$/;"	e	enum:netconn_type
NETCONN_JOIN	net/lwip/include/lwip/api.h	/^  NETCONN_JOIN,$/;"	e	enum:netconn_igmp
NETCONN_LEAVE	net/lwip/include/lwip/api.h	/^  NETCONN_LEAVE$/;"	e	enum:netconn_igmp
NETCONN_LISTEN	net/lwip/include/lwip/api.h	/^  NETCONN_LISTEN,$/;"	e	enum:netconn_state
NETCONN_MORE	net/lwip/include/lwip/api.h	56;"	d
NETCONN_NOCOPY	net/lwip/include/lwip/api.h	54;"	d
NETCONN_NOFLAG	net/lwip/include/lwip/api.h	53;"	d
NETCONN_NONE	net/lwip/include/lwip/api.h	/^  NETCONN_NONE,$/;"	e	enum:netconn_state
NETCONN_RAW	net/lwip/include/lwip/api.h	/^  NETCONN_RAW        = 0x40$/;"	e	enum:netconn_type
NETCONN_TCP	net/lwip/include/lwip/api.h	/^  NETCONN_TCP        = 0x10,$/;"	e	enum:netconn_type
NETCONN_UDP	net/lwip/include/lwip/api.h	/^  NETCONN_UDP        = 0x20,$/;"	e	enum:netconn_type
NETCONN_UDPLITE	net/lwip/include/lwip/api.h	/^  NETCONN_UDPLITE    = 0x21,$/;"	e	enum:netconn_type
NETCONN_UDPNOCHKSUM	net/lwip/include/lwip/api.h	/^  NETCONN_UDPNOCHKSUM= 0x22,$/;"	e	enum:netconn_type
NETCONN_WRITE	net/lwip/include/lwip/api.h	/^  NETCONN_WRITE,$/;"	e	enum:netconn_state
NETIF_DEBUG	net/lwip/include/lwip/opt.h	1483;"	d
NETIF_FLAG_BROADCAST	net/lwip/include/lwip/netif.h	71;"	d
NETIF_FLAG_DHCP	net/lwip/include/lwip/netif.h	75;"	d
NETIF_FLAG_ETHARP	net/lwip/include/lwip/netif.h	80;"	d
NETIF_FLAG_IGMP	net/lwip/include/lwip/netif.h	82;"	d
NETIF_FLAG_LINK_UP	net/lwip/include/lwip/netif.h	78;"	d
NETIF_FLAG_POINTTOPOINT	net/lwip/include/lwip/netif.h	73;"	d
NETIF_FLAG_UP	net/lwip/include/lwip/netif.h	69;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	181;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	196;"	d
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	62;"	d	file:
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	64;"	d	file:
NETIF_MAX_HWADDR_LEN	net/lwip/include/lwip/netif.h	61;"	d
NETIF_SET_HINT	net/lwip/netif/etharp.c	121;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	56;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	58;"	d	file:
NEW_A	net/lwip/netif/ppp/vj.h	86;"	d
NEW_C	net/lwip/netif/ppp/vj.h	83;"	d
NEW_I	net/lwip/netif/ppp/vj.h	84;"	d
NEW_S	net/lwip/netif/ppp/vj.h	85;"	d
NEW_U	net/lwip/netif/ppp/vj.h	88;"	d
NEW_W	net/lwip/netif/ppp/vj.h	87;"	d
NHANDLERS	fs/serv.c	337;"	d	file:
NHANDLERS	obj/fs/fs.asm	/^#define NHANDLERS (sizeof(handlers)\/sizeof(handlers[0]))$/;"	d
NINDIRECT	inc/fs.h	25;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NMBOX	net/lwip/jos/arch/sys_arch.c	13;"	d	file:
NO	kern/console.c	216;"	d	file:
NODE_STACK_SIZE	net/lwip/core/snmp/mib_structs.c	45;"	d	file:
NO_DATA	net/lwip/include/lwip/netdb.h	57;"	d
NO_RECOVERY	net/lwip/include/lwip/netdb.h	58;"	d
NO_SYS	net/lwip/include/lwip/opt.h	68;"	d
NPDENTRIES	inc/mmu.h	47;"	d
NPMODE_DROP	net/lwip/netif/ppp/ppp.h	/^  NPMODE_DROP,        \/* silently drop the packet *\/$/;"	e	enum:NPmode
NPMODE_ERROR	net/lwip/netif/ppp/ppp.h	/^  NPMODE_ERROR,       \/* return an error *\/$/;"	e	enum:NPmode
NPMODE_PASS	net/lwip/netif/ppp/ppp.h	/^  NPMODE_PASS,        \/* pass the packet through *\/$/;"	e	enum:NPmode
NPMODE_QUEUE	net/lwip/netif/ppp/ppp.h	/^  NPMODE_QUEUE        \/* save it up for later. *\/$/;"	e	enum:NPmode
NPTENTRIES	inc/mmu.h	48;"	d
NPmode	net/lwip/netif/ppp/ppp.h	/^enum NPmode {$/;"	g
NSEM	net/lwip/jos/arch/sys_arch.c	12;"	d	file:
NSREQ_ACCEPT	inc/ns.h	/^	NSREQ_ACCEPT = 1,$/;"	e	enum:__anon2
NSREQ_BIND	inc/ns.h	/^	NSREQ_BIND,$/;"	e	enum:__anon2
NSREQ_CLOSE	inc/ns.h	/^	NSREQ_CLOSE,$/;"	e	enum:__anon2
NSREQ_CONNECT	inc/ns.h	/^	NSREQ_CONNECT,$/;"	e	enum:__anon2
NSREQ_INPUT	inc/ns.h	/^	NSREQ_INPUT,$/;"	e	enum:__anon2
NSREQ_LISTEN	inc/ns.h	/^	NSREQ_LISTEN,$/;"	e	enum:__anon2
NSREQ_OUTPUT	inc/ns.h	/^	NSREQ_OUTPUT,$/;"	e	enum:__anon2
NSREQ_RECV	inc/ns.h	/^	NSREQ_RECV,$/;"	e	enum:__anon2
NSREQ_SEND	inc/ns.h	/^	NSREQ_SEND,$/;"	e	enum:__anon2
NSREQ_SHUTDOWN	inc/ns.h	/^	NSREQ_SHUTDOWN,$/;"	e	enum:__anon2
NSREQ_SOCKET	inc/ns.h	/^	NSREQ_SOCKET,$/;"	e	enum:__anon2
NSREQ_TIMER	inc/ns.h	/^	NSREQ_TIMER,$/;"	e	enum:__anon2
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon3
NTResp	net/lwip/netif/ppp/chpms.c	/^    u_char NTResp[24];$/;"	m	struct:__anon11	file:
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NULL	net/lwip/include/lwip/def.h	42;"	d
NUMLOCK	kern/console.c	223;"	d	file:
NUM_PPP	net/lwip/include/lwip/opt.h	1274;"	d
NUM_SOCKETS	net/lwip/api/sockets.c	57;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
Nsipc	inc/ns.h	/^union Nsipc {$/;"	u
Nsreq_accept	inc/ns.h	/^	struct Nsreq_accept {$/;"	s	union:Nsipc
Nsreq_bind	inc/ns.h	/^	struct Nsreq_bind {$/;"	s	union:Nsipc
Nsreq_close	inc/ns.h	/^	struct Nsreq_close {$/;"	s	union:Nsipc
Nsreq_connect	inc/ns.h	/^	struct Nsreq_connect {$/;"	s	union:Nsipc
Nsreq_listen	inc/ns.h	/^	struct Nsreq_listen {$/;"	s	union:Nsipc
Nsreq_recv	inc/ns.h	/^	struct Nsreq_recv {$/;"	s	union:Nsipc
Nsreq_send	inc/ns.h	/^	struct Nsreq_send {$/;"	s	union:Nsipc
Nsreq_shutdown	inc/ns.h	/^	struct Nsreq_shutdown {$/;"	s	union:Nsipc
Nsreq_socket	inc/ns.h	/^	struct Nsreq_socket {$/;"	s	union:Nsipc
Nsret_accept	inc/ns.h	/^	struct Nsret_accept {$/;"	s	union:Nsipc
Nsret_recv	inc/ns.h	/^	struct Nsret_recv {$/;"	s	union:Nsipc
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OPT_PASSIVE	net/lwip/netif/ppp/fsm.h	94;"	d
OPT_RESTART	net/lwip/netif/ppp/fsm.h	95;"	d
OPT_SILENT	net/lwip/netif/ppp/fsm.h	96;"	d
O_ACCMODE	inc/lib.h	132;"	d
O_CREAT	inc/lib.h	134;"	d
O_EXCL	inc/lib.h	136;"	d
O_MKDIR	inc/lib.h	137;"	d
O_NONBLOCK	net/lwip/include/lwip/sockets.h	268;"	d
O_RDONLY	inc/lib.h	129;"	d
O_RDWR	inc/lib.h	131;"	d
O_TRUNC	inc/lib.h	135;"	d
O_WRONLY	inc/lib.h	130;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Jun 29 00:34:26 EDT 2011$/;"	m
PACK_STRUCT_BEGIN	net/lwip/include/lwip/arch.h	50;"	d
PACK_STRUCT_BEGIN	net/lwip/jos/arch/cc.h	23;"	d
PACK_STRUCT_END	net/lwip/include/lwip/arch.h	54;"	d
PACK_STRUCT_END	net/lwip/jos/arch/cc.h	24;"	d
PACK_STRUCT_FIELD	net/lwip/include/lwip/arch.h	58;"	d
PACK_STRUCT_FIELD	net/lwip/jos/arch/cc.h	21;"	d
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_answer
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_hdr
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_query
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_dur_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_echo_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_te_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/igmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:igmp_msg
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/lwip/dhcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dhcp_msg
PACK_STRUCT_STRUCT	net/lwip/include/lwip/tcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:tcp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/lwip/udp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:udp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_addr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:etharp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ethip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoehdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoetag
PACK_STRUCT_STRUCT	net/lwip/jos/arch/cc.h	22;"	d
PADDING	net/lwip/netif/ppp/md5.c	/^static unsigned char PADDING[64] = {$/;"	v	file:
PADDR	kern/pmap.h	19;"	d
PAP_H	net/lwip/netif/ppp/pap.h	53;"	d
PAP_PEER	net/lwip/netif/ppp/auth.c	91;"	d	file:
PAP_SUPPORT	net/lwip/include/lwip/opt.h	1281;"	d
PAP_WITHPEER	net/lwip/netif/ppp/auth.c	90;"	d	file:
PBUF_DEBUG	net/lwip/include/lwip/opt.h	1490;"	d
PBUF_FLAG_PUSH	net/lwip/include/lwip/pbuf.h	62;"	d
PBUF_IP	net/lwip/include/lwip/pbuf.h	/^  PBUF_IP,$/;"	e	enum:__anon32
PBUF_IP_HLEN	net/lwip/include/lwip/pbuf.h	44;"	d
PBUF_LINK	net/lwip/include/lwip/pbuf.h	/^  PBUF_LINK,$/;"	e	enum:__anon32
PBUF_LINK_HLEN	net/lwip/include/lwip/opt.h	780;"	d
PBUF_POOL	net/lwip/include/lwip/pbuf.h	/^  PBUF_POOL \/* pbuf payload refers to RAM *\/$/;"	e	enum:__anon33
PBUF_POOL_BUFSIZE	net/lwip/include/lwip/opt.h	789;"	d
PBUF_POOL_BUFSIZE	net/lwip/jos/lwipopts.h	38;"	d
PBUF_POOL_BUFSIZE_ALIGNED	net/lwip/core/pbuf.c	79;"	d	file:
PBUF_POOL_SIZE	net/lwip/include/lwip/opt.h	309;"	d
PBUF_POOL_SIZE	net/lwip/jos/lwipopts.h	37;"	d
PBUF_RAM	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAM, \/* pbuf data is stored in RAM *\/$/;"	e	enum:__anon33
PBUF_RAW	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAW$/;"	e	enum:__anon32
PBUF_REF	net/lwip/include/lwip/pbuf.h	/^  PBUF_REF, \/* pbuf comes from the pbuf pool *\/$/;"	e	enum:__anon33
PBUF_ROM	net/lwip/include/lwip/pbuf.h	/^  PBUF_ROM, \/* pbuf data is stored in ROM *\/$/;"	e	enum:__anon33
PBUF_TRANSPORT	net/lwip/include/lwip/pbuf.h	/^  PBUF_TRANSPORT,$/;"	e	enum:__anon32
PBUF_TRANSPORT_HLEN	net/lwip/include/lwip/pbuf.h	43;"	d
PCI32_DMA_BOUNCE_THRESHOLD	kern/pcireg.h	708;"	d
PCI_BHLC_CODE	kern/pcireg.h	329;"	d
PCI_BHLC_REG	kern/pcireg.h	302;"	d
PCI_BIST	kern/pcireg.h	306;"	d
PCI_BIST_MASK	kern/pcireg.h	305;"	d
PCI_BIST_SHIFT	kern/pcireg.h	304;"	d
PCI_BRIDGE_BUS_PRIMARY_SHIFT	kern/pcireg.h	590;"	d
PCI_BRIDGE_BUS_REG	kern/pcireg.h	589;"	d
PCI_BRIDGE_BUS_SECONDARY_SHIFT	kern/pcireg.h	591;"	d
PCI_BRIDGE_BUS_SUBORDINATE_SHIFT	kern/pcireg.h	592;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_SERR	kern/pcireg.h	639;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_STAT	kern/pcireg.h	638;"	d
PCI_BRIDGE_CONTROL_ISA	kern/pcireg.h	630;"	d
PCI_BRIDGE_CONTROL_MABRT	kern/pcireg.h	633;"	d
PCI_BRIDGE_CONTROL_MASK	kern/pcireg.h	627;"	d
PCI_BRIDGE_CONTROL_PERE	kern/pcireg.h	628;"	d
PCI_BRIDGE_CONTROL_PRI_DISC_TIMER	kern/pcireg.h	636;"	d
PCI_BRIDGE_CONTROL_REG	kern/pcireg.h	625;"	d
PCI_BRIDGE_CONTROL_SECBR	kern/pcireg.h	634;"	d
PCI_BRIDGE_CONTROL_SECFASTB2B	kern/pcireg.h	635;"	d
PCI_BRIDGE_CONTROL_SEC_DISC_TIMER	kern/pcireg.h	637;"	d
PCI_BRIDGE_CONTROL_SERR	kern/pcireg.h	629;"	d
PCI_BRIDGE_CONTROL_SHIFT	kern/pcireg.h	626;"	d
PCI_BRIDGE_CONTROL_VGA	kern/pcireg.h	631;"	d
PCI_BRIDGE_IOHIGH_BASE_MASK	kern/pcireg.h	622;"	d
PCI_BRIDGE_IOHIGH_BASE_SHIFT	kern/pcireg.h	620;"	d
PCI_BRIDGE_IOHIGH_LIMIT_MASK	kern/pcireg.h	623;"	d
PCI_BRIDGE_IOHIGH_LIMIT_SHIFT	kern/pcireg.h	621;"	d
PCI_BRIDGE_IOHIGH_REG	kern/pcireg.h	619;"	d
PCI_BRIDGE_IO_32BITS	kern/pcireg.h	601;"	d
PCI_BRIDGE_MEMORY_BASE_MASK	kern/pcireg.h	606;"	d
PCI_BRIDGE_MEMORY_BASE_SHIFT	kern/pcireg.h	604;"	d
PCI_BRIDGE_MEMORY_LIMIT_MASK	kern/pcireg.h	607;"	d
PCI_BRIDGE_MEMORY_LIMIT_SHIFT	kern/pcireg.h	605;"	d
PCI_BRIDGE_MEMORY_REG	kern/pcireg.h	603;"	d
PCI_BRIDGE_PREFETCHBASE32_REG	kern/pcireg.h	616;"	d
PCI_BRIDGE_PREFETCHLIMIT32_REG	kern/pcireg.h	617;"	d
PCI_BRIDGE_PREFETCHMEM_64BITS	kern/pcireg.h	614;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_MASK	kern/pcireg.h	612;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_SHIFT	kern/pcireg.h	610;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_MASK	kern/pcireg.h	613;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_SHIFT	kern/pcireg.h	611;"	d
PCI_BRIDGE_PREFETCHMEM_REG	kern/pcireg.h	609;"	d
PCI_BRIDGE_STATIO_IOBASE_MASK	kern/pcireg.h	598;"	d
PCI_BRIDGE_STATIO_IOBASE_SHIFT	kern/pcireg.h	595;"	d
PCI_BRIDGE_STATIO_IOLIMIT_MASK	kern/pcireg.h	599;"	d
PCI_BRIDGE_STATIO_IOLIMIT_SHIFT	kern/pcireg.h	596;"	d
PCI_BRIDGE_STATIO_REG	kern/pcireg.h	594;"	d
PCI_BRIDGE_STATIO_STATUS_MASK	kern/pcireg.h	600;"	d
PCI_BRIDGE_STATIO_STATUS_SHIFT	kern/pcireg.h	597;"	d
PCI_CACHELINE	kern/pcireg.h	326;"	d
PCI_CACHELINE_MASK	kern/pcireg.h	325;"	d
PCI_CACHELINE_SHIFT	kern/pcireg.h	324;"	d
PCI_CAPLISTPTR_REG	kern/pcireg.h	412;"	d
PCI_CAPLIST_CAP	kern/pcireg.h	416;"	d
PCI_CAPLIST_NEXT	kern/pcireg.h	415;"	d
PCI_CAPLIST_PTR	kern/pcireg.h	414;"	d
PCI_CAP_AGP	kern/pcireg.h	420;"	d
PCI_CAP_AGP8	kern/pcireg.h	433;"	d
PCI_CAP_AGP_MAJOR	kern/pcireg.h	421;"	d
PCI_CAP_AGP_MINOR	kern/pcireg.h	422;"	d
PCI_CAP_CPCI_HOTSWAP	kern/pcireg.h	426;"	d
PCI_CAP_CPCI_RSRCCTL	kern/pcireg.h	431;"	d
PCI_CAP_DEBUGPORT	kern/pcireg.h	430;"	d
PCI_CAP_HOTPLUG	kern/pcireg.h	432;"	d
PCI_CAP_LDT	kern/pcireg.h	428;"	d
PCI_CAP_MSI	kern/pcireg.h	425;"	d
PCI_CAP_MSIX	kern/pcireg.h	436;"	d
PCI_CAP_PCIEXPRESS	kern/pcireg.h	435;"	d
PCI_CAP_PCIX	kern/pcireg.h	427;"	d
PCI_CAP_PWRMGMT	kern/pcireg.h	419;"	d
PCI_CAP_RESERVED0	kern/pcireg.h	418;"	d
PCI_CAP_SECURE	kern/pcireg.h	434;"	d
PCI_CAP_SLOTID	kern/pcireg.h	424;"	d
PCI_CAP_VENDSPEC	kern/pcireg.h	429;"	d
PCI_CAP_VPD	kern/pcireg.h	423;"	d
PCI_CARDBUS_CAPLISTPTR_REG	kern/pcireg.h	413;"	d
PCI_CARDBUS_CIS_REG	kern/pcireg.h	400;"	d
PCI_CLASS	kern/pcireg.h	118;"	d
PCI_CLASS_BRIDGE	kern/pcireg.h	148;"	d
PCI_CLASS_CODE	kern/pcireg.h	136;"	d
PCI_CLASS_COMMUNICATIONS	kern/pcireg.h	149;"	d
PCI_CLASS_CRYPTO	kern/pcireg.h	158;"	d
PCI_CLASS_DASP	kern/pcireg.h	159;"	d
PCI_CLASS_DISPLAY	kern/pcireg.h	145;"	d
PCI_CLASS_DOCK	kern/pcireg.h	152;"	d
PCI_CLASS_I2O	kern/pcireg.h	156;"	d
PCI_CLASS_INPUT	kern/pcireg.h	151;"	d
PCI_CLASS_MASK	kern/pcireg.h	117;"	d
PCI_CLASS_MASS_STORAGE	kern/pcireg.h	143;"	d
PCI_CLASS_MEMORY	kern/pcireg.h	147;"	d
PCI_CLASS_MULTIMEDIA	kern/pcireg.h	146;"	d
PCI_CLASS_NETWORK	kern/pcireg.h	144;"	d
PCI_CLASS_PREHISTORIC	kern/pcireg.h	142;"	d
PCI_CLASS_PROCESSOR	kern/pcireg.h	153;"	d
PCI_CLASS_REG	kern/pcireg.h	109;"	d
PCI_CLASS_SATCOM	kern/pcireg.h	157;"	d
PCI_CLASS_SERIALBUS	kern/pcireg.h	154;"	d
PCI_CLASS_SHIFT	kern/pcireg.h	116;"	d
PCI_CLASS_SYSTEM	kern/pcireg.h	150;"	d
PCI_CLASS_UNDEFINED	kern/pcireg.h	160;"	d
PCI_CLASS_WIRELESS	kern/pcireg.h	155;"	d
PCI_COMMAND_BACKTOBACK_ENABLE	kern/pcireg.h	89;"	d
PCI_COMMAND_INVALIDATE_ENABLE	kern/pcireg.h	84;"	d
PCI_COMMAND_IO_ENABLE	kern/pcireg.h	80;"	d
PCI_COMMAND_MASK	kern/pcireg.h	72;"	d
PCI_COMMAND_MASTER_ENABLE	kern/pcireg.h	82;"	d
PCI_COMMAND_MEM_ENABLE	kern/pcireg.h	81;"	d
PCI_COMMAND_PALETTE_ENABLE	kern/pcireg.h	85;"	d
PCI_COMMAND_PARITY_ENABLE	kern/pcireg.h	86;"	d
PCI_COMMAND_SERR_ENABLE	kern/pcireg.h	88;"	d
PCI_COMMAND_SHIFT	kern/pcireg.h	71;"	d
PCI_COMMAND_SPECIAL_ENABLE	kern/pcireg.h	83;"	d
PCI_COMMAND_STATUS_CODE	kern/pcireg.h	76;"	d
PCI_COMMAND_STATUS_REG	kern/pcireg.h	70;"	d
PCI_COMMAND_STEPPING_ENABLE	kern/pcireg.h	87;"	d
PCI_HDRTYPE	kern/pcireg.h	311;"	d
PCI_HDRTYPE_DEVICE	kern/pcireg.h	339;"	d
PCI_HDRTYPE_MASK	kern/pcireg.h	310;"	d
PCI_HDRTYPE_MULTIFN	kern/pcireg.h	316;"	d
PCI_HDRTYPE_PCB	kern/pcireg.h	341;"	d
PCI_HDRTYPE_PPB	kern/pcireg.h	340;"	d
PCI_HDRTYPE_SHIFT	kern/pcireg.h	309;"	d
PCI_HDRTYPE_TYPE	kern/pcireg.h	314;"	d
PCI_ID_CODE	kern/pcireg.h	63;"	d
PCI_ID_REG	kern/pcireg.h	48;"	d
PCI_INTERFACE	kern/pcireg.h	128;"	d
PCI_INTERFACE_MASK	kern/pcireg.h	127;"	d
PCI_INTERFACE_SHIFT	kern/pcireg.h	126;"	d
PCI_INTERRUPT_CODE	kern/pcireg.h	575;"	d
PCI_INTERRUPT_GRANT	kern/pcireg.h	557;"	d
PCI_INTERRUPT_GRANT_MASK	kern/pcireg.h	556;"	d
PCI_INTERRUPT_GRANT_SHIFT	kern/pcireg.h	555;"	d
PCI_INTERRUPT_LATENCY	kern/pcireg.h	562;"	d
PCI_INTERRUPT_LATENCY_MASK	kern/pcireg.h	561;"	d
PCI_INTERRUPT_LATENCY_SHIFT	kern/pcireg.h	560;"	d
PCI_INTERRUPT_LINE	kern/pcireg.h	572;"	d
PCI_INTERRUPT_LINE_MASK	kern/pcireg.h	571;"	d
PCI_INTERRUPT_LINE_SHIFT	kern/pcireg.h	570;"	d
PCI_INTERRUPT_PIN	kern/pcireg.h	567;"	d
PCI_INTERRUPT_PIN_A	kern/pcireg.h	582;"	d
PCI_INTERRUPT_PIN_B	kern/pcireg.h	583;"	d
PCI_INTERRUPT_PIN_C	kern/pcireg.h	584;"	d
PCI_INTERRUPT_PIN_D	kern/pcireg.h	585;"	d
PCI_INTERRUPT_PIN_MASK	kern/pcireg.h	566;"	d
PCI_INTERRUPT_PIN_MAX	kern/pcireg.h	586;"	d
PCI_INTERRUPT_PIN_NONE	kern/pcireg.h	581;"	d
PCI_INTERRUPT_PIN_SHIFT	kern/pcireg.h	565;"	d
PCI_INTERRUPT_REG	kern/pcireg.h	538;"	d
PCI_LATTIMER	kern/pcireg.h	321;"	d
PCI_LATTIMER_MASK	kern/pcireg.h	320;"	d
PCI_LATTIMER_SHIFT	kern/pcireg.h	319;"	d
PCI_MAPREG_END	kern/pcireg.h	347;"	d
PCI_MAPREG_IO_ADDR	kern/pcireg.h	384;"	d
PCI_MAPREG_IO_ADDR_MASK	kern/pcireg.h	388;"	d
PCI_MAPREG_IO_SIZE	kern/pcireg.h	386;"	d
PCI_MAPREG_MEM64_ADDR	kern/pcireg.h	378;"	d
PCI_MAPREG_MEM64_ADDR_MASK	kern/pcireg.h	382;"	d
PCI_MAPREG_MEM64_SIZE	kern/pcireg.h	380;"	d
PCI_MAPREG_MEM_ADDR	kern/pcireg.h	372;"	d
PCI_MAPREG_MEM_ADDR_MASK	kern/pcireg.h	376;"	d
PCI_MAPREG_MEM_PREFETCHABLE	kern/pcireg.h	368;"	d
PCI_MAPREG_MEM_PREFETCHABLE_MASK	kern/pcireg.h	370;"	d
PCI_MAPREG_MEM_SIZE	kern/pcireg.h	374;"	d
PCI_MAPREG_MEM_TYPE	kern/pcireg.h	360;"	d
PCI_MAPREG_MEM_TYPE_32BIT	kern/pcireg.h	364;"	d
PCI_MAPREG_MEM_TYPE_32BIT_1M	kern/pcireg.h	365;"	d
PCI_MAPREG_MEM_TYPE_64BIT	kern/pcireg.h	366;"	d
PCI_MAPREG_MEM_TYPE_MASK	kern/pcireg.h	362;"	d
PCI_MAPREG_NUM	kern/pcireg.h	393;"	d
PCI_MAPREG_PCB_END	kern/pcireg.h	350;"	d
PCI_MAPREG_PPB_END	kern/pcireg.h	349;"	d
PCI_MAPREG_ROM	kern/pcireg.h	348;"	d
PCI_MAPREG_ROM_ENABLE	kern/pcireg.h	358;"	d
PCI_MAPREG_SIZE_TO_MASK	kern/pcireg.h	390;"	d
PCI_MAPREG_START	kern/pcireg.h	346;"	d
PCI_MAPREG_TYPE	kern/pcireg.h	352;"	d
PCI_MAPREG_TYPE_IO	kern/pcireg.h	357;"	d
PCI_MAPREG_TYPE_MASK	kern/pcireg.h	354;"	d
PCI_MAPREG_TYPE_MEM	kern/pcireg.h	356;"	d
PCI_MAX_LAT	kern/pcireg.h	547;"	d
PCI_MAX_LAT_MASK	kern/pcireg.h	546;"	d
PCI_MAX_LAT_SHIFT	kern/pcireg.h	545;"	d
PCI_MIN_GNT	kern/pcireg.h	552;"	d
PCI_MIN_GNT_MASK	kern/pcireg.h	551;"	d
PCI_MIN_GNT_SHIFT	kern/pcireg.h	550;"	d
PCI_PCIX_CMD	kern/pcireg.h	477;"	d
PCI_PCIX_CMD_BCNT_1024	kern/pcireg.h	483;"	d
PCI_PCIX_CMD_BCNT_2048	kern/pcireg.h	484;"	d
PCI_PCIX_CMD_BCNT_4096	kern/pcireg.h	485;"	d
PCI_PCIX_CMD_BCNT_512	kern/pcireg.h	482;"	d
PCI_PCIX_CMD_BYTECNT_MASK	kern/pcireg.h	480;"	d
PCI_PCIX_CMD_BYTECNT_SHIFT	kern/pcireg.h	481;"	d
PCI_PCIX_CMD_PERR_RECOVER	kern/pcireg.h	478;"	d
PCI_PCIX_CMD_RELAXED_ORDER	kern/pcireg.h	479;"	d
PCI_PCIX_CMD_SPLTRANS_1	kern/pcireg.h	487;"	d
PCI_PCIX_CMD_SPLTRANS_12	kern/pcireg.h	492;"	d
PCI_PCIX_CMD_SPLTRANS_16	kern/pcireg.h	493;"	d
PCI_PCIX_CMD_SPLTRANS_2	kern/pcireg.h	488;"	d
PCI_PCIX_CMD_SPLTRANS_3	kern/pcireg.h	489;"	d
PCI_PCIX_CMD_SPLTRANS_32	kern/pcireg.h	494;"	d
PCI_PCIX_CMD_SPLTRANS_4	kern/pcireg.h	490;"	d
PCI_PCIX_CMD_SPLTRANS_8	kern/pcireg.h	491;"	d
PCI_PCIX_CMD_SPLTRANS_MASK	kern/pcireg.h	486;"	d
PCI_PCIX_STATUS	kern/pcireg.h	499;"	d
PCI_PCIX_STATUS_133	kern/pcireg.h	504;"	d
PCI_PCIX_STATUS_64BIT	kern/pcireg.h	503;"	d
PCI_PCIX_STATUS_BUS_MASK	kern/pcireg.h	502;"	d
PCI_PCIX_STATUS_DEVCPLX	kern/pcireg.h	507;"	d
PCI_PCIX_STATUS_DEV_MASK	kern/pcireg.h	501;"	d
PCI_PCIX_STATUS_FN_MASK	kern/pcireg.h	500;"	d
PCI_PCIX_STATUS_MAXB_1024	kern/pcireg.h	511;"	d
PCI_PCIX_STATUS_MAXB_2048	kern/pcireg.h	512;"	d
PCI_PCIX_STATUS_MAXB_4096	kern/pcireg.h	513;"	d
PCI_PCIX_STATUS_MAXB_512	kern/pcireg.h	510;"	d
PCI_PCIX_STATUS_MAXB_MASK	kern/pcireg.h	508;"	d
PCI_PCIX_STATUS_MAXB_SHIFT	kern/pcireg.h	509;"	d
PCI_PCIX_STATUS_MAXRS_128K	kern/pcireg.h	531;"	d
PCI_PCIX_STATUS_MAXRS_16K	kern/pcireg.h	528;"	d
PCI_PCIX_STATUS_MAXRS_1K	kern/pcireg.h	524;"	d
PCI_PCIX_STATUS_MAXRS_2K	kern/pcireg.h	525;"	d
PCI_PCIX_STATUS_MAXRS_32K	kern/pcireg.h	529;"	d
PCI_PCIX_STATUS_MAXRS_4K	kern/pcireg.h	526;"	d
PCI_PCIX_STATUS_MAXRS_64K	kern/pcireg.h	530;"	d
PCI_PCIX_STATUS_MAXRS_8K	kern/pcireg.h	527;"	d
PCI_PCIX_STATUS_MAXRS_MASK	kern/pcireg.h	523;"	d
PCI_PCIX_STATUS_MAXST_1	kern/pcireg.h	515;"	d
PCI_PCIX_STATUS_MAXST_12	kern/pcireg.h	520;"	d
PCI_PCIX_STATUS_MAXST_16	kern/pcireg.h	521;"	d
PCI_PCIX_STATUS_MAXST_2	kern/pcireg.h	516;"	d
PCI_PCIX_STATUS_MAXST_3	kern/pcireg.h	517;"	d
PCI_PCIX_STATUS_MAXST_32	kern/pcireg.h	522;"	d
PCI_PCIX_STATUS_MAXST_4	kern/pcireg.h	518;"	d
PCI_PCIX_STATUS_MAXST_8	kern/pcireg.h	519;"	d
PCI_PCIX_STATUS_MAXST_MASK	kern/pcireg.h	514;"	d
PCI_PCIX_STATUS_SCERR	kern/pcireg.h	532;"	d
PCI_PCIX_STATUS_SPLDISC	kern/pcireg.h	505;"	d
PCI_PCIX_STATUS_SPLUNEX	kern/pcireg.h	506;"	d
PCI_PMCR	kern/pcireg.h	453;"	d
PCI_PMCR_D1SUPP	kern/pcireg.h	454;"	d
PCI_PMCR_D2SUPP	kern/pcireg.h	455;"	d
PCI_PMCSR	kern/pcireg.h	457;"	d
PCI_PMCSR_STATE_D0	kern/pcireg.h	459;"	d
PCI_PMCSR_STATE_D1	kern/pcireg.h	460;"	d
PCI_PMCSR_STATE_D2	kern/pcireg.h	461;"	d
PCI_PMCSR_STATE_D3	kern/pcireg.h	462;"	d
PCI_PMCSR_STATE_MASK	kern/pcireg.h	458;"	d
PCI_PRODUCT	kern/pcireg.h	60;"	d
PCI_PRODUCT_MASK	kern/pcireg.h	59;"	d
PCI_PRODUCT_SHIFT	kern/pcireg.h	58;"	d
PCI_REVISION	kern/pcireg.h	133;"	d
PCI_REVISION_MASK	kern/pcireg.h	132;"	d
PCI_REVISION_SHIFT	kern/pcireg.h	131;"	d
PCI_STATUS_66MHZ_SUPPORT	kern/pcireg.h	92;"	d
PCI_STATUS_BACKTOBACK_SUPPORT	kern/pcireg.h	94;"	d
PCI_STATUS_CAPLIST_SUPPORT	kern/pcireg.h	91;"	d
PCI_STATUS_DEVSEL_FAST	kern/pcireg.h	96;"	d
PCI_STATUS_DEVSEL_MASK	kern/pcireg.h	99;"	d
PCI_STATUS_DEVSEL_MEDIUM	kern/pcireg.h	97;"	d
PCI_STATUS_DEVSEL_SLOW	kern/pcireg.h	98;"	d
PCI_STATUS_MASK	kern/pcireg.h	74;"	d
PCI_STATUS_MASTER_ABORT	kern/pcireg.h	102;"	d
PCI_STATUS_MASTER_TARGET_ABORT	kern/pcireg.h	101;"	d
PCI_STATUS_PARITY_DETECT	kern/pcireg.h	104;"	d
PCI_STATUS_PARITY_ERROR	kern/pcireg.h	95;"	d
PCI_STATUS_SHIFT	kern/pcireg.h	73;"	d
PCI_STATUS_SPECIAL_ERROR	kern/pcireg.h	103;"	d
PCI_STATUS_TARGET_TARGET_ABORT	kern/pcireg.h	100;"	d
PCI_STATUS_UDF_SUPPORT	kern/pcireg.h	93;"	d
PCI_SUBCLASS	kern/pcireg.h	123;"	d
PCI_SUBCLASS_BRIDGE_CARDBUS	kern/pcireg.h	211;"	d
PCI_SUBCLASS_BRIDGE_EISA	kern/pcireg.h	206;"	d
PCI_SUBCLASS_BRIDGE_HOST	kern/pcireg.h	204;"	d
PCI_SUBCLASS_BRIDGE_INFINIBAND	kern/pcireg.h	214;"	d
PCI_SUBCLASS_BRIDGE_ISA	kern/pcireg.h	205;"	d
PCI_SUBCLASS_BRIDGE_MC	kern/pcireg.h	207;"	d
PCI_SUBCLASS_BRIDGE_MISC	kern/pcireg.h	215;"	d
PCI_SUBCLASS_BRIDGE_NUBUS	kern/pcireg.h	210;"	d
PCI_SUBCLASS_BRIDGE_PCI	kern/pcireg.h	208;"	d
PCI_SUBCLASS_BRIDGE_PCMCIA	kern/pcireg.h	209;"	d
PCI_SUBCLASS_BRIDGE_RACEWAY	kern/pcireg.h	212;"	d
PCI_SUBCLASS_BRIDGE_STPCI	kern/pcireg.h	213;"	d
PCI_SUBCLASS_COMMUNICATIONS_GPIB	kern/pcireg.h	222;"	d
PCI_SUBCLASS_COMMUNICATIONS_MISC	kern/pcireg.h	224;"	d
PCI_SUBCLASS_COMMUNICATIONS_MODEM	kern/pcireg.h	221;"	d
PCI_SUBCLASS_COMMUNICATIONS_MPSERIAL	kern/pcireg.h	220;"	d
PCI_SUBCLASS_COMMUNICATIONS_PARALLEL	kern/pcireg.h	219;"	d
PCI_SUBCLASS_COMMUNICATIONS_SERIAL	kern/pcireg.h	218;"	d
PCI_SUBCLASS_COMMUNICATIONS_SMARTCARD	kern/pcireg.h	223;"	d
PCI_SUBCLASS_CRYPTO_ENTERTAINMENT	kern/pcireg.h	289;"	d
PCI_SUBCLASS_CRYPTO_MISC	kern/pcireg.h	290;"	d
PCI_SUBCLASS_CRYPTO_NETCOMP	kern/pcireg.h	288;"	d
PCI_SUBCLASS_DASP_DPIO	kern/pcireg.h	293;"	d
PCI_SUBCLASS_DASP_MGMT	kern/pcireg.h	296;"	d
PCI_SUBCLASS_DASP_MISC	kern/pcireg.h	297;"	d
PCI_SUBCLASS_DASP_SYNC	kern/pcireg.h	295;"	d
PCI_SUBCLASS_DASP_TIMEFREQ	kern/pcireg.h	294;"	d
PCI_SUBCLASS_DISPLAY_3D	kern/pcireg.h	189;"	d
PCI_SUBCLASS_DISPLAY_MISC	kern/pcireg.h	190;"	d
PCI_SUBCLASS_DISPLAY_VGA	kern/pcireg.h	187;"	d
PCI_SUBCLASS_DISPLAY_XGA	kern/pcireg.h	188;"	d
PCI_SUBCLASS_DOCK_GENERIC	kern/pcireg.h	243;"	d
PCI_SUBCLASS_DOCK_MISC	kern/pcireg.h	244;"	d
PCI_SUBCLASS_I2O_STANDARD	kern/pcireg.h	278;"	d
PCI_SUBCLASS_INPUT_DIGITIZER	kern/pcireg.h	236;"	d
PCI_SUBCLASS_INPUT_GAMEPORT	kern/pcireg.h	239;"	d
PCI_SUBCLASS_INPUT_KEYBOARD	kern/pcireg.h	235;"	d
PCI_SUBCLASS_INPUT_MISC	kern/pcireg.h	240;"	d
PCI_SUBCLASS_INPUT_MOUSE	kern/pcireg.h	237;"	d
PCI_SUBCLASS_INPUT_SCANNER	kern/pcireg.h	238;"	d
PCI_SUBCLASS_MASK	kern/pcireg.h	122;"	d
PCI_SUBCLASS_MASS_STORAGE_ATA	kern/pcireg.h	172;"	d
PCI_SUBCLASS_MASS_STORAGE_FLOPPY	kern/pcireg.h	169;"	d
PCI_SUBCLASS_MASS_STORAGE_IDE	kern/pcireg.h	168;"	d
PCI_SUBCLASS_MASS_STORAGE_IPI	kern/pcireg.h	170;"	d
PCI_SUBCLASS_MASS_STORAGE_MISC	kern/pcireg.h	174;"	d
PCI_SUBCLASS_MASS_STORAGE_RAID	kern/pcireg.h	171;"	d
PCI_SUBCLASS_MASS_STORAGE_SATA	kern/pcireg.h	173;"	d
PCI_SUBCLASS_MASS_STORAGE_SCSI	kern/pcireg.h	167;"	d
PCI_SUBCLASS_MEMORY_FLASH	kern/pcireg.h	200;"	d
PCI_SUBCLASS_MEMORY_MISC	kern/pcireg.h	201;"	d
PCI_SUBCLASS_MEMORY_RAM	kern/pcireg.h	199;"	d
PCI_SUBCLASS_MULTIMEDIA_AUDIO	kern/pcireg.h	194;"	d
PCI_SUBCLASS_MULTIMEDIA_MISC	kern/pcireg.h	196;"	d
PCI_SUBCLASS_MULTIMEDIA_TELEPHONY	kern/pcireg.h	195;"	d
PCI_SUBCLASS_MULTIMEDIA_VIDEO	kern/pcireg.h	193;"	d
PCI_SUBCLASS_NETWORK_ATM	kern/pcireg.h	180;"	d
PCI_SUBCLASS_NETWORK_ETHERNET	kern/pcireg.h	177;"	d
PCI_SUBCLASS_NETWORK_FDDI	kern/pcireg.h	179;"	d
PCI_SUBCLASS_NETWORK_ISDN	kern/pcireg.h	181;"	d
PCI_SUBCLASS_NETWORK_MISC	kern/pcireg.h	184;"	d
PCI_SUBCLASS_NETWORK_PCIMGMULTICOMP	kern/pcireg.h	183;"	d
PCI_SUBCLASS_NETWORK_TOKENRING	kern/pcireg.h	178;"	d
PCI_SUBCLASS_NETWORK_WORLDFIP	kern/pcireg.h	182;"	d
PCI_SUBCLASS_PREHISTORIC_MISC	kern/pcireg.h	163;"	d
PCI_SUBCLASS_PREHISTORIC_VGA	kern/pcireg.h	164;"	d
PCI_SUBCLASS_PROCESSOR_386	kern/pcireg.h	247;"	d
PCI_SUBCLASS_PROCESSOR_486	kern/pcireg.h	248;"	d
PCI_SUBCLASS_PROCESSOR_ALPHA	kern/pcireg.h	250;"	d
PCI_SUBCLASS_PROCESSOR_COPROC	kern/pcireg.h	253;"	d
PCI_SUBCLASS_PROCESSOR_MIPS	kern/pcireg.h	252;"	d
PCI_SUBCLASS_PROCESSOR_PENTIUM	kern/pcireg.h	249;"	d
PCI_SUBCLASS_PROCESSOR_POWERPC	kern/pcireg.h	251;"	d
PCI_SUBCLASS_SATCOM_AUDIO	kern/pcireg.h	283;"	d
PCI_SUBCLASS_SATCOM_DATA	kern/pcireg.h	285;"	d
PCI_SUBCLASS_SATCOM_TV	kern/pcireg.h	282;"	d
PCI_SUBCLASS_SATCOM_VOICE	kern/pcireg.h	284;"	d
PCI_SUBCLASS_SERIALBUS_ACCESS	kern/pcireg.h	257;"	d
PCI_SUBCLASS_SERIALBUS_CANBUS	kern/pcireg.h	265;"	d
PCI_SUBCLASS_SERIALBUS_FIBER	kern/pcireg.h	260;"	d
PCI_SUBCLASS_SERIALBUS_FIREWIRE	kern/pcireg.h	256;"	d
PCI_SUBCLASS_SERIALBUS_INFINIBAND	kern/pcireg.h	262;"	d
PCI_SUBCLASS_SERIALBUS_IPMI	kern/pcireg.h	263;"	d
PCI_SUBCLASS_SERIALBUS_SERCOS	kern/pcireg.h	264;"	d
PCI_SUBCLASS_SERIALBUS_SMBUS	kern/pcireg.h	261;"	d
PCI_SUBCLASS_SERIALBUS_SSA	kern/pcireg.h	258;"	d
PCI_SUBCLASS_SERIALBUS_USB	kern/pcireg.h	259;"	d
PCI_SUBCLASS_SHIFT	kern/pcireg.h	121;"	d
PCI_SUBCLASS_SYSTEM_DMA	kern/pcireg.h	228;"	d
PCI_SUBCLASS_SYSTEM_MISC	kern/pcireg.h	232;"	d
PCI_SUBCLASS_SYSTEM_PCIHOTPLUG	kern/pcireg.h	231;"	d
PCI_SUBCLASS_SYSTEM_PIC	kern/pcireg.h	227;"	d
PCI_SUBCLASS_SYSTEM_RTC	kern/pcireg.h	230;"	d
PCI_SUBCLASS_SYSTEM_TIMER	kern/pcireg.h	229;"	d
PCI_SUBCLASS_WIRELESS_802_11A	kern/pcireg.h	273;"	d
PCI_SUBCLASS_WIRELESS_802_11B	kern/pcireg.h	274;"	d
PCI_SUBCLASS_WIRELESS_BLUETOOTH	kern/pcireg.h	271;"	d
PCI_SUBCLASS_WIRELESS_BROADBAND	kern/pcireg.h	272;"	d
PCI_SUBCLASS_WIRELESS_CONSUMERIR	kern/pcireg.h	269;"	d
PCI_SUBCLASS_WIRELESS_IRDA	kern/pcireg.h	268;"	d
PCI_SUBCLASS_WIRELESS_MISC	kern/pcireg.h	275;"	d
PCI_SUBCLASS_WIRELESS_RF	kern/pcireg.h	270;"	d
PCI_SUBSYS_ID_REG	kern/pcireg.h	407;"	d
PCI_VENDOR	kern/pcireg.h	55;"	d
PCI_VENDOR_MASK	kern/pcireg.h	54;"	d
PCI_VENDOR_SHIFT	kern/pcireg.h	53;"	d
PCI_VPDRES_ISLARGE	kern/pcireg.h	657;"	d
PCI_VPDRES_LARGE_NAME	kern/pcireg.h	662;"	d
PCI_VPDRES_SMALL_LENGTH	kern/pcireg.h	659;"	d
PCI_VPDRES_SMALL_NAME	kern/pcireg.h	660;"	d
PCI_VPDRES_TYPE_COMPATIBLE_DEVICE_ID	kern/pcireg.h	664;"	d
PCI_VPDRES_TYPE_END_TAG	kern/pcireg.h	666;"	d
PCI_VPDRES_TYPE_IDENTIFIER_STRING	kern/pcireg.h	668;"	d
PCI_VPDRES_TYPE_VENDOR_DEFINED	kern/pcireg.h	665;"	d
PCI_VPDRES_TYPE_VPD	kern/pcireg.h	669;"	d
PCI_VPD_ADDRESS	kern/pcireg.h	443;"	d
PCI_VPD_ADDRESS_MASK	kern/pcireg.h	441;"	d
PCI_VPD_ADDRESS_SHIFT	kern/pcireg.h	442;"	d
PCI_VPD_DATAREG	kern/pcireg.h	445;"	d
PCI_VPD_OPFLAG	kern/pcireg.h	446;"	d
PDADDRESS	net/lwip/netif/ppp/ppp.c	/^  PDADDRESS,   \/* Process address field. *\/$/;"	e	enum:__anon9	file:
PDCONTROL	net/lwip/netif/ppp/ppp.c	/^  PDCONTROL,   \/* Process control field. *\/$/;"	e	enum:__anon9	file:
PDDATA	net/lwip/netif/ppp/ppp.c	/^  PDDATA       \/* Process data byte. *\/$/;"	e	enum:__anon9	file:
PDIDLE	net/lwip/netif/ppp/ppp.c	/^  PDIDLE = 0,  \/* Idle state - waiting. *\/$/;"	e	enum:__anon9	file:
PDPROTOCOL1	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL1, \/* Process protocol field 1. *\/$/;"	e	enum:__anon9	file:
PDPROTOCOL2	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL2, \/* Process protocol field 2. *\/$/;"	e	enum:__anon9	file:
PDSTART	net/lwip/netif/ppp/ppp.c	/^  PDSTART,     \/* Process start flag. *\/$/;"	e	enum:__anon9	file:
PDX	inc/mmu.h	34;"	d
PDXSHIFT	inc/mmu.h	57;"	d
PERF_START	net/lwip/jos/arch/perf.h	4;"	d
PERF_STOP	net/lwip/jos/arch/perf.h	5;"	d
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PER_TCP_PCB_BUFFER	net/lwip/jos/lwipopts.h	34;"	d
PFTEMP	inc/memlayout.h	130;"	d
PF_INET	net/lwip/include/lwip/sockets.h	119;"	d
PF_UNSPEC	net/lwip/include/lwip/sockets.h	120;"	d
PGADDR	inc/mmu.h	44;"	d
PGOFF	inc/mmu.h	41;"	d
PGSHIFT	inc/mmu.h	51;"	d
PGSIZE	inc/mmu.h	50;"	d
PHASE_AUTHENTICATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_AUTHENTICATE,$/;"	e	enum:__anon12
PHASE_CALLBACK	net/lwip/netif/ppp/lcp.h	/^  PHASE_CALLBACK,$/;"	e	enum:__anon12
PHASE_DEAD	net/lwip/netif/ppp/lcp.h	/^  PHASE_DEAD = 0,$/;"	e	enum:__anon12
PHASE_ESTABLISH	net/lwip/netif/ppp/lcp.h	/^  PHASE_ESTABLISH,$/;"	e	enum:__anon12
PHASE_INITIALIZE	net/lwip/netif/ppp/lcp.h	/^  PHASE_INITIALIZE,$/;"	e	enum:__anon12
PHASE_NETWORK	net/lwip/netif/ppp/lcp.h	/^  PHASE_NETWORK,$/;"	e	enum:__anon12
PHASE_TERMINATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_TERMINATE$/;"	e	enum:__anon12
PKTMAP	net/lwip/jos/jif/jif.c	47;"	d	file:
PORT	user/echosrv.c	5;"	d	file:
PORT	user/echotest.c	7;"	d	file:
PORT	user/httpd.c	5;"	d	file:
PORT7	GNUmakefile	/^PORT7	:= $(shell expr $(GDBPORT) + 1)$/;"	m
PORT80	GNUmakefile	/^PORT80	:= $(shell expr $(GDBPORT) + 2)$/;"	m
PORTOP_OFST	kern/e100.h	7;"	d
PPN	inc/mmu.h	30;"	d
PPPAUTHTYPE_ANY	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_ANY,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_CHAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_CHAP$/;"	e	enum:pppAuthType
PPPAUTHTYPE_NONE	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_NONE,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_PAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_PAP,$/;"	e	enum:pppAuthType
PPPCTLG_ERRCODE	net/lwip/netif/ppp/ppp.h	252;"	d
PPPCTLG_FD	net/lwip/netif/ppp/ppp.h	253;"	d
PPPCTLG_UPSTATUS	net/lwip/netif/ppp/ppp.h	250;"	d
PPPCTLS_ERRCODE	net/lwip/netif/ppp/ppp.h	251;"	d
PPPControl	net/lwip/netif/ppp/ppp.c	/^} PPPControl;$/;"	t	typeref:struct:PPPControl_s	file:
PPPControl_s	net/lwip/netif/ppp/ppp.c	/^typedef struct PPPControl_s {$/;"	s	file:
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	72;"	d
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	82;"	d
PPPDEBUG_H	net/lwip/netif/ppp/pppdebug.h	37;"	d
PPPDevStates	net/lwip/netif/ppp/ppp.c	/^} PPPDevStates;$/;"	t	typeref:enum:__anon9	file:
PPPERR_ALLOC	net/lwip/netif/ppp/ppp.h	237;"	d
PPPERR_AUTHFAIL	net/lwip/netif/ppp/ppp.h	240;"	d
PPPERR_CONNECT	net/lwip/netif/ppp/ppp.h	239;"	d
PPPERR_DEVICE	net/lwip/netif/ppp/ppp.h	236;"	d
PPPERR_NONE	net/lwip/netif/ppp/ppp.h	233;"	d
PPPERR_OPEN	net/lwip/netif/ppp/ppp.h	235;"	d
PPPERR_PARAM	net/lwip/netif/ppp/ppp.h	234;"	d
PPPERR_PROTOCOL	net/lwip/netif/ppp/ppp.h	241;"	d
PPPERR_USER	net/lwip/netif/ppp/ppp.h	238;"	d
PPPOE_ADD_16	net/lwip/netif/ppp/ppp_oe.c	170;"	d	file:
PPPOE_ADD_HEADER	net/lwip/netif/ppp/ppp_oe.c	175;"	d	file:
PPPOE_CODE_PADI	net/lwip/include/netif/ppp_oe.h	128;"	d
PPPOE_CODE_PADO	net/lwip/include/netif/ppp_oe.h	129;"	d
PPPOE_CODE_PADR	net/lwip/include/netif/ppp_oe.h	130;"	d
PPPOE_CODE_PADS	net/lwip/include/netif/ppp_oe.h	131;"	d
PPPOE_CODE_PADT	net/lwip/include/netif/ppp_oe.h	132;"	d
PPPOE_DISC_MAXPADI	net/lwip/netif/ppp/ppp_oe.c	183;"	d	file:
PPPOE_DISC_MAXPADR	net/lwip/netif/ppp/ppp_oe.c	184;"	d	file:
PPPOE_DISC_TIMEOUT	net/lwip/netif/ppp/ppp_oe.c	181;"	d	file:
PPPOE_HEADERLEN	net/lwip/include/netif/ppp_oe.h	114;"	d
PPPOE_MAXMTU	net/lwip/include/netif/ppp_oe.h	139;"	d
PPPOE_MAXMTU	net/lwip/netif/ppp/lcp.c	72;"	d	file:
PPPOE_SLOW_RETRY	net/lwip/netif/ppp/ppp_oe.c	182;"	d	file:
PPPOE_STATE_CLOSING	net/lwip/include/netif/ppp_oe.h	110;"	d
PPPOE_STATE_INITIAL	net/lwip/include/netif/ppp_oe.h	106;"	d
PPPOE_STATE_PADI_SENT	net/lwip/include/netif/ppp_oe.h	107;"	d
PPPOE_STATE_PADO_SENT	net/lwip/include/netif/ppp_oe.h	112;"	d
PPPOE_STATE_PADR_SENT	net/lwip/include/netif/ppp_oe.h	108;"	d
PPPOE_STATE_SESSION	net/lwip/include/netif/ppp_oe.h	109;"	d
PPPOE_SUPPORT	net/lwip/include/lwip/opt.h	1258;"	d
PPPOE_TAG_ACCOOKIE	net/lwip/include/netif/ppp_oe.h	121;"	d
PPPOE_TAG_ACNAME	net/lwip/include/netif/ppp_oe.h	119;"	d
PPPOE_TAG_ACSYS_ERR	net/lwip/include/netif/ppp_oe.h	125;"	d
PPPOE_TAG_EOL	net/lwip/include/netif/ppp_oe.h	117;"	d
PPPOE_TAG_GENERIC_ERR	net/lwip/include/netif/ppp_oe.h	126;"	d
PPPOE_TAG_HUNIQUE	net/lwip/include/netif/ppp_oe.h	120;"	d
PPPOE_TAG_RELAYSID	net/lwip/include/netif/ppp_oe.h	123;"	d
PPPOE_TAG_SNAME	net/lwip/include/netif/ppp_oe.h	118;"	d
PPPOE_TAG_SNAME_ERR	net/lwip/include/netif/ppp_oe.h	124;"	d
PPPOE_TAG_VENDOR	net/lwip/include/netif/ppp_oe.h	122;"	d
PPPOE_VERTYPE	net/lwip/include/netif/ppp_oe.h	115;"	d
PPPOS_SUPPORT	net/lwip/include/lwip/opt.h	1265;"	d
PPP_ADDRESS	net/lwip/netif/ppp/ppp.c	119;"	d	file:
PPP_ALLSTATIONS	net/lwip/netif/ppp/ppp.h	125;"	d
PPP_AT	net/lwip/netif/ppp/ppp.h	135;"	d
PPP_ATCP	net/lwip/netif/ppp/ppp.h	140;"	d
PPP_CBCP	net/lwip/netif/ppp/ppp.h	146;"	d
PPP_CCP	net/lwip/netif/ppp/ppp.h	141;"	d
PPP_CHAP	net/lwip/netif/ppp/ppp.h	145;"	d
PPP_COMP	net/lwip/netif/ppp/ppp.h	138;"	d
PPP_CONTROL	net/lwip/netif/ppp/ppp.c	120;"	d	file:
PPP_DEBUG	net/lwip/include/lwip/opt.h	1659;"	d
PPP_DEFMRU	net/lwip/include/lwip/opt.h	1393;"	d
PPP_ESCAPE	net/lwip/netif/ppp/ppp.h	128;"	d
PPP_FCS	net/lwip/netif/ppp/ppp.h	153;"	d
PPP_FCSLEN	net/lwip/netif/ppp/ppp.h	119;"	d
PPP_FLAG	net/lwip/netif/ppp/ppp.h	127;"	d
PPP_GOODFCS	net/lwip/netif/ppp/ppp.h	152;"	d
PPP_H	net/lwip/netif/ppp/ppp.h	35;"	d
PPP_HDRLEN	net/lwip/netif/ppp/ppp.h	118;"	d
PPP_INITFCS	net/lwip/netif/ppp/ppp.h	151;"	d
PPP_IP	net/lwip/netif/ppp/ppp.h	134;"	d
PPP_IPCP	net/lwip/netif/ppp/ppp.h	139;"	d
PPP_LCP	net/lwip/netif/ppp/ppp.h	142;"	d
PPP_LQR	net/lwip/netif/ppp/ppp.h	144;"	d
PPP_MAXIDLEFLAG	net/lwip/include/lwip/opt.h	1373;"	d
PPP_MAXMRU	net/lwip/include/lwip/opt.h	1391;"	d
PPP_MAXMTU	net/lwip/include/lwip/opt.h	1387;"	d
PPP_MINMRU	net/lwip/include/lwip/opt.h	1395;"	d
PPP_MINMTU	net/lwip/include/lwip/opt.h	1389;"	d
PPP_MRU	net/lwip/include/lwip/opt.h	1390;"	d
PPP_MTU	net/lwip/include/lwip/opt.h	1384;"	d
PPP_OE_H	net/lwip/include/netif/ppp_oe.h	71;"	d
PPP_PAP	net/lwip/netif/ppp/ppp.h	143;"	d
PPP_PROTOCOL	net/lwip/netif/ppp/ppp.c	121;"	d	file:
PPP_SUPPORT	net/lwip/include/lwip/opt.h	1251;"	d
PPP_THREAD_NAME	net/lwip/include/lwip/opt.h	964;"	d
PPP_THREAD_PRIO	net/lwip/include/lwip/opt.h	982;"	d
PPP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	973;"	d
PPP_TRANS	net/lwip/netif/ppp/ppp.h	129;"	d
PPP_UI	net/lwip/netif/ppp/ppp.h	126;"	d
PPP_VJC_COMP	net/lwip/netif/ppp/ppp.h	136;"	d
PPP_VJC_UNCOMP	net/lwip/netif/ppp/ppp.h	137;"	d
PRINTD	inc/lib.h	141;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	215;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	217;"	d
PROBE_MAX	net/lwip/include/ipv4/lwip/autoip.h	62;"	d
PROBE_MIN	net/lwip/include/ipv4/lwip/autoip.h	61;"	d
PROBE_NUM	net/lwip/include/ipv4/lwip/autoip.h	63;"	d
PROBE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	60;"	d
PROTO_NAME	net/lwip/netif/ppp/fsm.c	106;"	d	file:
PROTREJ	net/lwip/netif/ppp/lcp.h	78;"	d
PTE_A	inc/mmu.h	65;"	d
PTE_ADDR	inc/mmu.h	78;"	d
PTE_AVAIL	inc/mmu.h	72;"	d
PTE_CONTINUED	lib/malloc.c	23;"	d	file:
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	66;"	d
PTE_MBZ	inc/mmu.h	68;"	d
PTE_P	inc/mmu.h	60;"	d
PTE_PCD	inc/mmu.h	64;"	d
PTE_PS	inc/mmu.h	67;"	d
PTE_PWT	inc/mmu.h	63;"	d
PTE_SHARE	inc/lib.h	80;"	d
PTE_U	inc/mmu.h	62;"	d
PTE_USER	inc/mmu.h	75;"	d
PTE_W	inc/mmu.h	61;"	d
PTSHIFT	inc/mmu.h	54;"	d
PTSIZE	inc/mmu.h	53;"	d
PTX	inc/mmu.h	38;"	d
PTXSHIFT	inc/mmu.h	56;"	d
PUTCHAR	net/lwip/netif/ppp/ppp.h	179;"	d
PUTLONG	net/lwip/netif/ppp/ppp.h	199;"	d
PUTSHORT	net/lwip/netif/ppp/ppp.h	188;"	d
Page	inc/memlayout.h	/^struct Page {$/;"	s
Page_LIST_entry_t	inc/memlayout.h	/^typedef LIST_ENTRY(Page) Page_LIST_entry_t;$/;"	t
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMUGDB	GNUmakefile	/^QEMUGDB = $(shell if $(QEMU) -nographic -help | grep -q '^-gdb'; \\$/;"	m
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -no-kvm -hda $(OBJDIR)\/kern\/kernel.img -hdb $(OBJDIR)\/fs\/fs.img -serial mon:stdio \\$/;"	m
QUEUE_SIZE	net/ns.h	11;"	d
RANDM_H	net/lwip/netif/ppp/randm.h	35;"	d
RANDPOOLSZ	net/lwip/netif/ppp/randm.c	46;"	d	file:
RATE_LIMIT_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	68;"	d
RAW_DEBUG	net/lwip/include/lwip/opt.h	1553;"	d
RAW_TTL	net/lwip/include/lwip/opt.h	471;"	d
REJCIADDR	net/lwip/netif/ppp/ipcp.c	793;"	d	file:
REJCICBCP	net/lwip/netif/ppp/lcp.c	1138;"	d	file:
REJCICHAP	net/lwip/netif/ppp/lcp.c	1090;"	d	file:
REJCIDNS	net/lwip/netif/ppp/ipcp.c	843;"	d	file:
REJCILONG	net/lwip/netif/ppp/lcp.c	1107;"	d	file:
REJCILQR	net/lwip/netif/ppp/lcp.c	1122;"	d	file:
REJCISHORT	net/lwip/netif/ppp/lcp.c	1075;"	d	file:
REJCIVJ	net/lwip/netif/ppp/ipcp.c	818;"	d	file:
REJCIVOID	net/lwip/netif/ppp/lcp.c	1065;"	d	file:
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
REQVA	lib/nsipc.c	8;"	d	file:
REQVA	net/ns.h	12;"	d
RESERVED	kern/e100.h	24;"	d
RFDNUM	kern/e100.h	13;"	d
RFD_BYTE_COUNT	kern/e100.h	22;"	d
RFD_EL	kern/e100.h	33;"	d
RFD_HEADER	kern/e100.h	26;"	d
RFD_I	kern/e100.h	27;"	d
RFD_S	kern/e100.h	25;"	d
RFD_SF	kern/e100.h	28;"	d
RFD_SIZE	kern/e100.h	23;"	d
RFD_STATUS_C	kern/e100.h	29;"	d
RFD_STATUS_OK	kern/e100.h	30;"	d
RFD_STATUS_U	kern/e100.h	31;"	d
ROTATE_LEFT	net/lwip/netif/ppp/md5.c	77;"	d	file:
ROUNDDOWN	inc/types.h	57;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	63;"	d
ROUTER_ALERT	net/lwip/include/ipv4/lwip/igmp.h	55;"	d
ROUTER_ALERTLEN	net/lwip/include/ipv4/lwip/igmp.h	56;"	d
RU_IDLE	kern/e100.h	34;"	d
RU_NO_RESOURCES	kern/e100.h	36;"	d
RU_READY	kern/e100.h	37;"	d
RU_RESUME	kern/e100.h	39;"	d
RU_START	kern/e100.h	40;"	d
RU_STATUS_MASK	kern/e100.h	38;"	d
RU_SUSPEND	kern/e100.h	35;"	d
S11	net/lwip/netif/ppp/md5.c	223;"	d	file:
S12	net/lwip/netif/ppp/md5.c	224;"	d	file:
S13	net/lwip/netif/ppp/md5.c	225;"	d	file:
S14	net/lwip/netif/ppp/md5.c	226;"	d	file:
S16_F	net/lwip/jos/arch/cc.h	26;"	d
S21	net/lwip/netif/ppp/md5.c	245;"	d	file:
S22	net/lwip/netif/ppp/md5.c	246;"	d	file:
S23	net/lwip/netif/ppp/md5.c	247;"	d	file:
S24	net/lwip/netif/ppp/md5.c	248;"	d	file:
S31	net/lwip/netif/ppp/md5.c	267;"	d	file:
S32	net/lwip/netif/ppp/md5.c	268;"	d	file:
S32_F	net/lwip/jos/arch/cc.h	30;"	d
S33	net/lwip/netif/ppp/md5.c	269;"	d	file:
S34	net/lwip/netif/ppp/md5.c	270;"	d	file:
S41	net/lwip/netif/ppp/md5.c	289;"	d	file:
S42	net/lwip/netif/ppp/md5.c	290;"	d	file:
S43	net/lwip/netif/ppp/md5.c	291;"	d	file:
S44	net/lwip/netif/ppp/md5.c	292;"	d	file:
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	224;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	144;"	d
SEG	inc/mmu.h	174;"	d
SEG16	inc/mmu.h	178;"	d
SEG_FAULT	inc/mmu.h	172;"	d
SEG_NULL	inc/mmu.h	141;"	d
SEG_NULL	inc/mmu.h	170;"	d
SETCALLGATE	inc/mmu.h	298;"	d
SETGATE	inc/mmu.h	284;"	d
SHIFT	kern/console.c	218;"	d	file:
SIOCATMARK	net/lwip/include/lwip/sockets.h	263;"	d
SIOCGHIWAT	net/lwip/include/lwip/sockets.h	260;"	d
SIOCGLOWAT	net/lwip/include/lwip/sockets.h	262;"	d
SIOCSHIWAT	net/lwip/include/lwip/sockets.h	259;"	d
SIOCSLOWAT	net/lwip/include/lwip/sockets.h	261;"	d
SIZEOF_STRUCT_MEM	net/lwip/core/mem.c	169;"	d	file:
SIZEOF_STRUCT_PBUF	net/lwip/core/pbuf.c	76;"	d	file:
SIZEOF_STRUCT_TRAPFRAME	inc/trap.h	91;"	d
SLIPIF_THREAD_NAME	net/lwip/include/lwip/opt.h	939;"	d
SLIPIF_THREAD_PRIO	net/lwip/include/lwip/opt.h	957;"	d
SLIPIF_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	948;"	d
SLIP_DEBUG	net/lwip/include/lwip/opt.h	1666;"	d
SLIP_END	net/lwip/netif/slipif.c	57;"	d	file:
SLIP_ESC	net/lwip/netif/slipif.c	58;"	d	file:
SLIP_ESC_END	net/lwip/netif/slipif.c	59;"	d	file:
SLIP_ESC_ESC	net/lwip/netif/slipif.c	60;"	d	file:
SMEMCPY	net/lwip/include/lwip/opt.h	84;"	d
SNMP_ASN1_APPLIC	net/lwip/include/lwip/snmp_asn1.h	48;"	d
SNMP_ASN1_CONSTR	net/lwip/include/lwip/snmp_asn1.h	51;"	d
SNMP_ASN1_CONTXT	net/lwip/include/lwip/snmp_asn1.h	49;"	d
SNMP_ASN1_COUNTER	net/lwip/include/lwip/snmp_asn1.h	63;"	d
SNMP_ASN1_GAUGE	net/lwip/include/lwip/snmp_asn1.h	64;"	d
SNMP_ASN1_INTEG	net/lwip/include/lwip/snmp_asn1.h	55;"	d
SNMP_ASN1_IPADDR	net/lwip/include/lwip/snmp_asn1.h	62;"	d
SNMP_ASN1_NUL	net/lwip/include/lwip/snmp_asn1.h	57;"	d
SNMP_ASN1_OBJ_ID	net/lwip/include/lwip/snmp_asn1.h	58;"	d
SNMP_ASN1_OC_STR	net/lwip/include/lwip/snmp_asn1.h	56;"	d
SNMP_ASN1_OPAQUE	net/lwip/include/lwip/snmp_asn1.h	66;"	d
SNMP_ASN1_PDU_GET_NEXT_REQ	net/lwip/include/lwip/snmp_asn1.h	70;"	d
SNMP_ASN1_PDU_GET_REQ	net/lwip/include/lwip/snmp_asn1.h	69;"	d
SNMP_ASN1_PDU_GET_RESP	net/lwip/include/lwip/snmp_asn1.h	71;"	d
SNMP_ASN1_PDU_SET_REQ	net/lwip/include/lwip/snmp_asn1.h	72;"	d
SNMP_ASN1_PDU_TRAP	net/lwip/include/lwip/snmp_asn1.h	73;"	d
SNMP_ASN1_PRIMIT	net/lwip/include/lwip/snmp_asn1.h	52;"	d
SNMP_ASN1_SEQ	net/lwip/include/lwip/snmp_asn1.h	59;"	d
SNMP_ASN1_TIMETICKS	net/lwip/include/lwip/snmp_asn1.h	65;"	d
SNMP_ASN1_UNIV	net/lwip/include/lwip/snmp_asn1.h	47;"	d
SNMP_COMMUNITY_STR_LEN	net/lwip/include/lwip/snmp_msg.h	214;"	d
SNMP_CONCURRENT_REQUESTS	net/lwip/include/lwip/opt.h	531;"	d
SNMP_ENTERPRISE_ID	net/lwip/core/snmp/mib2.c	65;"	d	file:
SNMP_ES_BADVALUE	net/lwip/include/lwip/snmp_msg.h	64;"	d
SNMP_ES_GENERROR	net/lwip/include/lwip/snmp_msg.h	66;"	d
SNMP_ES_NOERROR	net/lwip/include/lwip/snmp_msg.h	61;"	d
SNMP_ES_NOSUCHNAME	net/lwip/include/lwip/snmp_msg.h	63;"	d
SNMP_ES_READONLY	net/lwip/include/lwip/snmp_msg.h	65;"	d
SNMP_ES_TOOBIG	net/lwip/include/lwip/snmp_msg.h	62;"	d
SNMP_GENTRAP_AUTHFAIL	net/lwip/include/lwip/snmp_msg.h	70;"	d
SNMP_GENTRAP_COLDSTART	net/lwip/include/lwip/snmp_msg.h	68;"	d
SNMP_GENTRAP_ENTERPRISESPC	net/lwip/include/lwip/snmp_msg.h	71;"	d
SNMP_GENTRAP_WARMSTART	net/lwip/include/lwip/snmp_msg.h	69;"	d
SNMP_GET_SYSUPTIME	net/lwip/core/snmp/mib2.c	74;"	d	file:
SNMP_IN_PORT	net/lwip/include/lwip/snmp_msg.h	53;"	d
SNMP_MIB_DEBUG	net/lwip/include/lwip/opt.h	1694;"	d
SNMP_MSG_DEBUG	net/lwip/include/lwip/opt.h	1687;"	d
SNMP_MSG_EMPTY	net/lwip/include/lwip/snmp_msg.h	195;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	208;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	211;"	d
SNMP_MSG_EXTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	209;"	d
SNMP_MSG_EXTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	210;"	d
SNMP_MSG_EXTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	212;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	200;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	203;"	d
SNMP_MSG_INTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	201;"	d
SNMP_MSG_INTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	202;"	d
SNMP_MSG_INTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	204;"	d
SNMP_MSG_SEARCH_OBJ	net/lwip/include/lwip/snmp_msg.h	197;"	d
SNMP_PRIVATE_MIB	net/lwip/include/lwip/opt.h	546;"	d
SNMP_SAFE_REQUESTS	net/lwip/include/lwip/opt.h	555;"	d
SNMP_SYSOBJID	net/lwip/core/snmp/mib2.c	67;"	d	file:
SNMP_SYSOBJID_LEN	net/lwip/core/snmp/mib2.c	66;"	d	file:
SNMP_SYSSERVICES	net/lwip/core/snmp/mib2.c	70;"	d	file:
SNMP_SYSUPTIME_INTERVAL	net/lwip/include/lwip/snmp.h	85;"	d
SNMP_TRAP_DESTINATIONS	net/lwip/include/lwip/opt.h	539;"	d
SNMP_TRAP_PORT	net/lwip/include/lwip/snmp_msg.h	58;"	d
SOCKETS_DEBUG	net/lwip/include/lwip/opt.h	1511;"	d
SOCK_DGRAM	net/lwip/include/lwip/sockets.h	69;"	d
SOCK_RAW	net/lwip/include/lwip/sockets.h	70;"	d
SOCK_STREAM	net/lwip/include/lwip/sockets.h	68;"	d
SOF_ACCEPTCONN	net/lwip/include/ipv4/lwip/ip.h	102;"	d
SOF_BROADCAST	net/lwip/include/ipv4/lwip/ip.h	106;"	d
SOF_DEBUG	net/lwip/include/ipv4/lwip/ip.h	101;"	d
SOF_DONTROUTE	net/lwip/include/ipv4/lwip/ip.h	105;"	d
SOF_KEEPALIVE	net/lwip/include/ipv4/lwip/ip.h	104;"	d
SOF_LINGER	net/lwip/include/ipv4/lwip/ip.h	108;"	d
SOF_OOBINLINE	net/lwip/include/ipv4/lwip/ip.h	109;"	d
SOF_REUSEADDR	net/lwip/include/ipv4/lwip/ip.h	103;"	d
SOF_REUSEPORT	net/lwip/include/ipv4/lwip/ip.h	110;"	d
SOF_USELOOPBACK	net/lwip/include/ipv4/lwip/ip.h	107;"	d
SOL_SOCKET	net/lwip/include/lwip/sockets.h	114;"	d
SO_ACCEPTCONN	net/lwip/include/lwip/sockets.h	76;"	d
SO_BROADCAST	net/lwip/include/lwip/sockets.h	80;"	d
SO_CONTIMEO	net/lwip/include/lwip/sockets.h	99;"	d
SO_DEBUG	net/lwip/include/lwip/sockets.h	75;"	d
SO_DONTLINGER	net/lwip/include/lwip/sockets.h	86;"	d
SO_DONTROUTE	net/lwip/include/lwip/sockets.h	79;"	d
SO_ERROR	net/lwip/include/lwip/sockets.h	97;"	d
SO_KEEPALIVE	net/lwip/include/lwip/sockets.h	78;"	d
SO_LINGER	net/lwip/include/lwip/sockets.h	82;"	d
SO_NO_CHECK	net/lwip/include/lwip/sockets.h	100;"	d
SO_OOBINLINE	net/lwip/include/lwip/sockets.h	83;"	d
SO_RCVBUF	net/lwip/include/lwip/sockets.h	92;"	d
SO_RCVLOWAT	net/lwip/include/lwip/sockets.h	94;"	d
SO_RCVTIMEO	net/lwip/include/lwip/sockets.h	96;"	d
SO_REUSE	net/lwip/include/lwip/opt.h	1122;"	d
SO_REUSEADDR	net/lwip/include/lwip/sockets.h	77;"	d
SO_REUSEPORT	net/lwip/include/lwip/sockets.h	84;"	d
SO_SNDBUF	net/lwip/include/lwip/sockets.h	91;"	d
SO_SNDLOWAT	net/lwip/include/lwip/sockets.h	93;"	d
SO_SNDTIMEO	net/lwip/include/lwip/sockets.h	95;"	d
SO_TYPE	net/lwip/include/lwip/sockets.h	98;"	d
SO_USELOOPBACK	net/lwip/include/lwip/sockets.h	81;"	d
SPECIALS_MASK	net/lwip/netif/ppp/vj.h	93;"	d
SPECIAL_D	net/lwip/netif/ppp/vj.h	92;"	d
SPECIAL_I	net/lwip/netif/ppp/vj.h	91;"	d
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STATS_DEC	net/lwip/include/lwip/stats.h	145;"	d
STATS_DEC	net/lwip/include/lwip/stats.h	149;"	d
STATS_INC	net/lwip/include/lwip/stats.h	144;"	d
STATS_INC	net/lwip/include/lwip/stats.h	148;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	51;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	54;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	52;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	55;"	d
STA_A	inc/mmu.h	191;"	d
STA_C	inc/mmu.h	188;"	d
STA_E	inc/mmu.h	187;"	d
STA_R	inc/mmu.h	190;"	d
STA_W	inc/mmu.h	189;"	d
STA_X	inc/mmu.h	186;"	d
STSOFST	kern/e100.h	19;"	d
STS_CG16	inc/mmu.h	197;"	d
STS_CG32	inc/mmu.h	203;"	d
STS_IG16	inc/mmu.h	199;"	d
STS_IG32	inc/mmu.h	204;"	d
STS_LDT	inc/mmu.h	195;"	d
STS_T16A	inc/mmu.h	194;"	d
STS_T16B	inc/mmu.h	196;"	d
STS_T32A	inc/mmu.h	201;"	d
STS_T32B	inc/mmu.h	202;"	d
STS_TG	inc/mmu.h	198;"	d
STS_TG16	inc/mmu.h	200;"	d
STS_TG32	inc/mmu.h	205;"	d
SWAP_BYTES_IN_WORD	net/lwip/core/ipv4/inet_chksum.c	67;"	d	file:
SYN_RCVD	net/lwip/include/lwip/tcp.h	/^  SYN_RCVD    = 3,$/;"	e	enum:tcp_state
SYN_SENT	net/lwip/include/lwip/tcp.h	/^  SYN_SENT    = 2,$/;"	e	enum:tcp_state
SYS_ARCH_DEC	net/lwip/include/lwip/sys.h	215;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	167;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	192;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/jos/arch/sys_arch.h	17;"	d
SYS_ARCH_GET	net/lwip/include/lwip/sys.h	224;"	d
SYS_ARCH_INC	net/lwip/include/lwip/sys.h	206;"	d
SYS_ARCH_NOWAIT	net/lwip/jos/arch/sys_arch.h	21;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	177;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	193;"	d
SYS_ARCH_PROTECT	net/lwip/jos/arch/sys_arch.h	18;"	d
SYS_ARCH_SET	net/lwip/include/lwip/sys.h	233;"	d
SYS_ARCH_TIMEOUT	net/lwip/include/lwip/sys.h	71;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	186;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	194;"	d
SYS_ARCH_UNPROTECT	net/lwip/jos/arch/sys_arch.h	19;"	d
SYS_DEBUG	net/lwip/include/lwip/opt.h	1574;"	d
SYS_LIGHTWEIGHT_PROT	net/lwip/include/lwip/opt.h	60;"	d
SYS_MBOX_EMPTY	net/lwip/include/lwip/sys.h	76;"	d
SYS_MBOX_NULL	net/lwip/jos/arch/sys_arch.h	10;"	d
SYS_SEM_NULL	net/lwip/jos/arch/sys_arch.h	11;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1223;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1237;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	254;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	258;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	255;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	259;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	253;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	257;"	d
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon3
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon3
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon3
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon3
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon3
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon3
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon3
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon3
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon3
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon3
SYS_ns_recv	inc/syscall.h	/^	SYS_ns_recv,$/;"	e	enum:__anon3
SYS_ns_send	inc/syscall.h	/^	SYS_ns_send,$/;"	e	enum:__anon3
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon3
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon3
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon3
SYS_time_msec	inc/syscall.h	/^	SYS_time_msec,$/;"	e	enum:__anon3
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon3
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
StdText	net/lwip/netif/ppp/chpms.c	/^static u_char *StdText = (u_char *)"KGS!@#$%"; \/* key from rasapi32.dll *\/$/;"	v	file:
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TBD	kern/e100.h	11;"	d
TBD_ARRAY_ADDR	kern/e100.h	8;"	d
TCB_BYTE_COUNT	kern/e100.h	9;"	d
TCPH_FLAGS	net/lwip/include/lwip/tcp.h	230;"	d
TCPH_FLAGS_SET	net/lwip/include/lwip/tcp.h	234;"	d
TCPH_HDRLEN	net/lwip/include/lwip/tcp.h	229;"	d
TCPH_HDRLEN_SET	net/lwip/include/lwip/tcp.h	233;"	d
TCPH_OFFSET	net/lwip/include/lwip/tcp.h	228;"	d
TCPH_OFFSET_SET	net/lwip/include/lwip/tcp.h	232;"	d
TCPH_SET_FLAG	net/lwip/include/lwip/tcp.h	235;"	d
TCPH_UNSET_FLAG	net/lwip/include/lwip/tcp.h	236;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	54;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	61;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	55;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	62;"	d
TCPIP_DEBUG	net/lwip/include/lwip/opt.h	1652;"	d
TCPIP_MBOX_SIZE	net/lwip/include/lwip/opt.h	932;"	d
TCPIP_MSG_API	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_API,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_CALLBACK	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_CALLBACK,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_INPKT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_INPKT,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_NETIFAPI	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_NETIFAPI,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_TIMEOUT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_TIMEOUT$/;"	e	enum:tcpip_msg_type
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	56;"	d
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	63;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	57;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	64;"	d
TCPIP_THREAD_NAME	net/lwip/include/lwip/opt.h	905;"	d
TCPIP_THREAD_PRIO	net/lwip/include/lwip/opt.h	923;"	d
TCPIP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	914;"	d
TCP_ACK	net/lwip/include/lwip/tcp.h	160;"	d
TCP_BUILD_MSS_OPTION	net/lwip/include/lwip/tcp.h	142;"	d
TCP_CALCULATE_EFF_SEND_MSS	net/lwip/include/lwip/opt.h	709;"	d
TCP_CWND_DEBUG	net/lwip/include/lwip/opt.h	1610;"	d
TCP_CWR	net/lwip/include/lwip/tcp.h	163;"	d
TCP_DEBUG	net/lwip/include/lwip/opt.h	1581;"	d
TCP_DEFAULT_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	750;"	d
TCP_ECE	net/lwip/include/lwip/tcp.h	162;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	456;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	469;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	462;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	480;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	466;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	486;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	464;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	483;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	460;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	475;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	458;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	472;"	d
TCP_FAST_INTERVAL	net/lwip/include/lwip/tcp.h	175;"	d
TCP_FIN	net/lwip/include/lwip/tcp.h	156;"	d
TCP_FIN_WAIT_TIMEOUT	net/lwip/include/lwip/tcp.h	182;"	d
TCP_FLAGS	net/lwip/include/lwip/tcp.h	165;"	d
TCP_FR_DEBUG	net/lwip/include/lwip/opt.h	1595;"	d
TCP_HLEN	net/lwip/include/lwip/tcp.h	168;"	d
TCP_INPUT_DEBUG	net/lwip/include/lwip/opt.h	1588;"	d
TCP_KEEPALIVE	net/lwip/include/lwip/sockets.h	149;"	d
TCP_KEEPCNT	net/lwip/include/lwip/sockets.h	152;"	d
TCP_KEEPCNT_DEFAULT	net/lwip/include/lwip/tcp.h	201;"	d
TCP_KEEPIDLE	net/lwip/include/lwip/sockets.h	150;"	d
TCP_KEEPIDLE_DEFAULT	net/lwip/include/lwip/tcp.h	193;"	d
TCP_KEEPINTVL	net/lwip/include/lwip/sockets.h	151;"	d
TCP_KEEPINTVL_DEFAULT	net/lwip/include/lwip/tcp.h	197;"	d
TCP_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	741;"	d
TCP_LOCAL_PORT_RANGE_END	net/lwip/core/tcp.c	445;"	d	file:
TCP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define TCP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
TCP_LOCAL_PORT_RANGE_START	net/lwip/core/tcp.c	444;"	d	file:
TCP_MAXIDLE	net/lwip/include/lwip/tcp.h	204;"	d
TCP_MAXRTX	net/lwip/include/lwip/opt.h	671;"	d
TCP_MSL	net/lwip/include/lwip/tcp.h	188;"	d
TCP_MSS	net/lwip/include/lwip/opt.h	697;"	d
TCP_MSS	net/lwip/jos/lwipopts.h	40;"	d
TCP_NODELAY	net/lwip/include/lwip/sockets.h	148;"	d
TCP_OOSEQ_TIMEOUT	net/lwip/include/lwip/tcp.h	185;"	d
TCP_OUTPUT_DEBUG	net/lwip/include/lwip/opt.h	1624;"	d
TCP_PCB_COMMON	net/lwip/include/lwip/tcp.h	264;"	d
TCP_PRIO_MAX	net/lwip/include/lwip/tcp.h	113;"	d
TCP_PRIO_MIN	net/lwip/include/lwip/tcp.h	111;"	d
TCP_PRIO_NORMAL	net/lwip/include/lwip/tcp.h	112;"	d
TCP_PSH	net/lwip/include/lwip/tcp.h	159;"	d
TCP_PUSH_BIT	net/lwip/netif/ppp/vj.h	95;"	d
TCP_QLEN_DEBUG	net/lwip/include/lwip/opt.h	1638;"	d
TCP_QUEUE_OOSEQ	net/lwip/include/lwip/opt.h	686;"	d
TCP_REG	net/lwip/include/lwip/tcp.h	617;"	d
TCP_RMV	net/lwip/include/lwip/tcp.h	622;"	d
TCP_RST	net/lwip/include/lwip/tcp.h	158;"	d
TCP_RST_DEBUG	net/lwip/include/lwip/opt.h	1631;"	d
TCP_RTO_DEBUG	net/lwip/include/lwip/opt.h	1603;"	d
TCP_SEQ_BETWEEN	net/lwip/include/lwip/tcp.h	155;"	d
TCP_SEQ_GEQ	net/lwip/include/lwip/tcp.h	150;"	d
TCP_SEQ_GT	net/lwip/include/lwip/tcp.h	149;"	d
TCP_SEQ_LEQ	net/lwip/include/lwip/tcp.h	148;"	d
TCP_SEQ_LT	net/lwip/include/lwip/tcp.h	147;"	d
TCP_SLOW_INTERVAL	net/lwip/include/lwip/tcp.h	179;"	d
TCP_SNDLOWAT	net/lwip/include/lwip/opt.h	734;"	d
TCP_SNDQUEUELEN_OVERFLOW	net/lwip/include/lwip/tcp.h	333;"	d
TCP_SND_BUF	net/lwip/include/lwip/opt.h	717;"	d
TCP_SND_BUF	net/lwip/jos/lwipopts.h	42;"	d
TCP_SND_QUEUELEN	net/lwip/include/lwip/opt.h	725;"	d
TCP_SND_QUEUELEN	net/lwip/jos/lwipopts.h	45;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1202;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1234;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	154;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	157;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	153;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	156;"	d
TCP_SYN	net/lwip/include/lwip/tcp.h	157;"	d
TCP_SYNMAXRTX	net/lwip/include/lwip/opt.h	678;"	d
TCP_SYN_RCVD_TIMEOUT	net/lwip/include/lwip/tcp.h	183;"	d
TCP_TCPLEN	net/lwip/include/lwip/tcp.h	238;"	d
TCP_TMR_INTERVAL	net/lwip/include/lwip/tcp.h	171;"	d
TCP_TTL	net/lwip/include/lwip/opt.h	657;"	d
TCP_URG	net/lwip/include/lwip/tcp.h	161;"	d
TCP_WND	net/lwip/include/lwip/opt.h	664;"	d
TCP_WND	net/lwip/jos/lwipopts.h	41;"	d
TCP_WND_DEBUG	net/lwip/include/lwip/opt.h	1617;"	d
TCP_WRITE_FLAG_COPY	net/lwip/include/lwip/tcp.h	103;"	d
TCP_WRITE_FLAG_MORE	net/lwip/include/lwip/tcp.h	104;"	d
TERMACK	net/lwip/netif/ppp/fsm.h	74;"	d
TERMREQ	net/lwip/netif/ppp/fsm.h	73;"	d
TESTOUTPUT_COUNT	net/testoutput.c	4;"	d	file:
TF_ACK_DELAY	net/lwip/include/lwip/tcp.h	283;"	d
TF_ACK_NOW	net/lwip/include/lwip/tcp.h	284;"	d
TF_CLOSED	net/lwip/include/lwip/tcp.h	258;"	d
TF_FIN	net/lwip/include/lwip/tcp.h	286;"	d
TF_GOT_FIN	net/lwip/include/lwip/tcp.h	259;"	d
TF_INFR	net/lwip/include/lwip/tcp.h	285;"	d
TF_NAGLEMEMERR	net/lwip/include/lwip/tcp.h	288;"	d
TF_NODELAY	net/lwip/include/lwip/tcp.h	287;"	d
TF_RESET	net/lwip/include/lwip/tcp.h	257;"	d
THREAD_NUM_ONHALT	net/lwip/jos/arch/threadq.h	7;"	d
THRS	kern/e100.h	10;"	d
TIMEOUT	net/lwip/netif/ppp/ppp.h	96;"	d
TIMER_16BIT	inc/timerreg.h	64;"	d
TIMER_BCD	inc/timerreg.h	65;"	d
TIMER_CNTR0	inc/timerreg.h	48;"	d
TIMER_CNTR1	inc/timerreg.h	49;"	d
TIMER_CNTR2	inc/timerreg.h	50;"	d
TIMER_DIV	inc/timerreg.h	43;"	d
TIMER_FREQ	inc/timerreg.h	42;"	d
TIMER_HWSTROBE	inc/timerreg.h	60;"	d
TIMER_INTERVAL	net/ns.h	8;"	d
TIMER_INTTC	inc/timerreg.h	55;"	d
TIMER_LATCH	inc/timerreg.h	61;"	d
TIMER_LSB	inc/timerreg.h	62;"	d
TIMER_MODE	inc/timerreg.h	51;"	d
TIMER_MSB	inc/timerreg.h	63;"	d
TIMER_ONESHOT	inc/timerreg.h	56;"	d
TIMER_RATEGEN	inc/timerreg.h	57;"	d
TIMER_SEL0	inc/timerreg.h	52;"	d
TIMER_SEL1	inc/timerreg.h	53;"	d
TIMER_SEL2	inc/timerreg.h	54;"	d
TIMER_SQWAVE	inc/timerreg.h	58;"	d
TIMER_SWSTROBE	inc/timerreg.h	59;"	d
TIME_WAIT	net/lwip/include/lwip/tcp.h	/^  TIME_WAIT   = 10$/;"	e	enum:tcp_state
TOP	GNUmakefile	/^TOP = .$/;"	m
TRACELCP	net/lwip/netif/ppp/pppdebug.h	62;"	d
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
TRY_AGAIN	net/lwip/include/lwip/netdb.h	59;"	d
TYPE_COMPRESSED_TCP	net/lwip/netif/ppp/vj.h	79;"	d
TYPE_ERROR	net/lwip/netif/ppp/vj.h	80;"	d
TYPE_IP	net/lwip/netif/ppp/vj.h	77;"	d
TYPE_UNCOMPRESSED_TCP	net/lwip/netif/ppp/vj.h	78;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Transform	net/lwip/netif/ppp/md5.c	/^Transform (u32_t *buf, u32_t *in)$/;"	f	file:
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
U16_F	net/lwip/jos/arch/cc.h	27;"	d
U32_F	net/lwip/jos/arch/cc.h	31;"	d
UDPLITE_RECV_CSCOV	net/lwip/include/lwip/sockets.h	160;"	d
UDPLITE_SEND_CSCOV	net/lwip/include/lwip/sockets.h	159;"	d
UDP_DEBUG	net/lwip/include/lwip/opt.h	1645;"	d
UDP_FLAGS_CONNECTED	net/lwip/include/lwip/udp.h	68;"	d
UDP_FLAGS_NOCHKSUM	net/lwip/include/lwip/udp.h	66;"	d
UDP_FLAGS_UDPLITE	net/lwip/include/lwip/udp.h	67;"	d
UDP_HLEN	net/lwip/include/lwip/udp.h	48;"	d
UDP_LOCAL_PORT_RANGE_END	net/lwip/core/udp.c	608;"	d	file:
UDP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
UDP_LOCAL_PORT_RANGE_START	net/lwip/core/udp.c	607;"	d	file:
UDP_LOCAL_PORT_RANGE_START	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_START 4096$/;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1194;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1233;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	162;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	165;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	161;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	164;"	d
UDP_TTL	net/lwip/include/lwip/opt.h	638;"	d
UENVS	inc/memlayout.h	109;"	d
UL	net/lwip/netif/ppp/md5.c	103;"	d	file:
UL	net/lwip/netif/ppp/md5.c	106;"	d	file:
UL	net/lwip/netif/ppp/md5.c	108;"	d	file:
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	97;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	53;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	60;"	d
UNTIMEOUT	net/lwip/netif/ppp/ppp.h	97;"	d
UPAGES	inc/memlayout.h	107;"	d
UPAPCS_AUTHREQ	net/lwip/netif/ppp/pap.h	79;"	d
UPAPCS_BADAUTH	net/lwip/netif/ppp/pap.h	81;"	d
UPAPCS_CLOSED	net/lwip/netif/ppp/pap.h	77;"	d
UPAPCS_INITIAL	net/lwip/netif/ppp/pap.h	76;"	d
UPAPCS_OPEN	net/lwip/netif/ppp/pap.h	80;"	d
UPAPCS_PENDING	net/lwip/netif/ppp/pap.h	78;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	68;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	78;"	d
UPAPSS_BADAUTH	net/lwip/netif/ppp/pap.h	91;"	d
UPAPSS_CLOSED	net/lwip/netif/ppp/pap.h	87;"	d
UPAPSS_INITIAL	net/lwip/netif/ppp/pap.h	86;"	d
UPAPSS_LISTEN	net/lwip/netif/ppp/pap.h	89;"	d
UPAPSS_OPEN	net/lwip/netif/ppp/pap.h	90;"	d
UPAPSS_PENDING	net/lwip/netif/ppp/pap.h	88;"	d
UPAP_AUTHACK	net/lwip/netif/ppp/pap.h	70;"	d
UPAP_AUTHNAK	net/lwip/netif/ppp/pap.h	71;"	d
UPAP_AUTHREQ	net/lwip/netif/ppp/pap.h	69;"	d
UPAP_DEFREQTIME	net/lwip/include/lwip/opt.h	1350;"	d
UPAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1346;"	d
UPAP_HEADERLEN	net/lwip/netif/ppp/pap.h	63;"	d
USED	inc/lib.h	26;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USE_CRYPT	net/lwip/netif/ppp/chpms.c	67;"	d	file:
USTABDATA	inc/memlayout.h	132;"	d
USTACKTOP	inc/memlayout.h	121;"	d
UTEMP	inc/memlayout.h	127;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	124;"	d
UTOP	inc/memlayout.h	116;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	105;"	d
UXSTACKTOP	inc/memlayout.h	118;"	d
UseNT	net/lwip/netif/ppp/chpms.c	/^    u_char UseNT; \/* If 1, ignore the LANMan response field *\/$/;"	m	struct:__anon11	file:
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VERSION	user/httpd.c	6;"	d	file:
VJBSDHDR_H	net/lwip/netif/ppp/vjbsdhdr.h	2;"	d
VJF_TOSS	net/lwip/netif/ppp/vj.h	147;"	d
VJ_H	net/lwip/netif/ppp/vj.h	26;"	d
VJ_SUPPORT	net/lwip/include/lwip/opt.h	1316;"	d
VPD	inc/mmu.h	35;"	d
VPN	inc/mmu.h	31;"	d
VPT	inc/memlayout.h	94;"	d
WHITESPACE	kern/monitor.c	264;"	d	file:
X16_F	net/lwip/jos/arch/cc.h	28;"	d
X32_F	net/lwip/jos/arch/cc.h	32;"	d
_ALIGN_TEXT	net/lwip/jos/arch/longjmp.S	/^#define _ALIGN_TEXT .align 16, 0x90$/;"	d
_ARGSET	inc/args.h	76;"	d
_ARGUSED	inc/args.h	77;"	d
_CONSOLE_H_	kern/console.h	4;"	d
_DEV_PCI_PCIREG_H_	kern/pcireg.h	35;"	d
_IO	net/lwip/include/lwip/sockets.h	243;"	d
_IOR	net/lwip/include/lwip/sockets.h	245;"	d
_IOW	net/lwip/include/lwip/sockets.h	247;"	d
_SYS_QUEUE_H_	net/lwip/netif/ppp/ppp_oe.c	88;"	d	file:
__LWIP_API_H__	net/lwip/include/lwip/api.h	33;"	d
__LWIP_API_MSG_H__	net/lwip/include/lwip/api_msg.h	33;"	d
__LWIP_ARCH_H__	net/lwip/include/lwip/arch.h	33;"	d
__LWIP_AUTOIP_H__	net/lwip/include/ipv4/lwip/autoip.h	45;"	d
__LWIP_DEBUG_H__	net/lwip/include/lwip/debug.h	33;"	d
__LWIP_DEF_H__	net/lwip/include/lwip/def.h	33;"	d
__LWIP_DHCP_H__	net/lwip/include/lwip/dhcp.h	5;"	d
__LWIP_DNS_H__	net/lwip/include/lwip/dns.h	35;"	d
__LWIP_ERR_H__	net/lwip/include/lwip/err.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv4/lwip/icmp.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv6/lwip/icmp.h	33;"	d
__LWIP_IGMP_H__	net/lwip/include/ipv4/lwip/igmp.h	36;"	d
__LWIP_INET_CHKSUM_H__	net/lwip/include/ipv4/lwip/inet_chksum.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv4/lwip/inet.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv6/lwip/inet.h	33;"	d
__LWIP_INIT_H__	net/lwip/include/lwip/init.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv4/lwip/ip_addr.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv6/lwip/ip_addr.h	33;"	d
__LWIP_IP_FRAG_H__	net/lwip/include/ipv4/lwip/ip_frag.h	34;"	d
__LWIP_IP_H__	net/lwip/include/ipv4/lwip/ip.h	33;"	d
__LWIP_IP_H__	net/lwip/include/ipv6/lwip/ip.h	33;"	d
__LWIP_MEMP_H__	net/lwip/include/lwip/memp.h	34;"	d
__LWIP_MEM_H__	net/lwip/include/lwip/mem.h	33;"	d
__LWIP_NETBUF_H__	net/lwip/include/lwip/netbuf.h	33;"	d
__LWIP_NETIFAPI_H__	net/lwip/include/lwip/netifapi.h	29;"	d
__LWIP_NETIF_H__	net/lwip/include/lwip/netif.h	33;"	d
__LWIP_OPT_H__	net/lwip/include/lwip/opt.h	39;"	d
__LWIP_PBUF_H__	net/lwip/include/lwip/pbuf.h	34;"	d
__LWIP_RAW_H__	net/lwip/include/lwip/raw.h	33;"	d
__LWIP_SNMP_ASN1_H__	net/lwip/include/lwip/snmp_asn1.h	36;"	d
__LWIP_SNMP_H__	net/lwip/include/lwip/snmp.h	34;"	d
__LWIP_SNMP_MSG_H__	net/lwip/include/lwip/snmp_msg.h	36;"	d
__LWIP_SNMP_STRUCTS_H__	net/lwip/include/lwip/snmp_structs.h	38;"	d
__LWIP_SOCKETS_H__	net/lwip/include/lwip/sockets.h	35;"	d
__LWIP_STATS_H__	net/lwip/include/lwip/stats.h	33;"	d
__LWIP_SYS_H__	net/lwip/include/lwip/sys.h	33;"	d
__LWIP_TCPIP_H__	net/lwip/include/lwip/tcpip.h	33;"	d
__LWIP_TCP_H__	net/lwip/include/lwip/tcp.h	33;"	d
__LWIP_UDP_H__	net/lwip/include/lwip/udp.h	33;"	d
__NETIF_ETHARP_H__	net/lwip/include/netif/etharp.h	36;"	d
__NETIF_LOOPIF_H__	net/lwip/include/netif/loopif.h	33;"	d
__NETIF_SLIPIF_H__	net/lwip/include/netif/slipif.h	35;"	d
__SIO_H__	net/lwip/include/lwip/sio.h	36;"	d
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_inet_ntoa	net/lwip/netif/ppp/ipcp.c	/^_inet_ntoa(u32_t n)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/ns.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testinput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testoutput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/ns.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testinput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testoutput.asm	/^_pgfault_upcall:$/;"	l
_start	kern/entry.S	/^_start:$/;"	l
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start:$/;"	l
_start	obj/net/ns.asm	/^_start:$/;"	l
_start	obj/net/testinput.asm	/^_start:$/;"	l
_start	obj/net/testoutput.asm	/^_start:$/;"	l
_start	obj/user/echosrv.asm	/^_start:$/;"	l
_start	obj/user/echotest.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/httpd.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/testtime.asm	/^_start:$/;"	l
_start	obj/user/writemotd.asm	/^_start:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
aaddrlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t aaddrlen;$/;"	m	struct:snmp_trap_header_lengths
aaddrlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t aaddrlenlen;$/;"	m	struct:snmp_trap_header_lengths
acc	obj/net/ns.asm	/^      acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^    acc = FOLD_U32T(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^  acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^  acc = 0;$/;"	d
acc	obj/net/ns.asm	/^  acc = FOLD_U32T(acc);$/;"	d
accept	inc/ns.h	/^	} accept;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_accept
accept	lib/sockets.c	/^accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
accept	net/lwip/include/lwip/sockets.h	326;"	d
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb_listen
acceptRet	inc/ns.h	/^	} acceptRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_accept
accept_function	net/lwip/api/api_msg.c	/^accept_function(void *arg, struct tcp_pcb *newpcb, err_t err)$/;"	f	file:
accept_local	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_local  : 1; \/* accept peer's value for ouraddr *\/$/;"	m	struct:ipcp_options
accept_remote	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_remote : 1; \/* accept peer's value for hisaddr *\/$/;"	m	struct:ipcp_options
acceptable	obj/net/ns.asm	/^        acceptable = 1;$/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = 1; $/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = tcp_receive(pcb);$/;"	d
accepted_inseq	obj/net/ns.asm	/^    accepted_inseq = tcp_receive(pcb);$/;"	d
acceptmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t acceptmbox;$/;"	m	struct:netconn
accepts_pending	net/lwip/include/lwip/tcp.h	/^  u8_t accepts_pending;$/;"	m	struct:tcp_pcb_listen
access	net/lwip/include/lwip/snmp_structs.h	/^  u8_t access;$/;"	m	struct:obj_def
accomp	net/lwip/netif/ppp/ppp.c	/^  int  accomp;                  \/* Does peer accept addr\/ctl compression? *\/$/;"	m	struct:PPPControl_s	file:
ackci	net/lwip/netif/ppp/fsm.h	/^  int  (*ackci)(fsm*, u_char*, int);                \/* ACK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
acked	net/lwip/include/lwip/tcp.h	/^  u16_t acked;$/;"	m	struct:tcp_pcb
ackno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
ackno	obj/net/ns.asm	/^    ackno = pcb->rcv_nxt;$/;"	d
ackno	obj/net/ns.asm	/^  ackno = tcphdr->ackno = ntohl(tcphdr->ackno);$/;"	d
ad	net/lwip/include/lwip/api_msg.h	/^    } ad;$/;"	m	union:api_msg_msg::__anon20	typeref:struct:api_msg_msg::__anon20::__anon23
add	net/lwip/include/lwip/netifapi.h	/^    } add;$/;"	m	union:netifapi_msg_msg::__anon15	typeref:struct:netifapi_msg_msg::__anon15::__anon16
addci	net/lwip/netif/ppp/fsm.h	/^  void (*addci)(fsm*, u_char*, int*);               \/* Add our Configuration Information *\/$/;"	m	struct:fsm_callbacks
addr	net/lwip/api/netdb.c	/^  struct ip_addr addr;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addr	net/lwip/include/lwip/api_msg.h	/^  struct ip_addr *addr;$/;"	m	struct:dns_api_msg	typeref:struct:dns_api_msg::ip_addr
addr	net/lwip/include/lwip/netbuf.h	/^  struct ip_addr *addr;$/;"	m	struct:netbuf	typeref:struct:netbuf::ip_addr
addr	obj/fs/fs.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/net/ns.asm	/^      addr = (struct ip_addr*)&(sin.sin_addr.s_addr);$/;"	d
addr	obj/net/ns.asm	/^      addr = netbuf_fromaddr(buf);$/;"	d
addr2test	obj/net/ns.asm	/^  addr2test = addr->addr;$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
addr_hint	net/lwip/include/lwip/netif.h	/^  u8_t *addr_hint;$/;"	m	struct:netif
addr_inf	net/lwip/include/lwip/snmp_structs.h	/^  void* addr_inf;$/;"	m	struct:mib_external_node
addresses	net/lwip/netif/ppp/auth.c	/^static struct wordlist *addresses[NUM_PPP];$/;"	v	typeref:struct:wordlist	file:
addrinfo	net/lwip/include/lwip/netdb.h	/^struct addrinfo {$/;"	s
addrs	net/lwip/api/netdb.c	/^  struct ip_addr *addrs;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addrs	net/lwip/netif/ppp/ppp.c	/^  struct ppp_addrs addrs;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::ppp_addrs	file:
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/net/ns.asm	/^ again:$/;"	l
age_pending	obj/net/ns.asm	/^          age_pending = arp_table[i].ctime;$/;"	d
age_queue	obj/net/ns.asm	/^          age_queue = arp_table[i].ctime;$/;"	d
ai_addr	net/lwip/include/lwip/netdb.h	/^    struct sockaddr  *ai_addr;       \/* Socket address of socket. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addrlen	net/lwip/include/lwip/netdb.h	/^    socklen_t         ai_addrlen;    \/* Length of socket address. *\/$/;"	m	struct:addrinfo
ai_canonname	net/lwip/include/lwip/netdb.h	/^    char             *ai_canonname;  \/* Canonical name of service location. *\/$/;"	m	struct:addrinfo
ai_family	net/lwip/include/lwip/netdb.h	/^    int               ai_family;     \/* Address family of socket. *\/$/;"	m	struct:addrinfo
ai_flags	net/lwip/include/lwip/netdb.h	/^    int               ai_flags;      \/* Input flags. *\/$/;"	m	struct:addrinfo
ai_next	net/lwip/include/lwip/netdb.h	/^    struct addrinfo  *ai_next;       \/* Pointer to next in list. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_protocol	net/lwip/include/lwip/netdb.h	/^    int               ai_protocol;   \/* Protocol of socket. *\/$/;"	m	struct:addrinfo
ai_socktype	net/lwip/include/lwip/netdb.h	/^    int               ai_socktype;   \/* Socket type. *\/$/;"	m	struct:addrinfo
aliases	net/lwip/api/netdb.c	/^  char *aliases;$/;"	m	struct:gethostbyname_r_helper	file:
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
alloc_page	kern/monitor.c	/^int alloc_page(int argc, char**argv, struct Trapframe *tf)$/;"	f
alloc_socket	net/lwip/api/sockets.c	/^alloc_socket(struct netconn *newconn)$/;"	f	file:
alloc_sockfd	lib/sockets.c	/^alloc_sockfd(int sockid)$/;"	f	file:
alloc_tid	net/lwip/jos/arch/thread.c	/^alloc_tid(void) {$/;"	f	file:
allrouters	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allrouters;$/;"	v	typeref:struct:ip_addr	file:
allsystems	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allsystems;$/;"	v	typeref:struct:ip_addr	file:
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/ns.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/ns.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testinput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testinput.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testoutput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testoutput.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echosrv.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echosrv.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echotest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echotest.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/httpd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/httpd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testtime.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testtime.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/writemotd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/writemotd.asm	/^		altflag = 0;$/;"	d
announce	net/testinput.c	/^announce(void)$/;"	f	file:
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
ap	obj/net/ns.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/net/testinput.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echosrv.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echotest.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/httpd.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
api_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg {$/;"	s
api_msg_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg_msg {$/;"	s
apiflags	net/lwip/include/lwip/api_msg.h	/^      u8_t apiflags;$/;"	m	struct:api_msg_msg::__anon20::__anon24
apimsg	net/lwip/include/lwip/tcpip.h	/^    struct api_msg *apimsg;$/;"	m	union:tcpip_msg::__anon28	typeref:struct:tcpip_msg::__anon28::api_msg
arg	net/lwip/core/dns.c	/^  void *arg;$/;"	m	struct:dns_table_entry	file:
arg	net/lwip/include/lwip/sys.h	/^  void *arg;$/;"	m	struct:sys_timeo
arg	net/lwip/include/lwip/tcpip.h	/^      void *arg;$/;"	m	struct:tcpip_msg::__anon28::__anon31
arg	net/lwip/jos/arch/sys_arch.c	/^    void *arg;$/;"	m	struct:lwip_thread	file:
arg	obj/net/ns.asm	/^      arg = tmptimeout->arg;$/;"	d
arg	obj/net/ns.asm	/^  arg = arg;$/;"	d
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/net/ns.asm	/^args_exist:$/;"	l
args_exist	obj/net/testinput.asm	/^args_exist:$/;"	l
args_exist	obj/net/testoutput.asm	/^args_exist:$/;"	l
args_exist	obj/user/echosrv.asm	/^args_exist:$/;"	l
args_exist	obj/user/echotest.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/httpd.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/testtime.asm	/^args_exist:$/;"	l
args_exist	obj/user/writemotd.asm	/^args_exist:$/;"	l
argv0	lib/panic.c	/^char *argv0;$/;"	v
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
arp_table	net/lwip/netif/etharp.c	/^static struct etharp_entry arp_table[ARP_TABLE_SIZE];$/;"	v	typeref:struct:etharp_entry	file:
arp_timer	net/lwip/api/tcpip.c	/^arp_timer(void *arg)$/;"	f	file:
arptree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode arptree_root = {$/;"	v	typeref:struct:mib_list_rootnode
asn_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t asn_type;$/;"	m	struct:obj_def
assert	inc/assert.h	14;"	d
asyncmap	net/lwip/netif/ppp/lcp.h	/^    u32_t asyncmap;              \/* Value of async map *\/$/;"	m	struct:lcp_options
at	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node at = {$/;"	v	typeref:struct:mib_ram_array_node
at_id	net/lwip/core/snmp/mib2.c	/^s32_t at_id = 1;$/;"	v
atentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node atentry = {$/;"	v	typeref:struct:mib_array_node
atentry_get_object_def	net/lwip/core/snmp/mib2.c	/^atentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
atentry_get_value	net/lwip/core/snmp/mib2.c	/^atentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
atentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t atentry_ids[3] = { 1, 2, 3 };$/;"	v
atentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const atentry_nodes[3] = {$/;"	v
atoi	kern/monitor.c	/^int atoi(char *s)$/;"	f
attable	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node attable = {$/;"	v	typeref:struct:mib_array_node
attable_id	net/lwip/core/snmp/mib2.c	/^const s32_t attable_id = 1;$/;"	v
attable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* const attable_node = (struct mib_node* const)&atentry;$/;"	v
attachfn	kern/pci.c	/^	int (*attachfn) (struct pci_func *pcif);$/;"	m	struct:pci_driver	file:
auth_ip_addr	net/lwip/netif/ppp/auth.c	/^auth_ip_addr(int unit, u32_t addr)$/;"	f
auth_peer_fail	net/lwip/netif/ppp/auth.c	/^auth_peer_fail(int unit, u16_t protocol)$/;"	f
auth_peer_success	net/lwip/netif/ppp/auth.c	/^auth_peer_success(int unit, u16_t protocol, char *name, int namelen)$/;"	f
auth_pending	net/lwip/netif/ppp/auth.c	/^static int auth_pending[NUM_PPP];$/;"	v	file:
auth_required	net/lwip/netif/ppp/ppp.h	/^  u_int  auth_required     : 1;       \/* Peer is required to authenticate *\/$/;"	m	struct:ppp_settings
auth_reset	net/lwip/netif/ppp/auth.c	/^auth_reset(int unit)$/;"	f
auth_withpeer_fail	net/lwip/netif/ppp/auth.c	/^auth_withpeer_fail(int unit, u16_t protocol)$/;"	f
auth_withpeer_success	net/lwip/netif/ppp/auth.c	/^auth_withpeer_success(int unit, u16_t protocol)$/;"	f
autoip	net/lwip/include/ipv4/lwip/autoip.h	/^struct autoip$/;"	s
autoip	net/lwip/include/lwip/netif.h	/^  struct autoip *autoip;$/;"	m	struct:netif	typeref:struct:netif::autoip
autoip_arp_announce	net/lwip/core/ipv4/autoip.c	/^autoip_arp_announce(struct netif *netif)$/;"	f	file:
autoip_arp_reply	net/lwip/core/ipv4/autoip.c	/^autoip_arp_reply(struct netif *netif, struct etharp_hdr *hdr)$/;"	f
autoip_bind	net/lwip/core/ipv4/autoip.c	/^autoip_bind(struct netif *netif)$/;"	f	file:
autoip_coop_state	net/lwip/include/lwip/dhcp.h	/^  u8_t autoip_coop_state;$/;"	m	struct:dhcp
autoip_create_rand_addr	net/lwip/core/ipv4/autoip.c	/^autoip_create_rand_addr(struct netif *netif, struct ip_addr *RandomIPAddr)$/;"	f	file:
autoip_handle_arp_conflict	net/lwip/core/ipv4/autoip.c	/^autoip_handle_arp_conflict(struct netif *netif)$/;"	f	file:
autoip_init	net/lwip/core/ipv4/autoip.c	/^autoip_init(void)$/;"	f
autoip_start	net/lwip/core/ipv4/autoip.c	/^autoip_start(struct netif *netif)$/;"	f
autoip_stop	net/lwip/core/ipv4/autoip.c	/^autoip_stop(struct netif *netif)$/;"	f
autoip_timer	net/lwip/api/tcpip.c	/^autoip_timer(void *arg)$/;"	f	file:
autoip_tmr	net/lwip/core/ipv4/autoip.c	/^autoip_tmr()$/;"	f
avChurnRand	net/lwip/netif/ppp/randm.c	/^avChurnRand(char *randData, u32_t randLen)$/;"	f
avGenRand	net/lwip/netif/ppp/randm.c	/^avGenRand(char *buf, u32_t bufLen)$/;"	f
avRandom	net/lwip/netif/ppp/randm.c	/^avRandom()$/;"	f
avRandomInit	net/lwip/netif/ppp/randm.c	/^avRandomInit()$/;"	f
avRandomSeed	net/lwip/netif/ppp/randm.c	/^static u32_t avRandomSeed = 0;      \/* Seed used for random number generation. *\/$/;"	v	file:
avRandomize	net/lwip/netif/ppp/randm.c	/^avRandomize(void)$/;"	f
avRandomize	net/lwip/netif/ppp/randm.h	60;"	d
avRandomized	net/lwip/netif/ppp/randm.c	/^static int  avRandomized = 0;       \/* Set when truely randomized. *\/$/;"	v	file:
avail	net/lwip/include/lwip/stats.h	/^  mem_size_t avail;$/;"	m	struct:stats_mem
available	obj/net/ns.asm	/^  available = tcp_sndbuf(conn->pcb.tcp);$/;"	d
b	net/lwip/include/lwip/api_msg.h	/^    struct netbuf *b;$/;"	m	union:api_msg_msg::__anon20	typeref:struct:api_msg_msg::__anon20::netbuf
backlog	net/lwip/include/lwip/api_msg.h	/^      u8_t backlog;$/;"	m	struct:api_msg_msg::__anon20::__anon27
backlog	net/lwip/include/lwip/tcp.h	/^  u8_t backlog;$/;"	m	struct:tcp_pcb_listen
backlog	obj/net/ns.asm	/^    backlog = 0xff;$/;"	d
bad_ip_adrs	net/lwip/netif/ppp/auth.c	/^bad_ip_adrs(u32_t addr)$/;"	f
bar_width	obj/kern/kernel.asm	/^				bar_width = 8;$/;"	d
bar_width	obj/kern/kernel.asm	/^		bar_width = 4;$/;"	d
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_IO_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_MEM_ADDR(oldv);$/;"	d
base	obj/net/ns.asm	/^			base = 10;$/;"	d
base	obj/net/ns.asm	/^			base = 16;$/;"	d
base	obj/net/ns.asm	/^			base = 8;$/;"	d
base	obj/net/ns.asm	/^        base = 16;$/;"	d
base	obj/net/ns.asm	/^        base = 8;$/;"	d
base	obj/net/ns.asm	/^    base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 16;$/;"	d
base	obj/net/testinput.asm	/^			base = 8;$/;"	d
base	obj/net/testinput.asm	/^        base = 16;$/;"	d
base	obj/net/testinput.asm	/^        base = 8;$/;"	d
base	obj/net/testinput.asm	/^    base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 16;$/;"	d
base	obj/net/testoutput.asm	/^			base = 8;$/;"	d
base	obj/user/echosrv.asm	/^			base = 10;$/;"	d
base	obj/user/echosrv.asm	/^			base = 16;$/;"	d
base	obj/user/echosrv.asm	/^			base = 8;$/;"	d
base	obj/user/echosrv.asm	/^        base = 16;$/;"	d
base	obj/user/echosrv.asm	/^        base = 8;$/;"	d
base	obj/user/echosrv.asm	/^    base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 16;$/;"	d
base	obj/user/echotest.asm	/^			base = 8;$/;"	d
base	obj/user/echotest.asm	/^        base = 16;$/;"	d
base	obj/user/echotest.asm	/^        base = 8;$/;"	d
base	obj/user/echotest.asm	/^    base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/httpd.asm	/^			base = 10;$/;"	d
base	obj/user/httpd.asm	/^			base = 16;$/;"	d
base	obj/user/httpd.asm	/^			base = 8;$/;"	d
base	obj/user/httpd.asm	/^        base = 16;$/;"	d
base	obj/user/httpd.asm	/^        base = 8;$/;"	d
base	obj/user/httpd.asm	/^    base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/testtime.asm	/^			base = 10;$/;"	d
base	obj/user/testtime.asm	/^			base = 16;$/;"	d
base	obj/user/testtime.asm	/^			base = 8;$/;"	d
base	obj/user/writemotd.asm	/^			base = 10;$/;"	d
base	obj/user/writemotd.asm	/^			base = 16;$/;"	d
base	obj/user/writemotd.asm	/^			base = 8;$/;"	d
basemem	kern/pmap.c	/^static size_t basemem;		\/\/ Amount of base memory (in bytes)$/;"	v	file:
basemem	obj/kern/kernel.asm	/^	basemem = ROUNDDOWN(nvram_read(NVRAM_BASELO)*1024, PGSIZE);$/;"	d
bc	net/lwip/include/lwip/api_msg.h	/^    } bc;$/;"	m	union:api_msg_msg::__anon20	typeref:struct:api_msg_msg::__anon20::__anon22
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/net/ns.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "testinput";$/;"	d
binaryname	obj/net/testoutput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "testoutput";$/;"	d
binaryname	obj/user/echosrv.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echotest.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^	binaryname = "jhttpd";$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testtime.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/writemotd.asm	/^		binaryname = argv[0];$/;"	d
bind	inc/ns.h	/^	} bind;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_bind
bind	lib/sockets.c	/^bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
bind	net/lwip/include/lwip/sockets.h	327;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
blockNo	obj/fs/fs.asm	/^	blockNo = *addr;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef int bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n, uint32_t align)$/;"	f	file:
boot_cr3	kern/pmap.c	/^physaddr_t boot_cr3;		\/\/ Physical address of boot time page directory$/;"	v
boot_cr3	obj/kern/kernel.asm	/^	boot_cr3 = PADDR(pgdir);$/;"	d
boot_freemem	kern/pmap.c	/^static char* boot_freemem;	\/\/ Pointer to next byte of free mem$/;"	v	file:
boot_freemem	obj/kern/kernel.asm	/^		boot_freemem = end;$/;"	d
boot_freemem	obj/kern/kernel.asm	/^	boot_freemem = ROUNDUP(boot_freemem, align);$/;"	d
boot_map_segment	kern/pmap.c	/^boot_map_segment(pde_t *pgdir, uintptr_t la, size_t size, physaddr_t pa, int perm)$/;"	f	file:
boot_pgdir	kern/pmap.c	/^pde_t* boot_pgdir;		\/\/ Virtual address of boot time page directory$/;"	v
boot_pgdir	obj/kern/kernel.asm	/^	boot_pgdir = pgdir;$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
break_point_handler	kern/trap.c	/^break_point_handler(struct Trapframe *tf)$/;"	f
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
bss	user/init.c	/^char bss[6000];$/;"	v
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon6	file:
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	net/lwip/core/ipv4/ip_frag.c	/^static u8_t buf[LWIP_MEM_ALIGN_SIZE(IP_FRAG_MAX_MTU)];$/;"	v	file:
buf	net/lwip/netif/ppp/md5.h	/^  u32_t buf[4];             \/* scratch buffer *\/$/;"	m	struct:__anon8
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/net/ns.asm	/^      buf = NULL;$/;"	d
buf	obj/net/ns.asm	/^      buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^      buf = sock->lastdata;$/;"	d
buf	obj/net/ns.asm	/^    buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^  buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf_copy_len	obj/net/ns.asm	/^          buf_copy_len = len;$/;"	d
buf_copy_len	obj/net/ns.asm	/^      buf_copy_len = p->len - offset;$/;"	d
buflen	obj/net/ns.asm	/^      buflen = netbuf_len(sock->lastdata);$/;"	d
buflen	obj/net/ns.asm	/^    buflen = netbuf_len(buf);$/;"	d
bus	kern/pci.h	/^    struct pci_bus *bus;	\/\/ Primary bus for bridges$/;"	m	struct:pci_func	typeref:struct:pci_func::pci_bus
buse	net/serv.c	/^static bool buse[QUEUE_SIZE];$/;"	v	file:
busno	kern/pci.h	/^    uint32_t busno;$/;"	m	struct:pci_bus
bytes	obj/net/ns.asm	/^	    bytes = len - copied;$/;"	d
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = 3;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/net/ns.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/ns.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/net/ns.asm	/^        c = *++cp;$/;"	d
c	obj/net/ns.asm	/^      c = *++cp;$/;"	d
c	obj/net/ns.asm	/^  c = *cp;$/;"	d
c	obj/net/testinput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/testinput.asm	/^        c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^      c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^  c = *cp;$/;"	d
c	obj/net/testoutput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^        c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^      c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^  c = *cp;$/;"	d
c	obj/user/echotest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echotest.asm	/^        c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^      c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^  c = *cp;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/user/httpd.asm	/^        c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^      c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^  c = *cp;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testtime.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/writemotd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
cachehit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER cachehit;$/;"	m	struct:stats_proto
callback	net/lwip/include/lwip/api.h	/^  netconn_callback callback;$/;"	m	struct:netconn
callbacks	net/lwip/netif/ppp/fsm.h	/^  struct fsm_callbacks* callbacks; \/* Callback routines *\/$/;"	m	struct:fsm	typeref:struct:fsm::fsm_callbacks
cb	net/lwip/include/lwip/tcpip.h	/^    } cb;$/;"	m	union:tcpip_msg::__anon28	typeref:struct:tcpip_msg::__anon28::__anon30
cflag	net/lwip/netif/ppp/ipcp.h	/^  u_char  cflag;             \/* VJ slot compression flag. *\/$/;"	m	struct:ipcp_options
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^		ch = *(in + 9 - i);$/;"	d
ch	obj/net/ns.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testinput.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testoutput.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echosrv.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echotest.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/httpd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testtime.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/writemotd.asm	/^				ch = *fmt;$/;"	d
chal_id	net/lwip/netif/ppp/chap.h	/^  u_char chal_id;                         \/* ID of last challenge *\/$/;"	m	struct:chap_state
chal_interval	net/lwip/netif/ppp/chap.h	/^  int chal_interval;                      \/* Time until we challenge peer again *\/$/;"	m	struct:chap_state
chal_len	net/lwip/netif/ppp/chap.h	/^  u_char chal_len;                        \/* challenge length *\/$/;"	m	struct:chap_state
chal_name	net/lwip/netif/ppp/chap.h	/^  char *chal_name;                        \/* Our name to use with challenge *\/$/;"	m	struct:chap_state
chal_transmits	net/lwip/netif/ppp/chap.h	/^  int chal_transmits;                     \/* Number of transmissions of challenge *\/$/;"	m	struct:chap_state
chal_type	net/lwip/netif/ppp/chap.h	/^  u_char chal_type;                       \/* hash algorithm for challenges *\/$/;"	m	struct:chap_state
challenge	net/lwip/netif/ppp/chap.h	/^  u_char challenge[MAX_CHALLENGE_LENGTH]; \/* last challenge string sent *\/$/;"	m	struct:chap_state
changeperm	kern/monitor.c	/^int changeperm(int argc, char**argv, struct Trapframe *tf)$/;"	f
chap	net/lwip/netif/ppp/chap.c	/^chap_state chap[NUM_PPP]; \/* CHAP state; one for each unit *\/$/;"	v
chap_mdtype	net/lwip/netif/ppp/lcp.h	/^    u_char chap_mdtype;          \/* which MD type (hashing algorithm) *\/$/;"	m	struct:lcp_options
chap_protent	net/lwip/netif/ppp/chap.c	/^struct protent chap_protent = {$/;"	v	typeref:struct:protent
chap_state	net/lwip/netif/ppp/chap.h	/^typedef struct chap_state {$/;"	s
chap_state	net/lwip/netif/ppp/chap.h	/^} chap_state;$/;"	t	typeref:struct:chap_state
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/fs/fs.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/net/ns.asm	/^char *$/;"	l
char	obj/net/ns.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/net/testinput.asm	/^char *$/;"	l
char	obj/net/testinput.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/net/testoutput.asm	/^char *$/;"	l
char	obj/net/testoutput.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/echosrv.asm	/^char *$/;"	l
char	obj/user/echosrv.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/echotest.asm	/^char *$/;"	l
char	obj/user/echotest.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/echotest.asm	/^char *msg = "Hello world!\\n";$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/httpd.asm	/^char *$/;"	l
char	obj/user/httpd.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/testtime.asm	/^char *$/;"	l
char	obj/user/testtime.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
char	obj/user/writemotd.asm	/^char *$/;"	l
char	obj/user/writemotd.asm	/^char *binaryname = "(PROGRAM NAME UNKNOWN)";$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check	grade-lab1.sh	/^check () {$/;"	f
check	grade-lab2.sh	/^check () {$/;"	f
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f
check_boot_pgdir	kern/pmap.c	/^check_boot_pgdir(void)$/;"	f	file:
check_echosrv	grade-lab6.sh	/^check_echosrv() {$/;"	f
check_httpd	grade-lab6.sh	/^check_httpd() {$/;"	f
check_idle	net/lwip/netif/ppp/auth.c	/^check_idle(void *arg)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc()$/;"	f	file:
check_passwd	net/lwip/netif/ppp/auth.c	/^check_passwd( int unit, char *auser, int userlen, char *apasswd, int passwdlen, char **msg, int *msglen)$/;"	f
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f
check_testinput	grade-lab6.sh	/^check_testinput() {$/;"	f
check_testoutput	grade-lab6.sh	/^check_testoutput() {$/;"	f
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checkregexps	grade-functions.sh	/^checkregexps () {$/;"	f
child	obj/user/icode.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_igmp
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_proto
chklen	obj/net/ns.asm	/^      chklen = chksum_len;$/;"	d
chklen	obj/net/ns.asm	/^    chklen = q->len;$/;"	d
chksum	net/lwip/core/ipv6/inet6.c	/^chksum(void *dataptr, u16_t len)$/;"	f	file:
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_dur_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_echo_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_te_hdr
chksum_len_rx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chksum_len_tx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
cifaddr	net/lwip/netif/ppp/ppp.c	/^cifaddr( int pd, u32_t o, u32_t h)$/;"	f
cifdefaultroute	net/lwip/netif/ppp/ppp.c	/^cifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
cilen	net/lwip/netif/ppp/fsm.h	/^  int  (*cilen)(fsm*);                              \/* Length of our Configuration Information *\/$/;"	m	struct:fsm_callbacks
cis_received	net/lwip/netif/ppp/ipcp.c	/^static int cis_received[NUM_PPP];      \/* # Conf-Reqs received *\/$/;"	v	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_answer	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_query	file:
class	obj/kern/kernel.asm	/^		class = pci_class[PCI_CLASS(f->dev_class)];$/;"	d
clear_rfd	kern/e100.c	/^void clear_rfd( struct e100_ru *rf)$/;"	f
clen	obj/net/ns.asm	/^  clen = pbuf_clen(p);$/;"	d
clientstate	net/lwip/netif/ppp/chap.h	/^  int clientstate;                        \/* Client state *\/$/;"	m	struct:chap_state
close	inc/ns.h	/^	} close;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_close
close	lib/fd.c	/^close(int fdnum)$/;"	f
close	net/lwip/include/lwip/sockets.h	347;"	d
close	net/lwip/netif/ppp/ppp.h	/^    void (*close) (int unit, char *reason);$/;"	m	struct:protent
close_all	lib/fd.c	/^close_all(void)$/;"	f
closesocket	net/lwip/include/lwip/sockets.h	329;"	d
cmd	kern/e100.c	/^		uint16_t cmd;$/;"	m	struct:e100_ru	file:
cmd	kern/e100.c	/^    uint16_t cmd;$/;"	m	struct:e100_cb	file:
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/ns.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testinput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/net/testoutput.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echosrv.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echotest.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/httpd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testtime.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/writemotd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/net/ns.asm	/^  code = *(((u8_t *)p->payload)+1);$/;"	d
code	user/httpd.c	/^	int code;$/;"	m	struct:error_messages	file:
code	user/httpd.c	/^	int code;$/;"	m	struct:responce_header	file:
com_strlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t com_strlen;$/;"	m	struct:snmp_msg_pstat
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_resp_header_lengths
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_trap_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_resp_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_trap_header_lengths
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
common	net/lwip/include/lwip/netifapi.h	/^    } common;$/;"	m	union:netifapi_msg_msg::__anon15	typeref:struct:netifapi_msg_msg::__anon15::__anon17
community	net/lwip/include/lwip/snmp_msg.h	/^  u8_t community[SNMP_COMMUNITY_STR_LEN + 1];$/;"	m	struct:snmp_msg_pstat
compressSlot	net/lwip/netif/ppp/vj.h	/^  u_char compressSlot;             \/* Flag indicating OK to compress slot ID. *\/$/;"	m	struct:vjcompress
conn	net/lwip/api/sockets.c	/^  struct netconn *conn;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netconn	file:
conn	net/lwip/include/lwip/api_msg.h	/^  struct netconn *conn;$/;"	m	struct:api_msg_msg	typeref:struct:api_msg_msg::netconn
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback( (protocol == IPPROTO_UDPLITE) ?$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback(NETCONN_TCP, event_callback);$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_proto_and_callback(NETCONN_RAW, (u8_t)protocol, event_callback);$/;"	d
conn	obj/net/ns.asm	/^  conn = (struct netconn *)arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = memp_malloc(MEMP_NETCONN);$/;"	d
conn	obj/net/ns.asm	/^  conn = netconn_alloc(t, callback);$/;"	d
connect	inc/ns.h	/^	} connect;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_connect
connect	lib/sockets.c	/^connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
connect	net/lwip/include/lwip/sockets.h	330;"	d
connect_time_expired	net/lwip/netif/ppp/auth.c	/^connect_time_expired(void *arg)$/;"	f	file:
connected	net/lwip/include/lwip/tcp.h	/^  err_t (* connected)(void *arg, struct tcp_pcb *pcb, err_t err);$/;"	m	struct:tcp_pcb
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon6	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/net/ns.asm	/^const char *$/;"	l
cont	obj/net/ns.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cont	obj/user/httpd.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cop	obj/net/ns.asm	/^    cop = last ? left : nfb * 8;$/;"	d
copy_needed	obj/net/ns.asm	/^          copy_needed = 1;$/;"	d
copylen	obj/net/ns.asm	/^      copylen = buflen;$/;"	d
copylen	obj/net/ns.asm	/^      copylen = len;$/;"	d
count	net/lwip/include/lwip/snmp_msg.h	/^  u8_t count;$/;"	m	struct:snmp_varbind_root
count	net/lwip/include/lwip/snmp_structs.h	/^  u16_t count;$/;"	m	struct:mib_list_rootnode
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
count	obj/net/ns.asm	/^      count = pbuf_free(seg->p);$/;"	d
count	obj/net/ns.asm	/^  count = 0;$/;"	d
counter	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t counter;$/;"	m	struct:sys_sem_entry::__anon34::__anon35	file:
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
create	obj/kern/kernel.asm	/^		create = 0;$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
cs_filler	net/lwip/netif/ppp/vj.h	/^  u_char cs_filler;$/;"	m	struct:cstate
cs_hdr	net/lwip/netif/ppp/vj.h	115;"	d
cs_hlen	net/lwip/netif/ppp/vj.h	/^  u_short cs_hlen;        \/* size of hdr (receive only) *\/$/;"	m	struct:cstate
cs_id	net/lwip/netif/ppp/vj.h	/^  u_char cs_id;           \/* connection # associated with this state *\/$/;"	m	struct:cstate
cs_ip	net/lwip/netif/ppp/vj.h	114;"	d
cs_next	net/lwip/netif/ppp/vj.h	/^  struct cstate *cs_next; \/* next most recently used state (xmit only) *\/$/;"	m	struct:cstate	typeref:struct:cstate::cstate
cseg	obj/net/ns.asm	/^                  cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^                cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^          cseg = pcb->ooseq;$/;"	d
cseg	obj/net/ns.asm	/^  cseg = memp_malloc(MEMP_TCP_SEG);$/;"	d
cstate	net/lwip/netif/ppp/vj.h	/^struct cstate {$/;"	s
csu_hdr	net/lwip/netif/ppp/vj.h	/^    char csu_hdr[MAX_HDR];$/;"	m	union:cstate::__anon10
csu_ip	net/lwip/netif/ppp/vj.h	/^    struct ip csu_ip;     \/* ip\/tcp hdr from most recent packet *\/$/;"	m	union:cstate::__anon10	typeref:struct:cstate::__anon10::ip
ctime	net/lwip/netif/etharp.c	/^  u8_t ctime;$/;"	m	struct:etharp_entry	file:
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] = $/;"	v	file:
ctx	net/lwip/include/lwip/tcpip.h	/^      void *ctx;$/;"	m	struct:tcpip_msg::__anon28::__anon30
cur_tc	net/lwip/jos/arch/thread.c	/^static struct thread_context *cur_tc;$/;"	v	typeref:struct:thread_context	file:
cur_tc	obj/net/ns.asm	/^    cur_tc = NULL;$/;"	d
cur_tc	obj/net/ns.asm	/^    cur_tc = next_tc;$/;"	d
curenv	kern/env.c	/^struct Env *curenv = NULL;		\/\/ The current env$/;"	v	typeref:struct:Env
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = e;$/;"	d
cwnd	net/lwip/include/lwip/tcp.h	/^  u16_t cwnd;  $/;"	m	struct:tcp_pcb
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/net/ns.asm	/^	d = dst;$/;"	d
d	obj/net/testinput.asm	/^	d = dst;$/;"	d
d	obj/net/testoutput.asm	/^	d = dst;$/;"	d
d	obj/user/echosrv.asm	/^	d = dst;$/;"	d
d	obj/user/echotest.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/httpd.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/testtime.asm	/^	d = dst;$/;"	d
d	obj/user/writemotd.asm	/^	d = dst;$/;"	d
data	kern/e100.c	/^		uint8_t data[RFD_BYTE_COUNT];$/;"	m	struct:e100_ru	file:
data	kern/e100.c	/^    uint8_t data[TCB_BYTE_COUNT];$/;"	m	struct:e100_cb	file:
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	obj/net/ns.asm	/^  data = (struct lwip_setgetsockopt_data*)arg;$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon39
datagram_len	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u16_t datagram_len;$/;"	m	struct:ip_reassdata
dataptr	net/lwip/include/lwip/api_msg.h	/^      const void *dataptr;$/;"	m	struct:api_msg_msg::__anon20::__anon24
dataptr	net/lwip/include/lwip/tcp.h	/^  void *dataptr;           \/* pointer to the TCP data in the pbuf *\/$/;"	m	struct:tcp_seg
dataptr	obj/net/ns.asm	/^  dataptr = (u8_t*)conn->write_msg->msg.w.dataptr + conn->write_offset;$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/nsipc.c	5;"	d	file:
debug	net/lwip/jos/arch/sys_arch.c	10;"	d	file:
debug	net/serv.c	34;"	d	file:
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^		default:$/;"	l
default	obj/net/ns.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^      default: \/* unrecognized socket type *\/$/;"	l
default	obj/net/ns.asm	/^      default:$/;"	l
default	obj/net/ns.asm	/^    default:$/;"	l
default	obj/net/ns.asm	/^   default:$/;"	l
default	obj/net/ns.asm	/^  default:$/;"	l
default	obj/net/testinput.asm	/^		default:$/;"	l
default	obj/net/testoutput.asm	/^		default:$/;"	l
default	obj/user/echosrv.asm	/^		default:$/;"	l
default	obj/user/echotest.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/httpd.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/testtime.asm	/^		default:$/;"	l
default	obj/user/writemotd.asm	/^		default:$/;"	l
default_route	net/lwip/netif/ppp/ipcp.h	/^  u_int   default_route : 1; \/* Assign default route through interface? *\/$/;"	m	struct:ipcp_options
default_route_set	net/lwip/netif/ppp/ipcp.c	/^static int default_route_set[NUM_PPP]; \/* Have set up a default route *\/$/;"	v	file:
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
dest	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::
dest	obj/net/ns.asm	/^    dest = &(iphdr->dest);$/;"	d
dest	obj/net/ns.asm	/^    dest = &mcastaddr;$/;"	d
dest	obj/net/ns.asm	/^    dest = (struct eth_addr *)&ethbroadcast;$/;"	d
dest	obj/net/ns.asm	/^  dest = NULL;$/;"	d
dest	obj/net/ns.asm	/^  dest = ntohs(udphdr->dest);$/;"	d
dev	kern/pci.h	/^    uint32_t dev;$/;"	m	struct:pci_func
dev_class	kern/pci.h	/^    uint32_t dev_class;$/;"	m	struct:pci_func
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_id	kern/pci.h	/^    uint32_t dev_id;$/;"	m	struct:pci_func
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^	char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devsock	lib/sockets.c	/^struct Dev devsock =$/;"	v	typeref:struct:Dev
devsock_close	lib/sockets.c	/^devsock_close(struct Fd *fd)$/;"	f	file:
devsock_read	lib/sockets.c	/^devsock_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devsock_stat	lib/sockets.c	/^devsock_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devsock_write	lib/sockets.c	/^devsock_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
dhcp	net/lwip/include/lwip/dhcp.h	/^struct dhcp$/;"	s
dhcp	net/lwip/include/lwip/netif.h	/^  struct dhcp *dhcp;$/;"	m	struct:netif	typeref:struct:netif::dhcp
dhcp	obj/net/ns.asm	/^    dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = netif->dhcp;$/;"	d
dhcp_arp_reply	net/lwip/core/dhcp.c	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	f
dhcp_bind	net/lwip/core/dhcp.c	/^dhcp_bind(struct netif *netif)$/;"	f	file:
dhcp_check	net/lwip/core/dhcp.c	/^dhcp_check(struct netif *netif)$/;"	f	file:
dhcp_coarse_tmr	net/lwip/core/dhcp.c	/^dhcp_coarse_tmr()$/;"	f
dhcp_create_request	net/lwip/core/dhcp.c	/^dhcp_create_request(struct netif *netif)$/;"	f	file:
dhcp_decline	net/lwip/core/dhcp.c	/^dhcp_decline(struct netif *netif)$/;"	f	file:
dhcp_delete_request	net/lwip/core/dhcp.c	/^dhcp_delete_request(struct netif *netif)$/;"	f	file:
dhcp_discover	net/lwip/core/dhcp.c	/^dhcp_discover(struct netif *netif)$/;"	f	file:
dhcp_fine_tmr	net/lwip/core/dhcp.c	/^dhcp_fine_tmr()$/;"	f
dhcp_free_reply	net/lwip/core/dhcp.c	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	f	file:
dhcp_get_option_byte	net/lwip/core/dhcp.c	/^dhcp_get_option_byte(u8_t *ptr)$/;"	f	file:
dhcp_get_option_long	net/lwip/core/dhcp.c	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	f	file:
dhcp_get_option_ptr	net/lwip/core/dhcp.c	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	f	file:
dhcp_handle_ack	net/lwip/core/dhcp.c	/^dhcp_handle_ack(struct netif *netif)$/;"	f	file:
dhcp_handle_nak	net/lwip/core/dhcp.c	/^dhcp_handle_nak(struct netif *netif)$/;"	f	file:
dhcp_handle_offer	net/lwip/core/dhcp.c	/^dhcp_handle_offer(struct netif *netif)$/;"	f	file:
dhcp_inform	net/lwip/core/dhcp.c	/^dhcp_inform(struct netif *netif)$/;"	f
dhcp_msg	net/lwip/include/lwip/dhcp.h	/^struct dhcp_msg$/;"	s
dhcp_option	net/lwip/core/dhcp.c	/^dhcp_option(struct dhcp *dhcp, u8_t option_type, u8_t option_len)$/;"	f	file:
dhcp_option_byte	net/lwip/core/dhcp.c	/^dhcp_option_byte(struct dhcp *dhcp, u8_t value)$/;"	f	file:
dhcp_option_long	net/lwip/core/dhcp.c	/^dhcp_option_long(struct dhcp *dhcp, u32_t value)$/;"	f	file:
dhcp_option_short	net/lwip/core/dhcp.c	/^dhcp_option_short(struct dhcp *dhcp, u16_t value)$/;"	f	file:
dhcp_option_trailer	net/lwip/core/dhcp.c	/^dhcp_option_trailer(struct dhcp *dhcp)$/;"	f	file:
dhcp_rebind	net/lwip/core/dhcp.c	/^dhcp_rebind(struct netif *netif)$/;"	f	file:
dhcp_recv	net/lwip/core/dhcp.c	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dhcp_release	net/lwip/core/dhcp.c	/^dhcp_release(struct netif *netif)$/;"	f
dhcp_renew	net/lwip/core/dhcp.c	/^dhcp_renew(struct netif *netif)$/;"	f
dhcp_select	net/lwip/core/dhcp.c	/^dhcp_select(struct netif *netif)$/;"	f	file:
dhcp_set_state	net/lwip/core/dhcp.c	/^dhcp_set_state(struct dhcp *dhcp, u8_t new_state)$/;"	f	file:
dhcp_start	net/lwip/core/dhcp.c	/^dhcp_start(struct netif *netif)$/;"	f
dhcp_stop	net/lwip/core/dhcp.c	/^dhcp_stop(struct netif *netif)$/;"	f
dhcp_t1_timeout	net/lwip/core/dhcp.c	/^dhcp_t1_timeout(struct netif *netif)$/;"	f	file:
dhcp_t2_timeout	net/lwip/core/dhcp.c	/^dhcp_t2_timeout(struct netif *netif)$/;"	f	file:
dhcp_timeout	net/lwip/core/dhcp.c	/^dhcp_timeout(struct netif *netif)$/;"	f	file:
dhcp_timer_coarse	net/lwip/api/tcpip.c	/^dhcp_timer_coarse(void *arg)$/;"	f	file:
dhcp_timer_fine	net/lwip/api/tcpip.c	/^dhcp_timer_fine(void *arg)$/;"	f	file:
dhcp_unfold_reply	net/lwip/core/dhcp.c	/^dhcp_unfold_reply(struct dhcp *dhcp)$/;"	f	file:
did_authup	net/lwip/netif/ppp/auth.c	/^static int did_authup;$/;"	v	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
die	user/echosrv.c	/^die(char *m)$/;"	f	file:
die	user/echotest.c	/^die(char *m) $/;"	f	file:
die	user/httpd.c	/^die(char *m)$/;"	f	file:
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/writemotd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/writemotd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/writemotd.asm	/^			dig = *s - 'a' + 10;$/;"	d
digest	net/lwip/netif/ppp/md5.h	/^  unsigned char digest[16]; \/* actual digest after MD5Final call *\/$/;"	m	struct:__anon8
dip	net/lwip/core/snmp/msg_out.c	/^  struct ip_addr dip;$/;"	m	struct:snmp_trap_dst	typeref:struct:snmp_trap_dst::ip_addr	file:
dip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr dip;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::ip_addr
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
disable_defaultip	net/lwip/netif/ppp/ppp.h	/^  u_int  disable_defaultip : 1;       \/* Don't use hostname for default IP addrs *\/$/;"	m	struct:ppp_settings
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
dma_ring_buffer	kern/e100.c	/^static struct e100_cb dma_ring_buffer[MAX_RING_SZ];$/;"	v	typeref:struct:e100_cb	file:
dns1	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns2	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns_answer	net/lwip/core/dns.c	/^struct dns_answer {$/;"	s	file:
dns_api_msg	net/lwip/include/lwip/api_msg.h	/^struct dns_api_msg {$/;"	s
dns_check_entries	net/lwip/core/dns.c	/^dns_check_entries(void)$/;"	f	file:
dns_check_entry	net/lwip/core/dns.c	/^dns_check_entry(u8_t i)$/;"	f	file:
dns_compare_name	net/lwip/core/dns.c	/^dns_compare_name(unsigned char *query, unsigned char *response)$/;"	f	file:
dns_count	net/lwip/include/lwip/dhcp.h	/^  u32_t dns_count; \/* actual number of DNS servers obtained *\/$/;"	m	struct:dhcp
dns_enqueue	net/lwip/core/dns.c	/^dns_enqueue(const char *name, dns_found_callback found, void *callback_arg)$/;"	f	file:
dns_found_callback	net/lwip/include/lwip/dns.h	/^typedef void (*dns_found_callback)(const char *name, struct ip_addr *ipaddr, void *callback_arg);$/;"	t
dns_gethostbyname	net/lwip/core/dns.c	/^dns_gethostbyname(const char *hostname, struct ip_addr *addr, dns_found_callback found,$/;"	f
dns_getserver	net/lwip/core/dns.c	/^dns_getserver(u8_t numdns)$/;"	f
dns_hdr	net/lwip/core/dns.c	/^struct dns_hdr {$/;"	s	file:
dns_init	net/lwip/core/dns.c	/^dns_init()$/;"	f
dns_lookup	net/lwip/core/dns.c	/^dns_lookup(const char *name)$/;"	f	file:
dns_parse_name	net/lwip/core/dns.c	/^dns_parse_name(unsigned char *query)$/;"	f	file:
dns_payload	net/lwip/core/dns.c	/^static u8_t                   dns_payload[DNS_MSG_SIZE];$/;"	v	file:
dns_pcb	net/lwip/core/dns.c	/^static struct udp_pcb        *dns_pcb;$/;"	v	typeref:struct:udp_pcb	file:
dns_query	net/lwip/core/dns.c	/^struct dns_query {$/;"	s	file:
dns_recv	net/lwip/core/dns.c	/^dns_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dns_send	net/lwip/core/dns.c	/^dns_send(u8_t numdns, const char* name, u8_t id)$/;"	f	file:
dns_seqno	net/lwip/core/dns.c	/^static u8_t                   dns_seqno;$/;"	v	file:
dns_servers	net/lwip/core/dns.c	/^static struct ip_addr         dns_servers[DNS_MAX_SERVERS];$/;"	v	typeref:struct:ip_addr	file:
dns_setserver	net/lwip/core/dns.c	/^dns_setserver(u8_t numdns, struct ip_addr *dnsserver)$/;"	f
dns_table	net/lwip/core/dns.c	/^static struct dns_table_entry dns_table[DNS_TABLE_SIZE];$/;"	v	typeref:struct:dns_table_entry	file:
dns_table_entry	net/lwip/core/dns.c	/^struct dns_table_entry {$/;"	s	file:
dns_timer	net/lwip/api/tcpip.c	/^dns_timer(void *arg)$/;"	f	file:
dns_tmr	net/lwip/core/dns.c	/^dns_tmr(void)$/;"	f
dnsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   dnsaddr[2];        \/* Primary and secondary MS DNS entries *\/$/;"	m	struct:ipcp_options
do_bind	net/lwip/api/api_msg.c	/^do_bind(struct api_msg_msg *msg)$/;"	f
do_close	net/lwip/api/api_msg.c	/^do_close(struct api_msg_msg *msg)$/;"	f
do_close_internal	net/lwip/api/api_msg.c	/^do_close_internal(struct netconn *conn)$/;"	f	file:
do_connect	net/lwip/api/api_msg.c	/^do_connect(struct api_msg_msg *msg)$/;"	f
do_connected	net/lwip/api/api_msg.c	/^do_connected(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
do_delconn	net/lwip/api/api_msg.c	/^do_delconn(struct api_msg_msg *msg)$/;"	f
do_disconnect	net/lwip/api/api_msg.c	/^do_disconnect(struct api_msg_msg *msg)$/;"	f
do_dns_found	net/lwip/api/api_msg.c	/^do_dns_found(const char *name, struct ip_addr *ipaddr, void *arg)$/;"	f	file:
do_getaddr	net/lwip/api/api_msg.c	/^do_getaddr(struct api_msg_msg *msg)$/;"	f
do_gethostbyname	net/lwip/api/api_msg.c	/^do_gethostbyname(void *arg)$/;"	f
do_join_leave_group	net/lwip/api/api_msg.c	/^do_join_leave_group(struct api_msg_msg *msg)$/;"	f
do_listen	net/lwip/api/api_msg.c	/^do_listen(struct api_msg_msg *msg)$/;"	f
do_netifapi_netif_add	net/lwip/api/netifapi.c	/^do_netifapi_netif_add( struct netifapi_msg_msg *msg)$/;"	f
do_netifapi_netif_common	net/lwip/api/netifapi.c	/^do_netifapi_netif_common( struct netifapi_msg_msg *msg)$/;"	f
do_newconn	net/lwip/api/api_msg.c	/^do_newconn(struct api_msg_msg *msg)$/;"	f
do_recv	net/lwip/api/api_msg.c	/^do_recv(struct api_msg_msg *msg)$/;"	f
do_send	net/lwip/api/api_msg.c	/^do_send(struct api_msg_msg *msg)$/;"	f
do_write	net/lwip/api/api_msg.c	/^do_write(struct api_msg_msg *msg)$/;"	f
do_writemore	net/lwip/api/api_msg.c	/^do_writemore(struct netconn *conn)$/;"	f	file:
done	obj/net/ns.asm	/^      done = 1;$/;"	d
done	obj/net/ns.asm	/^ done:$/;"	l
down	net/lwip/netif/ppp/fsm.h	/^  void (*down)(fsm*);                               \/* Called when fsm leaves LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
drop	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER drop;             \/* Dropped packets. *\/$/;"	m	struct:stats_proto
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/ns.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testinput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testoutput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echosrv.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echotest.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/httpd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testtime.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/writemotd.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
dummy	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	m	struct:sys_timeo
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
dupacks	net/lwip/include/lwip/tcp.h	/^  u8_t dupacks;$/;"	m	struct:tcp_pcb
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e100_cb	kern/e100.c	/^struct e100_cb $/;"	s	file:
e100_ru	kern/e100.c	/^struct e100_ru {$/;"	s	file:
e100irqnum	kern/e100.h	/^static uint32_t e100irqnum;$/;"	v
e100irqnum	obj/kern/kernel.asm	/^	e100irqnum = pcif->irq_line;$/;"	d
e2s	net/lwip/jos/arch/perror.c	/^e2s(int err) {$/;"	f
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
eaten	obj/net/ns.asm	/^          eaten = 1;$/;"	d
ebp_cur	obj/kern/kernel.asm	/^	ebp_cur = (uint32_t)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echo_n	grade-functions.sh	/^echo_n () {$/;"	f
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echolen	obj/user/echotest.asm	/^	echolen = strlen(msg);$/;"	d
eff_wnd	obj/net/ns.asm	/^          eff_wnd = LWIP_MIN(pcb->cwnd, pcb->snd_wnd);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eidlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t eidlen;$/;"	m	struct:snmp_trap_header_lengths
eidlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t eidlenlen;$/;"	m	struct:snmp_trap_header_lengths
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_cur	obj/kern/kernel.asm	/^	eip_cur = (uint32_t)read_eip();$/;"	d
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
empty	obj/net/ns.asm	/^      empty = i;$/;"	d
empty_table	net/lwip/core/snmp/mib_structs.c	/^empty_table(struct mib_node *node)$/;"	f	file:
en	obj/kern/kernel.asm	/^		en = NULL;$/;"	d
enable	net/lwip/core/snmp/msg_out.c	/^  u8_t enable;$/;"	m	struct:snmp_trap_dst	file:
enabled_flag	net/lwip/netif/ppp/ppp.h	/^    int  enabled_flag;      \/* 0 iff protocol is disabled *\/$/;"	m	struct:protent
end	net/lwip/core/ipv4/ip_frag.c	/^  u16_t end;$/;"	m	struct:ip_reass_helper	file:
end_va	obj/boot/boot.asm	/^	end_va = va + count;$/;"	d
endpoint	net/lwip/netif/ppp/lcp.h	/^    struct epdisc endpoint;      \/* endpoint discriminator *\/$/;"	m	struct:lcp_options	typeref:struct:lcp_options::epdisc
enterprise	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id *enterprise;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_obj_id
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
enum	obj/net/ns.asm	/^enum netconn_type$/;"	l
enum	obj/net/ns.asm	/^enum { thread_hash_size = 257 };$/;"	l
env	lib/libmain.c	/^volatile struct Env *env;$/;"	v	typeref:struct:Env
env	obj/fs/fs.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/fs/fs.asm	/^	env = 0;$/;"	d
env	obj/net/ns.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/net/ns.asm	/^	env = 0;$/;"	d
env	obj/net/ns.asm	/^                env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/net/testinput.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/net/testinput.asm	/^	env = 0;$/;"	d
env	obj/net/testinput.asm	/^                env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/net/testoutput.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/net/testoutput.asm	/^	env = 0;$/;"	d
env	obj/net/testoutput.asm	/^                env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/echosrv.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/echosrv.asm	/^	env = 0;$/;"	d
env	obj/user/echotest.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/echotest.asm	/^	env = 0;$/;"	d
env	obj/user/hello.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/hello.asm	/^	env = 0;$/;"	d
env	obj/user/httpd.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/httpd.asm	/^	env = 0;$/;"	d
env	obj/user/icode.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/icode.asm	/^	env = 0;$/;"	d
env	obj/user/idle.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/idle.asm	/^	env = 0;$/;"	d
env	obj/user/init.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/init.asm	/^	env = 0;$/;"	d
env	obj/user/pingpong.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/pingpong.asm	/^	env = 0;$/;"	d
env	obj/user/pingpong.asm	/^                env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/primes.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/primes.asm	/^	env = 0;$/;"	d
env	obj/user/primes.asm	/^                env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/testtime.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/testtime.asm	/^	env = 0;$/;"	d
env	obj/user/writemotd.asm	/^	env = &envs[ENVX(sys_getenvid())];$/;"	d
env	obj/user/writemotd.asm	/^	env = 0;$/;"	d
env1	obj/kern/kernel.asm	/^	env1 = &envs[ENVX(envid)];$/;"	d
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cr3	inc/env.h	/^	physaddr_t env_cr3;		\/\/ Physical address of page dir$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, size_t size)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e) $/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env_list env_free_list;	\/\/ Free list$/;"	v	typeref:struct:Env_list	file:
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ va at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender	$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ data value sent to us $/;"	m	struct:Env
env_link	inc/env.h	/^	LIST_ENTRY(Env) env_link;	\/\/ Free list link pointers$/;"	m	struct:Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
envid	net/lwip/jos/jif/jif.c	/^    envid_t envid;$/;"	m	struct:jif	file:
envid	obj/kern/kernel.asm	/^		envid = ENVX(curenvid);$/;"	d
envid	obj/net/ns.asm	/^        envid = sys_exofork();$/;"	d
envid	obj/net/testinput.asm	/^        envid = sys_exofork();$/;"	d
envid	obj/net/testoutput.asm	/^        envid = sys_exofork();$/;"	d
envid	obj/user/pingpong.asm	/^        envid = sys_exofork();$/;"	d
envid	obj/user/primes.asm	/^        envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/net/ns.asm	/^envid_t$/;"	l
envid_t	obj/net/testinput.asm	/^envid_t$/;"	l
envid_t	obj/net/testoutput.asm	/^envid_t$/;"	l
envid_t	obj/user/echosrv.asm	/^envid_t$/;"	l
envid_t	obj/user/echotest.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/httpd.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/testtime.asm	/^envid_t$/;"	l
envid_t	obj/user/writemotd.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	kern/pmap.c	/^struct Env *envs;$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env *)boot_alloc (NENV*sizeof(struct Env), PGSIZE);$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^        eph = ph + ELFHDR->e_phnum;$/;"	d
err	net/lwip/api/sockets.c	/^  err_t err;$/;"	m	struct:lwip_setgetsockopt_data	file:
err	net/lwip/api/sockets.c	/^  int err;$/;"	m	struct:lwip_socket	file:
err	net/lwip/core/dns.c	/^  u8_t  err;$/;"	m	struct:dns_table_entry	file:
err	net/lwip/include/lwip/api.h	/^  err_t err;$/;"	m	struct:netconn
err	net/lwip/include/lwip/api_msg.h	/^  err_t *err;$/;"	m	struct:dns_api_msg
err	net/lwip/include/lwip/netifapi.h	/^  err_t err;$/;"	m	struct:netifapi_msg_msg
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;              \/* Misc error. *\/$/;"	m	struct:stats_proto
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_mem
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_syselem
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^				err = -err;$/;"	d
err	obj/net/ns.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/ns.asm	/^                err = sys_page_map(0, va, 0, va, PTE_P | PTE_U | PTE_COW);$/;"	d
err	obj/net/ns.asm	/^                err = sys_page_map(0, va, envid, va, PTE_P | PTE_U);$/;"	d
err	obj/net/ns.asm	/^        err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^        err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^      err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^      err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^    err = ip_output_if(q, src_ip, dst_ip, pcb->ttl, pcb->tos, IP_PROTO_UDP, netif);    $/;"	d
err	obj/net/ns.asm	/^    err = netconn_connect(sock->conn, &remote_addr, ntohs(remote_port));$/;"	d
err	obj/net/ns.asm	/^    err = netconn_disconnect(sock->conn);$/;"	d
err	obj/net/ns.asm	/^    err = netconn_send(sock->conn, &buf);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output_nagle(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_process(pcb);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_send_ctrl(pcb, TCP_FIN);$/;"	d
err	obj/net/ns.asm	/^    err = udp_bind(pcb, &pcb->local_ip, pcb->local_port);$/;"	d
err	obj/net/ns.asm	/^  err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^  err = data.err;$/;"	d
err	obj/net/ns.asm	/^  err = ip_output_if (q, src_ip, ipaddr, pcb->ttl, pcb->tos, pcb->protocol, netif);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_bind(sock->conn, &local_addr, ntohs(local_port));$/;"	d
err	obj/net/ns.asm	/^  err = netconn_listen_with_backlog(sock->conn, backlog);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_peer(newconn, &naddr, &port);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_write(sock->conn, data, size, NETCONN_COPY | ((flags & MSG_MORE)?NETCONN_MORE:0));$/;"	d
err	obj/net/ns.asm	/^  err = tcp_close(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^  err = tcp_write(conn->pcb.tcp, dataptr, len, conn->write_msg->msg.w.apiflags);$/;"	d
err	obj/net/ns.asm	/^err:$/;"	l
err	obj/net/testinput.asm	/^				err = -err;$/;"	d
err	obj/net/testinput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testinput.asm	/^                err = sys_page_map(0, va, 0, va, PTE_P | PTE_U | PTE_COW);$/;"	d
err	obj/net/testinput.asm	/^                err = sys_page_map(0, va, envid, va, PTE_P | PTE_U);$/;"	d
err	obj/net/testinput.asm	/^err:$/;"	l
err	obj/net/testoutput.asm	/^				err = -err;$/;"	d
err	obj/net/testoutput.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/net/testoutput.asm	/^                err = sys_page_map(0, va, 0, va, PTE_P | PTE_U | PTE_COW);$/;"	d
err	obj/net/testoutput.asm	/^                err = sys_page_map(0, va, envid, va, PTE_P | PTE_U);$/;"	d
err	obj/net/testoutput.asm	/^err:$/;"	l
err	obj/user/echosrv.asm	/^				err = -err;$/;"	d
err	obj/user/echosrv.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echosrv.asm	/^err:$/;"	l
err	obj/user/echotest.asm	/^				err = -err;$/;"	d
err	obj/user/echotest.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echotest.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/httpd.asm	/^				err = -err;$/;"	d
err	obj/user/httpd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/httpd.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^                err = sys_page_map(0, va, 0, va, PTE_P | PTE_U | PTE_COW);$/;"	d
err	obj/user/pingpong.asm	/^                err = sys_page_map(0, va, envid, va, PTE_P | PTE_U);$/;"	d
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^                err = sys_page_map(0, va, 0, va, PTE_P | PTE_U | PTE_COW);$/;"	d
err	obj/user/primes.asm	/^                err = sys_page_map(0, va, envid, va, PTE_P | PTE_U);$/;"	d
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/testtime.asm	/^				err = -err;$/;"	d
err	obj/user/testtime.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testtime.asm	/^err:$/;"	l
err	obj/user/writemotd.asm	/^				err = -err;$/;"	d
err	obj/user/writemotd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/writemotd.asm	/^err:$/;"	l
errCode	net/lwip/netif/ppp/ppp.c	/^  int  errCode;                 \/* Code indicating why interface is down. *\/$/;"	m	struct:PPPControl_s	file:
err_strerr	net/lwip/api/err.c	/^static const char *err_strerr[] = {$/;"	v	file:
err_t	net/lwip/include/lwip/err.h	/^ typedef s8_t err_t;$/;"	t
err_t	net/lwip/include/lwip/err.h	/^typedef LWIP_ERR_T err_t;$/;"	t
err_t	obj/net/ns.asm	/^err_t $/;"	l
err_t	obj/net/ns.asm	/^err_t$/;"	l
err_tcp	net/lwip/api/api_msg.c	/^err_tcp(void *arg, err_t err)$/;"	f	file:
err_to_errno	net/lwip/api/sockets.c	148;"	d	file:
err_to_errno_table	net/lwip/api/sockets.c	/^static const int err_to_errno_table[] = {$/;"	v	file:
errf	net/lwip/include/lwip/tcp.h	/^  void (* errf)(void *arg, err_t err);$/;"	m	struct:tcp_pcb
errf	obj/net/ns.asm	/^    errf = pcb->errf;$/;"	d
errf_arg	obj/net/ns.asm	/^    errf_arg = pcb->callback_arg;$/;"	d
erridxlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t erridxlen;$/;"	m	struct:snmp_resp_header_lengths
erridxlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t erridxlenlen;$/;"	m	struct:snmp_resp_header_lengths
errno	net/serv.c	/^int errno;$/;"	v
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/icode.asm	/^error:$/;"	l
error_index	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_index;$/;"	m	struct:snmp_msg_pstat
error_messages	user/httpd.c	/^struct error_messages {$/;"	s	file:
error_status	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_status;$/;"	m	struct:snmp_msg_pstat
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR + 1] =$/;"	v	file:
errors	user/httpd.c	/^struct error_messages errors[] = {$/;"	v	typeref:struct:error_messages
errstatlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t errstatlen;$/;"	m	struct:snmp_resp_header_lengths
errstatlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t errstatlenlen;$/;"	m	struct:snmp_resp_header_lengths
errtfunc	net/lwip/include/lwip/netifapi.h	/^      err_t (* errtfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon15::__anon17
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
eth_addr	net/lwip/include/netif/etharp.h	/^struct eth_addr {$/;"	s
eth_addr_cmp	net/lwip/include/netif/etharp.h	165;"	d
eth_hdr	net/lwip/include/netif/etharp.h	/^struct eth_hdr {$/;"	s
ethaddr	net/lwip/jos/jif/jif.c	/^    struct eth_addr *ethaddr;$/;"	m	struct:jif	typeref:struct:jif::eth_addr	file:
ethaddr	net/lwip/netif/etharp.c	/^  struct eth_addr ethaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::eth_addr	file:
etharp	net/lwip/include/lwip/stats.h	/^  struct stats_proto etharp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
etharp_arp_input	net/lwip/netif/etharp.c	/^etharp_arp_input(struct netif *netif, struct eth_addr *ethaddr, struct pbuf *p)$/;"	f
etharp_cached_entry	net/lwip/netif/etharp.c	/^static u8_t etharp_cached_entry;$/;"	v	file:
etharp_cached_entry	obj/net/ns.asm	/^        etharp_cached_entry = i;$/;"	d
etharp_cached_entry	obj/net/ns.asm	/^  etharp_cached_entry = i;$/;"	d
etharp_entry	net/lwip/netif/etharp.c	/^struct etharp_entry {$/;"	s	file:
etharp_find_addr	net/lwip/netif/etharp.c	/^etharp_find_addr(struct netif *netif, struct ip_addr *ipaddr,$/;"	f
etharp_hdr	net/lwip/include/netif/etharp.h	/^struct etharp_hdr {$/;"	s
etharp_init	net/lwip/include/netif/etharp.h	144;"	d
etharp_ip_input	net/lwip/netif/etharp.c	/^etharp_ip_input(struct netif *netif, struct pbuf *p)$/;"	f
etharp_output	net/lwip/netif/etharp.c	/^etharp_output(struct netif *netif, struct pbuf *q, struct ip_addr *ipaddr)$/;"	f
etharp_q_entry	net/lwip/include/netif/etharp.h	/^struct etharp_q_entry {$/;"	s
etharp_query	net/lwip/netif/etharp.c	/^etharp_query(struct netif *netif, struct ip_addr *ipaddr, struct pbuf *q)$/;"	f
etharp_raw	net/lwip/netif/etharp.c	/^etharp_raw(struct netif *netif, const struct eth_addr *ethsrc_addr,$/;"	f	file:
etharp_request	net/lwip/netif/etharp.c	/^etharp_request(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
etharp_send_ip	net/lwip/netif/etharp.c	/^etharp_send_ip(struct netif *netif, struct pbuf *p, struct eth_addr *src, struct eth_addr *dst)$/;"	f	file:
etharp_state	net/lwip/netif/etharp.c	/^enum etharp_state {$/;"	g	file:
etharp_tmr	net/lwip/netif/etharp.c	/^etharp_tmr(void)$/;"	f
ethbroadcast	net/lwip/netif/etharp.c	/^const struct eth_addr ethbroadcast = {{0xff,0xff,0xff,0xff,0xff,0xff}};$/;"	v	typeref:struct:eth_addr
ethdst_hwaddr	obj/net/ns.asm	/^      ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : hdr->shwaddr.addr;$/;"	d
ethdst_hwaddr	obj/net/ns.asm	/^  ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : ethdst_addr->addr;$/;"	d
ethernet_input	net/lwip/netif/etharp.c	/^ethernet_input(struct pbuf *p, struct netif *netif)$/;"	f
ethhdr	obj/net/ns.asm	/^    ethhdr = p->payload;$/;"	d
ethif	net/lwip/netif/ppp/ppp.c	/^  struct netif *ethif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
ethip_hdr	net/lwip/include/netif/etharp.h	/^struct ethip_hdr {$/;"	s
ethzero	net/lwip/netif/etharp.c	/^const struct eth_addr ethzero = {{0,0,0,0,0,0}};$/;"	v	typeref:struct:eth_addr
event_callback	net/lwip/api/sockets.c	/^event_callback(struct netconn *conn, enum netconn_evt evt, u16_t len)$/;"	f	file:
exceptset	net/lwip/api/sockets.c	/^  fd_set *exceptset;$/;"	m	struct:lwip_select_cb	file:
exit	lib/exit.c	/^exit(void)$/;"	f
expect	grade-lab6.sh	/^		expect() {$/;"	f
explicit_remote	net/lwip/netif/ppp/ppp.h	/^  u_int  explicit_remote   : 1;       \/* remote_name specified with remotename opt *\/$/;"	m	struct:ppp_settings
ext_accm	net/lwip/netif/ppp/ppp.h	/^typedef u_char  ext_accm[32];$/;"	t
ext_mib_node	net/lwip/include/lwip/snmp_msg.h	/^  struct mib_external_node *ext_mib_node;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::mib_external_node
ext_name_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_name_ptr ext_name_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_name_ptr
ext_object_def	net/lwip/include/lwip/snmp_msg.h	/^  struct obj_def ext_object_def;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::obj_def
ext_oid	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id ext_oid;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_obj_id
extcode	net/lwip/netif/ppp/fsm.h	/^  int  (*extcode)(fsm*, int, u_char, u_char*, int); \/* Called when unknown code received *\/$/;"	m	struct:fsm_callbacks
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/net/ns.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testinput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testoutput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extmem	kern/pmap.c	/^static size_t extmem;		\/\/ Amount of extended memory (in bytes)$/;"	v	file:
extmem	obj/kern/kernel.asm	/^	extmem = ROUNDDOWN(nvram_read(NVRAM_EXTLO)*1024, PGSIZE);$/;"	d
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	net/lwip/include/lwip/tcpip.h	/^      void (*f)(void *ctx);$/;"	m	struct:tcpip_msg::__anon28::__anon30
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^	f = (struct File*) blk;$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start-0xc>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 03 00    	add    0x31bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fb                   	sti    $/;"	l
f0100009	obj/kern/kernel.asm	/^f0100009:	4f                   	dec    %edi$/;"	l
f010000a	obj/kern/kernel.asm	/^f010000a:	52                   	push   %edx$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <_start>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	0f 01 15 18 e0 11 00 	lgdtl  0x11e018$/;"	l
f010001c	obj/kern/kernel.asm	/^f010001c:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0100021	obj/kern/kernel.asm	/^f0100021:	8e d8                	mov    %eax,%ds$/;"	l
f0100023	obj/kern/kernel.asm	/^f0100023:	8e c0                	mov    %eax,%es$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	8e d0                	mov    %eax,%ss$/;"	l
f0100027	obj/kern/kernel.asm	/^f0100027:	ea 2e 00 10 f0 08 00 	ljmp   $0x8,$0xf010002e$/;"	l
f010002e	obj/kern/kernel.asm	/^f010002e <relocated>:$/;"	l
f010002e	obj/kern/kernel.asm	/^f010002e:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100033	obj/kern/kernel.asm	/^f0100033:	bc bc df 11 f0       	mov    $0xf011dfbc,%esp$/;"	l
f0100038	obj/kern/kernel.asm	/^f0100038:	e8 a7 00 00 00       	call   f01000e4 <i386_init>$/;"	l
f010003d	obj/kern/kernel.asm	/^f010003d <spin>:$/;"	l
f010003d	obj/kern/kernel.asm	/^f010003d:	eb fe                	jmp    f010003d <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_warn>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	53                   	push   %ebx$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100047	obj/kern/kernel.asm	/^f0100047:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010004a	obj/kern/kernel.asm	/^f010004a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010004d	obj/kern/kernel.asm	/^f010004d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100051	obj/kern/kernel.asm	/^f0100051:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	c7 04 24 00 63 10 f0 	movl   $0xf0106300,(%esp)$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 67 39 00 00       	call   f01039cb <cprintf>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	e8 25 39 00 00       	call   f0103998 <vcprintf>$/;"	l
f0100073	obj/kern/kernel.asm	/^f0100073:	c7 04 24 f3 66 10 f0 	movl   $0xf01066f3,(%esp)$/;"	l
f010007a	obj/kern/kernel.asm	/^f010007a:	e8 4c 39 00 00       	call   f01039cb <cprintf>$/;"	l
f010007f	obj/kern/kernel.asm	/^f010007f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	5b                   	pop    %ebx$/;"	l
f0100083	obj/kern/kernel.asm	/^f0100083:	5d                   	pop    %ebp$/;"	l
f0100084	obj/kern/kernel.asm	/^f0100084:	c3                   	ret    $/;"	l
f0100085	obj/kern/kernel.asm	/^f0100085 <_panic>:$/;"	l
f0100085	obj/kern/kernel.asm	/^f0100085:	55                   	push   %ebp$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 e5                	mov    %esp,%ebp$/;"	l
f0100088	obj/kern/kernel.asm	/^f0100088:	56                   	push   %esi$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	53                   	push   %ebx$/;"	l
f010008a	obj/kern/kernel.asm	/^f010008a:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010008d	obj/kern/kernel.asm	/^f010008d:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0100090	obj/kern/kernel.asm	/^f0100090:	83 3d c0 e1 26 f0 00 	cmpl   $0x0,0xf026e1c0$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	75 3d                	jne    f01000d6 <_panic+0x51>$/;"	l
f0100099	obj/kern/kernel.asm	/^f0100099:	89 35 c0 e1 26 f0    	mov    %esi,0xf026e1c0$/;"	l
f010009f	obj/kern/kernel.asm	/^f010009f:	fa                   	cli    $/;"	l
f01000a0	obj/kern/kernel.asm	/^f01000a0:	fc                   	cld    $/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01000a4	obj/kern/kernel.asm	/^f01000a4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01000a7	obj/kern/kernel.asm	/^f01000a7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01000b2	obj/kern/kernel.asm	/^f01000b2:	c7 04 24 1a 63 10 f0 	movl   $0xf010631a,(%esp)$/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	e8 0d 39 00 00       	call   f01039cb <cprintf>$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01000c2	obj/kern/kernel.asm	/^f01000c2:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	e8 ce 38 00 00       	call   f0103998 <vcprintf>$/;"	l
f01000ca	obj/kern/kernel.asm	/^f01000ca:	c7 04 24 f3 66 10 f0 	movl   $0xf01066f3,(%esp)$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	e8 f5 38 00 00       	call   f01039cb <cprintf>$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000dd	obj/kern/kernel.asm	/^f01000dd:	e8 ce 06 00 00       	call   f01007b0 <monitor>$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	eb f2                	jmp    f01000d6 <_panic+0x51>$/;"	l
f01000e4	obj/kern/kernel.asm	/^f01000e4 <i386_init>:$/;"	l
f01000e4	obj/kern/kernel.asm	/^f01000e4:	55                   	push   %ebp$/;"	l
f01000e5	obj/kern/kernel.asm	/^f01000e5:	89 e5                	mov    %esp,%ebp$/;"	l
f01000e7	obj/kern/kernel.asm	/^f01000e7:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	b8 68 48 29 f0       	mov    $0xf0294868,%eax$/;"	l
f01000ef	obj/kern/kernel.asm	/^f01000ef:	2d bc e1 26 f0       	sub    $0xf026e1bc,%eax$/;"	l
f01000f4	obj/kern/kernel.asm	/^f01000f4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01000f8	obj/kern/kernel.asm	/^f01000f8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01000ff	obj/kern/kernel.asm	/^f01000ff:	00 $/;"	l
f0100100	obj/kern/kernel.asm	/^f0100100:	c7 04 24 bc e1 26 f0 	movl   $0xf026e1bc,(%esp)$/;"	l
f0100107	obj/kern/kernel.asm	/^f0100107:	e8 aa 52 00 00       	call   f01053b6 <memset>$/;"	l
f010010c	obj/kern/kernel.asm	/^f010010c:	e8 94 04 00 00       	call   f01005a5 <cons_init>$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f0100118	obj/kern/kernel.asm	/^f0100118:	00 $/;"	l
f0100119	obj/kern/kernel.asm	/^f0100119:	c7 04 24 32 63 10 f0 	movl   $0xf0106332,(%esp)$/;"	l
f0100120	obj/kern/kernel.asm	/^f0100120:	e8 a6 38 00 00       	call   f01039cb <cprintf>$/;"	l
f0100125	obj/kern/kernel.asm	/^f0100125:	e8 51 15 00 00       	call   f010167b <i386_detect_memory>$/;"	l
f010012a	obj/kern/kernel.asm	/^f010012a:	e8 a9 15 00 00       	call   f01016d8 <i386_vm_init>$/;"	l
f010012f	obj/kern/kernel.asm	/^f010012f:	90                   	nop$/;"	l
f0100130	obj/kern/kernel.asm	/^f0100130:	e8 8c 2f 00 00       	call   f01030c1 <env_init>$/;"	l
f0100135	obj/kern/kernel.asm	/^f0100135:	e8 c6 38 00 00       	call   f0103a00 <idt_init>$/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	e8 cd 37 00 00       	call   f010390c <pic_init>$/;"	l
f010013f	obj/kern/kernel.asm	/^f010013f:	90                   	nop$/;"	l
f0100140	obj/kern/kernel.asm	/^f0100140:	e8 f3 36 00 00       	call   f0103838 <kclock_init>$/;"	l
f0100145	obj/kern/kernel.asm	/^f0100145:	e8 e6 5e 00 00       	call   f0106030 <time_init>$/;"	l
f010014a	obj/kern/kernel.asm	/^f010014a:	e8 49 5c 00 00       	call   f0105d98 <pci_init>$/;"	l
f010014f	obj/kern/kernel.asm	/^f010014f:	c7 04 24 4d 63 10 f0 	movl   $0xf010634d,(%esp)$/;"	l
f0100156	obj/kern/kernel.asm	/^f0100156:	e8 70 38 00 00       	call   f01039cb <cprintf>$/;"	l
f010015b	obj/kern/kernel.asm	/^f010015b:	c7 44 24 04 c5 1f 01 	movl   $0x11fc5,0x4(%esp)$/;"	l
f0100162	obj/kern/kernel.asm	/^f0100162:	00 $/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	c7 04 24 9c e3 11 f0 	movl   $0xf011e39c,(%esp)$/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	e8 4a 35 00 00       	call   f01036b9 <env_create>$/;"	l
f010016f	obj/kern/kernel.asm	/^f010016f:	c7 44 24 04 98 c6 01 	movl   $0x1c698,0x4(%esp)$/;"	l
f0100176	obj/kern/kernel.asm	/^f0100176:	00 $/;"	l
f0100177	obj/kern/kernel.asm	/^f0100177:	c7 04 24 49 a7 1d f0 	movl   $0xf01da749,(%esp)$/;"	l
f010017e	obj/kern/kernel.asm	/^f010017e:	e8 36 35 00 00       	call   f01036b9 <env_create>$/;"	l
f0100183	obj/kern/kernel.asm	/^f0100183:	c7 44 24 04 50 d0 04 	movl   $0x4d050,0x4(%esp)$/;"	l
f010018a	obj/kern/kernel.asm	/^f010018a:	00 $/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	c7 04 24 6c 11 22 f0 	movl   $0xf022116c,(%esp)$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	e8 22 35 00 00       	call   f01036b9 <env_create>$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	e8 08 3f 00 00       	call   f01040a4 <sched_yield>$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c:	00 00                	add    %al,(%eax)$/;"	l
f01001a0	obj/kern/kernel.asm	/^f01001a0 <delay>:$/;"	l
f01001a0	obj/kern/kernel.asm	/^f01001a0:	55                   	push   %ebp$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01001a3	obj/kern/kernel.asm	/^f01001a3:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
f01001a8	obj/kern/kernel.asm	/^f01001a8:	ec                   	in     (%dx),%al$/;"	l
f01001a9	obj/kern/kernel.asm	/^f01001a9:	ec                   	in     (%dx),%al$/;"	l
f01001aa	obj/kern/kernel.asm	/^f01001aa:	ec                   	in     (%dx),%al$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	ec                   	in     (%dx),%al$/;"	l
f01001ac	obj/kern/kernel.asm	/^f01001ac:	5d                   	pop    %ebp$/;"	l
f01001ad	obj/kern/kernel.asm	/^f01001ad:	c3                   	ret    $/;"	l
f01001ae	obj/kern/kernel.asm	/^f01001ae <serial_proc_data>:$/;"	l
f01001ae	obj/kern/kernel.asm	/^f01001ae:	55                   	push   %ebp$/;"	l
f01001af	obj/kern/kernel.asm	/^f01001af:	89 e5                	mov    %esp,%ebp$/;"	l
f01001b1	obj/kern/kernel.asm	/^f01001b1:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01001b6	obj/kern/kernel.asm	/^f01001b6:	ec                   	in     (%dx),%al$/;"	l
f01001b7	obj/kern/kernel.asm	/^f01001b7:	89 c2                	mov    %eax,%edx$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01001be	obj/kern/kernel.asm	/^f01001be:	f6 c2 01             	test   $0x1,%dl$/;"	l
f01001c1	obj/kern/kernel.asm	/^f01001c1:	74 09                	je     f01001cc <serial_proc_data+0x1e>$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01001c8	obj/kern/kernel.asm	/^f01001c8:	ec                   	in     (%dx),%al$/;"	l
f01001c9	obj/kern/kernel.asm	/^f01001c9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01001cc	obj/kern/kernel.asm	/^f01001cc:	5d                   	pop    %ebp$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	c3                   	ret    $/;"	l
f01001ce	obj/kern/kernel.asm	/^f01001ce <cons_intr>:$/;"	l
f01001ce	obj/kern/kernel.asm	/^f01001ce:	55                   	push   %ebp$/;"	l
f01001cf	obj/kern/kernel.asm	/^f01001cf:	89 e5                	mov    %esp,%ebp$/;"	l
f01001d1	obj/kern/kernel.asm	/^f01001d1:	57                   	push   %edi$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	56                   	push   %esi$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	53                   	push   %ebx$/;"	l
f01001d4	obj/kern/kernel.asm	/^f01001d4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01001d7	obj/kern/kernel.asm	/^f01001d7:	89 c6                	mov    %eax,%esi$/;"	l
f01001d9	obj/kern/kernel.asm	/^f01001d9:	bb 04 e4 26 f0       	mov    $0xf026e404,%ebx$/;"	l
f01001de	obj/kern/kernel.asm	/^f01001de:	bf 00 e2 26 f0       	mov    $0xf026e200,%edi$/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3:	eb 1e                	jmp    f0100203 <cons_intr+0x35>$/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	85 c0                	test   %eax,%eax$/;"	l
f01001e7	obj/kern/kernel.asm	/^f01001e7:	74 1a                	je     f0100203 <cons_intr+0x35>$/;"	l
f01001e9	obj/kern/kernel.asm	/^f01001e9:	8b 13                	mov    (%ebx),%edx$/;"	l
f01001eb	obj/kern/kernel.asm	/^f01001eb:	88 04 17             	mov    %al,(%edi,%edx,1)$/;"	l
f01001ee	obj/kern/kernel.asm	/^f01001ee:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f01001f6	obj/kern/kernel.asm	/^f01001f6:	0f 94 c2             	sete   %dl$/;"	l
f01001f9	obj/kern/kernel.asm	/^f01001f9:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	83 ea 01             	sub    $0x1,%edx$/;"	l
f01001ff	obj/kern/kernel.asm	/^f01001ff:	21 d0                	and    %edx,%eax$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	89 03                	mov    %eax,(%ebx)$/;"	l
f0100203	obj/kern/kernel.asm	/^f0100203:	ff d6                	call   *%esi$/;"	l
f0100205	obj/kern/kernel.asm	/^f0100205:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100208	obj/kern/kernel.asm	/^f0100208:	75 db                	jne    f01001e5 <cons_intr+0x17>$/;"	l
f010020a	obj/kern/kernel.asm	/^f010020a:	83 c4 0c             	add    $0xc,%esp$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	5b                   	pop    %ebx$/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	5e                   	pop    %esi$/;"	l
f010020f	obj/kern/kernel.asm	/^f010020f:	5f                   	pop    %edi$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	5d                   	pop    %ebp$/;"	l
f0100211	obj/kern/kernel.asm	/^f0100211:	c3                   	ret    $/;"	l
f0100212	obj/kern/kernel.asm	/^f0100212 <kbd_intr>:$/;"	l
f0100212	obj/kern/kernel.asm	/^f0100212:	55                   	push   %ebp$/;"	l
f0100213	obj/kern/kernel.asm	/^f0100213:	89 e5                	mov    %esp,%ebp$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100218	obj/kern/kernel.asm	/^f0100218:	b8 aa 04 10 f0       	mov    $0xf01004aa,%eax$/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	e8 ac ff ff ff       	call   f01001ce <cons_intr>$/;"	l
f0100222	obj/kern/kernel.asm	/^f0100222:	c9                   	leave  $/;"	l
f0100223	obj/kern/kernel.asm	/^f0100223:	c3                   	ret    $/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224 <serial_intr>:$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	55                   	push   %ebp$/;"	l
f0100225	obj/kern/kernel.asm	/^f0100225:	89 e5                	mov    %esp,%ebp$/;"	l
f0100227	obj/kern/kernel.asm	/^f0100227:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010022a	obj/kern/kernel.asm	/^f010022a:	83 3d e4 e1 26 f0 00 	cmpl   $0x0,0xf026e1e4$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	74 0a                	je     f010023d <serial_intr+0x19>$/;"	l
f0100233	obj/kern/kernel.asm	/^f0100233:	b8 ae 01 10 f0       	mov    $0xf01001ae,%eax$/;"	l
f0100238	obj/kern/kernel.asm	/^f0100238:	e8 91 ff ff ff       	call   f01001ce <cons_intr>$/;"	l
f010023d	obj/kern/kernel.asm	/^f010023d:	c9                   	leave  $/;"	l
f010023e	obj/kern/kernel.asm	/^f010023e:	c3                   	ret    $/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f <cons_getc>:$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	55                   	push   %ebp$/;"	l
f0100240	obj/kern/kernel.asm	/^f0100240:	89 e5                	mov    %esp,%ebp$/;"	l
f0100242	obj/kern/kernel.asm	/^f0100242:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100245	obj/kern/kernel.asm	/^f0100245:	e8 da ff ff ff       	call   f0100224 <serial_intr>$/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	e8 c3 ff ff ff       	call   f0100212 <kbd_intr>$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	8b 15 00 e4 26 f0    	mov    0xf026e400,%edx$/;"	l
f0100255	obj/kern/kernel.asm	/^f0100255:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010025a	obj/kern/kernel.asm	/^f010025a:	3b 15 04 e4 26 f0    	cmp    0xf026e404,%edx$/;"	l
f0100260	obj/kern/kernel.asm	/^f0100260:	74 21                	je     f0100283 <cons_getc+0x44>$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	0f b6 82 00 e2 26 f0 	movzbl -0xfd91e00(%edx),%eax$/;"	l
f0100269	obj/kern/kernel.asm	/^f0100269:	83 c2 01             	add    $0x1,%edx$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f0100272	obj/kern/kernel.asm	/^f0100272:	0f 94 c1             	sete   %cl$/;"	l
f0100275	obj/kern/kernel.asm	/^f0100275:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f0100278	obj/kern/kernel.asm	/^f0100278:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	21 ca                	and    %ecx,%edx$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	89 15 00 e4 26 f0    	mov    %edx,0xf026e400$/;"	l
f0100283	obj/kern/kernel.asm	/^f0100283:	c9                   	leave  $/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	c3                   	ret    $/;"	l
f0100285	obj/kern/kernel.asm	/^f0100285 <getchar>:$/;"	l
f0100285	obj/kern/kernel.asm	/^f0100285:	55                   	push   %ebp$/;"	l
f0100286	obj/kern/kernel.asm	/^f0100286:	89 e5                	mov    %esp,%ebp$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010028b	obj/kern/kernel.asm	/^f010028b:	e8 af ff ff ff       	call   f010023f <cons_getc>$/;"	l
f0100290	obj/kern/kernel.asm	/^f0100290:	85 c0                	test   %eax,%eax$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	74 f7                	je     f010028b <getchar+0x6>$/;"	l
f0100294	obj/kern/kernel.asm	/^f0100294:	c9                   	leave  $/;"	l
f0100295	obj/kern/kernel.asm	/^f0100295:	c3                   	ret    $/;"	l
f0100296	obj/kern/kernel.asm	/^f0100296 <iscons>:$/;"	l
f0100296	obj/kern/kernel.asm	/^f0100296:	55                   	push   %ebp$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	89 e5                	mov    %esp,%ebp$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010029e	obj/kern/kernel.asm	/^f010029e:	5d                   	pop    %ebp$/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	c3                   	ret    $/;"	l
f01002a0	obj/kern/kernel.asm	/^f01002a0 <cons_putc>:$/;"	l
f01002a0	obj/kern/kernel.asm	/^f01002a0:	55                   	push   %ebp$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01002a3	obj/kern/kernel.asm	/^f01002a3:	57                   	push   %edi$/;"	l
f01002a4	obj/kern/kernel.asm	/^f01002a4:	56                   	push   %esi$/;"	l
f01002a5	obj/kern/kernel.asm	/^f01002a5:	53                   	push   %ebx$/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01002a9	obj/kern/kernel.asm	/^f01002a9:	89 c7                	mov    %eax,%edi$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01002b0	obj/kern/kernel.asm	/^f01002b0:	ec                   	in     (%dx),%al$/;"	l
f01002b1	obj/kern/kernel.asm	/^f01002b1:	a8 20                	test   $0x20,%al$/;"	l
f01002b3	obj/kern/kernel.asm	/^f01002b3:	75 21                	jne    f01002d6 <cons_putc+0x36>$/;"	l
f01002b5	obj/kern/kernel.asm	/^f01002b5:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01002ba	obj/kern/kernel.asm	/^f01002ba:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f01002bf	obj/kern/kernel.asm	/^f01002bf:	e8 dc fe ff ff       	call   f01001a0 <delay>$/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4:	89 f2                	mov    %esi,%edx$/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	ec                   	in     (%dx),%al$/;"	l
f01002c7	obj/kern/kernel.asm	/^f01002c7:	a8 20                	test   $0x20,%al$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	75 0b                	jne    f01002d6 <cons_putc+0x36>$/;"	l
f01002cb	obj/kern/kernel.asm	/^f01002cb:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	81 fb 00 32 00 00    	cmp    $0x3200,%ebx$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	75 e9                	jne    f01002bf <cons_putc+0x1f>$/;"	l
f01002d6	obj/kern/kernel.asm	/^f01002d6:	89 fa                	mov    %edi,%edx$/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	89 f8                	mov    %edi,%eax$/;"	l
f01002da	obj/kern/kernel.asm	/^f01002da:	88 55 e7             	mov    %dl,-0x19(%ebp)$/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01002e2	obj/kern/kernel.asm	/^f01002e2:	ee                   	out    %al,(%dx)$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	b2 79                	mov    $0x79,%dl$/;"	l
f01002e5	obj/kern/kernel.asm	/^f01002e5:	ec                   	in     (%dx),%al$/;"	l
f01002e6	obj/kern/kernel.asm	/^f01002e6:	84 c0                	test   %al,%al$/;"	l
f01002e8	obj/kern/kernel.asm	/^f01002e8:	78 21                	js     f010030b <cons_putc+0x6b>$/;"	l
f01002ea	obj/kern/kernel.asm	/^f01002ea:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f01002f4	obj/kern/kernel.asm	/^f01002f4:	e8 a7 fe ff ff       	call   f01001a0 <delay>$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	89 f2                	mov    %esi,%edx$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	ec                   	in     (%dx),%al$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	84 c0                	test   %al,%al$/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe:	78 0b                	js     f010030b <cons_putc+0x6b>$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	81 fb 00 32 00 00    	cmp    $0x3200,%ebx$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	75 e9                	jne    f01002f4 <cons_putc+0x54>$/;"	l
f010030b	obj/kern/kernel.asm	/^f010030b:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f0100314	obj/kern/kernel.asm	/^f0100314:	ee                   	out    %al,(%dx)$/;"	l
f0100315	obj/kern/kernel.asm	/^f0100315:	b2 7a                	mov    $0x7a,%dl$/;"	l
f0100317	obj/kern/kernel.asm	/^f0100317:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f010031c	obj/kern/kernel.asm	/^f010031c:	ee                   	out    %al,(%dx)$/;"	l
f010031d	obj/kern/kernel.asm	/^f010031d:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0100322	obj/kern/kernel.asm	/^f0100322:	ee                   	out    %al,(%dx)$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	f7 c7 00 ff ff ff    	test   $0xffffff00,%edi$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	75 06                	jne    f0100331 <cons_putc+0x91>$/;"	l
f010032b	obj/kern/kernel.asm	/^f010032b:	81 cf 00 07 00 00    	or     $0x700,%edi$/;"	l
f0100331	obj/kern/kernel.asm	/^f0100331:	89 f8                	mov    %edi,%eax$/;"	l
f0100333	obj/kern/kernel.asm	/^f0100333:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010033b	obj/kern/kernel.asm	/^f010033b:	0f 84 83 00 00 00    	je     f01003c4 <cons_putc+0x124>$/;"	l
f0100341	obj/kern/kernel.asm	/^f0100341:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100344	obj/kern/kernel.asm	/^f0100344:	7f 0c                	jg     f0100352 <cons_putc+0xb2>$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100349	obj/kern/kernel.asm	/^f0100349:	0f 85 a9 00 00 00    	jne    f01003f8 <cons_putc+0x158>$/;"	l
f010034f	obj/kern/kernel.asm	/^f010034f:	90                   	nop$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	eb 18                	jmp    f010036a <cons_putc+0xca>$/;"	l
f0100352	obj/kern/kernel.asm	/^f0100352:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	74 40                	je     f010039a <cons_putc+0xfa>$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0100360	obj/kern/kernel.asm	/^f0100360:	0f 85 92 00 00 00    	jne    f01003f8 <cons_putc+0x158>$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	66 90                	xchg   %ax,%ax$/;"	l
f0100368	obj/kern/kernel.asm	/^f0100368:	eb 38                	jmp    f01003a2 <cons_putc+0x102>$/;"	l
f010036a	obj/kern/kernel.asm	/^f010036a:	0f b7 05 f0 e1 26 f0 	movzwl 0xf026e1f0,%eax$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	66 85 c0             	test   %ax,%ax$/;"	l
f0100374	obj/kern/kernel.asm	/^f0100374:	0f 84 e8 00 00 00    	je     f0100462 <cons_putc+0x1c2>$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	66 a3 f0 e1 26 f0    	mov    %ax,0xf026e1f0$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f010038b	obj/kern/kernel.asm	/^f010038b:	83 cf 20             	or     $0x20,%edi$/;"	l
f010038e	obj/kern/kernel.asm	/^f010038e:	8b 15 ec e1 26 f0    	mov    0xf026e1ec,%edx$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f0100398	obj/kern/kernel.asm	/^f0100398:	eb 7b                	jmp    f0100415 <cons_putc+0x175>$/;"	l
f010039a	obj/kern/kernel.asm	/^f010039a:	66 83 05 f0 e1 26 f0 	addw   $0x50,0xf026e1f0$/;"	l
f01003a1	obj/kern/kernel.asm	/^f01003a1:	50 $/;"	l
f01003a2	obj/kern/kernel.asm	/^f01003a2:	0f b7 05 f0 e1 26 f0 	movzwl 0xf026e1f0,%eax$/;"	l
f01003a9	obj/kern/kernel.asm	/^f01003a9:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01003b2	obj/kern/kernel.asm	/^f01003b2:	66 c1 e8 06          	shr    $0x6,%ax$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	66 a3 f0 e1 26 f0    	mov    %ax,0xf026e1f0$/;"	l
f01003c2	obj/kern/kernel.asm	/^f01003c2:	eb 51                	jmp    f0100415 <cons_putc+0x175>$/;"	l
f01003c4	obj/kern/kernel.asm	/^f01003c4:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003c9	obj/kern/kernel.asm	/^f01003c9:	e8 d2 fe ff ff       	call   f01002a0 <cons_putc>$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003d3	obj/kern/kernel.asm	/^f01003d3:	e8 c8 fe ff ff       	call   f01002a0 <cons_putc>$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	e8 be fe ff ff       	call   f01002a0 <cons_putc>$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003e7	obj/kern/kernel.asm	/^f01003e7:	e8 b4 fe ff ff       	call   f01002a0 <cons_putc>$/;"	l
f01003ec	obj/kern/kernel.asm	/^f01003ec:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01003f1	obj/kern/kernel.asm	/^f01003f1:	e8 aa fe ff ff       	call   f01002a0 <cons_putc>$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	eb 1d                	jmp    f0100415 <cons_putc+0x175>$/;"	l
f01003f8	obj/kern/kernel.asm	/^f01003f8:	0f b7 05 f0 e1 26 f0 	movzwl 0xf026e1f0,%eax$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	0f b7 c8             	movzwl %ax,%ecx$/;"	l
f0100402	obj/kern/kernel.asm	/^f0100402:	8b 15 ec e1 26 f0    	mov    0xf026e1ec,%edx$/;"	l
f0100408	obj/kern/kernel.asm	/^f0100408:	66 89 3c 4a          	mov    %di,(%edx,%ecx,2)$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010040f	obj/kern/kernel.asm	/^f010040f:	66 a3 f0 e1 26 f0    	mov    %ax,0xf026e1f0$/;"	l
f0100415	obj/kern/kernel.asm	/^f0100415:	66 81 3d f0 e1 26 f0 	cmpw   $0x7cf,0xf026e1f0$/;"	l
f010041c	obj/kern/kernel.asm	/^f010041c:	cf 07 $/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	76 42                	jbe    f0100462 <cons_putc+0x1c2>$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	a1 ec e1 26 f0       	mov    0xf026e1ec,%eax$/;"	l
f0100425	obj/kern/kernel.asm	/^f0100425:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f010042c	obj/kern/kernel.asm	/^f010042c:	00 $/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100437	obj/kern/kernel.asm	/^f0100437:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010043a	obj/kern/kernel.asm	/^f010043a:	e8 d6 4f 00 00       	call   f0105415 <memmove>$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	8b 15 ec e1 26 f0    	mov    0xf026e1ec,%edx$/;"	l
f0100445	obj/kern/kernel.asm	/^f0100445:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f0100450	obj/kern/kernel.asm	/^f0100450:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100453	obj/kern/kernel.asm	/^f0100453:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f0100458	obj/kern/kernel.asm	/^f0100458:	75 f0                	jne    f010044a <cons_putc+0x1aa>$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	66 83 2d f0 e1 26 f0 	subw   $0x50,0xf026e1f0$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	50 $/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	8b 0d e8 e1 26 f0    	mov    0xf026e1e8,%ecx$/;"	l
f0100468	obj/kern/kernel.asm	/^f0100468:	89 cb                	mov    %ecx,%ebx$/;"	l
f010046a	obj/kern/kernel.asm	/^f010046a:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f:	89 ca                	mov    %ecx,%edx$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	ee                   	out    %al,(%dx)$/;"	l
f0100472	obj/kern/kernel.asm	/^f0100472:	0f b7 35 f0 e1 26 f0 	movzwl 0xf026e1f0,%esi$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	89 f0                	mov    %esi,%eax$/;"	l
f010047e	obj/kern/kernel.asm	/^f010047e:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100482	obj/kern/kernel.asm	/^f0100482:	89 ca                	mov    %ecx,%edx$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	ee                   	out    %al,(%dx)$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	89 da                	mov    %ebx,%edx$/;"	l
f010048c	obj/kern/kernel.asm	/^f010048c:	ee                   	out    %al,(%dx)$/;"	l
f010048d	obj/kern/kernel.asm	/^f010048d:	89 f0                	mov    %esi,%eax$/;"	l
f010048f	obj/kern/kernel.asm	/^f010048f:	89 ca                	mov    %ecx,%edx$/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491:	ee                   	out    %al,(%dx)$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	5b                   	pop    %ebx$/;"	l
f0100496	obj/kern/kernel.asm	/^f0100496:	5e                   	pop    %esi$/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497:	5f                   	pop    %edi$/;"	l
f0100498	obj/kern/kernel.asm	/^f0100498:	5d                   	pop    %ebp$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	c3                   	ret    $/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a <cputchar>:$/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a:	55                   	push   %ebp$/;"	l
f010049b	obj/kern/kernel.asm	/^f010049b:	89 e5                	mov    %esp,%ebp$/;"	l
f010049d	obj/kern/kernel.asm	/^f010049d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01004a0	obj/kern/kernel.asm	/^f01004a0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	e8 f8 fd ff ff       	call   f01002a0 <cons_putc>$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	c9                   	leave  $/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	c3                   	ret    $/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa <kbd_proc_data>:$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	55                   	push   %ebp$/;"	l
f01004ab	obj/kern/kernel.asm	/^f01004ab:	89 e5                	mov    %esp,%ebp$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	53                   	push   %ebx$/;"	l
f01004ae	obj/kern/kernel.asm	/^f01004ae:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01004b1	obj/kern/kernel.asm	/^f01004b1:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f01004b6	obj/kern/kernel.asm	/^f01004b6:	ec                   	in     (%dx),%al$/;"	l
f01004b7	obj/kern/kernel.asm	/^f01004b7:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f01004bc	obj/kern/kernel.asm	/^f01004bc:	a8 01                	test   $0x1,%al$/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	0f 84 d9 00 00 00    	je     f010059d <kbd_proc_data+0xf3>$/;"	l
f01004c4	obj/kern/kernel.asm	/^f01004c4:	b2 60                	mov    $0x60,%dl$/;"	l
f01004c6	obj/kern/kernel.asm	/^f01004c6:	ec                   	in     (%dx),%al$/;"	l
f01004c7	obj/kern/kernel.asm	/^f01004c7:	3c e0                	cmp    $0xe0,%al$/;"	l
f01004c9	obj/kern/kernel.asm	/^f01004c9:	75 11                	jne    f01004dc <kbd_proc_data+0x32>$/;"	l
f01004cb	obj/kern/kernel.asm	/^f01004cb:	83 0d e0 e1 26 f0 40 	orl    $0x40,0xf026e1e0$/;"	l
f01004d2	obj/kern/kernel.asm	/^f01004d2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01004d7	obj/kern/kernel.asm	/^f01004d7:	e9 c1 00 00 00       	jmp    f010059d <kbd_proc_data+0xf3>$/;"	l
f01004dc	obj/kern/kernel.asm	/^f01004dc:	84 c0                	test   %al,%al$/;"	l
f01004de	obj/kern/kernel.asm	/^f01004de:	79 32                	jns    f0100512 <kbd_proc_data+0x68>$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	8b 15 e0 e1 26 f0    	mov    0xf026e1e0,%edx$/;"	l
f01004e6	obj/kern/kernel.asm	/^f01004e6:	f6 c2 40             	test   $0x40,%dl$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	75 03                	jne    f01004ee <kbd_proc_data+0x44>$/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01004f1	obj/kern/kernel.asm	/^f01004f1:	0f b6 80 a0 63 10 f0 	movzbl -0xfef9c60(%eax),%eax$/;"	l
f01004f8	obj/kern/kernel.asm	/^f01004f8:	83 c8 40             	or     $0x40,%eax$/;"	l
f01004fb	obj/kern/kernel.asm	/^f01004fb:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01004fe	obj/kern/kernel.asm	/^f01004fe:	f7 d0                	not    %eax$/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	21 c2                	and    %eax,%edx$/;"	l
f0100502	obj/kern/kernel.asm	/^f0100502:	89 15 e0 e1 26 f0    	mov    %edx,0xf026e1e0$/;"	l
f0100508	obj/kern/kernel.asm	/^f0100508:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010050d	obj/kern/kernel.asm	/^f010050d:	e9 8b 00 00 00       	jmp    f010059d <kbd_proc_data+0xf3>$/;"	l
f0100512	obj/kern/kernel.asm	/^f0100512:	8b 15 e0 e1 26 f0    	mov    0xf026e1e0,%edx$/;"	l
f0100518	obj/kern/kernel.asm	/^f0100518:	f6 c2 40             	test   $0x40,%dl$/;"	l
f010051b	obj/kern/kernel.asm	/^f010051b:	74 0c                	je     f0100529 <kbd_proc_data+0x7f>$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0100520	obj/kern/kernel.asm	/^f0100520:	83 e2 bf             	and    $0xffffffbf,%edx$/;"	l
f0100523	obj/kern/kernel.asm	/^f0100523:	89 15 e0 e1 26 f0    	mov    %edx,0xf026e1e0$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010052c	obj/kern/kernel.asm	/^f010052c:	0f b6 90 a0 63 10 f0 	movzbl -0xfef9c60(%eax),%edx$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	0b 15 e0 e1 26 f0    	or     0xf026e1e0,%edx$/;"	l
f0100539	obj/kern/kernel.asm	/^f0100539:	0f b6 88 a0 64 10 f0 	movzbl -0xfef9b60(%eax),%ecx$/;"	l
f0100540	obj/kern/kernel.asm	/^f0100540:	31 ca                	xor    %ecx,%edx$/;"	l
f0100542	obj/kern/kernel.asm	/^f0100542:	89 15 e0 e1 26 f0    	mov    %edx,0xf026e1e0$/;"	l
f0100548	obj/kern/kernel.asm	/^f0100548:	89 d1                	mov    %edx,%ecx$/;"	l
f010054a	obj/kern/kernel.asm	/^f010054a:	83 e1 03             	and    $0x3,%ecx$/;"	l
f010054d	obj/kern/kernel.asm	/^f010054d:	8b 0c 8d a0 65 10 f0 	mov    -0xfef9a60(,%ecx,4),%ecx$/;"	l
f0100554	obj/kern/kernel.asm	/^f0100554:	0f b6 1c 01          	movzbl (%ecx,%eax,1),%ebx$/;"	l
f0100558	obj/kern/kernel.asm	/^f0100558:	f6 c2 08             	test   $0x8,%dl$/;"	l
f010055b	obj/kern/kernel.asm	/^f010055b:	74 1a                	je     f0100577 <kbd_proc_data+0xcd>$/;"	l
f010055d	obj/kern/kernel.asm	/^f010055d:	89 d9                	mov    %ebx,%ecx$/;"	l
f010055f	obj/kern/kernel.asm	/^f010055f:	8d 43 9f             	lea    -0x61(%ebx),%eax$/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562:	83 f8 19             	cmp    $0x19,%eax$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	77 05                	ja     f010056c <kbd_proc_data+0xc2>$/;"	l
f0100567	obj/kern/kernel.asm	/^f0100567:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f010056a	obj/kern/kernel.asm	/^f010056a:	eb 0b                	jmp    f0100577 <kbd_proc_data+0xcd>$/;"	l
f010056c	obj/kern/kernel.asm	/^f010056c:	83 e9 41             	sub    $0x41,%ecx$/;"	l
f010056f	obj/kern/kernel.asm	/^f010056f:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f0100572	obj/kern/kernel.asm	/^f0100572:	77 03                	ja     f0100577 <kbd_proc_data+0xcd>$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0100577	obj/kern/kernel.asm	/^f0100577:	f7 d2                	not    %edx$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	f6 c2 06             	test   $0x6,%dl$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	75 1f                	jne    f010059d <kbd_proc_data+0xf3>$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100584	obj/kern/kernel.asm	/^f0100584:	75 17                	jne    f010059d <kbd_proc_data+0xf3>$/;"	l
f0100586	obj/kern/kernel.asm	/^f0100586:	c7 04 24 5c 63 10 f0 	movl   $0xf010635c,(%esp)$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	e8 39 34 00 00       	call   f01039cb <cprintf>$/;"	l
f0100592	obj/kern/kernel.asm	/^f0100592:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010059c	obj/kern/kernel.asm	/^f010059c:	ee                   	out    %al,(%dx)$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	89 d8                	mov    %ebx,%eax$/;"	l
f010059f	obj/kern/kernel.asm	/^f010059f:	83 c4 14             	add    $0x14,%esp$/;"	l
f01005a2	obj/kern/kernel.asm	/^f01005a2:	5b                   	pop    %ebx$/;"	l
f01005a3	obj/kern/kernel.asm	/^f01005a3:	5d                   	pop    %ebp$/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4:	c3                   	ret    $/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5 <cons_init>:$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	55                   	push   %ebp$/;"	l
f01005a6	obj/kern/kernel.asm	/^f01005a6:	89 e5                	mov    %esp,%ebp$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	57                   	push   %edi$/;"	l
f01005a9	obj/kern/kernel.asm	/^f01005a9:	56                   	push   %esi$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	53                   	push   %ebx$/;"	l
f01005ab	obj/kern/kernel.asm	/^f01005ab:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01005ae	obj/kern/kernel.asm	/^f01005ae:	b8 00 80 0b f0       	mov    $0xf00b8000,%eax$/;"	l
f01005b3	obj/kern/kernel.asm	/^f01005b3:	0f b7 10             	movzwl (%eax),%edx$/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	66 c7 00 5a a5       	movw   $0xa55a,(%eax)$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	0f b7 00             	movzwl (%eax),%eax$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	74 11                	je     f01005d5 <cons_init+0x30>$/;"	l
f01005c4	obj/kern/kernel.asm	/^f01005c4:	c7 05 e8 e1 26 f0 b4 	movl   $0x3b4,0xf026e1e8$/;"	l
f01005cb	obj/kern/kernel.asm	/^f01005cb:	03 00 00 $/;"	l
f01005ce	obj/kern/kernel.asm	/^f01005ce:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f01005d3	obj/kern/kernel.asm	/^f01005d3:	eb 16                	jmp    f01005eb <cons_init+0x46>$/;"	l
f01005d5	obj/kern/kernel.asm	/^f01005d5:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01005dc	obj/kern/kernel.asm	/^f01005dc:	c7 05 e8 e1 26 f0 d4 	movl   $0x3d4,0xf026e1e8$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	03 00 00 $/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f01005eb	obj/kern/kernel.asm	/^f01005eb:	8b 0d e8 e1 26 f0    	mov    0xf026e1e8,%ecx$/;"	l
f01005f1	obj/kern/kernel.asm	/^f01005f1:	89 cb                	mov    %ecx,%ebx$/;"	l
f01005f3	obj/kern/kernel.asm	/^f01005f3:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01005f8	obj/kern/kernel.asm	/^f01005f8:	89 ca                	mov    %ecx,%edx$/;"	l
f01005fa	obj/kern/kernel.asm	/^f01005fa:	ee                   	out    %al,(%dx)$/;"	l
f01005fb	obj/kern/kernel.asm	/^f01005fb:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01005fe	obj/kern/kernel.asm	/^f01005fe:	89 ca                	mov    %ecx,%edx$/;"	l
f0100600	obj/kern/kernel.asm	/^f0100600:	ec                   	in     (%dx),%al$/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	0f b6 f8             	movzbl %al,%edi$/;"	l
f0100604	obj/kern/kernel.asm	/^f0100604:	c1 e7 08             	shl    $0x8,%edi$/;"	l
f0100607	obj/kern/kernel.asm	/^f0100607:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010060c	obj/kern/kernel.asm	/^f010060c:	89 da                	mov    %ebx,%edx$/;"	l
f010060e	obj/kern/kernel.asm	/^f010060e:	ee                   	out    %al,(%dx)$/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	89 ca                	mov    %ecx,%edx$/;"	l
f0100611	obj/kern/kernel.asm	/^f0100611:	ec                   	in     (%dx),%al$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	89 35 ec e1 26 f0    	mov    %esi,0xf026e1ec$/;"	l
f0100618	obj/kern/kernel.asm	/^f0100618:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	09 cf                	or     %ecx,%edi$/;"	l
f010061d	obj/kern/kernel.asm	/^f010061d:	66 89 3d f0 e1 26 f0 	mov    %di,0xf026e1f0$/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	e8 e9 fb ff ff       	call   f0100212 <kbd_intr>$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	0f b7 05 58 e3 11 f0 	movzwl 0xf011e358,%eax$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f0100635	obj/kern/kernel.asm	/^f0100635:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100638	obj/kern/kernel.asm	/^f0100638:	e8 5e 32 00 00       	call   f010389b <irq_setmask_8259A>$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100647	obj/kern/kernel.asm	/^f0100647:	89 da                	mov    %ebx,%edx$/;"	l
f0100649	obj/kern/kernel.asm	/^f0100649:	ee                   	out    %al,(%dx)$/;"	l
f010064a	obj/kern/kernel.asm	/^f010064a:	b2 fb                	mov    $0xfb,%dl$/;"	l
f010064c	obj/kern/kernel.asm	/^f010064c:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100651	obj/kern/kernel.asm	/^f0100651:	ee                   	out    %al,(%dx)$/;"	l
f0100652	obj/kern/kernel.asm	/^f0100652:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f010065c	obj/kern/kernel.asm	/^f010065c:	89 ca                	mov    %ecx,%edx$/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e:	ee                   	out    %al,(%dx)$/;"	l
f010065f	obj/kern/kernel.asm	/^f010065f:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100666	obj/kern/kernel.asm	/^f0100666:	ee                   	out    %al,(%dx)$/;"	l
f0100667	obj/kern/kernel.asm	/^f0100667:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100669	obj/kern/kernel.asm	/^f0100669:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010066e	obj/kern/kernel.asm	/^f010066e:	ee                   	out    %al,(%dx)$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	b2 fc                	mov    $0xfc,%dl$/;"	l
f0100671	obj/kern/kernel.asm	/^f0100671:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	ee                   	out    %al,(%dx)$/;"	l
f0100677	obj/kern/kernel.asm	/^f0100677:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100679	obj/kern/kernel.asm	/^f0100679:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010067e	obj/kern/kernel.asm	/^f010067e:	ee                   	out    %al,(%dx)$/;"	l
f010067f	obj/kern/kernel.asm	/^f010067f:	b2 fd                	mov    $0xfd,%dl$/;"	l
f0100681	obj/kern/kernel.asm	/^f0100681:	ec                   	in     (%dx),%al$/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	3c ff                	cmp    $0xff,%al$/;"	l
f0100684	obj/kern/kernel.asm	/^f0100684:	0f 95 c0             	setne  %al$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	0f b6 f0             	movzbl %al,%esi$/;"	l
f010068a	obj/kern/kernel.asm	/^f010068a:	89 35 e4 e1 26 f0    	mov    %esi,0xf026e1e4$/;"	l
f0100690	obj/kern/kernel.asm	/^f0100690:	89 da                	mov    %ebx,%edx$/;"	l
f0100692	obj/kern/kernel.asm	/^f0100692:	ec                   	in     (%dx),%al$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	89 ca                	mov    %ecx,%edx$/;"	l
f0100695	obj/kern/kernel.asm	/^f0100695:	ec                   	in     (%dx),%al$/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	85 f6                	test   %esi,%esi$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	75 0c                	jne    f01006a6 <cons_init+0x101>$/;"	l
f010069a	obj/kern/kernel.asm	/^f010069a:	c7 04 24 68 63 10 f0 	movl   $0xf0106368,(%esp)$/;"	l
f01006a1	obj/kern/kernel.asm	/^f01006a1:	e8 25 33 00 00       	call   f01039cb <cprintf>$/;"	l
f01006a6	obj/kern/kernel.asm	/^f01006a6:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01006a9	obj/kern/kernel.asm	/^f01006a9:	5b                   	pop    %ebx$/;"	l
f01006aa	obj/kern/kernel.asm	/^f01006aa:	5e                   	pop    %esi$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	5f                   	pop    %edi$/;"	l
f01006ac	obj/kern/kernel.asm	/^f01006ac:	5d                   	pop    %ebp$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	c3                   	ret    $/;"	l
f01006b0	obj/kern/kernel.asm	/^f01006b0 <read_eip>:$/;"	l
f01006b0	obj/kern/kernel.asm	/^f01006b0:	55                   	push   %ebp$/;"	l
f01006b1	obj/kern/kernel.asm	/^f01006b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01006b3	obj/kern/kernel.asm	/^f01006b3:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
f01006b6	obj/kern/kernel.asm	/^f01006b6:	5d                   	pop    %ebp$/;"	l
f01006b7	obj/kern/kernel.asm	/^f01006b7:	c3                   	ret    $/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8 <mon_kerninfo>:$/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8:	55                   	push   %ebp$/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	89 e5                	mov    %esp,%ebp$/;"	l
f01006bb	obj/kern/kernel.asm	/^f01006bb:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01006be	obj/kern/kernel.asm	/^f01006be:	c7 04 24 b0 65 10 f0 	movl   $0xf01065b0,(%esp)$/;"	l
f01006c5	obj/kern/kernel.asm	/^f01006c5:	e8 01 33 00 00       	call   f01039cb <cprintf>$/;"	l
f01006ca	obj/kern/kernel.asm	/^f01006ca:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f01006d1	obj/kern/kernel.asm	/^f01006d1:	00 $/;"	l
f01006d2	obj/kern/kernel.asm	/^f01006d2:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	f0 $/;"	l
f01006da	obj/kern/kernel.asm	/^f01006da:	c7 04 24 b4 67 10 f0 	movl   $0xf01067b4,(%esp)$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	e8 e5 32 00 00       	call   f01039cb <cprintf>$/;"	l
f01006e6	obj/kern/kernel.asm	/^f01006e6:	c7 44 24 08 f5 62 10 	movl   $0x1062f5,0x8(%esp)$/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	00 $/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee:	c7 44 24 04 f5 62 10 	movl   $0xf01062f5,0x4(%esp)$/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5:	f0 $/;"	l
f01006f6	obj/kern/kernel.asm	/^f01006f6:	c7 04 24 d8 67 10 f0 	movl   $0xf01067d8,(%esp)$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	e8 c9 32 00 00       	call   f01039cb <cprintf>$/;"	l
f0100702	obj/kern/kernel.asm	/^f0100702:	c7 44 24 08 bc e1 26 	movl   $0x26e1bc,0x8(%esp)$/;"	l
f0100709	obj/kern/kernel.asm	/^f0100709:	00 $/;"	l
f010070a	obj/kern/kernel.asm	/^f010070a:	c7 44 24 04 bc e1 26 	movl   $0xf026e1bc,0x4(%esp)$/;"	l
f0100711	obj/kern/kernel.asm	/^f0100711:	f0 $/;"	l
f0100712	obj/kern/kernel.asm	/^f0100712:	c7 04 24 fc 67 10 f0 	movl   $0xf01067fc,(%esp)$/;"	l
f0100719	obj/kern/kernel.asm	/^f0100719:	e8 ad 32 00 00       	call   f01039cb <cprintf>$/;"	l
f010071e	obj/kern/kernel.asm	/^f010071e:	c7 44 24 08 68 48 29 	movl   $0x294868,0x8(%esp)$/;"	l
f0100725	obj/kern/kernel.asm	/^f0100725:	00 $/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	c7 44 24 04 68 48 29 	movl   $0xf0294868,0x4(%esp)$/;"	l
f010072d	obj/kern/kernel.asm	/^f010072d:	f0 $/;"	l
f010072e	obj/kern/kernel.asm	/^f010072e:	c7 04 24 20 68 10 f0 	movl   $0xf0106820,(%esp)$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	e8 91 32 00 00       	call   f01039cb <cprintf>$/;"	l
f010073a	obj/kern/kernel.asm	/^f010073a:	b8 67 4c 29 f0       	mov    $0xf0294c67,%eax$/;"	l
f010073f	obj/kern/kernel.asm	/^f010073f:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	89 c2                	mov    %eax,%edx$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f010074c	obj/kern/kernel.asm	/^f010074c:	8d 04 02             	lea    (%edx,%eax,1),%eax$/;"	l
f010074f	obj/kern/kernel.asm	/^f010074f:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f0100752	obj/kern/kernel.asm	/^f0100752:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100756	obj/kern/kernel.asm	/^f0100756:	c7 04 24 44 68 10 f0 	movl   $0xf0106844,(%esp)$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	e8 69 32 00 00       	call   f01039cb <cprintf>$/;"	l
f0100762	obj/kern/kernel.asm	/^f0100762:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	c9                   	leave  $/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768:	c3                   	ret    $/;"	l
f0100769	obj/kern/kernel.asm	/^f0100769 <mon_help>:$/;"	l
f0100769	obj/kern/kernel.asm	/^f0100769:	55                   	push   %ebp$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	89 e5                	mov    %esp,%ebp$/;"	l
f010076c	obj/kern/kernel.asm	/^f010076c:	57                   	push   %edi$/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d:	56                   	push   %esi$/;"	l
f010076e	obj/kern/kernel.asm	/^f010076e:	53                   	push   %ebx$/;"	l
f010076f	obj/kern/kernel.asm	/^f010076f:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100772	obj/kern/kernel.asm	/^f0100772:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100777	obj/kern/kernel.asm	/^f0100777:	be 44 6b 10 f0       	mov    $0xf0106b44,%esi$/;"	l
f010077c	obj/kern/kernel.asm	/^f010077c:	bf 40 6b 10 f0       	mov    $0xf0106b40,%edi$/;"	l
f0100781	obj/kern/kernel.asm	/^f0100781:	8b 04 1e             	mov    (%esi,%ebx,1),%eax$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100788	obj/kern/kernel.asm	/^f0100788:	8b 04 1f             	mov    (%edi,%ebx,1),%eax$/;"	l
f010078b	obj/kern/kernel.asm	/^f010078b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010078f	obj/kern/kernel.asm	/^f010078f:	c7 04 24 c9 65 10 f0 	movl   $0xf01065c9,(%esp)$/;"	l
f0100796	obj/kern/kernel.asm	/^f0100796:	e8 30 32 00 00       	call   f01039cb <cprintf>$/;"	l
f010079b	obj/kern/kernel.asm	/^f010079b:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e:	83 fb 60             	cmp    $0x60,%ebx$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	75 de                	jne    f0100781 <mon_help+0x18>$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01007a8	obj/kern/kernel.asm	/^f01007a8:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01007ab	obj/kern/kernel.asm	/^f01007ab:	5b                   	pop    %ebx$/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac:	5e                   	pop    %esi$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	5f                   	pop    %edi$/;"	l
f01007ae	obj/kern/kernel.asm	/^f01007ae:	5d                   	pop    %ebp$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	c3                   	ret    $/;"	l
f01007b0	obj/kern/kernel.asm	/^f01007b0 <monitor>:$/;"	l
f01007b0	obj/kern/kernel.asm	/^f01007b0:	55                   	push   %ebp$/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01007b3	obj/kern/kernel.asm	/^f01007b3:	57                   	push   %edi$/;"	l
f01007b4	obj/kern/kernel.asm	/^f01007b4:	56                   	push   %esi$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	53                   	push   %ebx$/;"	l
f01007b6	obj/kern/kernel.asm	/^f01007b6:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f01007b9	obj/kern/kernel.asm	/^f01007b9:	c7 04 24 70 68 10 f0 	movl   $0xf0106870,(%esp)$/;"	l
f01007c0	obj/kern/kernel.asm	/^f01007c0:	e8 06 32 00 00       	call   f01039cb <cprintf>$/;"	l
f01007c5	obj/kern/kernel.asm	/^f01007c5:	c7 04 24 94 68 10 f0 	movl   $0xf0106894,(%esp)$/;"	l
f01007cc	obj/kern/kernel.asm	/^f01007cc:	e8 fa 31 00 00       	call   f01039cb <cprintf>$/;"	l
f01007d1	obj/kern/kernel.asm	/^f01007d1:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f01007d5	obj/kern/kernel.asm	/^f01007d5:	74 0d                	je     f01007e4 <monitor+0x34>$/;"	l
f01007d7	obj/kern/kernel.asm	/^f01007d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01007dd	obj/kern/kernel.asm	/^f01007dd:	e8 36 34 00 00       	call   f0103c18 <print_trapframe>$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	eb 0c                	jmp    f01007f0 <monitor+0x40>$/;"	l
f01007e4	obj/kern/kernel.asm	/^f01007e4:	c7 04 24 d2 65 10 f0 	movl   $0xf01065d2,(%esp)$/;"	l
f01007eb	obj/kern/kernel.asm	/^f01007eb:	e8 db 31 00 00       	call   f01039cb <cprintf>$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	c7 04 24 bc 68 10 f0 	movl   $0xf01068bc,(%esp)$/;"	l
f01007f7	obj/kern/kernel.asm	/^f01007f7:	e8 cf 31 00 00       	call   f01039cb <cprintf>$/;"	l
f01007fc	obj/kern/kernel.asm	/^f01007fc:	c7 04 24 de 65 10 f0 	movl   $0xf01065de,(%esp)$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	e8 28 49 00 00       	call   f0105130 <readline>$/;"	l
f0100808	obj/kern/kernel.asm	/^f0100808:	89 c3                	mov    %eax,%ebx$/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a:	85 c0                	test   %eax,%eax$/;"	l
f010080c	obj/kern/kernel.asm	/^f010080c:	74 ee                	je     f01007fc <monitor+0x4c>$/;"	l
f010080e	obj/kern/kernel.asm	/^f010080e:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	eb 06                	jmp    f0100822 <monitor+0x72>$/;"	l
f010081c	obj/kern/kernel.asm	/^f010081c:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f010081f	obj/kern/kernel.asm	/^f010081f:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100822	obj/kern/kernel.asm	/^f0100822:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100825	obj/kern/kernel.asm	/^f0100825:	84 c0                	test   %al,%al$/;"	l
f0100827	obj/kern/kernel.asm	/^f0100827:	74 6c                	je     f0100895 <monitor+0xe5>$/;"	l
f0100829	obj/kern/kernel.asm	/^f0100829:	0f be c0             	movsbl %al,%eax$/;"	l
f010082c	obj/kern/kernel.asm	/^f010082c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100830	obj/kern/kernel.asm	/^f0100830:	c7 04 24 e2 65 10 f0 	movl   $0xf01065e2,(%esp)$/;"	l
f0100837	obj/kern/kernel.asm	/^f0100837:	e8 22 4b 00 00       	call   f010535e <strchr>$/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c:	85 c0                	test   %eax,%eax$/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	75 dc                	jne    f010081c <monitor+0x6c>$/;"	l
f0100840	obj/kern/kernel.asm	/^f0100840:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100843	obj/kern/kernel.asm	/^f0100843:	74 50                	je     f0100895 <monitor+0xe5>$/;"	l
f0100845	obj/kern/kernel.asm	/^f0100845:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100848	obj/kern/kernel.asm	/^f0100848:	75 16                	jne    f0100860 <monitor+0xb0>$/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	00 $/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	c7 04 24 e7 65 10 f0 	movl   $0xf01065e7,(%esp)$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	e8 6d 31 00 00       	call   f01039cb <cprintf>$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	eb 9c                	jmp    f01007fc <monitor+0x4c>$/;"	l
f0100860	obj/kern/kernel.asm	/^f0100860:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100864	obj/kern/kernel.asm	/^f0100864:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100867	obj/kern/kernel.asm	/^f0100867:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010086a	obj/kern/kernel.asm	/^f010086a:	84 c0                	test   %al,%al$/;"	l
f010086c	obj/kern/kernel.asm	/^f010086c:	75 0e                	jne    f010087c <monitor+0xcc>$/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	66 90                	xchg   %ax,%ax$/;"	l
f0100870	obj/kern/kernel.asm	/^f0100870:	eb b0                	jmp    f0100822 <monitor+0x72>$/;"	l
f0100872	obj/kern/kernel.asm	/^f0100872:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100878	obj/kern/kernel.asm	/^f0100878:	84 c0                	test   %al,%al$/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a:	74 a6                	je     f0100822 <monitor+0x72>$/;"	l
f010087c	obj/kern/kernel.asm	/^f010087c:	0f be c0             	movsbl %al,%eax$/;"	l
f010087f	obj/kern/kernel.asm	/^f010087f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883:	c7 04 24 e2 65 10 f0 	movl   $0xf01065e2,(%esp)$/;"	l
f010088a	obj/kern/kernel.asm	/^f010088a:	e8 cf 4a 00 00       	call   f010535e <strchr>$/;"	l
f010088f	obj/kern/kernel.asm	/^f010088f:	85 c0                	test   %eax,%eax$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	74 df                	je     f0100872 <monitor+0xc2>$/;"	l
f0100893	obj/kern/kernel.asm	/^f0100893:	eb 8d                	jmp    f0100822 <monitor+0x72>$/;"	l
f0100895	obj/kern/kernel.asm	/^f0100895:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f010089c	obj/kern/kernel.asm	/^f010089c:	00 $/;"	l
f010089d	obj/kern/kernel.asm	/^f010089d:	85 f6                	test   %esi,%esi$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	90                   	nop$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	0f 84 56 ff ff ff    	je     f01007fc <monitor+0x4c>$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	bb 40 6b 10 f0       	mov    $0xf0106b40,%ebx$/;"	l
f01008ab	obj/kern/kernel.asm	/^f01008ab:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01008b0	obj/kern/kernel.asm	/^f01008b0:	8b 03                	mov    (%ebx),%eax$/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01008b6	obj/kern/kernel.asm	/^f01008b6:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f01008b9	obj/kern/kernel.asm	/^f01008b9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01008bc	obj/kern/kernel.asm	/^f01008bc:	e8 28 4a 00 00       	call   f01052e9 <strcmp>$/;"	l
f01008c1	obj/kern/kernel.asm	/^f01008c1:	85 c0                	test   %eax,%eax$/;"	l
f01008c3	obj/kern/kernel.asm	/^f01008c3:	75 23                	jne    f01008e8 <monitor+0x138>$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	6b ff 0c             	imul   $0xc,%edi,%edi$/;"	l
f01008c8	obj/kern/kernel.asm	/^f01008c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01008cb	obj/kern/kernel.asm	/^f01008cb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01008cf	obj/kern/kernel.asm	/^f01008cf:	8d 45 a8             	lea    -0x58(%ebp),%eax$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01008d6	obj/kern/kernel.asm	/^f01008d6:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01008d9	obj/kern/kernel.asm	/^f01008d9:	ff 97 48 6b 10 f0    	call   *-0xfef94b8(%edi)$/;"	l
f01008df	obj/kern/kernel.asm	/^f01008df:	85 c0                	test   %eax,%eax$/;"	l
f01008e1	obj/kern/kernel.asm	/^f01008e1:	78 28                	js     f010090b <monitor+0x15b>$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	e9 14 ff ff ff       	jmp    f01007fc <monitor+0x4c>$/;"	l
f01008e8	obj/kern/kernel.asm	/^f01008e8:	83 c7 01             	add    $0x1,%edi$/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f01008ee	obj/kern/kernel.asm	/^f01008ee:	83 ff 08             	cmp    $0x8,%edi$/;"	l
f01008f1	obj/kern/kernel.asm	/^f01008f1:	75 bd                	jne    f01008b0 <monitor+0x100>$/;"	l
f01008f3	obj/kern/kernel.asm	/^f01008f3:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	c7 04 24 04 66 10 f0 	movl   $0xf0106604,(%esp)$/;"	l
f0100901	obj/kern/kernel.asm	/^f0100901:	e8 c5 30 00 00       	call   f01039cb <cprintf>$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	e9 f1 fe ff ff       	jmp    f01007fc <monitor+0x4c>$/;"	l
f010090b	obj/kern/kernel.asm	/^f010090b:	c7 04 24 1a 66 10 f0 	movl   $0xf010661a,(%esp)$/;"	l
f0100912	obj/kern/kernel.asm	/^f0100912:	e8 b4 30 00 00       	call   f01039cb <cprintf>$/;"	l
f0100917	obj/kern/kernel.asm	/^f0100917:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f010091a	obj/kern/kernel.asm	/^f010091a:	5b                   	pop    %ebx$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	5e                   	pop    %esi$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	5f                   	pop    %edi$/;"	l
f010091d	obj/kern/kernel.asm	/^f010091d:	5d                   	pop    %ebp$/;"	l
f010091e	obj/kern/kernel.asm	/^f010091e:	c3                   	ret    $/;"	l
f010091f	obj/kern/kernel.asm	/^f010091f <mon_backtrace>:$/;"	l
f010091f	obj/kern/kernel.asm	/^f010091f:	55                   	push   %ebp$/;"	l
f0100920	obj/kern/kernel.asm	/^f0100920:	89 e5                	mov    %esp,%ebp$/;"	l
f0100922	obj/kern/kernel.asm	/^f0100922:	57                   	push   %edi$/;"	l
f0100923	obj/kern/kernel.asm	/^f0100923:	56                   	push   %esi$/;"	l
f0100924	obj/kern/kernel.asm	/^f0100924:	53                   	push   %ebx$/;"	l
f0100925	obj/kern/kernel.asm	/^f0100925:	81 ec 4c 01 00 00    	sub    $0x14c,%esp$/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	89 eb                	mov    %ebp,%ebx$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	c7 04 24 31 66 10 f0 	movl   $0xf0106631,(%esp)$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	e8 92 30 00 00       	call   f01039cb <cprintf>$/;"	l
f0100939	obj/kern/kernel.asm	/^f0100939:	e8 72 fd ff ff       	call   f01006b0 <read_eip>$/;"	l
f010093e	obj/kern/kernel.asm	/^f010093e:	89 c7                	mov    %eax,%edi$/;"	l
f0100940	obj/kern/kernel.asm	/^f0100940:	c7 85 e4 fe ff ff 01 	movl   $0x1,-0x11c(%ebp)$/;"	l
f0100947	obj/kern/kernel.asm	/^f0100947:	00 00 00 $/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	83 fb 01             	cmp    $0x1,%ebx$/;"	l
f010094d	obj/kern/kernel.asm	/^f010094d:	19 c0                	sbb    %eax,%eax$/;"	l
f010094f	obj/kern/kernel.asm	/^f010094f:	f7 d0                	not    %eax$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	21 85 e4 fe ff ff    	and    %eax,-0x11c(%ebp)$/;"	l
f0100957	obj/kern/kernel.asm	/^f0100957:	c7 44 24 08 18 00 00 	movl   $0x18,0x8(%esp)$/;"	l
f010095e	obj/kern/kernel.asm	/^f010095e:	00 $/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0100966	obj/kern/kernel.asm	/^f0100966:	00 $/;"	l
f0100967	obj/kern/kernel.asm	/^f0100967:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e:	e8 43 4a 00 00       	call   f01053b6 <memset>$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010097a	obj/kern/kernel.asm	/^f010097a:	00 $/;"	l
f010097b	obj/kern/kernel.asm	/^f010097b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010097e	obj/kern/kernel.asm	/^f010097e:	e8 3b 3f 00 00       	call   f01048be <debuginfo_eip>$/;"	l
f0100983	obj/kern/kernel.asm	/^f0100983:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	89 85 e0 fe ff ff    	mov    %eax,-0x120(%ebp)$/;"	l
f010098c	obj/kern/kernel.asm	/^f010098c:	8b 4b 0c             	mov    0xc(%ebx),%ecx$/;"	l
f010098f	obj/kern/kernel.asm	/^f010098f:	89 8d dc fe ff ff    	mov    %ecx,-0x124(%ebp)$/;"	l
f0100995	obj/kern/kernel.asm	/^f0100995:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0100998	obj/kern/kernel.asm	/^f0100998:	89 85 d8 fe ff ff    	mov    %eax,-0x128(%ebp)$/;"	l
f010099e	obj/kern/kernel.asm	/^f010099e:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f01009a1	obj/kern/kernel.asm	/^f01009a1:	89 8d d4 fe ff ff    	mov    %ecx,-0x12c(%ebp)$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%ebp)$/;"	l
f01009b0	obj/kern/kernel.asm	/^f01009b0:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01009b5	obj/kern/kernel.asm	/^f01009b5:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f01009b8	obj/kern/kernel.asm	/^f01009b8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01009bc	obj/kern/kernel.asm	/^f01009bc:	8d 8d e8 fe ff ff    	lea    -0x118(%ebp),%ecx$/;"	l
f01009c2	obj/kern/kernel.asm	/^f01009c2:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	e8 90 48 00 00       	call   f010525a <strcpy>$/;"	l
f01009ca	obj/kern/kernel.asm	/^f01009ca:	8b 46 0c             	mov    0xc(%esi),%eax$/;"	l
f01009cd	obj/kern/kernel.asm	/^f01009cd:	c6 84 05 e8 fe ff ff 	movb   $0x0,-0x118(%ebp,%eax,1)$/;"	l
f01009d4	obj/kern/kernel.asm	/^f01009d4:	00 $/;"	l
f01009d5	obj/kern/kernel.asm	/^f01009d5:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax$/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f01009df	obj/kern/kernel.asm	/^f01009df:	8b 8d d4 fe ff ff    	mov    -0x12c(%ebp),%ecx$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	89 4c 24 18          	mov    %ecx,0x18(%esp)$/;"	l
f01009e9	obj/kern/kernel.asm	/^f01009e9:	8b 85 d8 fe ff ff    	mov    -0x128(%ebp),%eax$/;"	l
f01009ef	obj/kern/kernel.asm	/^f01009ef:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	8b 8d dc fe ff ff    	mov    -0x124(%ebp),%ecx$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f01009fd	obj/kern/kernel.asm	/^f01009fd:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax$/;"	l
f0100a03	obj/kern/kernel.asm	/^f0100a03:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0100a0b	obj/kern/kernel.asm	/^f0100a0b:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100a0f	obj/kern/kernel.asm	/^f0100a0f:	c7 04 24 e8 68 10 f0 	movl   $0xf01068e8,(%esp)$/;"	l
f0100a16	obj/kern/kernel.asm	/^f0100a16:	e8 b0 2f 00 00       	call   f01039cb <cprintf>$/;"	l
f0100a1b	obj/kern/kernel.asm	/^f0100a1b:	8b 56 04             	mov    0x4(%esi),%edx$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	8b 06                	mov    (%esi),%eax$/;"	l
f0100a20	obj/kern/kernel.asm	/^f0100a20:	2b 7e 10             	sub    0x10(%esi),%edi$/;"	l
f0100a23	obj/kern/kernel.asm	/^f0100a23:	89 7c 24 10          	mov    %edi,0x10(%esp)$/;"	l
f0100a27	obj/kern/kernel.asm	/^f0100a27:	8d 8d e8 fe ff ff    	lea    -0x118(%ebp),%ecx$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100a35	obj/kern/kernel.asm	/^f0100a35:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a39	obj/kern/kernel.asm	/^f0100a39:	c7 04 24 43 66 10 f0 	movl   $0xf0106643,(%esp)$/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	e8 86 2f 00 00       	call   f01039cb <cprintf>$/;"	l
f0100a45	obj/kern/kernel.asm	/^f0100a45:	8b 7b 04             	mov    0x4(%ebx),%edi$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	83 bd e4 fe ff ff 00 	cmpl   $0x0,-0x11c(%ebp)$/;"	l
f0100a51	obj/kern/kernel.asm	/^f0100a51:	0f 85 f3 fe ff ff    	jne    f010094a <mon_backtrace+0x2b>$/;"	l
f0100a57	obj/kern/kernel.asm	/^f0100a57:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a5c	obj/kern/kernel.asm	/^f0100a5c:	81 c4 4c 01 00 00    	add    $0x14c,%esp$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	5b                   	pop    %ebx$/;"	l
f0100a63	obj/kern/kernel.asm	/^f0100a63:	5e                   	pop    %esi$/;"	l
f0100a64	obj/kern/kernel.asm	/^f0100a64:	5f                   	pop    %edi$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	5d                   	pop    %ebp$/;"	l
f0100a66	obj/kern/kernel.asm	/^f0100a66:	c3                   	ret    $/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67 <showmap>:$/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67:	55                   	push   %ebp$/;"	l
f0100a68	obj/kern/kernel.asm	/^f0100a68:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0100a6d	obj/kern/kernel.asm	/^f0100a6d:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0100a76	obj/kern/kernel.asm	/^f0100a76:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100a79	obj/kern/kernel.asm	/^f0100a79:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	c7 04 24 14 67 10 f0 	movl   $0xf0106714,(%esp)$/;"	l
f0100a84	obj/kern/kernel.asm	/^f0100a84:	e8 42 2f 00 00       	call   f01039cb <cprintf>$/;"	l
f0100a89	obj/kern/kernel.asm	/^f0100a89:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100a90	obj/kern/kernel.asm	/^f0100a90:	00 $/;"	l
f0100a91	obj/kern/kernel.asm	/^f0100a91:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100a95	obj/kern/kernel.asm	/^f0100a95:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f0100a9a	obj/kern/kernel.asm	/^f0100a9a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	e8 3d 07 00 00       	call   f01011df <pgdir_walk>$/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2:	89 c3                	mov    %eax,%ebx$/;"	l
f0100aa4	obj/kern/kernel.asm	/^f0100aa4:	85 c0                	test   %eax,%eax$/;"	l
f0100aa6	obj/kern/kernel.asm	/^f0100aa6:	75 15                	jne    f0100abd <showmap+0x56>$/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100aac	obj/kern/kernel.asm	/^f0100aac:	c7 04 24 1c 69 10 f0 	movl   $0xf010691c,(%esp)$/;"	l
f0100ab3	obj/kern/kernel.asm	/^f0100ab3:	e8 13 2f 00 00       	call   f01039cb <cprintf>$/;"	l
f0100ab8	obj/kern/kernel.asm	/^f0100ab8:	e9 8d 00 00 00       	jmp    f0100b4a <showmap+0xe3>$/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	8b 38                	mov    (%eax),%edi$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	85 ff                	test   %edi,%edi$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	75 12                	jne    f0100ad5 <showmap+0x6e>$/;"	l
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100ac7	obj/kern/kernel.asm	/^f0100ac7:	c7 04 24 5c 69 10 f0 	movl   $0xf010695c,(%esp)$/;"	l
f0100ace	obj/kern/kernel.asm	/^f0100ace:	e8 f8 2e 00 00       	call   f01039cb <cprintf>$/;"	l
f0100ad3	obj/kern/kernel.asm	/^f0100ad3:	eb 75                	jmp    f0100b4a <showmap+0xe3>$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	89 f8                	mov    %edi,%eax$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f0100adc	obj/kern/kernel.asm	/^f0100adc:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100adf	obj/kern/kernel.asm	/^f0100adf:	c7 04 24 cc 69 10 f0 	movl   $0xf01069cc,(%esp)$/;"	l
f0100ae6	obj/kern/kernel.asm	/^f0100ae6:	e8 e0 2e 00 00       	call   f01039cb <cprintf>$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100aed	obj/kern/kernel.asm	/^f0100aed:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100af2	obj/kern/kernel.asm	/^f0100af2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa:	c7 04 24 52 66 10 f0 	movl   $0xf0106652,(%esp)$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	e8 c5 2e 00 00       	call   f01039cb <cprintf>$/;"	l
f0100b06	obj/kern/kernel.asm	/^f0100b06:	f7 c7 01 00 00 00    	test   $0x1,%edi$/;"	l
f0100b0c	obj/kern/kernel.asm	/^f0100b0c:	74 0c                	je     f0100b1a <showmap+0xb3>$/;"	l
f0100b0e	obj/kern/kernel.asm	/^f0100b0e:	c7 04 24 5b 66 10 f0 	movl   $0xf010665b,(%esp)$/;"	l
f0100b15	obj/kern/kernel.asm	/^f0100b15:	e8 b1 2e 00 00       	call   f01039cb <cprintf>$/;"	l
f0100b1a	obj/kern/kernel.asm	/^f0100b1a:	f6 45 e4 02          	testb  $0x2,-0x1c(%ebp)$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	74 0c                	je     f0100b2c <showmap+0xc5>$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	c7 04 24 61 66 10 f0 	movl   $0xf0106661,(%esp)$/;"	l
f0100b27	obj/kern/kernel.asm	/^f0100b27:	e8 9f 2e 00 00       	call   f01039cb <cprintf>$/;"	l
f0100b2c	obj/kern/kernel.asm	/^f0100b2c:	f6 45 e4 04          	testb  $0x4,-0x1c(%ebp)$/;"	l
f0100b30	obj/kern/kernel.asm	/^f0100b30:	74 0c                	je     f0100b3e <showmap+0xd7>$/;"	l
f0100b32	obj/kern/kernel.asm	/^f0100b32:	c7 04 24 68 66 10 f0 	movl   $0xf0106668,(%esp)$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	e8 8d 2e 00 00       	call   f01039cb <cprintf>$/;"	l
f0100b3e	obj/kern/kernel.asm	/^f0100b3e:	c7 04 24 f3 66 10 f0 	movl   $0xf01066f3,(%esp)$/;"	l
f0100b45	obj/kern/kernel.asm	/^f0100b45:	e8 81 2e 00 00       	call   f01039cb <cprintf>$/;"	l
f0100b4a	obj/kern/kernel.asm	/^f0100b4a:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0100b53	obj/kern/kernel.asm	/^f0100b53:	89 ec                	mov    %ebp,%esp$/;"	l
f0100b55	obj/kern/kernel.asm	/^f0100b55:	5d                   	pop    %ebp$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	c3                   	ret    $/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57 <alloc_page>:$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	55                   	push   %ebp$/;"	l
f0100b58	obj/kern/kernel.asm	/^f0100b58:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b5a	obj/kern/kernel.asm	/^f0100b5a:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0100b5d	obj/kern/kernel.asm	/^f0100b5d:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	7e 0e                	jle    f0100b71 <alloc_page+0x1a>$/;"	l
f0100b63	obj/kern/kernel.asm	/^f0100b63:	c7 04 24 6f 66 10 f0 	movl   $0xf010666f,(%esp)$/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	e8 5c 2e 00 00       	call   f01039cb <cprintf>$/;"	l
f0100b6f	obj/kern/kernel.asm	/^f0100b6f:	eb 67                	jmp    f0100bd8 <alloc_page+0x81>$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100b74	obj/kern/kernel.asm	/^f0100b74:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b77	obj/kern/kernel.asm	/^f0100b77:	e8 13 06 00 00       	call   f010118f <page_alloc>$/;"	l
f0100b7c	obj/kern/kernel.asm	/^f0100b7c:	85 c0                	test   %eax,%eax$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	66 90                	xchg   %ax,%ax$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	75 4a                	jne    f0100bcc <alloc_page+0x75>$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a:	77 20                	ja     f0100bac <alloc_page+0x55>$/;"	l
f0100b8c	obj/kern/kernel.asm	/^f0100b8c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	c7 44 24 08 fc 69 10 	movl   $0xf01069fc,0x8(%esp)$/;"	l
f0100b97	obj/kern/kernel.asm	/^f0100b97:	f0 $/;"	l
f0100b98	obj/kern/kernel.asm	/^f0100b98:	c7 44 24 04 91 00 00 	movl   $0x91,0x4(%esp)$/;"	l
f0100b9f	obj/kern/kernel.asm	/^f0100b9f:	00 $/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	c7 04 24 82 66 10 f0 	movl   $0xf0106682,(%esp)$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	e8 d9 f4 ff ff       	call   f0100085 <_panic>$/;"	l
f0100bac	obj/kern/kernel.asm	/^f0100bac:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100bb1	obj/kern/kernel.asm	/^f0100bb1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100bb5	obj/kern/kernel.asm	/^f0100bb5:	c7 04 24 91 66 10 f0 	movl   $0xf0106691,(%esp)$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	e8 0a 2e 00 00       	call   f01039cb <cprintf>$/;"	l
f0100bc1	obj/kern/kernel.asm	/^f0100bc1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100bc4	obj/kern/kernel.asm	/^f0100bc4:	66 c7 40 08 01 00    	movw   $0x1,0x8(%eax)$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	eb 0c                	jmp    f0100bd8 <alloc_page+0x81>$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	c7 04 24 97 66 10 f0 	movl   $0xf0106697,(%esp)$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	e8 f3 2d 00 00       	call   f01039cb <cprintf>$/;"	l
f0100bd8	obj/kern/kernel.asm	/^f0100bd8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	c9                   	leave  $/;"	l
f0100bde	obj/kern/kernel.asm	/^f0100bde:	c3                   	ret    $/;"	l
f0100bdf	obj/kern/kernel.asm	/^f0100bdf <atoi>:$/;"	l
f0100bdf	obj/kern/kernel.asm	/^f0100bdf:	55                   	push   %ebp$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0:	89 e5                	mov    %esp,%ebp$/;"	l
f0100be2	obj/kern/kernel.asm	/^f0100be2:	57                   	push   %edi$/;"	l
f0100be3	obj/kern/kernel.asm	/^f0100be3:	56                   	push   %esi$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	53                   	push   %ebx$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0100beb	obj/kern/kernel.asm	/^f0100beb:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee:	e8 1d 46 00 00       	call   f0105210 <strlen>$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	89 c7                	mov    %eax,%edi$/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100bff	obj/kern/kernel.asm	/^f0100bff:	89 f9                	mov    %edi,%ecx$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	78 12                	js     f0100c18 <atoi+0x39>$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	8d 34 80             	lea    (%eax,%eax,4),%esi$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	0f be 0c 13          	movsbl (%ebx,%edx,1),%ecx$/;"	l
f0100c0d	obj/kern/kernel.asm	/^f0100c0d:	8d 44 71 d0          	lea    -0x30(%ecx,%esi,2),%eax$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100c14	obj/kern/kernel.asm	/^f0100c14:	39 fa                	cmp    %edi,%edx$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	75 ee                	jne    f0100c06 <atoi+0x27>$/;"	l
f0100c18	obj/kern/kernel.asm	/^f0100c18:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	5b                   	pop    %ebx$/;"	l
f0100c1c	obj/kern/kernel.asm	/^f0100c1c:	5e                   	pop    %esi$/;"	l
f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	5f                   	pop    %edi$/;"	l
f0100c1e	obj/kern/kernel.asm	/^f0100c1e:	5d                   	pop    %ebp$/;"	l
f0100c1f	obj/kern/kernel.asm	/^f0100c1f:	c3                   	ret    $/;"	l
f0100c20	obj/kern/kernel.asm	/^f0100c20 <HexToDecimal>:$/;"	l
f0100c20	obj/kern/kernel.asm	/^f0100c20:	55                   	push   %ebp$/;"	l
f0100c21	obj/kern/kernel.asm	/^f0100c21:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	57                   	push   %edi$/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	56                   	push   %esi$/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	53                   	push   %ebx$/;"	l
f0100c26	obj/kern/kernel.asm	/^f0100c26:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100c29	obj/kern/kernel.asm	/^f0100c29:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100c2c	obj/kern/kernel.asm	/^f0100c2c:	0f b6 5e 09          	movzbl 0x9(%esi),%ebx$/;"	l
f0100c30	obj/kern/kernel.asm	/^f0100c30:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100c33	obj/kern/kernel.asm	/^f0100c33:	e8 d8 45 00 00       	call   f0105210 <strlen>$/;"	l
f0100c38	obj/kern/kernel.asm	/^f0100c38:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0100c40	obj/kern/kernel.asm	/^f0100c40:	7e 36                	jle    f0100c78 <HexToDecimal+0x58>$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	29 c2                	sub    %eax,%edx$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	89 d0                	mov    %edx,%eax$/;"	l
f0100c4b	obj/kern/kernel.asm	/^f0100c4b:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100c50	obj/kern/kernel.asm	/^f0100c50:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100c55	obj/kern/kernel.asm	/^f0100c55:	0f be db             	movsbl %bl,%ebx$/;"	l
f0100c58	obj/kern/kernel.asm	/^f0100c58:	83 fb 39             	cmp    $0x39,%ebx$/;"	l
f0100c5b	obj/kern/kernel.asm	/^f0100c5b:	7e 05                	jle    f0100c62 <HexToDecimal+0x42>$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	83 eb 57             	sub    $0x57,%ebx$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	eb 03                	jmp    f0100c65 <HexToDecimal+0x45>$/;"	l
f0100c62	obj/kern/kernel.asm	/^f0100c62:	83 eb 30             	sub    $0x30,%ebx$/;"	l
f0100c65	obj/kern/kernel.asm	/^f0100c65:	d3 e3                	shl    %cl,%ebx$/;"	d
f0100c67	obj/kern/kernel.asm	/^f0100c67:	01 df                	add    %ebx,%edi$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	0f b6 5c 16 08       	movzbl 0x8(%esi,%edx,1),%ebx$/;"	l
f0100c6e	obj/kern/kernel.asm	/^f0100c6e:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0100c71	obj/kern/kernel.asm	/^f0100c71:	83 c1 04             	add    $0x4,%ecx$/;"	l
f0100c74	obj/kern/kernel.asm	/^f0100c74:	39 c2                	cmp    %eax,%edx$/;"	l
f0100c76	obj/kern/kernel.asm	/^f0100c76:	75 dd                	jne    f0100c55 <HexToDecimal+0x35>$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	8d 47 ff             	lea    -0x1(%edi),%eax$/;"	l
f0100c7b	obj/kern/kernel.asm	/^f0100c7b:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	5b                   	pop    %ebx$/;"	l
f0100c7f	obj/kern/kernel.asm	/^f0100c7f:	5e                   	pop    %esi$/;"	l
f0100c80	obj/kern/kernel.asm	/^f0100c80:	5f                   	pop    %edi$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	5d                   	pop    %ebp$/;"	l
f0100c82	obj/kern/kernel.asm	/^f0100c82:	c3                   	ret    $/;"	l
f0100c83	obj/kern/kernel.asm	/^f0100c83 <changeperm>:$/;"	l
f0100c83	obj/kern/kernel.asm	/^f0100c83:	55                   	push   %ebp$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c86	obj/kern/kernel.asm	/^f0100c86:	56                   	push   %esi$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	53                   	push   %ebx$/;"	l
f0100c88	obj/kern/kernel.asm	/^f0100c88:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100c8b	obj/kern/kernel.asm	/^f0100c8b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100c8e	obj/kern/kernel.asm	/^f0100c8e:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c94	obj/kern/kernel.asm	/^f0100c94:	e8 87 ff ff ff       	call   f0100c20 <HexToDecimal>$/;"	l
f0100c99	obj/kern/kernel.asm	/^f0100c99:	89 c6                	mov    %eax,%esi$/;"	l
f0100c9b	obj/kern/kernel.asm	/^f0100c9b:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100c9e	obj/kern/kernel.asm	/^f0100c9e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100ca1	obj/kern/kernel.asm	/^f0100ca1:	e8 39 ff ff ff       	call   f0100bdf <atoi>$/;"	l
f0100ca6	obj/kern/kernel.asm	/^f0100ca6:	83 fe 07             	cmp    $0x7,%esi$/;"	l
f0100ca9	obj/kern/kernel.asm	/^f0100ca9:	76 0e                	jbe    f0100cb9 <changeperm+0x36>$/;"	l
f0100cab	obj/kern/kernel.asm	/^f0100cab:	c7 04 24 20 6a 10 f0 	movl   $0xf0106a20,(%esp)$/;"	l
f0100cb2	obj/kern/kernel.asm	/^f0100cb2:	e8 14 2d 00 00       	call   f01039cb <cprintf>$/;"	l
f0100cb7	obj/kern/kernel.asm	/^f0100cb7:	eb 46                	jmp    f0100cff <changeperm+0x7c>$/;"	l
f0100cb9	obj/kern/kernel.asm	/^f0100cb9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100cc0	obj/kern/kernel.asm	/^f0100cc0:	00 $/;"	l
f0100cc1	obj/kern/kernel.asm	/^f0100cc1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f0100cca	obj/kern/kernel.asm	/^f0100cca:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100ccd	obj/kern/kernel.asm	/^f0100ccd:	e8 0d 05 00 00       	call   f01011df <pgdir_walk>$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	85 c0                	test   %eax,%eax$/;"	l
f0100cd4	obj/kern/kernel.asm	/^f0100cd4:	74 1d                	je     f0100cf3 <changeperm+0x70>$/;"	l
f0100cd6	obj/kern/kernel.asm	/^f0100cd6:	83 ce 01             	or     $0x1,%esi$/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	8b 10                	mov    (%eax),%edx$/;"	l
f0100cdb	obj/kern/kernel.asm	/^f0100cdb:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100ce1	obj/kern/kernel.asm	/^f0100ce1:	09 d6                	or     %edx,%esi$/;"	l
f0100ce3	obj/kern/kernel.asm	/^f0100ce3:	89 30                	mov    %esi,(%eax)$/;"	l
f0100ce5	obj/kern/kernel.asm	/^f0100ce5:	c7 04 24 b4 66 10 f0 	movl   $0xf01066b4,(%esp)$/;"	l
f0100cec	obj/kern/kernel.asm	/^f0100cec:	e8 da 2c 00 00       	call   f01039cb <cprintf>$/;"	l
f0100cf1	obj/kern/kernel.asm	/^f0100cf1:	eb 0c                	jmp    f0100cff <changeperm+0x7c>$/;"	l
f0100cf3	obj/kern/kernel.asm	/^f0100cf3:	c7 04 24 bd 66 10 f0 	movl   $0xf01066bd,(%esp)$/;"	l
f0100cfa	obj/kern/kernel.asm	/^f0100cfa:	e8 cc 2c 00 00       	call   f01039cb <cprintf>$/;"	l
f0100cff	obj/kern/kernel.asm	/^f0100cff:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d04	obj/kern/kernel.asm	/^f0100d04:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d07	obj/kern/kernel.asm	/^f0100d07:	5b                   	pop    %ebx$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	5e                   	pop    %esi$/;"	l
f0100d09	obj/kern/kernel.asm	/^f0100d09:	5d                   	pop    %ebp$/;"	l
f0100d0a	obj/kern/kernel.asm	/^f0100d0a:	c3                   	ret    $/;"	l
f0100d0b	obj/kern/kernel.asm	/^f0100d0b <free_page>:$/;"	l
f0100d0b	obj/kern/kernel.asm	/^f0100d0b:	55                   	push   %ebp$/;"	l
f0100d0c	obj/kern/kernel.asm	/^f0100d0c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d0e	obj/kern/kernel.asm	/^f0100d0e:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100d11	obj/kern/kernel.asm	/^f0100d11:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)$/;"	l
f0100d15	obj/kern/kernel.asm	/^f0100d15:	7e 0e                	jle    f0100d25 <free_page+0x1a>$/;"	l
f0100d17	obj/kern/kernel.asm	/^f0100d17:	c7 04 24 6f 66 10 f0 	movl   $0xf010666f,(%esp)$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	e8 a8 2c 00 00       	call   f01039cb <cprintf>$/;"	l
f0100d23	obj/kern/kernel.asm	/^f0100d23:	eb 51                	jmp    f0100d76 <free_page+0x6b>$/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100d2b	obj/kern/kernel.asm	/^f0100d2b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	e8 ed fe ff ff       	call   f0100c20 <HexToDecimal>$/;"	l
f0100d33	obj/kern/kernel.asm	/^f0100d33:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100d36	obj/kern/kernel.asm	/^f0100d36:	3b 05 58 48 29 f0    	cmp    0xf0294858,%eax$/;"	l
f0100d3c	obj/kern/kernel.asm	/^f0100d3c:	72 1c                	jb     f0100d5a <free_page+0x4f>$/;"	l
f0100d3e	obj/kern/kernel.asm	/^f0100d3e:	c7 44 24 08 50 6a 10 	movl   $0xf0106a50,0x8(%esp)$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	f0 $/;"	l
f0100d46	obj/kern/kernel.asm	/^f0100d46:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
f0100d4d	obj/kern/kernel.asm	/^f0100d4d:	00 $/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	c7 04 24 da 66 10 f0 	movl   $0xf01066da,(%esp)$/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55:	e8 2b f3 ff ff       	call   f0100085 <_panic>$/;"	l
f0100d5a	obj/kern/kernel.asm	/^f0100d5a:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0100d5d	obj/kern/kernel.asm	/^f0100d5d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	03 05 64 48 29 f0    	add    0xf0294864,%eax$/;"	l
f0100d66	obj/kern/kernel.asm	/^f0100d66:	74 0e                	je     f0100d76 <free_page+0x6b>$/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	66 c7 40 08 00 00    	movw   $0x0,0x8(%eax)$/;"	l
f0100d6e	obj/kern/kernel.asm	/^f0100d6e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100d71	obj/kern/kernel.asm	/^f0100d71:	e8 60 01 00 00       	call   f0100ed6 <page_free>$/;"	l
f0100d76	obj/kern/kernel.asm	/^f0100d76:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	c9                   	leave  $/;"	l
f0100d7c	obj/kern/kernel.asm	/^f0100d7c:	c3                   	ret    $/;"	l
f0100d7d	obj/kern/kernel.asm	/^f0100d7d <page_status>:$/;"	l
f0100d7d	obj/kern/kernel.asm	/^f0100d7d:	55                   	push   %ebp$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	53                   	push   %ebx$/;"	l
f0100d81	obj/kern/kernel.asm	/^f0100d81:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100d84	obj/kern/kernel.asm	/^f0100d84:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	7e 0e                	jle    f0100d98 <page_status+0x1b>$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	c7 04 24 6f 66 10 f0 	movl   $0xf010666f,(%esp)$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	e8 35 2c 00 00       	call   f01039cb <cprintf>$/;"	l
f0100d96	obj/kern/kernel.asm	/^f0100d96:	eb 71                	jmp    f0100e09 <page_status+0x8c>$/;"	l
f0100d98	obj/kern/kernel.asm	/^f0100d98:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100d9b	obj/kern/kernel.asm	/^f0100d9b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	e8 7a fe ff ff       	call   f0100c20 <HexToDecimal>$/;"	l
f0100da6	obj/kern/kernel.asm	/^f0100da6:	89 c3                	mov    %eax,%ebx$/;"	l
f0100da8	obj/kern/kernel.asm	/^f0100da8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100dac	obj/kern/kernel.asm	/^f0100dac:	c7 04 24 14 67 10 f0 	movl   $0xf0106714,(%esp)$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	e8 13 2c 00 00       	call   f01039cb <cprintf>$/;"	l
f0100db8	obj/kern/kernel.asm	/^f0100db8:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	3b 1d 58 48 29 f0    	cmp    0xf0294858,%ebx$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	72 1c                	jb     f0100ddf <page_status+0x62>$/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	c7 44 24 08 50 6a 10 	movl   $0xf0106a50,0x8(%esp)$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	f0 $/;"	l
f0100dcb	obj/kern/kernel.asm	/^f0100dcb:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
f0100dd2	obj/kern/kernel.asm	/^f0100dd2:	00 $/;"	l
f0100dd3	obj/kern/kernel.asm	/^f0100dd3:	c7 04 24 da 66 10 f0 	movl   $0xf01066da,(%esp)$/;"	l
f0100dda	obj/kern/kernel.asm	/^f0100dda:	e8 a6 f2 ff ff       	call   f0100085 <_panic>$/;"	l
f0100ddf	obj/kern/kernel.asm	/^f0100ddf:	8d 14 5b             	lea    (%ebx,%ebx,2),%edx$/;"	l
f0100de2	obj/kern/kernel.asm	/^f0100de2:	a1 64 48 29 f0       	mov    0xf0294864,%eax$/;"	l
f0100de7	obj/kern/kernel.asm	/^f0100de7:	66 83 7c 90 08 00    	cmpw   $0x0,0x8(%eax,%edx,4)$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	74 0e                	je     f0100dfd <page_status+0x80>$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	c7 04 24 e8 66 10 f0 	movl   $0xf01066e8,(%esp)$/;"	l
f0100df6	obj/kern/kernel.asm	/^f0100df6:	e8 d0 2b 00 00       	call   f01039cb <cprintf>$/;"	l
f0100dfb	obj/kern/kernel.asm	/^f0100dfb:	eb 0c                	jmp    f0100e09 <page_status+0x8c>$/;"	l
f0100dfd	obj/kern/kernel.asm	/^f0100dfd:	c7 04 24 f5 66 10 f0 	movl   $0xf01066f5,(%esp)$/;"	l
f0100e04	obj/kern/kernel.asm	/^f0100e04:	e8 c2 2b 00 00       	call   f01039cb <cprintf>$/;"	l
f0100e09	obj/kern/kernel.asm	/^f0100e09:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100e11	obj/kern/kernel.asm	/^f0100e11:	5b                   	pop    %ebx$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	5d                   	pop    %ebp$/;"	l
f0100e13	obj/kern/kernel.asm	/^f0100e13:	c3                   	ret    $/;"	l
f0100e14	obj/kern/kernel.asm	/^f0100e14 <showmappings>:$/;"	l
f0100e14	obj/kern/kernel.asm	/^f0100e14:	55                   	push   %ebp$/;"	l
f0100e15	obj/kern/kernel.asm	/^f0100e15:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e17	obj/kern/kernel.asm	/^f0100e17:	57                   	push   %edi$/;"	l
f0100e18	obj/kern/kernel.asm	/^f0100e18:	56                   	push   %esi$/;"	l
f0100e19	obj/kern/kernel.asm	/^f0100e19:	53                   	push   %ebx$/;"	l
f0100e1a	obj/kern/kernel.asm	/^f0100e1a:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100e1d	obj/kern/kernel.asm	/^f0100e1d:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	7f 0e                	jg     f0100e39 <showmappings+0x25>$/;"	l
f0100e2b	obj/kern/kernel.asm	/^f0100e2b:	c7 04 24 fd 66 10 f0 	movl   $0xf01066fd,(%esp)$/;"	l
f0100e32	obj/kern/kernel.asm	/^f0100e32:	e8 94 2b 00 00       	call   f01039cb <cprintf>$/;"	l
f0100e37	obj/kern/kernel.asm	/^f0100e37:	eb 2d                	jmp    f0100e66 <showmappings+0x52>$/;"	l
f0100e39	obj/kern/kernel.asm	/^f0100e39:	8b 04 9f             	mov    (%edi,%ebx,4),%eax$/;"	l
f0100e3c	obj/kern/kernel.asm	/^f0100e3c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e3f	obj/kern/kernel.asm	/^f0100e3f:	e8 dc fd ff ff       	call   f0100c20 <HexToDecimal>$/;"	l
f0100e44	obj/kern/kernel.asm	/^f0100e44:	89 c6                	mov    %eax,%esi$/;"	l
f0100e46	obj/kern/kernel.asm	/^f0100e46:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100e4a	obj/kern/kernel.asm	/^f0100e4a:	c7 04 24 10 67 10 f0 	movl   $0xf0106710,(%esp)$/;"	l
f0100e51	obj/kern/kernel.asm	/^f0100e51:	e8 75 2b 00 00       	call   f01039cb <cprintf>$/;"	l
f0100e56	obj/kern/kernel.asm	/^f0100e56:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100e59	obj/kern/kernel.asm	/^f0100e59:	e8 09 fc ff ff       	call   f0100a67 <showmap>$/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100e61	obj/kern/kernel.asm	/^f0100e61:	39 5d 08             	cmp    %ebx,0x8(%ebp)$/;"	l
f0100e64	obj/kern/kernel.asm	/^f0100e64:	7f d3                	jg     f0100e39 <showmappings+0x25>$/;"	l
f0100e66	obj/kern/kernel.asm	/^f0100e66:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100e6e	obj/kern/kernel.asm	/^f0100e6e:	5b                   	pop    %ebx$/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	5e                   	pop    %esi$/;"	l
f0100e70	obj/kern/kernel.asm	/^f0100e70:	5f                   	pop    %edi$/;"	l
f0100e71	obj/kern/kernel.asm	/^f0100e71:	5d                   	pop    %ebp$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	c3                   	ret    $/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80 <boot_alloc>:$/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	55                   	push   %ebp$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100e86	obj/kern/kernel.asm	/^f0100e86:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100e89	obj/kern/kernel.asm	/^f0100e89:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0100e91	obj/kern/kernel.asm	/^f0100e91:	89 c3                	mov    %eax,%ebx$/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	89 d7                	mov    %edx,%edi$/;"	l
f0100e95	obj/kern/kernel.asm	/^f0100e95:	83 3d 14 e4 26 f0 00 	cmpl   $0x0,0xf026e414$/;"	l
f0100e9c	obj/kern/kernel.asm	/^f0100e9c:	75 0a                	jne    f0100ea8 <boot_alloc+0x28>$/;"	l
f0100e9e	obj/kern/kernel.asm	/^f0100e9e:	c7 05 14 e4 26 f0 68 	movl   $0xf0294868,0xf026e414$/;"	l
f0100ea5	obj/kern/kernel.asm	/^f0100ea5:	48 29 f0 $/;"	l
f0100ea8	obj/kern/kernel.asm	/^f0100ea8:	a1 14 e4 26 f0       	mov    0xf026e414,%eax$/;"	l
f0100ead	obj/kern/kernel.asm	/^f0100ead:	8d 4c 38 ff          	lea    -0x1(%eax,%edi,1),%ecx$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	89 c8                	mov    %ecx,%eax$/;"	l
f0100eb3	obj/kern/kernel.asm	/^f0100eb3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100eb8	obj/kern/kernel.asm	/^f0100eb8:	f7 f7                	div    %edi$/;"	l
f0100eba	obj/kern/kernel.asm	/^f0100eba:	89 c8                	mov    %ecx,%eax$/;"	l
f0100ebc	obj/kern/kernel.asm	/^f0100ebc:	29 d0                	sub    %edx,%eax$/;"	l
f0100ebe	obj/kern/kernel.asm	/^f0100ebe:	8d 1c 18             	lea    (%eax,%ebx,1),%ebx$/;"	l
f0100ec1	obj/kern/kernel.asm	/^f0100ec1:	89 1d 14 e4 26 f0    	mov    %ebx,0xf026e414$/;"	l
f0100ec7	obj/kern/kernel.asm	/^f0100ec7:	8b 1c 24             	mov    (%esp),%ebx$/;"	l
f0100eca	obj/kern/kernel.asm	/^f0100eca:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece:	8b 7c 24 08          	mov    0x8(%esp),%edi$/;"	l
f0100ed2	obj/kern/kernel.asm	/^f0100ed2:	89 ec                	mov    %ebp,%esp$/;"	l
f0100ed4	obj/kern/kernel.asm	/^f0100ed4:	5d                   	pop    %ebp$/;"	l
f0100ed5	obj/kern/kernel.asm	/^f0100ed5:	c3                   	ret    $/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6 <page_free>:$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	55                   	push   %ebp$/;"	l
f0100ed7	obj/kern/kernel.asm	/^f0100ed7:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ed9	obj/kern/kernel.asm	/^f0100ed9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100edc	obj/kern/kernel.asm	/^f0100edc:	8b 15 18 e4 26 f0    	mov    0xf026e418,%edx$/;"	l
f0100ee2	obj/kern/kernel.asm	/^f0100ee2:	89 10                	mov    %edx,(%eax)$/;"	l
f0100ee4	obj/kern/kernel.asm	/^f0100ee4:	85 d2                	test   %edx,%edx$/;"	l
f0100ee6	obj/kern/kernel.asm	/^f0100ee6:	74 09                	je     f0100ef1 <page_free+0x1b>$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	8b 15 18 e4 26 f0    	mov    0xf026e418,%edx$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
f0100ef1	obj/kern/kernel.asm	/^f0100ef1:	a3 18 e4 26 f0       	mov    %eax,0xf026e418$/;"	l
f0100ef6	obj/kern/kernel.asm	/^f0100ef6:	c7 40 04 18 e4 26 f0 	movl   $0xf026e418,0x4(%eax)$/;"	l
f0100efd	obj/kern/kernel.asm	/^f0100efd:	5d                   	pop    %ebp$/;"	l
f0100efe	obj/kern/kernel.asm	/^f0100efe:	c3                   	ret    $/;"	l
f0100eff	obj/kern/kernel.asm	/^f0100eff <page_decref>:$/;"	l
f0100eff	obj/kern/kernel.asm	/^f0100eff:	55                   	push   %ebp$/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f02	obj/kern/kernel.asm	/^f0100f02:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	0f b7 50 08          	movzwl 0x8(%eax),%edx$/;"	l
f0100f0c	obj/kern/kernel.asm	/^f0100f0c:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	66 89 50 08          	mov    %dx,0x8(%eax)$/;"	l
f0100f13	obj/kern/kernel.asm	/^f0100f13:	66 85 d2             	test   %dx,%dx$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	75 08                	jne    f0100f20 <page_decref+0x21>$/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100f1b	obj/kern/kernel.asm	/^f0100f1b:	e8 b6 ff ff ff       	call   f0100ed6 <page_free>$/;"	l
f0100f20	obj/kern/kernel.asm	/^f0100f20:	c9                   	leave  $/;"	l
f0100f21	obj/kern/kernel.asm	/^f0100f21:	c3                   	ret    $/;"	l
f0100f22	obj/kern/kernel.asm	/^f0100f22 <tlb_invalidate>:$/;"	l
f0100f22	obj/kern/kernel.asm	/^f0100f22:	55                   	push   %ebp$/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f25	obj/kern/kernel.asm	/^f0100f25:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	85 c0                	test   %eax,%eax$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	74 08                	je     f0100f36 <tlb_invalidate+0x14>$/;"	l
f0100f2e	obj/kern/kernel.asm	/^f0100f2e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	39 50 5c             	cmp    %edx,0x5c(%eax)$/;"	l
f0100f34	obj/kern/kernel.asm	/^f0100f34:	75 06                	jne    f0100f3c <tlb_invalidate+0x1a>$/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100f39	obj/kern/kernel.asm	/^f0100f39:	0f 01 38             	invlpg (%eax)$/;"	l
f0100f3c	obj/kern/kernel.asm	/^f0100f3c:	5d                   	pop    %ebp$/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	c3                   	ret    $/;"	l
f0100f3e	obj/kern/kernel.asm	/^f0100f3e <page_init>:$/;"	l
f0100f3e	obj/kern/kernel.asm	/^f0100f3e:	55                   	push   %ebp$/;"	l
f0100f3f	obj/kern/kernel.asm	/^f0100f3f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f41	obj/kern/kernel.asm	/^f0100f41:	53                   	push   %ebx$/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	c7 05 18 e4 26 f0 00 	movl   $0x0,0xf026e418$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	00 00 00 $/;"	l
f0100f4f	obj/kern/kernel.asm	/^f0100f4f:	a1 64 48 29 f0       	mov    0xf0294864,%eax$/;"	l
f0100f54	obj/kern/kernel.asm	/^f0100f54:	66 c7 40 08 01 00    	movw   $0x1,0x8(%eax)$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	81 3d 0c e4 26 f0 ff 	cmpl   $0x1fff,0xf026e40c$/;"	l
f0100f61	obj/kern/kernel.asm	/^f0100f61:	1f 00 00 $/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	76 65                	jbe    f0100fcb <page_init+0x8d>$/;"	l
f0100f66	obj/kern/kernel.asm	/^f0100f66:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100f6b	obj/kern/kernel.asm	/^f0100f6b:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0100f70	obj/kern/kernel.asm	/^f0100f70:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0100f73	obj/kern/kernel.asm	/^f0100f73:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0100f76	obj/kern/kernel.asm	/^f0100f76:	8b 0d 64 48 29 f0    	mov    0xf0294864,%ecx$/;"	l
f0100f7c	obj/kern/kernel.asm	/^f0100f7c:	66 c7 44 01 08 00 00 	movw   $0x0,0x8(%ecx,%eax,1)$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	8b 0d 18 e4 26 f0    	mov    0xf026e418,%ecx$/;"	l
f0100f89	obj/kern/kernel.asm	/^f0100f89:	8b 1d 64 48 29 f0    	mov    0xf0294864,%ebx$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	89 0c 03             	mov    %ecx,(%ebx,%eax,1)$/;"	l
f0100f92	obj/kern/kernel.asm	/^f0100f92:	85 c9                	test   %ecx,%ecx$/;"	l
f0100f94	obj/kern/kernel.asm	/^f0100f94:	74 11                	je     f0100fa7 <page_init+0x69>$/;"	l
f0100f96	obj/kern/kernel.asm	/^f0100f96:	89 c3                	mov    %eax,%ebx$/;"	l
f0100f98	obj/kern/kernel.asm	/^f0100f98:	03 1d 64 48 29 f0    	add    0xf0294864,%ebx$/;"	l
f0100f9e	obj/kern/kernel.asm	/^f0100f9e:	8b 0d 18 e4 26 f0    	mov    0xf026e418,%ecx$/;"	l
f0100fa4	obj/kern/kernel.asm	/^f0100fa4:	89 59 04             	mov    %ebx,0x4(%ecx)$/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	03 05 64 48 29 f0    	add    0xf0294864,%eax$/;"	l
f0100fad	obj/kern/kernel.asm	/^f0100fad:	a3 18 e4 26 f0       	mov    %eax,0xf026e418$/;"	l
f0100fb2	obj/kern/kernel.asm	/^f0100fb2:	c7 40 04 18 e4 26 f0 	movl   $0xf026e418,0x4(%eax)$/;"	l
f0100fb9	obj/kern/kernel.asm	/^f0100fb9:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100fbc	obj/kern/kernel.asm	/^f0100fbc:	89 d0                	mov    %edx,%eax$/;"	l
f0100fbe	obj/kern/kernel.asm	/^f0100fbe:	8b 0d 0c e4 26 f0    	mov    0xf026e40c,%ecx$/;"	l
f0100fc4	obj/kern/kernel.asm	/^f0100fc4:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	39 d1                	cmp    %edx,%ecx$/;"	l
f0100fc9	obj/kern/kernel.asm	/^f0100fc9:	77 a5                	ja     f0100f70 <page_init+0x32>$/;"	l
f0100fcb	obj/kern/kernel.asm	/^f0100fcb:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f0100fd0	obj/kern/kernel.asm	/^f0100fd0:	8b 15 64 48 29 f0    	mov    0xf0294864,%edx$/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6:	66 c7 44 02 08 01 00 	movw   $0x1,0x8(%edx,%eax,1)$/;"	l
f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	83 c0 0c             	add    $0xc,%eax$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	3d 00 0c 00 00       	cmp    $0xc00,%eax$/;"	l
f0100fe5	obj/kern/kernel.asm	/^f0100fe5:	75 e9                	jne    f0100fd0 <page_init+0x92>$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	b8 68 48 29 f0       	mov    $0xf0294868,%eax$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	76 2a                	jbe    f010101d <page_init+0xdf>$/;"	l
f0100ff3	obj/kern/kernel.asm	/^f0100ff3:	05 ff 0f 00 10       	add    $0x10000fff,%eax$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	3d 00 01 00 00       	cmp    $0x100,%eax$/;"	l
f0101000	obj/kern/kernel.asm	/^f0101000:	76 43                	jbe    f0101045 <page_init+0x107>$/;"	l
f0101002	obj/kern/kernel.asm	/^f0101002:	8b 15 64 48 29 f0    	mov    0xf0294864,%edx$/;"	l
f0101008	obj/kern/kernel.asm	/^f0101008:	66 c7 82 08 0c 00 00 	movw   $0x1,0xc08(%edx)$/;"	l
f010100f	obj/kern/kernel.asm	/^f010100f:	01 00 $/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	b9 01 01 00 00       	mov    $0x101,%ecx$/;"	l
f0101016	obj/kern/kernel.asm	/^f0101016:	ba 01 01 00 00       	mov    $0x101,%edx$/;"	l
f010101b	obj/kern/kernel.asm	/^f010101b:	eb 20                	jmp    f010103d <page_init+0xff>$/;"	l
f010101d	obj/kern/kernel.asm	/^f010101d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101021	obj/kern/kernel.asm	/^f0101021:	c7 44 24 08 fc 69 10 	movl   $0xf01069fc,0x8(%esp)$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	f0 $/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029:	c7 44 24 04 08 02 00 	movl   $0x208,0x4(%esp)$/;"	l
f0101030	obj/kern/kernel.asm	/^f0101030:	00 $/;"	l
f0101031	obj/kern/kernel.asm	/^f0101031:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	e8 48 f0 ff ff       	call   f0100085 <_panic>$/;"	l
f010103d	obj/kern/kernel.asm	/^f010103d:	39 d0                	cmp    %edx,%eax$/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f:	0f 87 b1 00 00 00    	ja     f01010f6 <page_init+0x1b8>$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	8b 15 14 e4 26 f0    	mov    0xf026e414,%edx$/;"	l
f010104b	obj/kern/kernel.asm	/^f010104b:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0101051	obj/kern/kernel.asm	/^f0101051:	77 20                	ja     f0101073 <page_init+0x135>$/;"	l
f0101053	obj/kern/kernel.asm	/^f0101053:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	c7 44 24 08 fc 69 10 	movl   $0xf01069fc,0x8(%esp)$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	f0 $/;"	l
f010105f	obj/kern/kernel.asm	/^f010105f:	c7 44 24 04 0c 02 00 	movl   $0x20c,0x4(%esp)$/;"	l
f0101066	obj/kern/kernel.asm	/^f0101066:	00 $/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	e8 12 f0 ff ff       	call   f0100085 <_panic>$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f0101079	obj/kern/kernel.asm	/^f0101079:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010107c	obj/kern/kernel.asm	/^f010107c:	6b c8 0c             	imul   $0xc,%eax,%ecx$/;"	l
f010107f	obj/kern/kernel.asm	/^f010107f:	eb 13                	jmp    f0101094 <page_init+0x156>$/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081:	8b 1d 64 48 29 f0    	mov    0xf0294864,%ebx$/;"	l
f0101087	obj/kern/kernel.asm	/^f0101087:	66 c7 44 0b 08 01 00 	movw   $0x1,0x8(%ebx,%ecx,1)$/;"	l
f010108e	obj/kern/kernel.asm	/^f010108e:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	83 c1 0c             	add    $0xc,%ecx$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	39 c2                	cmp    %eax,%edx$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	73 e9                	jae    f0101081 <page_init+0x143>$/;"	l
f0101098	obj/kern/kernel.asm	/^f0101098:	83 c2 01             	add    $0x1,%edx$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	6b c2 0c             	imul   $0xc,%edx,%eax$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	eb 4c                	jmp    f01010ec <page_init+0x1ae>$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	8b 0d 64 48 29 f0    	mov    0xf0294864,%ecx$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	66 c7 44 01 08 00 00 	movw   $0x0,0x8(%ecx,%eax,1)$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	8b 0d 18 e4 26 f0    	mov    0xf026e418,%ecx$/;"	l
f01010b3	obj/kern/kernel.asm	/^f01010b3:	8b 1d 64 48 29 f0    	mov    0xf0294864,%ebx$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	89 0c 03             	mov    %ecx,(%ebx,%eax,1)$/;"	l
f01010bc	obj/kern/kernel.asm	/^f01010bc:	85 c9                	test   %ecx,%ecx$/;"	l
f01010be	obj/kern/kernel.asm	/^f01010be:	74 11                	je     f01010d1 <page_init+0x193>$/;"	l
f01010c0	obj/kern/kernel.asm	/^f01010c0:	89 c3                	mov    %eax,%ebx$/;"	l
f01010c2	obj/kern/kernel.asm	/^f01010c2:	03 1d 64 48 29 f0    	add    0xf0294864,%ebx$/;"	l
f01010c8	obj/kern/kernel.asm	/^f01010c8:	8b 0d 18 e4 26 f0    	mov    0xf026e418,%ecx$/;"	l
f01010ce	obj/kern/kernel.asm	/^f01010ce:	89 59 04             	mov    %ebx,0x4(%ecx)$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	89 c1                	mov    %eax,%ecx$/;"	l
f01010d3	obj/kern/kernel.asm	/^f01010d3:	03 0d 64 48 29 f0    	add    0xf0294864,%ecx$/;"	l
f01010d9	obj/kern/kernel.asm	/^f01010d9:	89 0d 18 e4 26 f0    	mov    %ecx,0xf026e418$/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df:	c7 41 04 18 e4 26 f0 	movl   $0xf026e418,0x4(%ecx)$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	83 c2 01             	add    $0x1,%edx$/;"	l
f01010e9	obj/kern/kernel.asm	/^f01010e9:	83 c0 0c             	add    $0xc,%eax$/;"	l
f01010ec	obj/kern/kernel.asm	/^f01010ec:	3b 15 58 48 29 f0    	cmp    0xf0294858,%edx$/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2:	72 ac                	jb     f01010a0 <page_init+0x162>$/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	eb 1a                	jmp    f0101110 <page_init+0x1d2>$/;"	l
f01010f6	obj/kern/kernel.asm	/^f01010f6:	6b d2 0c             	imul   $0xc,%edx,%edx$/;"	l
f01010f9	obj/kern/kernel.asm	/^f01010f9:	8b 1d 64 48 29 f0    	mov    0xf0294864,%ebx$/;"	l
f01010ff	obj/kern/kernel.asm	/^f01010ff:	66 c7 44 1a 08 01 00 	movw   $0x1,0x8(%edx,%ebx,1)$/;"	l
f0101106	obj/kern/kernel.asm	/^f0101106:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101109	obj/kern/kernel.asm	/^f0101109:	89 ca                	mov    %ecx,%edx$/;"	l
f010110b	obj/kern/kernel.asm	/^f010110b:	e9 2d ff ff ff       	jmp    f010103d <page_init+0xff>$/;"	l
f0101110	obj/kern/kernel.asm	/^f0101110:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101113	obj/kern/kernel.asm	/^f0101113:	5b                   	pop    %ebx$/;"	l
f0101114	obj/kern/kernel.asm	/^f0101114:	5d                   	pop    %ebp$/;"	l
f0101115	obj/kern/kernel.asm	/^f0101115:	c3                   	ret    $/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116 <check_va2pa>:$/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	55                   	push   %ebp$/;"	l
f0101117	obj/kern/kernel.asm	/^f0101117:	89 e5                	mov    %esp,%ebp$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	89 d1                	mov    %edx,%ecx$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0101121	obj/kern/kernel.asm	/^f0101121:	8b 0c 88             	mov    (%eax,%ecx,4),%ecx$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0101129	obj/kern/kernel.asm	/^f0101129:	f6 c1 01             	test   $0x1,%cl$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	74 5f                	je     f010118d <check_va2pa+0x77>$/;"	l
f010112e	obj/kern/kernel.asm	/^f010112e:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	89 c8                	mov    %ecx,%eax$/;"	l
f0101136	obj/kern/kernel.asm	/^f0101136:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	3b 05 58 48 29 f0    	cmp    0xf0294858,%eax$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	72 20                	jb     f0101161 <check_va2pa+0x4b>$/;"	l
f0101141	obj/kern/kernel.asm	/^f0101141:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0101145	obj/kern/kernel.asm	/^f0101145:	c7 44 24 08 a0 6b 10 	movl   $0xf0106ba0,0x8(%esp)$/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	f0 $/;"	l
f010114d	obj/kern/kernel.asm	/^f010114d:	c7 44 24 04 ca 01 00 	movl   $0x1ca,0x4(%esp)$/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	00 $/;"	l
f0101155	obj/kern/kernel.asm	/^f0101155:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f010115c	obj/kern/kernel.asm	/^f010115c:	e8 24 ef ff ff       	call   f0100085 <_panic>$/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f010116a	obj/kern/kernel.asm	/^f010116a:	8b 84 91 00 00 00 f0 	mov    -0x10000000(%ecx,%edx,4),%eax$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	a8 01                	test   $0x1,%al$/;"	l
f0101173	obj/kern/kernel.asm	/^f0101173:	75 13                	jne    f0101188 <check_va2pa+0x72>$/;"	l
f0101175	obj/kern/kernel.asm	/^f0101175:	c7 04 24 51 71 10 f0 	movl   $0xf0107151,(%esp)$/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c:	e8 4a 28 00 00       	call   f01039cb <cprintf>$/;"	l
f0101181	obj/kern/kernel.asm	/^f0101181:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	eb 05                	jmp    f010118d <check_va2pa+0x77>$/;"	l
f0101188	obj/kern/kernel.asm	/^f0101188:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010118d	obj/kern/kernel.asm	/^f010118d:	c9                   	leave  $/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e:	c3                   	ret    $/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f <page_alloc>:$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	55                   	push   %ebp$/;"	l
f0101190	obj/kern/kernel.asm	/^f0101190:	89 e5                	mov    %esp,%ebp$/;"	l
f0101192	obj/kern/kernel.asm	/^f0101192:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0101198	obj/kern/kernel.asm	/^f0101198:	8b 15 18 e4 26 f0    	mov    0xf026e418,%edx$/;"	l
f010119e	obj/kern/kernel.asm	/^f010119e:	89 11                	mov    %edx,(%ecx)$/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01011a5	obj/kern/kernel.asm	/^f01011a5:	85 d2                	test   %edx,%edx$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7:	74 34                	je     f01011dd <page_alloc+0x4e>$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	8b 02                	mov    (%edx),%eax$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	85 c0                	test   %eax,%eax$/;"	l
f01011ad	obj/kern/kernel.asm	/^f01011ad:	74 06                	je     f01011b5 <page_alloc+0x26>$/;"	l
f01011af	obj/kern/kernel.asm	/^f01011af:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f01011b2	obj/kern/kernel.asm	/^f01011b2:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f01011b5	obj/kern/kernel.asm	/^f01011b5:	8b 01                	mov    (%ecx),%eax$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	8b 00                	mov    (%eax),%eax$/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc:	89 02                	mov    %eax,(%edx)$/;"	l
f01011be	obj/kern/kernel.asm	/^f01011be:	c7 44 24 08 0c 00 00 	movl   $0xc,0x8(%esp)$/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	00 $/;"	l
f01011c6	obj/kern/kernel.asm	/^f01011c6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd:	00 $/;"	l
f01011ce	obj/kern/kernel.asm	/^f01011ce:	8b 01                	mov    (%ecx),%eax$/;"	l
f01011d0	obj/kern/kernel.asm	/^f01011d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01011d3	obj/kern/kernel.asm	/^f01011d3:	e8 de 41 00 00       	call   f01053b6 <memset>$/;"	l
f01011d8	obj/kern/kernel.asm	/^f01011d8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	c9                   	leave  $/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	c3                   	ret    $/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df <pgdir_walk>:$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	55                   	push   %ebp$/;"	l
f01011e0	obj/kern/kernel.asm	/^f01011e0:	89 e5                	mov    %esp,%ebp$/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	56                   	push   %esi$/;"	l
f01011e3	obj/kern/kernel.asm	/^f01011e3:	53                   	push   %ebx$/;"	l
f01011e4	obj/kern/kernel.asm	/^f01011e4:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	83 fa 03             	cmp    $0x3,%edx$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	0f 84 4f 01 00 00    	je     f0101342 <pgdir_walk+0x163>$/;"	l
f01011f3	obj/kern/kernel.asm	/^f01011f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01011f6	obj/kern/kernel.asm	/^f01011f6:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01011fb	obj/kern/kernel.asm	/^f01011fb:	77 20                	ja     f010121d <pgdir_walk+0x3e>$/;"	l
f01011fd	obj/kern/kernel.asm	/^f01011fd:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	c7 44 24 08 fc 69 10 	movl   $0xf01069fc,0x8(%esp)$/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	f0 $/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	c7 44 24 04 7d 02 00 	movl   $0x27d,0x4(%esp)$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	00 $/;"	l
f0101211	obj/kern/kernel.asm	/^f0101211:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101218	obj/kern/kernel.asm	/^f0101218:	e8 68 ee ff ff       	call   f0100085 <_panic>$/;"	l
f010121d	obj/kern/kernel.asm	/^f010121d:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101220	obj/kern/kernel.asm	/^f0101220:	89 f1                	mov    %esi,%ecx$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0101225	obj/kern/kernel.asm	/^f0101225:	8d 9c 88 00 00 00 10 	lea    0x10000000(%eax,%ecx,4),%ebx$/;"	l
f010122c	obj/kern/kernel.asm	/^f010122c:	89 d8                	mov    %ebx,%eax$/;"	l
f010122e	obj/kern/kernel.asm	/^f010122e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101231	obj/kern/kernel.asm	/^f0101231:	3b 05 58 48 29 f0    	cmp    0xf0294858,%eax$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	72 20                	jb     f0101259 <pgdir_walk+0x7a>$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f010123d	obj/kern/kernel.asm	/^f010123d:	c7 44 24 08 a0 6b 10 	movl   $0xf0106ba0,0x8(%esp)$/;"	l
f0101244	obj/kern/kernel.asm	/^f0101244:	f0 $/;"	l
f0101245	obj/kern/kernel.asm	/^f0101245:	c7 44 24 04 81 02 00 	movl   $0x281,0x4(%esp)$/;"	l
f010124c	obj/kern/kernel.asm	/^f010124c:	00 $/;"	l
f010124d	obj/kern/kernel.asm	/^f010124d:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101254	obj/kern/kernel.asm	/^f0101254:	e8 2c ee ff ff       	call   f0100085 <_panic>$/;"	l
f0101259	obj/kern/kernel.asm	/^f0101259:	81 eb 00 00 00 10    	sub    $0x10000000,%ebx$/;"	l
f010125f	obj/kern/kernel.asm	/^f010125f:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0101262	obj/kern/kernel.asm	/^f0101262:	0f 85 88 00 00 00    	jne    f01012f0 <pgdir_walk+0x111>$/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	85 d2                	test   %edx,%edx$/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a:	0f 84 c6 00 00 00    	je     f0101336 <pgdir_walk+0x157>$/;"	l
f0101270	obj/kern/kernel.asm	/^f0101270:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101273	obj/kern/kernel.asm	/^f0101273:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	e8 14 ff ff ff       	call   f010118f <page_alloc>$/;"	l
f010127b	obj/kern/kernel.asm	/^f010127b:	85 c0                	test   %eax,%eax$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	0f 85 b3 00 00 00    	jne    f0101336 <pgdir_walk+0x157>$/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	66 c7 40 08 01 00    	movw   $0x1,0x8(%eax)$/;"	l
f010128c	obj/kern/kernel.asm	/^f010128c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	2b 05 64 48 29 f0    	sub    0xf0294864,%eax$/;"	l
f0101295	obj/kern/kernel.asm	/^f0101295:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f010129e	obj/kern/kernel.asm	/^f010129e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01012a1	obj/kern/kernel.asm	/^f01012a1:	89 03                	mov    %eax,(%ebx)$/;"	l
f01012a3	obj/kern/kernel.asm	/^f01012a3:	89 c2                	mov    %eax,%edx$/;"	l
f01012a5	obj/kern/kernel.asm	/^f01012a5:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	3b 15 58 48 29 f0    	cmp    0xf0294858,%edx$/;"	l
f01012ae	obj/kern/kernel.asm	/^f01012ae:	72 20                	jb     f01012d0 <pgdir_walk+0xf1>$/;"	l
f01012b0	obj/kern/kernel.asm	/^f01012b0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01012b4	obj/kern/kernel.asm	/^f01012b4:	c7 44 24 08 a0 6b 10 	movl   $0xf0106ba0,0x8(%esp)$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	f0 $/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	c7 44 24 04 90 02 00 	movl   $0x290,0x4(%esp)$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	00 $/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	e8 b5 ed ff ff       	call   f0100085 <_panic>$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01012d7	obj/kern/kernel.asm	/^f01012d7:	00 $/;"	l
f01012d8	obj/kern/kernel.asm	/^f01012d8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01012df	obj/kern/kernel.asm	/^f01012df:	00 $/;"	l
f01012e0	obj/kern/kernel.asm	/^f01012e0:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	e8 c9 40 00 00       	call   f01053b6 <memset>$/;"	l
f01012ed	obj/kern/kernel.asm	/^f01012ed:	83 0b 07             	orl    $0x7,(%ebx)$/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	8b 03                	mov    (%ebx),%eax$/;"	l
f01012f2	obj/kern/kernel.asm	/^f01012f2:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f01012fa	obj/kern/kernel.asm	/^f01012fa:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0101300	obj/kern/kernel.asm	/^f0101300:	01 f0                	add    %esi,%eax$/;"	l
f0101302	obj/kern/kernel.asm	/^f0101302:	89 c2                	mov    %eax,%edx$/;"	l
f0101304	obj/kern/kernel.asm	/^f0101304:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	3b 15 58 48 29 f0    	cmp    0xf0294858,%edx$/;"	l
f010130d	obj/kern/kernel.asm	/^f010130d:	72 20                	jb     f010132f <pgdir_walk+0x150>$/;"	l
f010130f	obj/kern/kernel.asm	/^f010130f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101313	obj/kern/kernel.asm	/^f0101313:	c7 44 24 08 a0 6b 10 	movl   $0xf0106ba0,0x8(%esp)$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	f0 $/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	c7 44 24 04 9e 02 00 	movl   $0x29e,0x4(%esp)$/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	00 $/;"	l
f0101323	obj/kern/kernel.asm	/^f0101323:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a:	e8 56 ed ff ff       	call   f0100085 <_panic>$/;"	l
f010132f	obj/kern/kernel.asm	/^f010132f:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334:	eb 05                	jmp    f010133b <pgdir_walk+0x15c>$/;"	l
f0101336	obj/kern/kernel.asm	/^f0101336:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010133b	obj/kern/kernel.asm	/^f010133b:	83 c4 20             	add    $0x20,%esp$/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	5b                   	pop    %ebx$/;"	l
f010133f	obj/kern/kernel.asm	/^f010133f:	5e                   	pop    %esi$/;"	l
f0101340	obj/kern/kernel.asm	/^f0101340:	5d                   	pop    %ebp$/;"	l
f0101341	obj/kern/kernel.asm	/^f0101341:	c3                   	ret    $/;"	l
f0101342	obj/kern/kernel.asm	/^f0101342:	c7 04 24 5e 71 10 f0 	movl   $0xf010715e,(%esp)$/;"	l
f0101349	obj/kern/kernel.asm	/^f0101349:	e8 7d 26 00 00       	call   f01039cb <cprintf>$/;"	l
f010134e	obj/kern/kernel.asm	/^f010134e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101353	obj/kern/kernel.asm	/^f0101353:	e9 9b fe ff ff       	jmp    f01011f3 <pgdir_walk+0x14>$/;"	l
f0101358	obj/kern/kernel.asm	/^f0101358 <user_mem_check>:$/;"	l
f0101358	obj/kern/kernel.asm	/^f0101358:	55                   	push   %ebp$/;"	l
f0101359	obj/kern/kernel.asm	/^f0101359:	89 e5                	mov    %esp,%ebp$/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	57                   	push   %edi$/;"	l
f010135c	obj/kern/kernel.asm	/^f010135c:	56                   	push   %esi$/;"	l
f010135d	obj/kern/kernel.asm	/^f010135d:	53                   	push   %ebx$/;"	l
f010135e	obj/kern/kernel.asm	/^f010135e:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0101361	obj/kern/kernel.asm	/^f0101361:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101367	obj/kern/kernel.asm	/^f0101367:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010136a	obj/kern/kernel.asm	/^f010136a:	89 c3                	mov    %eax,%ebx$/;"	l
f010136c	obj/kern/kernel.asm	/^f010136c:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0101372	obj/kern/kernel.asm	/^f0101372:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f0101375	obj/kern/kernel.asm	/^f0101375:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f010137a	obj/kern/kernel.asm	/^f010137a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010137f	obj/kern/kernel.asm	/^f010137f:	29 d8                	sub    %ebx,%eax$/;"	l
f0101381	obj/kern/kernel.asm	/^f0101381:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101384	obj/kern/kernel.asm	/^f0101384:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101387	obj/kern/kernel.asm	/^f0101387:	85 c0                	test   %eax,%eax$/;"	l
f0101389	obj/kern/kernel.asm	/^f0101389:	74 4c                	je     f01013d7 <user_mem_check+0x7f>$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0101390	obj/kern/kernel.asm	/^f0101390:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	00 $/;"	l
f0101398	obj/kern/kernel.asm	/^f0101398:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010139c	obj/kern/kernel.asm	/^f010139c:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01013a7	obj/kern/kernel.asm	/^f01013a7:	e8 33 fe ff ff       	call   f01011df <pgdir_walk>$/;"	l
f01013ac	obj/kern/kernel.asm	/^f01013ac:	85 c0                	test   %eax,%eax$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	74 08                	je     f01013b8 <user_mem_check+0x60>$/;"	l
f01013b0	obj/kern/kernel.asm	/^f01013b0:	8b 00                	mov    (%eax),%eax$/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2:	21 f8                	and    %edi,%eax$/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	39 c7                	cmp    %eax,%edi$/;"	l
f01013b6	obj/kern/kernel.asm	/^f01013b6:	74 0f                	je     f01013c7 <user_mem_check+0x6f>$/;"	l
f01013b8	obj/kern/kernel.asm	/^f01013b8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	a3 1c e4 26 f0       	mov    %eax,0xf026e41c$/;"	l
f01013c0	obj/kern/kernel.asm	/^f01013c0:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	eb 15                	jmp    f01013dc <user_mem_check+0x84>$/;"	l
f01013c7	obj/kern/kernel.asm	/^f01013c7:	83 c6 01             	add    $0x1,%esi$/;"	l
f01013ca	obj/kern/kernel.asm	/^f01013ca:	3b 75 e4             	cmp    -0x1c(%ebp),%esi$/;"	l
f01013cd	obj/kern/kernel.asm	/^f01013cd:	73 08                	jae    f01013d7 <user_mem_check+0x7f>$/;"	l
f01013cf	obj/kern/kernel.asm	/^f01013cf:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	eb b9                	jmp    f0101390 <user_mem_check+0x38>$/;"	l
f01013d7	obj/kern/kernel.asm	/^f01013d7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01013df	obj/kern/kernel.asm	/^f01013df:	5b                   	pop    %ebx$/;"	l
f01013e0	obj/kern/kernel.asm	/^f01013e0:	5e                   	pop    %esi$/;"	l
f01013e1	obj/kern/kernel.asm	/^f01013e1:	5f                   	pop    %edi$/;"	l
f01013e2	obj/kern/kernel.asm	/^f01013e2:	5d                   	pop    %ebp$/;"	l
f01013e3	obj/kern/kernel.asm	/^f01013e3:	c3                   	ret    $/;"	l
f01013e4	obj/kern/kernel.asm	/^f01013e4 <user_mem_assert>:$/;"	l
f01013e4	obj/kern/kernel.asm	/^f01013e4:	55                   	push   %ebp$/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	89 e5                	mov    %esp,%ebp$/;"	l
f01013e7	obj/kern/kernel.asm	/^f01013e7:	53                   	push   %ebx$/;"	l
f01013e8	obj/kern/kernel.asm	/^f01013e8:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01013eb	obj/kern/kernel.asm	/^f01013eb:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01013ee	obj/kern/kernel.asm	/^f01013ee:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01013f1	obj/kern/kernel.asm	/^f01013f1:	83 c8 04             	or     $0x4,%eax$/;"	l
f01013f4	obj/kern/kernel.asm	/^f01013f4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01013f8	obj/kern/kernel.asm	/^f01013f8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01013fb	obj/kern/kernel.asm	/^f01013fb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101402	obj/kern/kernel.asm	/^f0101402:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101406	obj/kern/kernel.asm	/^f0101406:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101409	obj/kern/kernel.asm	/^f0101409:	e8 4a ff ff ff       	call   f0101358 <user_mem_check>$/;"	l
f010140e	obj/kern/kernel.asm	/^f010140e:	85 c0                	test   %eax,%eax$/;"	l
f0101410	obj/kern/kernel.asm	/^f0101410:	79 24                	jns    f0101436 <user_mem_assert+0x52>$/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412:	a1 1c e4 26 f0       	mov    0xf026e41c,%eax$/;"	l
f0101417	obj/kern/kernel.asm	/^f0101417:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010141b	obj/kern/kernel.asm	/^f010141b:	8b 43 4c             	mov    0x4c(%ebx),%eax$/;"	l
f010141e	obj/kern/kernel.asm	/^f010141e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	c7 04 24 c4 6b 10 f0 	movl   $0xf0106bc4,(%esp)$/;"	l
f0101429	obj/kern/kernel.asm	/^f0101429:	e8 9d 25 00 00       	call   f01039cb <cprintf>$/;"	l
f010142e	obj/kern/kernel.asm	/^f010142e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101431	obj/kern/kernel.asm	/^f0101431:	e8 80 1e 00 00       	call   f01032b6 <env_destroy>$/;"	l
f0101436	obj/kern/kernel.asm	/^f0101436:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101439	obj/kern/kernel.asm	/^f0101439:	5b                   	pop    %ebx$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	5d                   	pop    %ebp$/;"	l
f010143b	obj/kern/kernel.asm	/^f010143b:	c3                   	ret    $/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c <page_lookup>:$/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c:	55                   	push   %ebp$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	89 e5                	mov    %esp,%ebp$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	53                   	push   %ebx$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101446	obj/kern/kernel.asm	/^f0101446:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d:	00 $/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101451	obj/kern/kernel.asm	/^f0101451:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101455	obj/kern/kernel.asm	/^f0101455:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010145b	obj/kern/kernel.asm	/^f010145b:	e8 7f fd ff ff       	call   f01011df <pgdir_walk>$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	85 c0                	test   %eax,%eax$/;"	l
f0101462	obj/kern/kernel.asm	/^f0101462:	75 13                	jne    f0101477 <page_lookup+0x3b>$/;"	l
f0101464	obj/kern/kernel.asm	/^f0101464:	c7 04 24 72 71 10 f0 	movl   $0xf0107172,(%esp)$/;"	l
f010146b	obj/kern/kernel.asm	/^f010146b:	e8 5b 25 00 00       	call   f01039cb <cprintf>$/;"	l
f0101470	obj/kern/kernel.asm	/^f0101470:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101475	obj/kern/kernel.asm	/^f0101475:	eb 40                	jmp    f01014b7 <page_lookup+0x7b>$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	8b 10                	mov    (%eax),%edx$/;"	l
f0101479	obj/kern/kernel.asm	/^f0101479:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	3b 15 58 48 29 f0    	cmp    0xf0294858,%edx$/;"	l
f0101482	obj/kern/kernel.asm	/^f0101482:	72 1c                	jb     f01014a0 <page_lookup+0x64>$/;"	l
f0101484	obj/kern/kernel.asm	/^f0101484:	c7 44 24 08 50 6a 10 	movl   $0xf0106a50,0x8(%esp)$/;"	l
f010148b	obj/kern/kernel.asm	/^f010148b:	f0 $/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
f0101493	obj/kern/kernel.asm	/^f0101493:	00 $/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	c7 04 24 da 66 10 f0 	movl   $0xf01066da,(%esp)$/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b:	e8 e5 eb ff ff       	call   f0100085 <_panic>$/;"	l
f01014a0	obj/kern/kernel.asm	/^f01014a0:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f01014a3	obj/kern/kernel.asm	/^f01014a3:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f01014a6	obj/kern/kernel.asm	/^f01014a6:	03 15 64 48 29 f0    	add    0xf0294864,%edx$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	85 db                	test   %ebx,%ebx$/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae:	74 07                	je     f01014b7 <page_lookup+0x7b>$/;"	l
f01014b0	obj/kern/kernel.asm	/^f01014b0:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f01014b3	obj/kern/kernel.asm	/^f01014b3:	74 02                	je     f01014b7 <page_lookup+0x7b>$/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	89 03                	mov    %eax,(%ebx)$/;"	l
f01014b7	obj/kern/kernel.asm	/^f01014b7:	89 d0                	mov    %edx,%eax$/;"	l
f01014b9	obj/kern/kernel.asm	/^f01014b9:	83 c4 14             	add    $0x14,%esp$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	5b                   	pop    %ebx$/;"	l
f01014bd	obj/kern/kernel.asm	/^f01014bd:	5d                   	pop    %ebp$/;"	l
f01014be	obj/kern/kernel.asm	/^f01014be:	c3                   	ret    $/;"	l
f01014bf	obj/kern/kernel.asm	/^f01014bf <page_remove>:$/;"	l
f01014bf	obj/kern/kernel.asm	/^f01014bf:	55                   	push   %ebp$/;"	l
f01014c0	obj/kern/kernel.asm	/^f01014c0:	89 e5                	mov    %esp,%ebp$/;"	l
f01014c2	obj/kern/kernel.asm	/^f01014c2:	83 ec 38             	sub    $0x38,%esp$/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01014ce	obj/kern/kernel.asm	/^f01014ce:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01014d1	obj/kern/kernel.asm	/^f01014d1:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01014db	obj/kern/kernel.asm	/^f01014db:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01014e2	obj/kern/kernel.asm	/^f01014e2:	e8 55 ff ff ff       	call   f010143c <page_lookup>$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	89 c3                	mov    %eax,%ebx$/;"	l
f01014e9	obj/kern/kernel.asm	/^f01014e9:	85 c0                	test   %eax,%eax$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	74 24                	je     f0101511 <page_remove+0x52>$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01014f0	obj/kern/kernel.asm	/^f01014f0:	e8 0a fa ff ff       	call   f0100eff <page_decref>$/;"	l
f01014f5	obj/kern/kernel.asm	/^f01014f5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01014f8	obj/kern/kernel.asm	/^f01014f8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	66 83 7b 08 00       	cmpw   $0x0,0x8(%ebx)$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	75 0c                	jne    f0101511 <page_remove+0x52>$/;"	l
f0101505	obj/kern/kernel.asm	/^f0101505:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101509	obj/kern/kernel.asm	/^f0101509:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010150c	obj/kern/kernel.asm	/^f010150c:	e8 11 fa ff ff       	call   f0100f22 <tlb_invalidate>$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0101517	obj/kern/kernel.asm	/^f0101517:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	89 ec                	mov    %ebp,%esp$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	5d                   	pop    %ebp$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	c3                   	ret    $/;"	l
f010151e	obj/kern/kernel.asm	/^f010151e <page_insert>:$/;"	l
f010151e	obj/kern/kernel.asm	/^f010151e:	55                   	push   %ebp$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101524	obj/kern/kernel.asm	/^f0101524:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0101527	obj/kern/kernel.asm	/^f0101527:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f010152a	obj/kern/kernel.asm	/^f010152a:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f010152d	obj/kern/kernel.asm	/^f010152d:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0101533	obj/kern/kernel.asm	/^f0101533:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010153a	obj/kern/kernel.asm	/^f010153a:	00 $/;"	l
f010153b	obj/kern/kernel.asm	/^f010153b:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101542	obj/kern/kernel.asm	/^f0101542:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101545	obj/kern/kernel.asm	/^f0101545:	e8 95 fc ff ff       	call   f01011df <pgdir_walk>$/;"	l
f010154a	obj/kern/kernel.asm	/^f010154a:	89 c3                	mov    %eax,%ebx$/;"	l
f010154c	obj/kern/kernel.asm	/^f010154c:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101551	obj/kern/kernel.asm	/^f0101551:	85 db                	test   %ebx,%ebx$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	74 70                	je     f01015c5 <page_insert+0xa7>$/;"	l
f0101555	obj/kern/kernel.asm	/^f0101555:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101557	obj/kern/kernel.asm	/^f0101557:	a8 01                	test   $0x1,%al$/;"	l
f0101559	obj/kern/kernel.asm	/^f0101559:	74 33                	je     f010158e <page_insert+0x70>$/;"	l
f010155b	obj/kern/kernel.asm	/^f010155b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	89 f2                	mov    %esi,%edx$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	2b 15 64 48 29 f0    	sub    0xf0294864,%edx$/;"	l
f0101568	obj/kern/kernel.asm	/^f0101568:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0101571	obj/kern/kernel.asm	/^f0101571:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101574	obj/kern/kernel.asm	/^f0101574:	39 d0                	cmp    %edx,%eax$/;"	l
f0101576	obj/kern/kernel.asm	/^f0101576:	74 11                	je     f0101589 <page_insert+0x6b>$/;"	l
f0101578	obj/kern/kernel.asm	/^f0101578:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010157c	obj/kern/kernel.asm	/^f010157c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	e8 38 ff ff ff       	call   f01014bf <page_remove>$/;"	l
f0101587	obj/kern/kernel.asm	/^f0101587:	eb 05                	jmp    f010158e <page_insert+0x70>$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	66 83 6e 08 01       	subw   $0x1,0x8(%esi)$/;"	l
f010158e	obj/kern/kernel.asm	/^f010158e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101591	obj/kern/kernel.asm	/^f0101591:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101594	obj/kern/kernel.asm	/^f0101594:	89 f2                	mov    %esi,%edx$/;"	l
f0101596	obj/kern/kernel.asm	/^f0101596:	2b 15 64 48 29 f0    	sub    0xf0294864,%edx$/;"	l
f010159c	obj/kern/kernel.asm	/^f010159c:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f010159f	obj/kern/kernel.asm	/^f010159f:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f01015a5	obj/kern/kernel.asm	/^f01015a5:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01015a8	obj/kern/kernel.asm	/^f01015a8:	09 d0                	or     %edx,%eax$/;"	l
f01015aa	obj/kern/kernel.asm	/^f01015aa:	89 03                	mov    %eax,(%ebx)$/;"	l
f01015ac	obj/kern/kernel.asm	/^f01015ac:	66 83 46 08 01       	addw   $0x1,0x8(%esi)$/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01015b5	obj/kern/kernel.asm	/^f01015b5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01015b8	obj/kern/kernel.asm	/^f01015b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01015bb	obj/kern/kernel.asm	/^f01015bb:	e8 62 f9 ff ff       	call   f0100f22 <tlb_invalidate>$/;"	l
f01015c0	obj/kern/kernel.asm	/^f01015c0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f01015c8	obj/kern/kernel.asm	/^f01015c8:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f01015cb	obj/kern/kernel.asm	/^f01015cb:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f01015ce	obj/kern/kernel.asm	/^f01015ce:	89 ec                	mov    %ebp,%esp$/;"	l
f01015d0	obj/kern/kernel.asm	/^f01015d0:	5d                   	pop    %ebp$/;"	l
f01015d1	obj/kern/kernel.asm	/^f01015d1:	c3                   	ret    $/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2 <boot_map_segment>:$/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	55                   	push   %ebp$/;"	l
f01015d3	obj/kern/kernel.asm	/^f01015d3:	89 e5                	mov    %esp,%ebp$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	57                   	push   %edi$/;"	l
f01015d6	obj/kern/kernel.asm	/^f01015d6:	56                   	push   %esi$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	53                   	push   %ebx$/;"	l
f01015d8	obj/kern/kernel.asm	/^f01015d8:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01015db	obj/kern/kernel.asm	/^f01015db:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01015de	obj/kern/kernel.asm	/^f01015de:	89 d3                	mov    %edx,%ebx$/;"	l
f01015e0	obj/kern/kernel.asm	/^f01015e0:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01015e3	obj/kern/kernel.asm	/^f01015e3:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01015e6	obj/kern/kernel.asm	/^f01015e6:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f01015e9	obj/kern/kernel.asm	/^f01015e9:	85 c9                	test   %ecx,%ecx$/;"	l
f01015eb	obj/kern/kernel.asm	/^f01015eb:	74 54                	je     f0101641 <boot_map_segment+0x6f>$/;"	l
f01015ed	obj/kern/kernel.asm	/^f01015ed:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01015f2	obj/kern/kernel.asm	/^f01015f2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01015f5	obj/kern/kernel.asm	/^f01015f5:	83 c8 01             	or     $0x1,%eax$/;"	l
f01015f8	obj/kern/kernel.asm	/^f01015f8:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01015fb	obj/kern/kernel.asm	/^f01015fb:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	00 $/;"	l
f0101603	obj/kern/kernel.asm	/^f0101603:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101607	obj/kern/kernel.asm	/^f0101607:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010160a	obj/kern/kernel.asm	/^f010160a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010160d	obj/kern/kernel.asm	/^f010160d:	e8 cd fb ff ff       	call   f01011df <pgdir_walk>$/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612:	85 c0                	test   %eax,%eax$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	75 0e                	jne    f0101624 <boot_map_segment+0x52>$/;"	l
f0101616	obj/kern/kernel.asm	/^f0101616:	c7 04 24 fc 6b 10 f0 	movl   $0xf0106bfc,(%esp)$/;"	l
f010161d	obj/kern/kernel.asm	/^f010161d:	e8 a9 23 00 00       	call   f01039cb <cprintf>$/;"	l
f0101622	obj/kern/kernel.asm	/^f0101622:	eb 1d                	jmp    f0101641 <boot_map_segment+0x6f>$/;"	l
f0101624	obj/kern/kernel.asm	/^f0101624:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0101627	obj/kern/kernel.asm	/^f0101627:	09 fa                	or     %edi,%edx$/;"	l
f0101629	obj/kern/kernel.asm	/^f0101629:	89 10                	mov    %edx,(%eax)$/;"	l
f010162b	obj/kern/kernel.asm	/^f010162b:	83 c6 01             	add    $0x1,%esi$/;"	l
f010162e	obj/kern/kernel.asm	/^f010162e:	3b 75 e4             	cmp    -0x1c(%ebp),%esi$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	73 0e                	jae    f0101641 <boot_map_segment+0x6f>$/;"	l
f0101633	obj/kern/kernel.asm	/^f0101633:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0101639	obj/kern/kernel.asm	/^f0101639:	81 c7 00 10 00 00    	add    $0x1000,%edi$/;"	l
f010163f	obj/kern/kernel.asm	/^f010163f:	eb ba                	jmp    f01015fb <boot_map_segment+0x29>$/;"	l
f0101641	obj/kern/kernel.asm	/^f0101641:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0101644	obj/kern/kernel.asm	/^f0101644:	5b                   	pop    %ebx$/;"	l
f0101645	obj/kern/kernel.asm	/^f0101645:	5e                   	pop    %esi$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	5f                   	pop    %edi$/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	5d                   	pop    %ebp$/;"	l
f0101648	obj/kern/kernel.asm	/^f0101648:	c3                   	ret    $/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649 <nvram_read>:$/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	55                   	push   %ebp$/;"	l
f010164a	obj/kern/kernel.asm	/^f010164a:	89 e5                	mov    %esp,%ebp$/;"	l
f010164c	obj/kern/kernel.asm	/^f010164c:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010164f	obj/kern/kernel.asm	/^f010164f:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
f0101652	obj/kern/kernel.asm	/^f0101652:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
f0101655	obj/kern/kernel.asm	/^f0101655:	89 c3                	mov    %eax,%ebx$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010165a	obj/kern/kernel.asm	/^f010165a:	e8 b1 21 00 00       	call   f0103810 <mc146818_read>$/;"	l
f010165f	obj/kern/kernel.asm	/^f010165f:	89 c6                	mov    %eax,%esi$/;"	l
f0101661	obj/kern/kernel.asm	/^f0101661:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101664	obj/kern/kernel.asm	/^f0101664:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101667	obj/kern/kernel.asm	/^f0101667:	e8 a4 21 00 00       	call   f0103810 <mc146818_read>$/;"	l
f010166c	obj/kern/kernel.asm	/^f010166c:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f010166f	obj/kern/kernel.asm	/^f010166f:	09 f0                	or     %esi,%eax$/;"	l
f0101671	obj/kern/kernel.asm	/^f0101671:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
f0101674	obj/kern/kernel.asm	/^f0101674:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
f0101677	obj/kern/kernel.asm	/^f0101677:	89 ec                	mov    %ebp,%esp$/;"	l
f0101679	obj/kern/kernel.asm	/^f0101679:	5d                   	pop    %ebp$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	c3                   	ret    $/;"	l
f010167b	obj/kern/kernel.asm	/^f010167b <i386_detect_memory>:$/;"	l
f010167b	obj/kern/kernel.asm	/^f010167b:	55                   	push   %ebp$/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	89 e5                	mov    %esp,%ebp$/;"	l
f010167e	obj/kern/kernel.asm	/^f010167e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101681	obj/kern/kernel.asm	/^f0101681:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0101686	obj/kern/kernel.asm	/^f0101686:	e8 be ff ff ff       	call   f0101649 <nvram_read>$/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f010168e	obj/kern/kernel.asm	/^f010168e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101693	obj/kern/kernel.asm	/^f0101693:	a3 0c e4 26 f0       	mov    %eax,0xf026e40c$/;"	l
f0101698	obj/kern/kernel.asm	/^f0101698:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f010169d	obj/kern/kernel.asm	/^f010169d:	e8 a7 ff ff ff       	call   f0101649 <nvram_read>$/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01016a5	obj/kern/kernel.asm	/^f01016a5:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	a3 10 e4 26 f0       	mov    %eax,0xf026e410$/;"	l
f01016af	obj/kern/kernel.asm	/^f01016af:	85 c0                	test   %eax,%eax$/;"	l
f01016b1	obj/kern/kernel.asm	/^f01016b1:	74 0c                	je     f01016bf <i386_detect_memory+0x44>$/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	05 00 00 10 00       	add    $0x100000,%eax$/;"	l
f01016b8	obj/kern/kernel.asm	/^f01016b8:	a3 08 e4 26 f0       	mov    %eax,0xf026e408$/;"	l
f01016bd	obj/kern/kernel.asm	/^f01016bd:	eb 0a                	jmp    f01016c9 <i386_detect_memory+0x4e>$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	a1 0c e4 26 f0       	mov    0xf026e40c,%eax$/;"	l
f01016c4	obj/kern/kernel.asm	/^f01016c4:	a3 08 e4 26 f0       	mov    %eax,0xf026e408$/;"	l
f01016c9	obj/kern/kernel.asm	/^f01016c9:	a1 08 e4 26 f0       	mov    0xf026e408,%eax$/;"	l
f01016ce	obj/kern/kernel.asm	/^f01016ce:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01016d1	obj/kern/kernel.asm	/^f01016d1:	a3 58 48 29 f0       	mov    %eax,0xf0294858$/;"	l
f01016d6	obj/kern/kernel.asm	/^f01016d6:	c9                   	leave  $/;"	l
f01016d7	obj/kern/kernel.asm	/^f01016d7:	c3                   	ret    $/;"	l
f01016d8	obj/kern/kernel.asm	/^f01016d8 <i386_vm_init>:$/;"	l
f01016d8	obj/kern/kernel.asm	/^f01016d8:	55                   	push   %ebp$/;"	l
f01016d9	obj/kern/kernel.asm	/^f01016d9:	89 e5                	mov    %esp,%ebp$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	57                   	push   %edi$/;"	l
f01016dc	obj/kern/kernel.asm	/^f01016dc:	56                   	push   %esi$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	53                   	push   %ebx$/;"	l
f01016de	obj/kern/kernel.asm	/^f01016de:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f01016e1	obj/kern/kernel.asm	/^f01016e1:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01016e6	obj/kern/kernel.asm	/^f01016e6:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f01016eb	obj/kern/kernel.asm	/^f01016eb:	e8 90 f7 ff ff       	call   f0100e80 <boot_alloc>$/;"	l
f01016f0	obj/kern/kernel.asm	/^f01016f0:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	00 $/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101702	obj/kern/kernel.asm	/^f0101702:	00 $/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101706	obj/kern/kernel.asm	/^f0101706:	e8 ab 3c 00 00       	call   f01053b6 <memset>$/;"	l
f010170b	obj/kern/kernel.asm	/^f010170b:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f010170e	obj/kern/kernel.asm	/^f010170e:	a3 60 48 29 f0       	mov    %eax,0xf0294860$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101718	obj/kern/kernel.asm	/^f0101718:	77 20                	ja     f010173a <i386_vm_init+0x62>$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010171e	obj/kern/kernel.asm	/^f010171e:	c7 44 24 08 fc 69 10 	movl   $0xf01069fc,0x8(%esp)$/;"	l
f0101725	obj/kern/kernel.asm	/^f0101725:	f0 $/;"	l
f0101726	obj/kern/kernel.asm	/^f0101726:	c7 44 24 04 9f 00 00 	movl   $0x9f,0x4(%esp)$/;"	l
f010172d	obj/kern/kernel.asm	/^f010172d:	00 $/;"	l
f010172e	obj/kern/kernel.asm	/^f010172e:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101735	obj/kern/kernel.asm	/^f0101735:	e8 4b e9 ff ff       	call   f0100085 <_panic>$/;"	l
f010173a	obj/kern/kernel.asm	/^f010173a:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010173f	obj/kern/kernel.asm	/^f010173f:	a3 5c 48 29 f0       	mov    %eax,0xf029485c$/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	89 c2                	mov    %eax,%edx$/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	83 ca 03             	or     $0x3,%edx$/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	89 91 fc 0e 00 00    	mov    %edx,0xefc(%ecx)$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	83 c8 05             	or     $0x5,%eax$/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	89 81 f4 0e 00 00    	mov    %eax,0xef4(%ecx)$/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	a1 58 48 29 f0       	mov    0xf0294858,%eax$/;"	l
f0101760	obj/kern/kernel.asm	/^f0101760:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0101763	obj/kern/kernel.asm	/^f0101763:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010176b	obj/kern/kernel.asm	/^f010176b:	e8 10 f7 ff ff       	call   f0100e80 <boot_alloc>$/;"	l
f0101770	obj/kern/kernel.asm	/^f0101770:	a3 64 48 29 f0       	mov    %eax,0xf0294864$/;"	l
f0101775	obj/kern/kernel.asm	/^f0101775:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010177a	obj/kern/kernel.asm	/^f010177a:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f010177f	obj/kern/kernel.asm	/^f010177f:	e8 fc f6 ff ff       	call   f0100e80 <boot_alloc>$/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784:	a3 20 e4 26 f0       	mov    %eax,0xf026e420$/;"	l
f0101789	obj/kern/kernel.asm	/^f0101789:	e8 b0 f7 ff ff       	call   f0100f3e <page_init>$/;"	l
f010178e	obj/kern/kernel.asm	/^f010178e:	a1 18 e4 26 f0       	mov    0xf026e418,%eax$/;"	l
f0101793	obj/kern/kernel.asm	/^f0101793:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	85 c0                	test   %eax,%eax$/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798:	0f 84 89 00 00 00    	je     f0101827 <i386_vm_init+0x14f>$/;"	l
f010179e	obj/kern/kernel.asm	/^f010179e:	2b 05 64 48 29 f0    	sub    0xf0294864,%eax$/;"	l
f01017a4	obj/kern/kernel.asm	/^f01017a4:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f01017ad	obj/kern/kernel.asm	/^f01017ad:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01017b0	obj/kern/kernel.asm	/^f01017b0:	89 c2                	mov    %eax,%edx$/;"	l
f01017b2	obj/kern/kernel.asm	/^f01017b2:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01017b5	obj/kern/kernel.asm	/^f01017b5:	3b 15 58 48 29 f0    	cmp    0xf0294858,%edx$/;"	l
f01017bb	obj/kern/kernel.asm	/^f01017bb:	72 41                	jb     f01017fe <i386_vm_init+0x126>$/;"	l
f01017bd	obj/kern/kernel.asm	/^f01017bd:	eb 1f                	jmp    f01017de <i386_vm_init+0x106>$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	2b 05 64 48 29 f0    	sub    0xf0294864,%eax$/;"	l
f01017c5	obj/kern/kernel.asm	/^f01017c5:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01017c8	obj/kern/kernel.asm	/^f01017c8:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f01017ce	obj/kern/kernel.asm	/^f01017ce:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01017d1	obj/kern/kernel.asm	/^f01017d1:	89 c2                	mov    %eax,%edx$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01017d6	obj/kern/kernel.asm	/^f01017d6:	3b 15 58 48 29 f0    	cmp    0xf0294858,%edx$/;"	l
f01017dc	obj/kern/kernel.asm	/^f01017dc:	72 20                	jb     f01017fe <i386_vm_init+0x126>$/;"	l
f01017de	obj/kern/kernel.asm	/^f01017de:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	c7 44 24 08 a0 6b 10 	movl   $0xf0106ba0,0x8(%esp)$/;"	l
f01017e9	obj/kern/kernel.asm	/^f01017e9:	f0 $/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	c7 44 24 04 5a 00 00 	movl   $0x5a,0x4(%esp)$/;"	l
f01017f1	obj/kern/kernel.asm	/^f01017f1:	00 $/;"	l
f01017f2	obj/kern/kernel.asm	/^f01017f2:	c7 04 24 da 66 10 f0 	movl   $0xf01066da,(%esp)$/;"	l
f01017f9	obj/kern/kernel.asm	/^f01017f9:	e8 87 e8 ff ff       	call   f0100085 <_panic>$/;"	l
f01017fe	obj/kern/kernel.asm	/^f01017fe:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f0101805	obj/kern/kernel.asm	/^f0101805:	00 $/;"	l
f0101806	obj/kern/kernel.asm	/^f0101806:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f010180d	obj/kern/kernel.asm	/^f010180d:	00 $/;"	l
f010180e	obj/kern/kernel.asm	/^f010180e:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	e8 9b 3b 00 00       	call   f01053b6 <memset>$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	8b 00                	mov    (%eax),%eax$/;"	l
f0101820	obj/kern/kernel.asm	/^f0101820:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101823	obj/kern/kernel.asm	/^f0101823:	85 c0                	test   %eax,%eax$/;"	l
f0101825	obj/kern/kernel.asm	/^f0101825:	75 98                	jne    f01017bf <i386_vm_init+0xe7>$/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	a1 18 e4 26 f0       	mov    0xf026e418,%eax$/;"	l
f010182c	obj/kern/kernel.asm	/^f010182c:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010182f	obj/kern/kernel.asm	/^f010182f:	85 c0                	test   %eax,%eax$/;"	l
f0101831	obj/kern/kernel.asm	/^f0101831:	0f 84 e3 01 00 00    	je     f0101a1a <i386_vm_init+0x342>$/;"	l
f0101837	obj/kern/kernel.asm	/^f0101837:	8b 1d 64 48 29 f0    	mov    0xf0294864,%ebx$/;"	l
f010183d	obj/kern/kernel.asm	/^f010183d:	39 d8                	cmp    %ebx,%eax$/;"	l
f010183f	obj/kern/kernel.asm	/^f010183f:	72 59                	jb     f010189a <i386_vm_init+0x1c2>$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	8b 35 58 48 29 f0    	mov    0xf0294858,%esi$/;"	l
f0101847	obj/kern/kernel.asm	/^f0101847:	8d 14 76             	lea    (%esi,%esi,2),%edx$/;"	l
f010184a	obj/kern/kernel.asm	/^f010184a:	8d 3c 93             	lea    (%ebx,%edx,4),%edi$/;"	l
f010184d	obj/kern/kernel.asm	/^f010184d:	39 f8                	cmp    %edi,%eax$/;"	l
f010184f	obj/kern/kernel.asm	/^f010184f:	73 71                	jae    f01018c2 <i386_vm_init+0x1ea>$/;"	l
f0101851	obj/kern/kernel.asm	/^f0101851:	89 5d c0             	mov    %ebx,-0x40(%ebp)$/;"	l
f0101854	obj/kern/kernel.asm	/^f0101854:	89 c2                	mov    %eax,%edx$/;"	l
f0101856	obj/kern/kernel.asm	/^f0101856:	29 da                	sub    %ebx,%edx$/;"	l
f0101858	obj/kern/kernel.asm	/^f0101858:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f010185b	obj/kern/kernel.asm	/^f010185b:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	85 d2                	test   %edx,%edx$/;"	l
f0101866	obj/kern/kernel.asm	/^f0101866:	0f 84 8f 00 00 00    	je     f01018fb <i386_vm_init+0x223>$/;"	l
f010186c	obj/kern/kernel.asm	/^f010186c:	81 fa 00 00 0a 00    	cmp    $0xa0000,%edx$/;"	l
f0101872	obj/kern/kernel.asm	/^f0101872:	0f 84 af 00 00 00    	je     f0101927 <i386_vm_init+0x24f>$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	81 fa 00 f0 0f 00    	cmp    $0xff000,%edx$/;"	l
f010187e	obj/kern/kernel.asm	/^f010187e:	0f 84 cf 00 00 00    	je     f0101953 <i386_vm_init+0x27b>$/;"	l
f0101884	obj/kern/kernel.asm	/^f0101884:	81 fa 00 00 10 00    	cmp    $0x100000,%edx$/;"	l
f010188a	obj/kern/kernel.asm	/^f010188a:	0f 85 13 01 00 00    	jne    f01019a3 <i386_vm_init+0x2cb>$/;"	l
f0101890	obj/kern/kernel.asm	/^f0101890:	e9 ea 00 00 00       	jmp    f010197f <i386_vm_init+0x2a7>$/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	39 d8                	cmp    %ebx,%eax$/;"	l
f0101897	obj/kern/kernel.asm	/^f0101897:	90                   	nop$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	73 24                	jae    f01018be <i386_vm_init+0x1e6>$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	c7 44 24 0c 87 71 10 	movl   $0xf0107187,0xc(%esp)$/;"	l
f01018a1	obj/kern/kernel.asm	/^f01018a1:	f0 $/;"	l
f01018a2	obj/kern/kernel.asm	/^f01018a2:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f01018a9	obj/kern/kernel.asm	/^f01018a9:	f0 $/;"	l
f01018aa	obj/kern/kernel.asm	/^f01018aa:	c7 44 24 04 48 01 00 	movl   $0x148,0x4(%esp)$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	00 $/;"	l
f01018b2	obj/kern/kernel.asm	/^f01018b2:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f01018b9	obj/kern/kernel.asm	/^f01018b9:	e8 c7 e7 ff ff       	call   f0100085 <_panic>$/;"	l
f01018be	obj/kern/kernel.asm	/^f01018be:	39 f8                	cmp    %edi,%eax$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	72 24                	jb     f01018e6 <i386_vm_init+0x20e>$/;"	l
f01018c2	obj/kern/kernel.asm	/^f01018c2:	c7 44 24 0c a9 71 10 	movl   $0xf01071a9,0xc(%esp)$/;"	l
f01018c9	obj/kern/kernel.asm	/^f01018c9:	f0 $/;"	l
f01018ca	obj/kern/kernel.asm	/^f01018ca:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	f0 $/;"	l
f01018d2	obj/kern/kernel.asm	/^f01018d2:	c7 44 24 04 49 01 00 	movl   $0x149,0x4(%esp)$/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	00 $/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f01018e1	obj/kern/kernel.asm	/^f01018e1:	e8 9f e7 ff ff       	call   f0100085 <_panic>$/;"	l
f01018e6	obj/kern/kernel.asm	/^f01018e6:	89 c2                	mov    %eax,%edx$/;"	l
f01018e8	obj/kern/kernel.asm	/^f01018e8:	2b 55 c0             	sub    -0x40(%ebp),%edx$/;"	l
f01018eb	obj/kern/kernel.asm	/^f01018eb:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f01018ee	obj/kern/kernel.asm	/^f01018ee:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	85 d2                	test   %edx,%edx$/;"	l
f01018f9	obj/kern/kernel.asm	/^f01018f9:	75 24                	jne    f010191f <i386_vm_init+0x247>$/;"	l
f01018fb	obj/kern/kernel.asm	/^f01018fb:	c7 44 24 0c bd 71 10 	movl   $0xf01071bd,0xc(%esp)$/;"	l
f0101902	obj/kern/kernel.asm	/^f0101902:	f0 $/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	f0 $/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	c7 44 24 04 4c 01 00 	movl   $0x14c,0x4(%esp)$/;"	l
f0101912	obj/kern/kernel.asm	/^f0101912:	00 $/;"	l
f0101913	obj/kern/kernel.asm	/^f0101913:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	e8 66 e7 ff ff       	call   f0100085 <_panic>$/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	81 fa 00 00 0a 00    	cmp    $0xa0000,%edx$/;"	l
f0101925	obj/kern/kernel.asm	/^f0101925:	75 24                	jne    f010194b <i386_vm_init+0x273>$/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	c7 44 24 0c cf 71 10 	movl   $0xf01071cf,0xc(%esp)$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	f0 $/;"	l
f010192f	obj/kern/kernel.asm	/^f010192f:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	f0 $/;"	l
f0101937	obj/kern/kernel.asm	/^f0101937:	c7 44 24 04 4d 01 00 	movl   $0x14d,0x4(%esp)$/;"	l
f010193e	obj/kern/kernel.asm	/^f010193e:	00 $/;"	l
f010193f	obj/kern/kernel.asm	/^f010193f:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	e8 3a e7 ff ff       	call   f0100085 <_panic>$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	81 fa 00 f0 0f 00    	cmp    $0xff000,%edx$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	75 24                	jne    f0101977 <i386_vm_init+0x29f>$/;"	l
f0101953	obj/kern/kernel.asm	/^f0101953:	c7 44 24 0c 30 6c 10 	movl   $0xf0106c30,0xc(%esp)$/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a:	f0 $/;"	l
f010195b	obj/kern/kernel.asm	/^f010195b:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	f0 $/;"	l
f0101963	obj/kern/kernel.asm	/^f0101963:	c7 44 24 04 4e 01 00 	movl   $0x14e,0x4(%esp)$/;"	l
f010196a	obj/kern/kernel.asm	/^f010196a:	00 $/;"	l
f010196b	obj/kern/kernel.asm	/^f010196b:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101972	obj/kern/kernel.asm	/^f0101972:	e8 0e e7 ff ff       	call   f0100085 <_panic>$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	81 fa 00 00 10 00    	cmp    $0x100000,%edx$/;"	l
f010197d	obj/kern/kernel.asm	/^f010197d:	75 36                	jne    f01019b5 <i386_vm_init+0x2dd>$/;"	l
f010197f	obj/kern/kernel.asm	/^f010197f:	c7 44 24 0c e9 71 10 	movl   $0xf01071e9,0xc(%esp)$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	f0 $/;"	l
f0101987	obj/kern/kernel.asm	/^f0101987:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f010198e	obj/kern/kernel.asm	/^f010198e:	f0 $/;"	l
f010198f	obj/kern/kernel.asm	/^f010198f:	c7 44 24 04 4f 01 00 	movl   $0x14f,0x4(%esp)$/;"	l
f0101996	obj/kern/kernel.asm	/^f0101996:	00 $/;"	l
f0101997	obj/kern/kernel.asm	/^f0101997:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f010199e	obj/kern/kernel.asm	/^f010199e:	e8 e2 e6 ff ff       	call   f0100085 <_panic>$/;"	l
f01019a3	obj/kern/kernel.asm	/^f01019a3:	8b 0d 14 e4 26 f0    	mov    0xf026e414,%ecx$/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f01019ac	obj/kern/kernel.asm	/^f01019ac:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01019b2	obj/kern/kernel.asm	/^f01019b2:	89 4d c4             	mov    %ecx,-0x3c(%ebp)$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	89 d1                	mov    %edx,%ecx$/;"	l
f01019b7	obj/kern/kernel.asm	/^f01019b7:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01019ba	obj/kern/kernel.asm	/^f01019ba:	39 f1                	cmp    %esi,%ecx$/;"	l
f01019bc	obj/kern/kernel.asm	/^f01019bc:	72 20                	jb     f01019de <i386_vm_init+0x306>$/;"	l
f01019be	obj/kern/kernel.asm	/^f01019be:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01019c2	obj/kern/kernel.asm	/^f01019c2:	c7 44 24 08 a0 6b 10 	movl   $0xf0106ba0,0x8(%esp)$/;"	l
f01019c9	obj/kern/kernel.asm	/^f01019c9:	f0 $/;"	l
f01019ca	obj/kern/kernel.asm	/^f01019ca:	c7 44 24 04 5a 00 00 	movl   $0x5a,0x4(%esp)$/;"	l
f01019d1	obj/kern/kernel.asm	/^f01019d1:	00 $/;"	l
f01019d2	obj/kern/kernel.asm	/^f01019d2:	c7 04 24 da 66 10 f0 	movl   $0xf01066da,(%esp)$/;"	l
f01019d9	obj/kern/kernel.asm	/^f01019d9:	e8 a7 e6 ff ff       	call   f0100085 <_panic>$/;"	l
f01019de	obj/kern/kernel.asm	/^f01019de:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	39 55 c4             	cmp    %edx,-0x3c(%ebp)$/;"	l
f01019e7	obj/kern/kernel.asm	/^f01019e7:	75 24                	jne    f0101a0d <i386_vm_init+0x335>$/;"	l
f01019e9	obj/kern/kernel.asm	/^f01019e9:	c7 44 24 0c 54 6c 10 	movl   $0xf0106c54,0xc(%esp)$/;"	l
f01019f0	obj/kern/kernel.asm	/^f01019f0:	f0 $/;"	l
f01019f1	obj/kern/kernel.asm	/^f01019f1:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f01019f8	obj/kern/kernel.asm	/^f01019f8:	f0 $/;"	l
f01019f9	obj/kern/kernel.asm	/^f01019f9:	c7 44 24 04 50 01 00 	movl   $0x150,0x4(%esp)$/;"	l
f0101a00	obj/kern/kernel.asm	/^f0101a00:	00 $/;"	l
f0101a01	obj/kern/kernel.asm	/^f0101a01:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101a08	obj/kern/kernel.asm	/^f0101a08:	e8 78 e6 ff ff       	call   f0100085 <_panic>$/;"	l
f0101a0d	obj/kern/kernel.asm	/^f0101a0d:	8b 00                	mov    (%eax),%eax$/;"	l
f0101a0f	obj/kern/kernel.asm	/^f0101a0f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101a12	obj/kern/kernel.asm	/^f0101a12:	85 c0                	test   %eax,%eax$/;"	l
f0101a14	obj/kern/kernel.asm	/^f0101a14:	0f 85 7b fe ff ff    	jne    f0101895 <i386_vm_init+0x1bd>$/;"	l
f0101a1a	obj/kern/kernel.asm	/^f0101a1a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0101a21	obj/kern/kernel.asm	/^f0101a21:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0101a28	obj/kern/kernel.asm	/^f0101a28:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0101a2f	obj/kern/kernel.asm	/^f0101a2f:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0101a32	obj/kern/kernel.asm	/^f0101a32:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a35	obj/kern/kernel.asm	/^f0101a35:	e8 55 f7 ff ff       	call   f010118f <page_alloc>$/;"	l
f0101a3a	obj/kern/kernel.asm	/^f0101a3a:	85 c0                	test   %eax,%eax$/;"	l
f0101a3c	obj/kern/kernel.asm	/^f0101a3c:	74 24                	je     f0101a62 <i386_vm_init+0x38a>$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	c7 44 24 0c 04 72 10 	movl   $0xf0107204,0xc(%esp)$/;"	l
f0101a45	obj/kern/kernel.asm	/^f0101a45:	f0 $/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	f0 $/;"	l
f0101a4e	obj/kern/kernel.asm	/^f0101a4e:	c7 44 24 04 54 01 00 	movl   $0x154,0x4(%esp)$/;"	l
f0101a55	obj/kern/kernel.asm	/^f0101a55:	00 $/;"	l
f0101a56	obj/kern/kernel.asm	/^f0101a56:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101a5d	obj/kern/kernel.asm	/^f0101a5d:	e8 23 e6 ff ff       	call   f0100085 <_panic>$/;"	l
f0101a62	obj/kern/kernel.asm	/^f0101a62:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0101a65	obj/kern/kernel.asm	/^f0101a65:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a68	obj/kern/kernel.asm	/^f0101a68:	e8 22 f7 ff ff       	call   f010118f <page_alloc>$/;"	l
f0101a6d	obj/kern/kernel.asm	/^f0101a6d:	85 c0                	test   %eax,%eax$/;"	l
f0101a6f	obj/kern/kernel.asm	/^f0101a6f:	74 24                	je     f0101a95 <i386_vm_init+0x3bd>$/;"	l
f0101a71	obj/kern/kernel.asm	/^f0101a71:	c7 44 24 0c 1a 72 10 	movl   $0xf010721a,0xc(%esp)$/;"	l
f0101a78	obj/kern/kernel.asm	/^f0101a78:	f0 $/;"	l
f0101a79	obj/kern/kernel.asm	/^f0101a79:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101a80	obj/kern/kernel.asm	/^f0101a80:	f0 $/;"	l
f0101a81	obj/kern/kernel.asm	/^f0101a81:	c7 44 24 04 55 01 00 	movl   $0x155,0x4(%esp)$/;"	l
f0101a88	obj/kern/kernel.asm	/^f0101a88:	00 $/;"	l
f0101a89	obj/kern/kernel.asm	/^f0101a89:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101a90	obj/kern/kernel.asm	/^f0101a90:	e8 f0 e5 ff ff       	call   f0100085 <_panic>$/;"	l
f0101a95	obj/kern/kernel.asm	/^f0101a95:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101a98	obj/kern/kernel.asm	/^f0101a98:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a9b	obj/kern/kernel.asm	/^f0101a9b:	e8 ef f6 ff ff       	call   f010118f <page_alloc>$/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	85 c0                	test   %eax,%eax$/;"	l
f0101aa2	obj/kern/kernel.asm	/^f0101aa2:	74 24                	je     f0101ac8 <i386_vm_init+0x3f0>$/;"	l
f0101aa4	obj/kern/kernel.asm	/^f0101aa4:	c7 44 24 0c 30 72 10 	movl   $0xf0107230,0xc(%esp)$/;"	l
f0101aab	obj/kern/kernel.asm	/^f0101aab:	f0 $/;"	l
f0101aac	obj/kern/kernel.asm	/^f0101aac:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101ab3	obj/kern/kernel.asm	/^f0101ab3:	f0 $/;"	l
f0101ab4	obj/kern/kernel.asm	/^f0101ab4:	c7 44 24 04 56 01 00 	movl   $0x156,0x4(%esp)$/;"	l
f0101abb	obj/kern/kernel.asm	/^f0101abb:	00 $/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101ac3	obj/kern/kernel.asm	/^f0101ac3:	e8 bd e5 ff ff       	call   f0100085 <_panic>$/;"	l
f0101ac8	obj/kern/kernel.asm	/^f0101ac8:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0101acb	obj/kern/kernel.asm	/^f0101acb:	85 c9                	test   %ecx,%ecx$/;"	l
f0101acd	obj/kern/kernel.asm	/^f0101acd:	75 24                	jne    f0101af3 <i386_vm_init+0x41b>$/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	c7 44 24 0c 54 72 10 	movl   $0xf0107254,0xc(%esp)$/;"	l
f0101ad6	obj/kern/kernel.asm	/^f0101ad6:	f0 $/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101ade	obj/kern/kernel.asm	/^f0101ade:	f0 $/;"	l
f0101adf	obj/kern/kernel.asm	/^f0101adf:	c7 44 24 04 58 01 00 	movl   $0x158,0x4(%esp)$/;"	l
f0101ae6	obj/kern/kernel.asm	/^f0101ae6:	00 $/;"	l
f0101ae7	obj/kern/kernel.asm	/^f0101ae7:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101aee	obj/kern/kernel.asm	/^f0101aee:	e8 92 e5 ff ff       	call   f0100085 <_panic>$/;"	l
f0101af3	obj/kern/kernel.asm	/^f0101af3:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0101af6	obj/kern/kernel.asm	/^f0101af6:	85 d2                	test   %edx,%edx$/;"	l
f0101af8	obj/kern/kernel.asm	/^f0101af8:	74 04                	je     f0101afe <i386_vm_init+0x426>$/;"	l
f0101afa	obj/kern/kernel.asm	/^f0101afa:	39 d1                	cmp    %edx,%ecx$/;"	l
f0101afc	obj/kern/kernel.asm	/^f0101afc:	75 24                	jne    f0101b22 <i386_vm_init+0x44a>$/;"	l
f0101afe	obj/kern/kernel.asm	/^f0101afe:	c7 44 24 0c 46 72 10 	movl   $0xf0107246,0xc(%esp)$/;"	l
f0101b05	obj/kern/kernel.asm	/^f0101b05:	f0 $/;"	l
f0101b06	obj/kern/kernel.asm	/^f0101b06:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	f0 $/;"	l
f0101b0e	obj/kern/kernel.asm	/^f0101b0e:	c7 44 24 04 59 01 00 	movl   $0x159,0x4(%esp)$/;"	l
f0101b15	obj/kern/kernel.asm	/^f0101b15:	00 $/;"	l
f0101b16	obj/kern/kernel.asm	/^f0101b16:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101b1d	obj/kern/kernel.asm	/^f0101b1d:	e8 63 e5 ff ff       	call   f0100085 <_panic>$/;"	l
f0101b22	obj/kern/kernel.asm	/^f0101b22:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101b25	obj/kern/kernel.asm	/^f0101b25:	85 c0                	test   %eax,%eax$/;"	l
f0101b27	obj/kern/kernel.asm	/^f0101b27:	74 09                	je     f0101b32 <i386_vm_init+0x45a>$/;"	l
f0101b29	obj/kern/kernel.asm	/^f0101b29:	39 c2                	cmp    %eax,%edx$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	74 05                	je     f0101b32 <i386_vm_init+0x45a>$/;"	l
f0101b2d	obj/kern/kernel.asm	/^f0101b2d:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101b2f	obj/kern/kernel.asm	/^f0101b2f:	90                   	nop$/;"	l
f0101b30	obj/kern/kernel.asm	/^f0101b30:	75 24                	jne    f0101b56 <i386_vm_init+0x47e>$/;"	l
f0101b32	obj/kern/kernel.asm	/^f0101b32:	c7 44 24 0c 8c 6c 10 	movl   $0xf0106c8c,0xc(%esp)$/;"	l
f0101b39	obj/kern/kernel.asm	/^f0101b39:	f0 $/;"	l
f0101b3a	obj/kern/kernel.asm	/^f0101b3a:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101b41	obj/kern/kernel.asm	/^f0101b41:	f0 $/;"	l
f0101b42	obj/kern/kernel.asm	/^f0101b42:	c7 44 24 04 5a 01 00 	movl   $0x15a,0x4(%esp)$/;"	l
f0101b49	obj/kern/kernel.asm	/^f0101b49:	00 $/;"	l
f0101b4a	obj/kern/kernel.asm	/^f0101b4a:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101b51	obj/kern/kernel.asm	/^f0101b51:	e8 2f e5 ff ff       	call   f0100085 <_panic>$/;"	l
f0101b56	obj/kern/kernel.asm	/^f0101b56:	8b 35 64 48 29 f0    	mov    0xf0294864,%esi$/;"	l
f0101b5c	obj/kern/kernel.asm	/^f0101b5c:	8b 1d 58 48 29 f0    	mov    0xf0294858,%ebx$/;"	l
f0101b62	obj/kern/kernel.asm	/^f0101b62:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
f0101b65	obj/kern/kernel.asm	/^f0101b65:	29 f1                	sub    %esi,%ecx$/;"	l
f0101b67	obj/kern/kernel.asm	/^f0101b67:	c1 f9 02             	sar    $0x2,%ecx$/;"	l
f0101b6a	obj/kern/kernel.asm	/^f0101b6a:	69 c9 ab aa aa aa    	imul   $0xaaaaaaab,%ecx,%ecx$/;"	l
f0101b70	obj/kern/kernel.asm	/^f0101b70:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101b73	obj/kern/kernel.asm	/^f0101b73:	39 d9                	cmp    %ebx,%ecx$/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	72 24                	jb     f0101b9b <i386_vm_init+0x4c3>$/;"	l
f0101b77	obj/kern/kernel.asm	/^f0101b77:	c7 44 24 0c 58 72 10 	movl   $0xf0107258,0xc(%esp)$/;"	l
f0101b7e	obj/kern/kernel.asm	/^f0101b7e:	f0 $/;"	l
f0101b7f	obj/kern/kernel.asm	/^f0101b7f:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101b86	obj/kern/kernel.asm	/^f0101b86:	f0 $/;"	l
f0101b87	obj/kern/kernel.asm	/^f0101b87:	c7 44 24 04 5b 01 00 	movl   $0x15b,0x4(%esp)$/;"	l
f0101b8e	obj/kern/kernel.asm	/^f0101b8e:	00 $/;"	l
f0101b8f	obj/kern/kernel.asm	/^f0101b8f:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101b96	obj/kern/kernel.asm	/^f0101b96:	e8 ea e4 ff ff       	call   f0100085 <_panic>$/;"	l
f0101b9b	obj/kern/kernel.asm	/^f0101b9b:	29 f2                	sub    %esi,%edx$/;"	l
f0101b9d	obj/kern/kernel.asm	/^f0101b9d:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0101ba0	obj/kern/kernel.asm	/^f0101ba0:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0101ba6	obj/kern/kernel.asm	/^f0101ba6:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101ba9	obj/kern/kernel.asm	/^f0101ba9:	39 d3                	cmp    %edx,%ebx$/;"	l
f0101bab	obj/kern/kernel.asm	/^f0101bab:	77 24                	ja     f0101bd1 <i386_vm_init+0x4f9>$/;"	l
f0101bad	obj/kern/kernel.asm	/^f0101bad:	c7 44 24 0c 74 72 10 	movl   $0xf0107274,0xc(%esp)$/;"	l
f0101bb4	obj/kern/kernel.asm	/^f0101bb4:	f0 $/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101bbc	obj/kern/kernel.asm	/^f0101bbc:	f0 $/;"	l
f0101bbd	obj/kern/kernel.asm	/^f0101bbd:	c7 44 24 04 5c 01 00 	movl   $0x15c,0x4(%esp)$/;"	l
f0101bc4	obj/kern/kernel.asm	/^f0101bc4:	00 $/;"	l
f0101bc5	obj/kern/kernel.asm	/^f0101bc5:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	e8 b4 e4 ff ff       	call   f0100085 <_panic>$/;"	l
f0101bd1	obj/kern/kernel.asm	/^f0101bd1:	29 f0                	sub    %esi,%eax$/;"	l
f0101bd3	obj/kern/kernel.asm	/^f0101bd3:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0101bd6	obj/kern/kernel.asm	/^f0101bd6:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0101bdc	obj/kern/kernel.asm	/^f0101bdc:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101bdf	obj/kern/kernel.asm	/^f0101bdf:	39 c3                	cmp    %eax,%ebx$/;"	l
f0101be1	obj/kern/kernel.asm	/^f0101be1:	77 24                	ja     f0101c07 <i386_vm_init+0x52f>$/;"	l
f0101be3	obj/kern/kernel.asm	/^f0101be3:	c7 44 24 0c 90 72 10 	movl   $0xf0107290,0xc(%esp)$/;"	l
f0101bea	obj/kern/kernel.asm	/^f0101bea:	f0 $/;"	l
f0101beb	obj/kern/kernel.asm	/^f0101beb:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101bf2	obj/kern/kernel.asm	/^f0101bf2:	f0 $/;"	l
f0101bf3	obj/kern/kernel.asm	/^f0101bf3:	c7 44 24 04 5d 01 00 	movl   $0x15d,0x4(%esp)$/;"	l
f0101bfa	obj/kern/kernel.asm	/^f0101bfa:	00 $/;"	l
f0101bfb	obj/kern/kernel.asm	/^f0101bfb:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101c02	obj/kern/kernel.asm	/^f0101c02:	e8 7e e4 ff ff       	call   f0100085 <_panic>$/;"	l
f0101c07	obj/kern/kernel.asm	/^f0101c07:	8b 1d 18 e4 26 f0    	mov    0xf026e418,%ebx$/;"	l
f0101c0d	obj/kern/kernel.asm	/^f0101c0d:	c7 05 18 e4 26 f0 00 	movl   $0x0,0xf026e418$/;"	l
f0101c14	obj/kern/kernel.asm	/^f0101c14:	00 00 00 $/;"	l
f0101c17	obj/kern/kernel.asm	/^f0101c17:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
f0101c1a	obj/kern/kernel.asm	/^f0101c1a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c1d	obj/kern/kernel.asm	/^f0101c1d:	e8 6d f5 ff ff       	call   f010118f <page_alloc>$/;"	l
f0101c22	obj/kern/kernel.asm	/^f0101c22:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f0101c25	obj/kern/kernel.asm	/^f0101c25:	74 24                	je     f0101c4b <i386_vm_init+0x573>$/;"	l
f0101c27	obj/kern/kernel.asm	/^f0101c27:	c7 44 24 0c ac 72 10 	movl   $0xf01072ac,0xc(%esp)$/;"	l
f0101c2e	obj/kern/kernel.asm	/^f0101c2e:	f0 $/;"	l
f0101c2f	obj/kern/kernel.asm	/^f0101c2f:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101c36	obj/kern/kernel.asm	/^f0101c36:	f0 $/;"	l
f0101c37	obj/kern/kernel.asm	/^f0101c37:	c7 44 24 04 64 01 00 	movl   $0x164,0x4(%esp)$/;"	l
f0101c3e	obj/kern/kernel.asm	/^f0101c3e:	00 $/;"	l
f0101c3f	obj/kern/kernel.asm	/^f0101c3f:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101c46	obj/kern/kernel.asm	/^f0101c46:	e8 3a e4 ff ff       	call   f0100085 <_panic>$/;"	l
f0101c4b	obj/kern/kernel.asm	/^f0101c4b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0101c4e	obj/kern/kernel.asm	/^f0101c4e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c51	obj/kern/kernel.asm	/^f0101c51:	e8 80 f2 ff ff       	call   f0100ed6 <page_free>$/;"	l
f0101c56	obj/kern/kernel.asm	/^f0101c56:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101c59	obj/kern/kernel.asm	/^f0101c59:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c5c	obj/kern/kernel.asm	/^f0101c5c:	e8 75 f2 ff ff       	call   f0100ed6 <page_free>$/;"	l
f0101c61	obj/kern/kernel.asm	/^f0101c61:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101c64	obj/kern/kernel.asm	/^f0101c64:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c67	obj/kern/kernel.asm	/^f0101c67:	e8 6a f2 ff ff       	call   f0100ed6 <page_free>$/;"	l
f0101c6c	obj/kern/kernel.asm	/^f0101c6c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0101c73	obj/kern/kernel.asm	/^f0101c73:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0101c7a	obj/kern/kernel.asm	/^f0101c7a:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0101c81	obj/kern/kernel.asm	/^f0101c81:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0101c84	obj/kern/kernel.asm	/^f0101c84:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c87	obj/kern/kernel.asm	/^f0101c87:	e8 03 f5 ff ff       	call   f010118f <page_alloc>$/;"	l
f0101c8c	obj/kern/kernel.asm	/^f0101c8c:	85 c0                	test   %eax,%eax$/;"	l
f0101c8e	obj/kern/kernel.asm	/^f0101c8e:	74 24                	je     f0101cb4 <i386_vm_init+0x5dc>$/;"	l
f0101c90	obj/kern/kernel.asm	/^f0101c90:	c7 44 24 0c 04 72 10 	movl   $0xf0107204,0xc(%esp)$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	f0 $/;"	l
f0101c98	obj/kern/kernel.asm	/^f0101c98:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101c9f	obj/kern/kernel.asm	/^f0101c9f:	f0 $/;"	l
f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	c7 44 24 04 6b 01 00 	movl   $0x16b,0x4(%esp)$/;"	l
f0101ca7	obj/kern/kernel.asm	/^f0101ca7:	00 $/;"	l
f0101ca8	obj/kern/kernel.asm	/^f0101ca8:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101caf	obj/kern/kernel.asm	/^f0101caf:	e8 d1 e3 ff ff       	call   f0100085 <_panic>$/;"	l
f0101cb4	obj/kern/kernel.asm	/^f0101cb4:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0101cb7	obj/kern/kernel.asm	/^f0101cb7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101cba	obj/kern/kernel.asm	/^f0101cba:	e8 d0 f4 ff ff       	call   f010118f <page_alloc>$/;"	l
f0101cbf	obj/kern/kernel.asm	/^f0101cbf:	85 c0                	test   %eax,%eax$/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	74 24                	je     f0101ce7 <i386_vm_init+0x60f>$/;"	l
f0101cc3	obj/kern/kernel.asm	/^f0101cc3:	c7 44 24 0c 1a 72 10 	movl   $0xf010721a,0xc(%esp)$/;"	l
f0101cca	obj/kern/kernel.asm	/^f0101cca:	f0 $/;"	l
f0101ccb	obj/kern/kernel.asm	/^f0101ccb:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101cd2	obj/kern/kernel.asm	/^f0101cd2:	f0 $/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	c7 44 24 04 6c 01 00 	movl   $0x16c,0x4(%esp)$/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	00 $/;"	l
f0101cdb	obj/kern/kernel.asm	/^f0101cdb:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101ce2	obj/kern/kernel.asm	/^f0101ce2:	e8 9e e3 ff ff       	call   f0100085 <_panic>$/;"	l
f0101ce7	obj/kern/kernel.asm	/^f0101ce7:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101cea	obj/kern/kernel.asm	/^f0101cea:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101ced	obj/kern/kernel.asm	/^f0101ced:	e8 9d f4 ff ff       	call   f010118f <page_alloc>$/;"	l
f0101cf2	obj/kern/kernel.asm	/^f0101cf2:	85 c0                	test   %eax,%eax$/;"	l
f0101cf4	obj/kern/kernel.asm	/^f0101cf4:	74 24                	je     f0101d1a <i386_vm_init+0x642>$/;"	l
f0101cf6	obj/kern/kernel.asm	/^f0101cf6:	c7 44 24 0c 30 72 10 	movl   $0xf0107230,0xc(%esp)$/;"	l
f0101cfd	obj/kern/kernel.asm	/^f0101cfd:	f0 $/;"	l
f0101cfe	obj/kern/kernel.asm	/^f0101cfe:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101d05	obj/kern/kernel.asm	/^f0101d05:	f0 $/;"	l
f0101d06	obj/kern/kernel.asm	/^f0101d06:	c7 44 24 04 6d 01 00 	movl   $0x16d,0x4(%esp)$/;"	l
f0101d0d	obj/kern/kernel.asm	/^f0101d0d:	00 $/;"	l
f0101d0e	obj/kern/kernel.asm	/^f0101d0e:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101d15	obj/kern/kernel.asm	/^f0101d15:	e8 6b e3 ff ff       	call   f0100085 <_panic>$/;"	l
f0101d1a	obj/kern/kernel.asm	/^f0101d1a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0101d1d	obj/kern/kernel.asm	/^f0101d1d:	85 d2                	test   %edx,%edx$/;"	l
f0101d1f	obj/kern/kernel.asm	/^f0101d1f:	75 24                	jne    f0101d45 <i386_vm_init+0x66d>$/;"	l
f0101d21	obj/kern/kernel.asm	/^f0101d21:	c7 44 24 0c 54 72 10 	movl   $0xf0107254,0xc(%esp)$/;"	l
f0101d28	obj/kern/kernel.asm	/^f0101d28:	f0 $/;"	l
f0101d29	obj/kern/kernel.asm	/^f0101d29:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101d30	obj/kern/kernel.asm	/^f0101d30:	f0 $/;"	l
f0101d31	obj/kern/kernel.asm	/^f0101d31:	c7 44 24 04 6e 01 00 	movl   $0x16e,0x4(%esp)$/;"	l
f0101d38	obj/kern/kernel.asm	/^f0101d38:	00 $/;"	l
f0101d39	obj/kern/kernel.asm	/^f0101d39:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101d40	obj/kern/kernel.asm	/^f0101d40:	e8 40 e3 ff ff       	call   f0100085 <_panic>$/;"	l
f0101d45	obj/kern/kernel.asm	/^f0101d45:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0101d48	obj/kern/kernel.asm	/^f0101d48:	85 c9                	test   %ecx,%ecx$/;"	l
f0101d4a	obj/kern/kernel.asm	/^f0101d4a:	74 04                	je     f0101d50 <i386_vm_init+0x678>$/;"	l
f0101d4c	obj/kern/kernel.asm	/^f0101d4c:	39 ca                	cmp    %ecx,%edx$/;"	l
f0101d4e	obj/kern/kernel.asm	/^f0101d4e:	75 24                	jne    f0101d74 <i386_vm_init+0x69c>$/;"	l
f0101d50	obj/kern/kernel.asm	/^f0101d50:	c7 44 24 0c 46 72 10 	movl   $0xf0107246,0xc(%esp)$/;"	l
f0101d57	obj/kern/kernel.asm	/^f0101d57:	f0 $/;"	l
f0101d58	obj/kern/kernel.asm	/^f0101d58:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101d5f	obj/kern/kernel.asm	/^f0101d5f:	f0 $/;"	l
f0101d60	obj/kern/kernel.asm	/^f0101d60:	c7 44 24 04 6f 01 00 	movl   $0x16f,0x4(%esp)$/;"	l
f0101d67	obj/kern/kernel.asm	/^f0101d67:	00 $/;"	l
f0101d68	obj/kern/kernel.asm	/^f0101d68:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101d6f	obj/kern/kernel.asm	/^f0101d6f:	e8 11 e3 ff ff       	call   f0100085 <_panic>$/;"	l
f0101d74	obj/kern/kernel.asm	/^f0101d74:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101d77	obj/kern/kernel.asm	/^f0101d77:	85 c0                	test   %eax,%eax$/;"	l
f0101d79	obj/kern/kernel.asm	/^f0101d79:	74 08                	je     f0101d83 <i386_vm_init+0x6ab>$/;"	l
f0101d7b	obj/kern/kernel.asm	/^f0101d7b:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101d7d	obj/kern/kernel.asm	/^f0101d7d:	74 04                	je     f0101d83 <i386_vm_init+0x6ab>$/;"	l
f0101d7f	obj/kern/kernel.asm	/^f0101d7f:	39 c2                	cmp    %eax,%edx$/;"	l
f0101d81	obj/kern/kernel.asm	/^f0101d81:	75 24                	jne    f0101da7 <i386_vm_init+0x6cf>$/;"	l
f0101d83	obj/kern/kernel.asm	/^f0101d83:	c7 44 24 0c 8c 6c 10 	movl   $0xf0106c8c,0xc(%esp)$/;"	l
f0101d8a	obj/kern/kernel.asm	/^f0101d8a:	f0 $/;"	l
f0101d8b	obj/kern/kernel.asm	/^f0101d8b:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101d92	obj/kern/kernel.asm	/^f0101d92:	f0 $/;"	l
f0101d93	obj/kern/kernel.asm	/^f0101d93:	c7 44 24 04 70 01 00 	movl   $0x170,0x4(%esp)$/;"	l
f0101d9a	obj/kern/kernel.asm	/^f0101d9a:	00 $/;"	l
f0101d9b	obj/kern/kernel.asm	/^f0101d9b:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101da2	obj/kern/kernel.asm	/^f0101da2:	e8 de e2 ff ff       	call   f0100085 <_panic>$/;"	l
f0101da7	obj/kern/kernel.asm	/^f0101da7:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
f0101daa	obj/kern/kernel.asm	/^f0101daa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	e8 dd f3 ff ff       	call   f010118f <page_alloc>$/;"	l
f0101db2	obj/kern/kernel.asm	/^f0101db2:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f0101db5	obj/kern/kernel.asm	/^f0101db5:	74 24                	je     f0101ddb <i386_vm_init+0x703>$/;"	l
f0101db7	obj/kern/kernel.asm	/^f0101db7:	c7 44 24 0c ac 72 10 	movl   $0xf01072ac,0xc(%esp)$/;"	l
f0101dbe	obj/kern/kernel.asm	/^f0101dbe:	f0 $/;"	l
f0101dbf	obj/kern/kernel.asm	/^f0101dbf:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101dc6	obj/kern/kernel.asm	/^f0101dc6:	f0 $/;"	l
f0101dc7	obj/kern/kernel.asm	/^f0101dc7:	c7 44 24 04 71 01 00 	movl   $0x171,0x4(%esp)$/;"	l
f0101dce	obj/kern/kernel.asm	/^f0101dce:	00 $/;"	l
f0101dcf	obj/kern/kernel.asm	/^f0101dcf:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101dd6	obj/kern/kernel.asm	/^f0101dd6:	e8 aa e2 ff ff       	call   f0100085 <_panic>$/;"	l
f0101ddb	obj/kern/kernel.asm	/^f0101ddb:	89 1d 18 e4 26 f0    	mov    %ebx,0xf026e418$/;"	l
f0101de1	obj/kern/kernel.asm	/^f0101de1:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0101de4	obj/kern/kernel.asm	/^f0101de4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101de7	obj/kern/kernel.asm	/^f0101de7:	e8 ea f0 ff ff       	call   f0100ed6 <page_free>$/;"	l
f0101dec	obj/kern/kernel.asm	/^f0101dec:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101def	obj/kern/kernel.asm	/^f0101def:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101df2	obj/kern/kernel.asm	/^f0101df2:	e8 df f0 ff ff       	call   f0100ed6 <page_free>$/;"	l
f0101df7	obj/kern/kernel.asm	/^f0101df7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101dfa	obj/kern/kernel.asm	/^f0101dfa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101dfd	obj/kern/kernel.asm	/^f0101dfd:	e8 d4 f0 ff ff       	call   f0100ed6 <page_free>$/;"	l
f0101e02	obj/kern/kernel.asm	/^f0101e02:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f0101e09	obj/kern/kernel.asm	/^f0101e09:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0101e10	obj/kern/kernel.asm	/^f0101e10:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0101e17	obj/kern/kernel.asm	/^f0101e17:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0101e1a	obj/kern/kernel.asm	/^f0101e1a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101e1d	obj/kern/kernel.asm	/^f0101e1d:	e8 6d f3 ff ff       	call   f010118f <page_alloc>$/;"	l
f0101e22	obj/kern/kernel.asm	/^f0101e22:	85 c0                	test   %eax,%eax$/;"	l
f0101e24	obj/kern/kernel.asm	/^f0101e24:	74 24                	je     f0101e4a <i386_vm_init+0x772>$/;"	l
f0101e26	obj/kern/kernel.asm	/^f0101e26:	c7 44 24 0c 04 72 10 	movl   $0xf0107204,0xc(%esp)$/;"	l
f0101e2d	obj/kern/kernel.asm	/^f0101e2d:	f0 $/;"	l
f0101e2e	obj/kern/kernel.asm	/^f0101e2e:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101e35	obj/kern/kernel.asm	/^f0101e35:	f0 $/;"	l
f0101e36	obj/kern/kernel.asm	/^f0101e36:	c7 44 24 04 8d 03 00 	movl   $0x38d,0x4(%esp)$/;"	l
f0101e3d	obj/kern/kernel.asm	/^f0101e3d:	00 $/;"	l
f0101e3e	obj/kern/kernel.asm	/^f0101e3e:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101e45	obj/kern/kernel.asm	/^f0101e45:	e8 3b e2 ff ff       	call   f0100085 <_panic>$/;"	l
f0101e4a	obj/kern/kernel.asm	/^f0101e4a:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0101e4d	obj/kern/kernel.asm	/^f0101e4d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101e50	obj/kern/kernel.asm	/^f0101e50:	e8 3a f3 ff ff       	call   f010118f <page_alloc>$/;"	l
f0101e55	obj/kern/kernel.asm	/^f0101e55:	85 c0                	test   %eax,%eax$/;"	l
f0101e57	obj/kern/kernel.asm	/^f0101e57:	74 24                	je     f0101e7d <i386_vm_init+0x7a5>$/;"	l
f0101e59	obj/kern/kernel.asm	/^f0101e59:	c7 44 24 0c 1a 72 10 	movl   $0xf010721a,0xc(%esp)$/;"	l
f0101e60	obj/kern/kernel.asm	/^f0101e60:	f0 $/;"	l
f0101e61	obj/kern/kernel.asm	/^f0101e61:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101e68	obj/kern/kernel.asm	/^f0101e68:	f0 $/;"	l
f0101e69	obj/kern/kernel.asm	/^f0101e69:	c7 44 24 04 8e 03 00 	movl   $0x38e,0x4(%esp)$/;"	l
f0101e70	obj/kern/kernel.asm	/^f0101e70:	00 $/;"	l
f0101e71	obj/kern/kernel.asm	/^f0101e71:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101e78	obj/kern/kernel.asm	/^f0101e78:	e8 08 e2 ff ff       	call   f0100085 <_panic>$/;"	l
f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
f0101e80	obj/kern/kernel.asm	/^f0101e80:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101e83	obj/kern/kernel.asm	/^f0101e83:	e8 07 f3 ff ff       	call   f010118f <page_alloc>$/;"	l
f0101e88	obj/kern/kernel.asm	/^f0101e88:	85 c0                	test   %eax,%eax$/;"	l
f0101e8a	obj/kern/kernel.asm	/^f0101e8a:	74 24                	je     f0101eb0 <i386_vm_init+0x7d8>$/;"	l
f0101e8c	obj/kern/kernel.asm	/^f0101e8c:	c7 44 24 0c 30 72 10 	movl   $0xf0107230,0xc(%esp)$/;"	l
f0101e93	obj/kern/kernel.asm	/^f0101e93:	f0 $/;"	l
f0101e94	obj/kern/kernel.asm	/^f0101e94:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101e9b	obj/kern/kernel.asm	/^f0101e9b:	f0 $/;"	l
f0101e9c	obj/kern/kernel.asm	/^f0101e9c:	c7 44 24 04 8f 03 00 	movl   $0x38f,0x4(%esp)$/;"	l
f0101ea3	obj/kern/kernel.asm	/^f0101ea3:	00 $/;"	l
f0101ea4	obj/kern/kernel.asm	/^f0101ea4:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101eab	obj/kern/kernel.asm	/^f0101eab:	e8 d5 e1 ff ff       	call   f0100085 <_panic>$/;"	l
f0101eb0	obj/kern/kernel.asm	/^f0101eb0:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0101eb3	obj/kern/kernel.asm	/^f0101eb3:	85 d2                	test   %edx,%edx$/;"	l
f0101eb5	obj/kern/kernel.asm	/^f0101eb5:	75 24                	jne    f0101edb <i386_vm_init+0x803>$/;"	l
f0101eb7	obj/kern/kernel.asm	/^f0101eb7:	c7 44 24 0c 54 72 10 	movl   $0xf0107254,0xc(%esp)$/;"	l
f0101ebe	obj/kern/kernel.asm	/^f0101ebe:	f0 $/;"	l
f0101ebf	obj/kern/kernel.asm	/^f0101ebf:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101ec6	obj/kern/kernel.asm	/^f0101ec6:	f0 $/;"	l
f0101ec7	obj/kern/kernel.asm	/^f0101ec7:	c7 44 24 04 91 03 00 	movl   $0x391,0x4(%esp)$/;"	l
f0101ece	obj/kern/kernel.asm	/^f0101ece:	00 $/;"	l
f0101ecf	obj/kern/kernel.asm	/^f0101ecf:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101ed6	obj/kern/kernel.asm	/^f0101ed6:	e8 aa e1 ff ff       	call   f0100085 <_panic>$/;"	l
f0101edb	obj/kern/kernel.asm	/^f0101edb:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f0101ede	obj/kern/kernel.asm	/^f0101ede:	85 c9                	test   %ecx,%ecx$/;"	l
f0101ee0	obj/kern/kernel.asm	/^f0101ee0:	74 04                	je     f0101ee6 <i386_vm_init+0x80e>$/;"	l
f0101ee2	obj/kern/kernel.asm	/^f0101ee2:	39 ca                	cmp    %ecx,%edx$/;"	l
f0101ee4	obj/kern/kernel.asm	/^f0101ee4:	75 24                	jne    f0101f0a <i386_vm_init+0x832>$/;"	l
f0101ee6	obj/kern/kernel.asm	/^f0101ee6:	c7 44 24 0c 46 72 10 	movl   $0xf0107246,0xc(%esp)$/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	f0 $/;"	l
f0101eee	obj/kern/kernel.asm	/^f0101eee:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	f0 $/;"	l
f0101ef6	obj/kern/kernel.asm	/^f0101ef6:	c7 44 24 04 92 03 00 	movl   $0x392,0x4(%esp)$/;"	l
f0101efd	obj/kern/kernel.asm	/^f0101efd:	00 $/;"	l
f0101efe	obj/kern/kernel.asm	/^f0101efe:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101f05	obj/kern/kernel.asm	/^f0101f05:	e8 7b e1 ff ff       	call   f0100085 <_panic>$/;"	l
f0101f0a	obj/kern/kernel.asm	/^f0101f0a:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0101f0d	obj/kern/kernel.asm	/^f0101f0d:	85 c0                	test   %eax,%eax$/;"	l
f0101f0f	obj/kern/kernel.asm	/^f0101f0f:	74 08                	je     f0101f19 <i386_vm_init+0x841>$/;"	l
f0101f11	obj/kern/kernel.asm	/^f0101f11:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101f13	obj/kern/kernel.asm	/^f0101f13:	74 04                	je     f0101f19 <i386_vm_init+0x841>$/;"	l
f0101f15	obj/kern/kernel.asm	/^f0101f15:	39 c2                	cmp    %eax,%edx$/;"	l
f0101f17	obj/kern/kernel.asm	/^f0101f17:	75 24                	jne    f0101f3d <i386_vm_init+0x865>$/;"	l
f0101f19	obj/kern/kernel.asm	/^f0101f19:	c7 44 24 0c 8c 6c 10 	movl   $0xf0106c8c,0xc(%esp)$/;"	l
f0101f20	obj/kern/kernel.asm	/^f0101f20:	f0 $/;"	l
f0101f21	obj/kern/kernel.asm	/^f0101f21:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101f28	obj/kern/kernel.asm	/^f0101f28:	f0 $/;"	l
f0101f29	obj/kern/kernel.asm	/^f0101f29:	c7 44 24 04 93 03 00 	movl   $0x393,0x4(%esp)$/;"	l
f0101f30	obj/kern/kernel.asm	/^f0101f30:	00 $/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101f38	obj/kern/kernel.asm	/^f0101f38:	e8 48 e1 ff ff       	call   f0100085 <_panic>$/;"	l
f0101f3d	obj/kern/kernel.asm	/^f0101f3d:	8b 1d 18 e4 26 f0    	mov    0xf026e418,%ebx$/;"	l
f0101f43	obj/kern/kernel.asm	/^f0101f43:	c7 05 18 e4 26 f0 00 	movl   $0x0,0xf026e418$/;"	l
f0101f4a	obj/kern/kernel.asm	/^f0101f4a:	00 00 00 $/;"	l
f0101f4d	obj/kern/kernel.asm	/^f0101f4d:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101f50	obj/kern/kernel.asm	/^f0101f50:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101f53	obj/kern/kernel.asm	/^f0101f53:	e8 37 f2 ff ff       	call   f010118f <page_alloc>$/;"	l
f0101f58	obj/kern/kernel.asm	/^f0101f58:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f0101f5b	obj/kern/kernel.asm	/^f0101f5b:	74 24                	je     f0101f81 <i386_vm_init+0x8a9>$/;"	l
f0101f5d	obj/kern/kernel.asm	/^f0101f5d:	c7 44 24 0c ac 72 10 	movl   $0xf01072ac,0xc(%esp)$/;"	l
f0101f64	obj/kern/kernel.asm	/^f0101f64:	f0 $/;"	l
f0101f65	obj/kern/kernel.asm	/^f0101f65:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101f6c	obj/kern/kernel.asm	/^f0101f6c:	f0 $/;"	l
f0101f6d	obj/kern/kernel.asm	/^f0101f6d:	c7 44 24 04 9a 03 00 	movl   $0x39a,0x4(%esp)$/;"	l
f0101f74	obj/kern/kernel.asm	/^f0101f74:	00 $/;"	l
f0101f75	obj/kern/kernel.asm	/^f0101f75:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101f7c	obj/kern/kernel.asm	/^f0101f7c:	e8 04 e1 ff ff       	call   f0100085 <_panic>$/;"	l
f0101f81	obj/kern/kernel.asm	/^f0101f81:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
f0101f84	obj/kern/kernel.asm	/^f0101f84:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101f88	obj/kern/kernel.asm	/^f0101f88:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101f8f	obj/kern/kernel.asm	/^f0101f8f:	00 $/;"	l
f0101f90	obj/kern/kernel.asm	/^f0101f90:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f0101f95	obj/kern/kernel.asm	/^f0101f95:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101f98	obj/kern/kernel.asm	/^f0101f98:	e8 9f f4 ff ff       	call   f010143c <page_lookup>$/;"	l
f0101f9d	obj/kern/kernel.asm	/^f0101f9d:	85 c0                	test   %eax,%eax$/;"	l
f0101f9f	obj/kern/kernel.asm	/^f0101f9f:	74 24                	je     f0101fc5 <i386_vm_init+0x8ed>$/;"	l
f0101fa1	obj/kern/kernel.asm	/^f0101fa1:	c7 44 24 0c ac 6c 10 	movl   $0xf0106cac,0xc(%esp)$/;"	l
f0101fa8	obj/kern/kernel.asm	/^f0101fa8:	f0 $/;"	l
f0101fa9	obj/kern/kernel.asm	/^f0101fa9:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101fb0	obj/kern/kernel.asm	/^f0101fb0:	f0 $/;"	l
f0101fb1	obj/kern/kernel.asm	/^f0101fb1:	c7 44 24 04 9d 03 00 	movl   $0x39d,0x4(%esp)$/;"	l
f0101fb8	obj/kern/kernel.asm	/^f0101fb8:	00 $/;"	l
f0101fb9	obj/kern/kernel.asm	/^f0101fb9:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0101fc0	obj/kern/kernel.asm	/^f0101fc0:	e8 c0 e0 ff ff       	call   f0100085 <_panic>$/;"	l
f0101fc5	obj/kern/kernel.asm	/^f0101fc5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0101fcc	obj/kern/kernel.asm	/^f0101fcc:	00 $/;"	l
f0101fcd	obj/kern/kernel.asm	/^f0101fcd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101fd4	obj/kern/kernel.asm	/^f0101fd4:	00 $/;"	l
f0101fd5	obj/kern/kernel.asm	/^f0101fd5:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0101fd8	obj/kern/kernel.asm	/^f0101fd8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101fdc	obj/kern/kernel.asm	/^f0101fdc:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f0101fe1	obj/kern/kernel.asm	/^f0101fe1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101fe4	obj/kern/kernel.asm	/^f0101fe4:	e8 35 f5 ff ff       	call   f010151e <page_insert>$/;"	l
f0101fe9	obj/kern/kernel.asm	/^f0101fe9:	85 c0                	test   %eax,%eax$/;"	l
f0101feb	obj/kern/kernel.asm	/^f0101feb:	78 24                	js     f0102011 <i386_vm_init+0x939>$/;"	l
f0101fed	obj/kern/kernel.asm	/^f0101fed:	c7 44 24 0c e4 6c 10 	movl   $0xf0106ce4,0xc(%esp)$/;"	l
f0101ff4	obj/kern/kernel.asm	/^f0101ff4:	f0 $/;"	l
f0101ff5	obj/kern/kernel.asm	/^f0101ff5:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0101ffc	obj/kern/kernel.asm	/^f0101ffc:	f0 $/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	c7 44 24 04 9f 03 00 	movl   $0x39f,0x4(%esp)$/;"	l
f0102004	obj/kern/kernel.asm	/^f0102004:	00 $/;"	l
f0102005	obj/kern/kernel.asm	/^f0102005:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f010200c	obj/kern/kernel.asm	/^f010200c:	e8 74 e0 ff ff       	call   f0100085 <_panic>$/;"	l
f0102011	obj/kern/kernel.asm	/^f0102011:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0102014	obj/kern/kernel.asm	/^f0102014:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102017	obj/kern/kernel.asm	/^f0102017:	e8 ba ee ff ff       	call   f0100ed6 <page_free>$/;"	l
f010201c	obj/kern/kernel.asm	/^f010201c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0102023	obj/kern/kernel.asm	/^f0102023:	00 $/;"	l
f0102024	obj/kern/kernel.asm	/^f0102024:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010202b	obj/kern/kernel.asm	/^f010202b:	00 $/;"	l
f010202c	obj/kern/kernel.asm	/^f010202c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010202f	obj/kern/kernel.asm	/^f010202f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102033	obj/kern/kernel.asm	/^f0102033:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f0102038	obj/kern/kernel.asm	/^f0102038:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010203b	obj/kern/kernel.asm	/^f010203b:	e8 de f4 ff ff       	call   f010151e <page_insert>$/;"	l
f0102040	obj/kern/kernel.asm	/^f0102040:	85 c0                	test   %eax,%eax$/;"	l
f0102042	obj/kern/kernel.asm	/^f0102042:	74 24                	je     f0102068 <i386_vm_init+0x990>$/;"	l
f0102044	obj/kern/kernel.asm	/^f0102044:	c7 44 24 0c 10 6d 10 	movl   $0xf0106d10,0xc(%esp)$/;"	l
f010204b	obj/kern/kernel.asm	/^f010204b:	f0 $/;"	l
f010204c	obj/kern/kernel.asm	/^f010204c:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102053	obj/kern/kernel.asm	/^f0102053:	f0 $/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	c7 44 24 04 a3 03 00 	movl   $0x3a3,0x4(%esp)$/;"	l
f010205b	obj/kern/kernel.asm	/^f010205b:	00 $/;"	l
f010205c	obj/kern/kernel.asm	/^f010205c:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102063	obj/kern/kernel.asm	/^f0102063:	e8 1d e0 ff ff       	call   f0100085 <_panic>$/;"	l
f0102068	obj/kern/kernel.asm	/^f0102068:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f010206d	obj/kern/kernel.asm	/^f010206d:	8b 08                	mov    (%eax),%ecx$/;"	l
f010206f	obj/kern/kernel.asm	/^f010206f:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102075	obj/kern/kernel.asm	/^f0102075:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0102078	obj/kern/kernel.asm	/^f0102078:	2b 15 64 48 29 f0    	sub    0xf0294864,%edx$/;"	l
f010207e	obj/kern/kernel.asm	/^f010207e:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0102081	obj/kern/kernel.asm	/^f0102081:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0102087	obj/kern/kernel.asm	/^f0102087:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010208a	obj/kern/kernel.asm	/^f010208a:	39 d1                	cmp    %edx,%ecx$/;"	l
f010208c	obj/kern/kernel.asm	/^f010208c:	74 24                	je     f01020b2 <i386_vm_init+0x9da>$/;"	l
f010208e	obj/kern/kernel.asm	/^f010208e:	c7 44 24 0c 3c 6d 10 	movl   $0xf0106d3c,0xc(%esp)$/;"	l
f0102095	obj/kern/kernel.asm	/^f0102095:	f0 $/;"	l
f0102096	obj/kern/kernel.asm	/^f0102096:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f010209d	obj/kern/kernel.asm	/^f010209d:	f0 $/;"	l
f010209e	obj/kern/kernel.asm	/^f010209e:	c7 44 24 04 a6 03 00 	movl   $0x3a6,0x4(%esp)$/;"	l
f01020a5	obj/kern/kernel.asm	/^f01020a5:	00 $/;"	l
f01020a6	obj/kern/kernel.asm	/^f01020a6:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f01020ad	obj/kern/kernel.asm	/^f01020ad:	e8 d3 df ff ff       	call   f0100085 <_panic>$/;"	l
f01020b2	obj/kern/kernel.asm	/^f01020b2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01020b7	obj/kern/kernel.asm	/^f01020b7:	e8 5a f0 ff ff       	call   f0101116 <check_va2pa>$/;"	l
f01020bc	obj/kern/kernel.asm	/^f01020bc:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01020bf	obj/kern/kernel.asm	/^f01020bf:	89 d1                	mov    %edx,%ecx$/;"	l
f01020c1	obj/kern/kernel.asm	/^f01020c1:	2b 0d 64 48 29 f0    	sub    0xf0294864,%ecx$/;"	l
f01020c7	obj/kern/kernel.asm	/^f01020c7:	c1 f9 02             	sar    $0x2,%ecx$/;"	l
f01020ca	obj/kern/kernel.asm	/^f01020ca:	69 c9 ab aa aa aa    	imul   $0xaaaaaaab,%ecx,%ecx$/;"	l
f01020d0	obj/kern/kernel.asm	/^f01020d0:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f01020d3	obj/kern/kernel.asm	/^f01020d3:	39 c8                	cmp    %ecx,%eax$/;"	l
f01020d5	obj/kern/kernel.asm	/^f01020d5:	74 24                	je     f01020fb <i386_vm_init+0xa23>$/;"	l
f01020d7	obj/kern/kernel.asm	/^f01020d7:	c7 44 24 0c 64 6d 10 	movl   $0xf0106d64,0xc(%esp)$/;"	l
f01020de	obj/kern/kernel.asm	/^f01020de:	f0 $/;"	l
f01020df	obj/kern/kernel.asm	/^f01020df:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f01020e6	obj/kern/kernel.asm	/^f01020e6:	f0 $/;"	l
f01020e7	obj/kern/kernel.asm	/^f01020e7:	c7 44 24 04 a7 03 00 	movl   $0x3a7,0x4(%esp)$/;"	l
f01020ee	obj/kern/kernel.asm	/^f01020ee:	00 $/;"	l
f01020ef	obj/kern/kernel.asm	/^f01020ef:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	e8 8a df ff ff       	call   f0100085 <_panic>$/;"	l
f01020fb	obj/kern/kernel.asm	/^f01020fb:	66 83 7a 08 01       	cmpw   $0x1,0x8(%edx)$/;"	l
f0102100	obj/kern/kernel.asm	/^f0102100:	74 24                	je     f0102126 <i386_vm_init+0xa4e>$/;"	l
f0102102	obj/kern/kernel.asm	/^f0102102:	c7 44 24 0c c9 72 10 	movl   $0xf01072c9,0xc(%esp)$/;"	l
f0102109	obj/kern/kernel.asm	/^f0102109:	f0 $/;"	l
f010210a	obj/kern/kernel.asm	/^f010210a:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102111	obj/kern/kernel.asm	/^f0102111:	f0 $/;"	l
f0102112	obj/kern/kernel.asm	/^f0102112:	c7 44 24 04 aa 03 00 	movl   $0x3aa,0x4(%esp)$/;"	l
f0102119	obj/kern/kernel.asm	/^f0102119:	00 $/;"	l
f010211a	obj/kern/kernel.asm	/^f010211a:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102121	obj/kern/kernel.asm	/^f0102121:	e8 5f df ff ff       	call   f0100085 <_panic>$/;"	l
f0102126	obj/kern/kernel.asm	/^f0102126:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0102129	obj/kern/kernel.asm	/^f0102129:	66 83 78 08 01       	cmpw   $0x1,0x8(%eax)$/;"	l
f010212e	obj/kern/kernel.asm	/^f010212e:	74 24                	je     f0102154 <i386_vm_init+0xa7c>$/;"	l
f0102130	obj/kern/kernel.asm	/^f0102130:	c7 44 24 0c da 72 10 	movl   $0xf01072da,0xc(%esp)$/;"	l
f0102137	obj/kern/kernel.asm	/^f0102137:	f0 $/;"	l
f0102138	obj/kern/kernel.asm	/^f0102138:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f010213f	obj/kern/kernel.asm	/^f010213f:	f0 $/;"	l
f0102140	obj/kern/kernel.asm	/^f0102140:	c7 44 24 04 ab 03 00 	movl   $0x3ab,0x4(%esp)$/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	00 $/;"	l
f0102148	obj/kern/kernel.asm	/^f0102148:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f010214f	obj/kern/kernel.asm	/^f010214f:	e8 31 df ff ff       	call   f0100085 <_panic>$/;"	l
f0102154	obj/kern/kernel.asm	/^f0102154:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f010215b	obj/kern/kernel.asm	/^f010215b:	00 $/;"	l
f010215c	obj/kern/kernel.asm	/^f010215c:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102163	obj/kern/kernel.asm	/^f0102163:	00 $/;"	l
f0102164	obj/kern/kernel.asm	/^f0102164:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0102167	obj/kern/kernel.asm	/^f0102167:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010216b	obj/kern/kernel.asm	/^f010216b:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f0102170	obj/kern/kernel.asm	/^f0102170:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102173	obj/kern/kernel.asm	/^f0102173:	e8 a6 f3 ff ff       	call   f010151e <page_insert>$/;"	l
f0102178	obj/kern/kernel.asm	/^f0102178:	85 c0                	test   %eax,%eax$/;"	l
f010217a	obj/kern/kernel.asm	/^f010217a:	74 24                	je     f01021a0 <i386_vm_init+0xac8>$/;"	l
f010217c	obj/kern/kernel.asm	/^f010217c:	c7 44 24 0c 94 6d 10 	movl   $0xf0106d94,0xc(%esp)$/;"	l
f0102183	obj/kern/kernel.asm	/^f0102183:	f0 $/;"	l
f0102184	obj/kern/kernel.asm	/^f0102184:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f010218b	obj/kern/kernel.asm	/^f010218b:	f0 $/;"	l
f010218c	obj/kern/kernel.asm	/^f010218c:	c7 44 24 04 ae 03 00 	movl   $0x3ae,0x4(%esp)$/;"	l
f0102193	obj/kern/kernel.asm	/^f0102193:	00 $/;"	l
f0102194	obj/kern/kernel.asm	/^f0102194:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f010219b	obj/kern/kernel.asm	/^f010219b:	e8 e5 de ff ff       	call   f0100085 <_panic>$/;"	l
f01021a0	obj/kern/kernel.asm	/^f01021a0:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01021a5	obj/kern/kernel.asm	/^f01021a5:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f01021aa	obj/kern/kernel.asm	/^f01021aa:	e8 67 ef ff ff       	call   f0101116 <check_va2pa>$/;"	l
f01021af	obj/kern/kernel.asm	/^f01021af:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01021b2	obj/kern/kernel.asm	/^f01021b2:	89 d1                	mov    %edx,%ecx$/;"	l
f01021b4	obj/kern/kernel.asm	/^f01021b4:	2b 0d 64 48 29 f0    	sub    0xf0294864,%ecx$/;"	l
f01021ba	obj/kern/kernel.asm	/^f01021ba:	c1 f9 02             	sar    $0x2,%ecx$/;"	l
f01021bd	obj/kern/kernel.asm	/^f01021bd:	69 c9 ab aa aa aa    	imul   $0xaaaaaaab,%ecx,%ecx$/;"	l
f01021c3	obj/kern/kernel.asm	/^f01021c3:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f01021c6	obj/kern/kernel.asm	/^f01021c6:	39 c8                	cmp    %ecx,%eax$/;"	l
f01021c8	obj/kern/kernel.asm	/^f01021c8:	74 24                	je     f01021ee <i386_vm_init+0xb16>$/;"	l
f01021ca	obj/kern/kernel.asm	/^f01021ca:	c7 44 24 0c cc 6d 10 	movl   $0xf0106dcc,0xc(%esp)$/;"	l
f01021d1	obj/kern/kernel.asm	/^f01021d1:	f0 $/;"	l
f01021d2	obj/kern/kernel.asm	/^f01021d2:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f01021d9	obj/kern/kernel.asm	/^f01021d9:	f0 $/;"	l
f01021da	obj/kern/kernel.asm	/^f01021da:	c7 44 24 04 b0 03 00 	movl   $0x3b0,0x4(%esp)$/;"	l
f01021e1	obj/kern/kernel.asm	/^f01021e1:	00 $/;"	l
f01021e2	obj/kern/kernel.asm	/^f01021e2:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f01021e9	obj/kern/kernel.asm	/^f01021e9:	e8 97 de ff ff       	call   f0100085 <_panic>$/;"	l
f01021ee	obj/kern/kernel.asm	/^f01021ee:	66 83 7a 08 01       	cmpw   $0x1,0x8(%edx)$/;"	l
f01021f3	obj/kern/kernel.asm	/^f01021f3:	74 24                	je     f0102219 <i386_vm_init+0xb41>$/;"	l
f01021f5	obj/kern/kernel.asm	/^f01021f5:	c7 44 24 0c eb 72 10 	movl   $0xf01072eb,0xc(%esp)$/;"	l
f01021fc	obj/kern/kernel.asm	/^f01021fc:	f0 $/;"	l
f01021fd	obj/kern/kernel.asm	/^f01021fd:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102204	obj/kern/kernel.asm	/^f0102204:	f0 $/;"	l
f0102205	obj/kern/kernel.asm	/^f0102205:	c7 44 24 04 b1 03 00 	movl   $0x3b1,0x4(%esp)$/;"	l
f010220c	obj/kern/kernel.asm	/^f010220c:	00 $/;"	l
f010220d	obj/kern/kernel.asm	/^f010220d:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102214	obj/kern/kernel.asm	/^f0102214:	e8 6c de ff ff       	call   f0100085 <_panic>$/;"	l
f0102219	obj/kern/kernel.asm	/^f0102219:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010221c	obj/kern/kernel.asm	/^f010221c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	e8 6b ef ff ff       	call   f010118f <page_alloc>$/;"	l
f0102224	obj/kern/kernel.asm	/^f0102224:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	74 24                	je     f010224d <i386_vm_init+0xb75>$/;"	l
f0102229	obj/kern/kernel.asm	/^f0102229:	c7 44 24 0c ac 72 10 	movl   $0xf01072ac,0xc(%esp)$/;"	l
f0102230	obj/kern/kernel.asm	/^f0102230:	f0 $/;"	l
f0102231	obj/kern/kernel.asm	/^f0102231:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102238	obj/kern/kernel.asm	/^f0102238:	f0 $/;"	l
f0102239	obj/kern/kernel.asm	/^f0102239:	c7 44 24 04 b4 03 00 	movl   $0x3b4,0x4(%esp)$/;"	l
f0102240	obj/kern/kernel.asm	/^f0102240:	00 $/;"	l
f0102241	obj/kern/kernel.asm	/^f0102241:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102248	obj/kern/kernel.asm	/^f0102248:	e8 38 de ff ff       	call   f0100085 <_panic>$/;"	l
f010224d	obj/kern/kernel.asm	/^f010224d:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0102254	obj/kern/kernel.asm	/^f0102254:	00 $/;"	l
f0102255	obj/kern/kernel.asm	/^f0102255:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010225c	obj/kern/kernel.asm	/^f010225c:	00 $/;"	l
f010225d	obj/kern/kernel.asm	/^f010225d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0102260	obj/kern/kernel.asm	/^f0102260:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102264	obj/kern/kernel.asm	/^f0102264:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f0102269	obj/kern/kernel.asm	/^f0102269:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010226c	obj/kern/kernel.asm	/^f010226c:	e8 ad f2 ff ff       	call   f010151e <page_insert>$/;"	l
f0102271	obj/kern/kernel.asm	/^f0102271:	85 c0                	test   %eax,%eax$/;"	l
f0102273	obj/kern/kernel.asm	/^f0102273:	74 24                	je     f0102299 <i386_vm_init+0xbc1>$/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	c7 44 24 0c 94 6d 10 	movl   $0xf0106d94,0xc(%esp)$/;"	l
f010227c	obj/kern/kernel.asm	/^f010227c:	f0 $/;"	l
f010227d	obj/kern/kernel.asm	/^f010227d:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102284	obj/kern/kernel.asm	/^f0102284:	f0 $/;"	l
f0102285	obj/kern/kernel.asm	/^f0102285:	c7 44 24 04 b7 03 00 	movl   $0x3b7,0x4(%esp)$/;"	l
f010228c	obj/kern/kernel.asm	/^f010228c:	00 $/;"	l
f010228d	obj/kern/kernel.asm	/^f010228d:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102294	obj/kern/kernel.asm	/^f0102294:	e8 ec dd ff ff       	call   f0100085 <_panic>$/;"	l
f0102299	obj/kern/kernel.asm	/^f0102299:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010229e	obj/kern/kernel.asm	/^f010229e:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f01022a3	obj/kern/kernel.asm	/^f01022a3:	e8 6e ee ff ff       	call   f0101116 <check_va2pa>$/;"	l
f01022a8	obj/kern/kernel.asm	/^f01022a8:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01022ab	obj/kern/kernel.asm	/^f01022ab:	89 d1                	mov    %edx,%ecx$/;"	l
f01022ad	obj/kern/kernel.asm	/^f01022ad:	2b 0d 64 48 29 f0    	sub    0xf0294864,%ecx$/;"	l
f01022b3	obj/kern/kernel.asm	/^f01022b3:	c1 f9 02             	sar    $0x2,%ecx$/;"	l
f01022b6	obj/kern/kernel.asm	/^f01022b6:	69 c9 ab aa aa aa    	imul   $0xaaaaaaab,%ecx,%ecx$/;"	l
f01022bc	obj/kern/kernel.asm	/^f01022bc:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f01022bf	obj/kern/kernel.asm	/^f01022bf:	39 c8                	cmp    %ecx,%eax$/;"	l
f01022c1	obj/kern/kernel.asm	/^f01022c1:	74 24                	je     f01022e7 <i386_vm_init+0xc0f>$/;"	l
f01022c3	obj/kern/kernel.asm	/^f01022c3:	c7 44 24 0c cc 6d 10 	movl   $0xf0106dcc,0xc(%esp)$/;"	l
f01022ca	obj/kern/kernel.asm	/^f01022ca:	f0 $/;"	l
f01022cb	obj/kern/kernel.asm	/^f01022cb:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f01022d2	obj/kern/kernel.asm	/^f01022d2:	f0 $/;"	l
f01022d3	obj/kern/kernel.asm	/^f01022d3:	c7 44 24 04 b8 03 00 	movl   $0x3b8,0x4(%esp)$/;"	l
f01022da	obj/kern/kernel.asm	/^f01022da:	00 $/;"	l
f01022db	obj/kern/kernel.asm	/^f01022db:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f01022e2	obj/kern/kernel.asm	/^f01022e2:	e8 9e dd ff ff       	call   f0100085 <_panic>$/;"	l
f01022e7	obj/kern/kernel.asm	/^f01022e7:	66 83 7a 08 01       	cmpw   $0x1,0x8(%edx)$/;"	l
f01022ec	obj/kern/kernel.asm	/^f01022ec:	74 24                	je     f0102312 <i386_vm_init+0xc3a>$/;"	l
f01022ee	obj/kern/kernel.asm	/^f01022ee:	c7 44 24 0c eb 72 10 	movl   $0xf01072eb,0xc(%esp)$/;"	l
f01022f5	obj/kern/kernel.asm	/^f01022f5:	f0 $/;"	l
f01022f6	obj/kern/kernel.asm	/^f01022f6:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f01022fd	obj/kern/kernel.asm	/^f01022fd:	f0 $/;"	l
f01022fe	obj/kern/kernel.asm	/^f01022fe:	c7 44 24 04 b9 03 00 	movl   $0x3b9,0x4(%esp)$/;"	l
f0102305	obj/kern/kernel.asm	/^f0102305:	00 $/;"	l
f0102306	obj/kern/kernel.asm	/^f0102306:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f010230d	obj/kern/kernel.asm	/^f010230d:	e8 73 dd ff ff       	call   f0100085 <_panic>$/;"	l
f0102312	obj/kern/kernel.asm	/^f0102312:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0102315	obj/kern/kernel.asm	/^f0102315:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102318	obj/kern/kernel.asm	/^f0102318:	e8 72 ee ff ff       	call   f010118f <page_alloc>$/;"	l
f010231d	obj/kern/kernel.asm	/^f010231d:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f0102320	obj/kern/kernel.asm	/^f0102320:	74 24                	je     f0102346 <i386_vm_init+0xc6e>$/;"	l
f0102322	obj/kern/kernel.asm	/^f0102322:	c7 44 24 0c ac 72 10 	movl   $0xf01072ac,0xc(%esp)$/;"	l
f0102329	obj/kern/kernel.asm	/^f0102329:	f0 $/;"	l
f010232a	obj/kern/kernel.asm	/^f010232a:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102331	obj/kern/kernel.asm	/^f0102331:	f0 $/;"	l
f0102332	obj/kern/kernel.asm	/^f0102332:	c7 44 24 04 be 03 00 	movl   $0x3be,0x4(%esp)$/;"	l
f0102339	obj/kern/kernel.asm	/^f0102339:	00 $/;"	l
f010233a	obj/kern/kernel.asm	/^f010233a:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102341	obj/kern/kernel.asm	/^f0102341:	e8 3f dd ff ff       	call   f0100085 <_panic>$/;"	l
f0102346	obj/kern/kernel.asm	/^f0102346:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f010234b	obj/kern/kernel.asm	/^f010234b:	8b 00                	mov    (%eax),%eax$/;"	l
f010234d	obj/kern/kernel.asm	/^f010234d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102352	obj/kern/kernel.asm	/^f0102352:	89 c2                	mov    %eax,%edx$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102357	obj/kern/kernel.asm	/^f0102357:	3b 15 58 48 29 f0    	cmp    0xf0294858,%edx$/;"	l
f010235d	obj/kern/kernel.asm	/^f010235d:	72 20                	jb     f010237f <i386_vm_init+0xca7>$/;"	l
f010235f	obj/kern/kernel.asm	/^f010235f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102363	obj/kern/kernel.asm	/^f0102363:	c7 44 24 08 a0 6b 10 	movl   $0xf0106ba0,0x8(%esp)$/;"	l
f010236a	obj/kern/kernel.asm	/^f010236a:	f0 $/;"	l
f010236b	obj/kern/kernel.asm	/^f010236b:	c7 44 24 04 c1 03 00 	movl   $0x3c1,0x4(%esp)$/;"	l
f0102372	obj/kern/kernel.asm	/^f0102372:	00 $/;"	l
f0102373	obj/kern/kernel.asm	/^f0102373:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f010237a	obj/kern/kernel.asm	/^f010237a:	e8 06 dd ff ff       	call   f0100085 <_panic>$/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102384	obj/kern/kernel.asm	/^f0102384:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102387	obj/kern/kernel.asm	/^f0102387:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010238e	obj/kern/kernel.asm	/^f010238e:	00 $/;"	l
f010238f	obj/kern/kernel.asm	/^f010238f:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102396	obj/kern/kernel.asm	/^f0102396:	00 $/;"	l
f0102397	obj/kern/kernel.asm	/^f0102397:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f010239c	obj/kern/kernel.asm	/^f010239c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010239f	obj/kern/kernel.asm	/^f010239f:	e8 3b ee ff ff       	call   f01011df <pgdir_walk>$/;"	l
f01023a4	obj/kern/kernel.asm	/^f01023a4:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01023a7	obj/kern/kernel.asm	/^f01023a7:	83 c2 04             	add    $0x4,%edx$/;"	l
f01023aa	obj/kern/kernel.asm	/^f01023aa:	39 d0                	cmp    %edx,%eax$/;"	l
f01023ac	obj/kern/kernel.asm	/^f01023ac:	74 24                	je     f01023d2 <i386_vm_init+0xcfa>$/;"	l
f01023ae	obj/kern/kernel.asm	/^f01023ae:	c7 44 24 0c fc 6d 10 	movl   $0xf0106dfc,0xc(%esp)$/;"	l
f01023b5	obj/kern/kernel.asm	/^f01023b5:	f0 $/;"	l
f01023b6	obj/kern/kernel.asm	/^f01023b6:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f01023bd	obj/kern/kernel.asm	/^f01023bd:	f0 $/;"	l
f01023be	obj/kern/kernel.asm	/^f01023be:	c7 44 24 04 c2 03 00 	movl   $0x3c2,0x4(%esp)$/;"	l
f01023c5	obj/kern/kernel.asm	/^f01023c5:	00 $/;"	l
f01023c6	obj/kern/kernel.asm	/^f01023c6:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f01023cd	obj/kern/kernel.asm	/^f01023cd:	e8 b3 dc ff ff       	call   f0100085 <_panic>$/;"	l
f01023d2	obj/kern/kernel.asm	/^f01023d2:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f01023d9	obj/kern/kernel.asm	/^f01023d9:	00 $/;"	l
f01023da	obj/kern/kernel.asm	/^f01023da:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01023e1	obj/kern/kernel.asm	/^f01023e1:	00 $/;"	l
f01023e2	obj/kern/kernel.asm	/^f01023e2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01023e9	obj/kern/kernel.asm	/^f01023e9:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f01023ee	obj/kern/kernel.asm	/^f01023ee:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01023f1	obj/kern/kernel.asm	/^f01023f1:	e8 28 f1 ff ff       	call   f010151e <page_insert>$/;"	l
f01023f6	obj/kern/kernel.asm	/^f01023f6:	85 c0                	test   %eax,%eax$/;"	l
f01023f8	obj/kern/kernel.asm	/^f01023f8:	74 24                	je     f010241e <i386_vm_init+0xd46>$/;"	l
f01023fa	obj/kern/kernel.asm	/^f01023fa:	c7 44 24 0c 3c 6e 10 	movl   $0xf0106e3c,0xc(%esp)$/;"	l
f0102401	obj/kern/kernel.asm	/^f0102401:	f0 $/;"	l
f0102402	obj/kern/kernel.asm	/^f0102402:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102409	obj/kern/kernel.asm	/^f0102409:	f0 $/;"	l
f010240a	obj/kern/kernel.asm	/^f010240a:	c7 44 24 04 c5 03 00 	movl   $0x3c5,0x4(%esp)$/;"	l
f0102411	obj/kern/kernel.asm	/^f0102411:	00 $/;"	l
f0102412	obj/kern/kernel.asm	/^f0102412:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102419	obj/kern/kernel.asm	/^f0102419:	e8 67 dc ff ff       	call   f0100085 <_panic>$/;"	l
f010241e	obj/kern/kernel.asm	/^f010241e:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102423	obj/kern/kernel.asm	/^f0102423:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f0102428	obj/kern/kernel.asm	/^f0102428:	e8 e9 ec ff ff       	call   f0101116 <check_va2pa>$/;"	l
f010242d	obj/kern/kernel.asm	/^f010242d:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0102430	obj/kern/kernel.asm	/^f0102430:	89 d1                	mov    %edx,%ecx$/;"	l
f0102432	obj/kern/kernel.asm	/^f0102432:	2b 0d 64 48 29 f0    	sub    0xf0294864,%ecx$/;"	l
f0102438	obj/kern/kernel.asm	/^f0102438:	c1 f9 02             	sar    $0x2,%ecx$/;"	l
f010243b	obj/kern/kernel.asm	/^f010243b:	69 c9 ab aa aa aa    	imul   $0xaaaaaaab,%ecx,%ecx$/;"	l
f0102441	obj/kern/kernel.asm	/^f0102441:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0102444	obj/kern/kernel.asm	/^f0102444:	39 c8                	cmp    %ecx,%eax$/;"	l
f0102446	obj/kern/kernel.asm	/^f0102446:	74 24                	je     f010246c <i386_vm_init+0xd94>$/;"	l
f0102448	obj/kern/kernel.asm	/^f0102448:	c7 44 24 0c cc 6d 10 	movl   $0xf0106dcc,0xc(%esp)$/;"	l
f010244f	obj/kern/kernel.asm	/^f010244f:	f0 $/;"	l
f0102450	obj/kern/kernel.asm	/^f0102450:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102457	obj/kern/kernel.asm	/^f0102457:	f0 $/;"	l
f0102458	obj/kern/kernel.asm	/^f0102458:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)$/;"	l
f010245f	obj/kern/kernel.asm	/^f010245f:	00 $/;"	l
f0102460	obj/kern/kernel.asm	/^f0102460:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102467	obj/kern/kernel.asm	/^f0102467:	e8 19 dc ff ff       	call   f0100085 <_panic>$/;"	l
f010246c	obj/kern/kernel.asm	/^f010246c:	66 83 7a 08 01       	cmpw   $0x1,0x8(%edx)$/;"	l
f0102471	obj/kern/kernel.asm	/^f0102471:	74 24                	je     f0102497 <i386_vm_init+0xdbf>$/;"	l
f0102473	obj/kern/kernel.asm	/^f0102473:	c7 44 24 0c eb 72 10 	movl   $0xf01072eb,0xc(%esp)$/;"	l
f010247a	obj/kern/kernel.asm	/^f010247a:	f0 $/;"	l
f010247b	obj/kern/kernel.asm	/^f010247b:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102482	obj/kern/kernel.asm	/^f0102482:	f0 $/;"	l
f0102483	obj/kern/kernel.asm	/^f0102483:	c7 44 24 04 c7 03 00 	movl   $0x3c7,0x4(%esp)$/;"	l
f010248a	obj/kern/kernel.asm	/^f010248a:	00 $/;"	l
f010248b	obj/kern/kernel.asm	/^f010248b:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102492	obj/kern/kernel.asm	/^f0102492:	e8 ee db ff ff       	call   f0100085 <_panic>$/;"	l
f0102497	obj/kern/kernel.asm	/^f0102497:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010249e	obj/kern/kernel.asm	/^f010249e:	00 $/;"	l
f010249f	obj/kern/kernel.asm	/^f010249f:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01024a6	obj/kern/kernel.asm	/^f01024a6:	00 $/;"	l
f01024a7	obj/kern/kernel.asm	/^f01024a7:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f01024ac	obj/kern/kernel.asm	/^f01024ac:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01024af	obj/kern/kernel.asm	/^f01024af:	e8 2b ed ff ff       	call   f01011df <pgdir_walk>$/;"	l
f01024b4	obj/kern/kernel.asm	/^f01024b4:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01024b7	obj/kern/kernel.asm	/^f01024b7:	75 24                	jne    f01024dd <i386_vm_init+0xe05>$/;"	l
f01024b9	obj/kern/kernel.asm	/^f01024b9:	c7 44 24 0c 78 6e 10 	movl   $0xf0106e78,0xc(%esp)$/;"	l
f01024c0	obj/kern/kernel.asm	/^f01024c0:	f0 $/;"	l
f01024c1	obj/kern/kernel.asm	/^f01024c1:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f01024c8	obj/kern/kernel.asm	/^f01024c8:	f0 $/;"	l
f01024c9	obj/kern/kernel.asm	/^f01024c9:	c7 44 24 04 c8 03 00 	movl   $0x3c8,0x4(%esp)$/;"	l
f01024d0	obj/kern/kernel.asm	/^f01024d0:	00 $/;"	l
f01024d1	obj/kern/kernel.asm	/^f01024d1:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f01024d8	obj/kern/kernel.asm	/^f01024d8:	e8 a8 db ff ff       	call   f0100085 <_panic>$/;"	l
f01024dd	obj/kern/kernel.asm	/^f01024dd:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f01024e2	obj/kern/kernel.asm	/^f01024e2:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01024e5	obj/kern/kernel.asm	/^f01024e5:	75 24                	jne    f010250b <i386_vm_init+0xe33>$/;"	l
f01024e7	obj/kern/kernel.asm	/^f01024e7:	c7 44 24 0c fc 72 10 	movl   $0xf01072fc,0xc(%esp)$/;"	l
f01024ee	obj/kern/kernel.asm	/^f01024ee:	f0 $/;"	l
f01024ef	obj/kern/kernel.asm	/^f01024ef:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f01024f6	obj/kern/kernel.asm	/^f01024f6:	f0 $/;"	l
f01024f7	obj/kern/kernel.asm	/^f01024f7:	c7 44 24 04 c9 03 00 	movl   $0x3c9,0x4(%esp)$/;"	l
f01024fe	obj/kern/kernel.asm	/^f01024fe:	00 $/;"	l
f01024ff	obj/kern/kernel.asm	/^f01024ff:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102506	obj/kern/kernel.asm	/^f0102506:	e8 7a db ff ff       	call   f0100085 <_panic>$/;"	l
f010250b	obj/kern/kernel.asm	/^f010250b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0102512	obj/kern/kernel.asm	/^f0102512:	00 $/;"	l
f0102513	obj/kern/kernel.asm	/^f0102513:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f010251a	obj/kern/kernel.asm	/^f010251a:	00 $/;"	l
f010251b	obj/kern/kernel.asm	/^f010251b:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f010251e	obj/kern/kernel.asm	/^f010251e:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0102522	obj/kern/kernel.asm	/^f0102522:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102525	obj/kern/kernel.asm	/^f0102525:	e8 f4 ef ff ff       	call   f010151e <page_insert>$/;"	l
f010252a	obj/kern/kernel.asm	/^f010252a:	85 c0                	test   %eax,%eax$/;"	l
f010252c	obj/kern/kernel.asm	/^f010252c:	78 24                	js     f0102552 <i386_vm_init+0xe7a>$/;"	l
f010252e	obj/kern/kernel.asm	/^f010252e:	c7 44 24 0c ac 6e 10 	movl   $0xf0106eac,0xc(%esp)$/;"	l
f0102535	obj/kern/kernel.asm	/^f0102535:	f0 $/;"	l
f0102536	obj/kern/kernel.asm	/^f0102536:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f010253d	obj/kern/kernel.asm	/^f010253d:	f0 $/;"	l
f010253e	obj/kern/kernel.asm	/^f010253e:	c7 44 24 04 cc 03 00 	movl   $0x3cc,0x4(%esp)$/;"	l
f0102545	obj/kern/kernel.asm	/^f0102545:	00 $/;"	l
f0102546	obj/kern/kernel.asm	/^f0102546:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f010254d	obj/kern/kernel.asm	/^f010254d:	e8 33 db ff ff       	call   f0100085 <_panic>$/;"	l
f0102552	obj/kern/kernel.asm	/^f0102552:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0102559	obj/kern/kernel.asm	/^f0102559:	00 $/;"	l
f010255a	obj/kern/kernel.asm	/^f010255a:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102561	obj/kern/kernel.asm	/^f0102561:	00 $/;"	l
f0102562	obj/kern/kernel.asm	/^f0102562:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0102565	obj/kern/kernel.asm	/^f0102565:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0102569	obj/kern/kernel.asm	/^f0102569:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f010256e	obj/kern/kernel.asm	/^f010256e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102571	obj/kern/kernel.asm	/^f0102571:	e8 a8 ef ff ff       	call   f010151e <page_insert>$/;"	l
f0102576	obj/kern/kernel.asm	/^f0102576:	85 c0                	test   %eax,%eax$/;"	l
f0102578	obj/kern/kernel.asm	/^f0102578:	74 24                	je     f010259e <i386_vm_init+0xec6>$/;"	l
f010257a	obj/kern/kernel.asm	/^f010257a:	c7 44 24 0c e0 6e 10 	movl   $0xf0106ee0,0xc(%esp)$/;"	l
f0102581	obj/kern/kernel.asm	/^f0102581:	f0 $/;"	l
f0102582	obj/kern/kernel.asm	/^f0102582:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102589	obj/kern/kernel.asm	/^f0102589:	f0 $/;"	l
f010258a	obj/kern/kernel.asm	/^f010258a:	c7 44 24 04 cf 03 00 	movl   $0x3cf,0x4(%esp)$/;"	l
f0102591	obj/kern/kernel.asm	/^f0102591:	00 $/;"	l
f0102592	obj/kern/kernel.asm	/^f0102592:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102599	obj/kern/kernel.asm	/^f0102599:	e8 e7 da ff ff       	call   f0100085 <_panic>$/;"	l
f010259e	obj/kern/kernel.asm	/^f010259e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01025a5	obj/kern/kernel.asm	/^f01025a5:	00 $/;"	l
f01025a6	obj/kern/kernel.asm	/^f01025a6:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01025ad	obj/kern/kernel.asm	/^f01025ad:	00 $/;"	l
f01025ae	obj/kern/kernel.asm	/^f01025ae:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f01025b3	obj/kern/kernel.asm	/^f01025b3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01025b6	obj/kern/kernel.asm	/^f01025b6:	e8 24 ec ff ff       	call   f01011df <pgdir_walk>$/;"	l
f01025bb	obj/kern/kernel.asm	/^f01025bb:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01025be	obj/kern/kernel.asm	/^f01025be:	74 24                	je     f01025e4 <i386_vm_init+0xf0c>$/;"	l
f01025c0	obj/kern/kernel.asm	/^f01025c0:	c7 44 24 0c 18 6f 10 	movl   $0xf0106f18,0xc(%esp)$/;"	l
f01025c7	obj/kern/kernel.asm	/^f01025c7:	f0 $/;"	l
f01025c8	obj/kern/kernel.asm	/^f01025c8:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f01025cf	obj/kern/kernel.asm	/^f01025cf:	f0 $/;"	l
f01025d0	obj/kern/kernel.asm	/^f01025d0:	c7 44 24 04 d0 03 00 	movl   $0x3d0,0x4(%esp)$/;"	l
f01025d7	obj/kern/kernel.asm	/^f01025d7:	00 $/;"	l
f01025d8	obj/kern/kernel.asm	/^f01025d8:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f01025df	obj/kern/kernel.asm	/^f01025df:	e8 a1 da ff ff       	call   f0100085 <_panic>$/;"	l
f01025e4	obj/kern/kernel.asm	/^f01025e4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f01025ee	obj/kern/kernel.asm	/^f01025ee:	e8 23 eb ff ff       	call   f0101116 <check_va2pa>$/;"	l
f01025f3	obj/kern/kernel.asm	/^f01025f3:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01025f6	obj/kern/kernel.asm	/^f01025f6:	2b 15 64 48 29 f0    	sub    0xf0294864,%edx$/;"	l
f01025fc	obj/kern/kernel.asm	/^f01025fc:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f01025ff	obj/kern/kernel.asm	/^f01025ff:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0102605	obj/kern/kernel.asm	/^f0102605:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102608	obj/kern/kernel.asm	/^f0102608:	39 d0                	cmp    %edx,%eax$/;"	l
f010260a	obj/kern/kernel.asm	/^f010260a:	74 24                	je     f0102630 <i386_vm_init+0xf58>$/;"	l
f010260c	obj/kern/kernel.asm	/^f010260c:	c7 44 24 0c 50 6f 10 	movl   $0xf0106f50,0xc(%esp)$/;"	l
f0102613	obj/kern/kernel.asm	/^f0102613:	f0 $/;"	l
f0102614	obj/kern/kernel.asm	/^f0102614:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f010261b	obj/kern/kernel.asm	/^f010261b:	f0 $/;"	l
f010261c	obj/kern/kernel.asm	/^f010261c:	c7 44 24 04 d3 03 00 	movl   $0x3d3,0x4(%esp)$/;"	l
f0102623	obj/kern/kernel.asm	/^f0102623:	00 $/;"	l
f0102624	obj/kern/kernel.asm	/^f0102624:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f010262b	obj/kern/kernel.asm	/^f010262b:	e8 55 da ff ff       	call   f0100085 <_panic>$/;"	l
f0102630	obj/kern/kernel.asm	/^f0102630:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102635	obj/kern/kernel.asm	/^f0102635:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f010263a	obj/kern/kernel.asm	/^f010263a:	e8 d7 ea ff ff       	call   f0101116 <check_va2pa>$/;"	l
f010263f	obj/kern/kernel.asm	/^f010263f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0102642	obj/kern/kernel.asm	/^f0102642:	89 d1                	mov    %edx,%ecx$/;"	l
f0102644	obj/kern/kernel.asm	/^f0102644:	2b 0d 64 48 29 f0    	sub    0xf0294864,%ecx$/;"	l
f010264a	obj/kern/kernel.asm	/^f010264a:	c1 f9 02             	sar    $0x2,%ecx$/;"	l
f010264d	obj/kern/kernel.asm	/^f010264d:	69 c9 ab aa aa aa    	imul   $0xaaaaaaab,%ecx,%ecx$/;"	l
f0102653	obj/kern/kernel.asm	/^f0102653:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0102656	obj/kern/kernel.asm	/^f0102656:	39 c8                	cmp    %ecx,%eax$/;"	l
f0102658	obj/kern/kernel.asm	/^f0102658:	74 24                	je     f010267e <i386_vm_init+0xfa6>$/;"	l
f010265a	obj/kern/kernel.asm	/^f010265a:	c7 44 24 0c 7c 6f 10 	movl   $0xf0106f7c,0xc(%esp)$/;"	l
f0102661	obj/kern/kernel.asm	/^f0102661:	f0 $/;"	l
f0102662	obj/kern/kernel.asm	/^f0102662:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102669	obj/kern/kernel.asm	/^f0102669:	f0 $/;"	l
f010266a	obj/kern/kernel.asm	/^f010266a:	c7 44 24 04 d4 03 00 	movl   $0x3d4,0x4(%esp)$/;"	l
f0102671	obj/kern/kernel.asm	/^f0102671:	00 $/;"	l
f0102672	obj/kern/kernel.asm	/^f0102672:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102679	obj/kern/kernel.asm	/^f0102679:	e8 07 da ff ff       	call   f0100085 <_panic>$/;"	l
f010267e	obj/kern/kernel.asm	/^f010267e:	66 83 7a 08 02       	cmpw   $0x2,0x8(%edx)$/;"	l
f0102683	obj/kern/kernel.asm	/^f0102683:	74 24                	je     f01026a9 <i386_vm_init+0xfd1>$/;"	l
f0102685	obj/kern/kernel.asm	/^f0102685:	c7 44 24 0c 12 73 10 	movl   $0xf0107312,0xc(%esp)$/;"	l
f010268c	obj/kern/kernel.asm	/^f010268c:	f0 $/;"	l
f010268d	obj/kern/kernel.asm	/^f010268d:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102694	obj/kern/kernel.asm	/^f0102694:	f0 $/;"	l
f0102695	obj/kern/kernel.asm	/^f0102695:	c7 44 24 04 d6 03 00 	movl   $0x3d6,0x4(%esp)$/;"	l
f010269c	obj/kern/kernel.asm	/^f010269c:	00 $/;"	l
f010269d	obj/kern/kernel.asm	/^f010269d:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f01026a4	obj/kern/kernel.asm	/^f01026a4:	e8 dc d9 ff ff       	call   f0100085 <_panic>$/;"	l
f01026a9	obj/kern/kernel.asm	/^f01026a9:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01026ac	obj/kern/kernel.asm	/^f01026ac:	66 83 78 08 00       	cmpw   $0x0,0x8(%eax)$/;"	l
f01026b1	obj/kern/kernel.asm	/^f01026b1:	74 24                	je     f01026d7 <i386_vm_init+0xfff>$/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	c7 44 24 0c 23 73 10 	movl   $0xf0107323,0xc(%esp)$/;"	l
f01026ba	obj/kern/kernel.asm	/^f01026ba:	f0 $/;"	l
f01026bb	obj/kern/kernel.asm	/^f01026bb:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f01026c2	obj/kern/kernel.asm	/^f01026c2:	f0 $/;"	l
f01026c3	obj/kern/kernel.asm	/^f01026c3:	c7 44 24 04 d7 03 00 	movl   $0x3d7,0x4(%esp)$/;"	l
f01026ca	obj/kern/kernel.asm	/^f01026ca:	00 $/;"	l
f01026cb	obj/kern/kernel.asm	/^f01026cb:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f01026d2	obj/kern/kernel.asm	/^f01026d2:	e8 ae d9 ff ff       	call   f0100085 <_panic>$/;"	l
f01026d7	obj/kern/kernel.asm	/^f01026d7:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01026da	obj/kern/kernel.asm	/^f01026da:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01026dd	obj/kern/kernel.asm	/^f01026dd:	e8 ad ea ff ff       	call   f010118f <page_alloc>$/;"	l
f01026e2	obj/kern/kernel.asm	/^f01026e2:	85 c0                	test   %eax,%eax$/;"	l
f01026e4	obj/kern/kernel.asm	/^f01026e4:	75 08                	jne    f01026ee <i386_vm_init+0x1016>$/;"	l
f01026e6	obj/kern/kernel.asm	/^f01026e6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01026e9	obj/kern/kernel.asm	/^f01026e9:	3b 45 d8             	cmp    -0x28(%ebp),%eax$/;"	l
f01026ec	obj/kern/kernel.asm	/^f01026ec:	74 24                	je     f0102712 <i386_vm_init+0x103a>$/;"	l
f01026ee	obj/kern/kernel.asm	/^f01026ee:	c7 44 24 0c ac 6f 10 	movl   $0xf0106fac,0xc(%esp)$/;"	l
f01026f5	obj/kern/kernel.asm	/^f01026f5:	f0 $/;"	l
f01026f6	obj/kern/kernel.asm	/^f01026f6:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f01026fd	obj/kern/kernel.asm	/^f01026fd:	f0 $/;"	l
f01026fe	obj/kern/kernel.asm	/^f01026fe:	c7 44 24 04 da 03 00 	movl   $0x3da,0x4(%esp)$/;"	l
f0102705	obj/kern/kernel.asm	/^f0102705:	00 $/;"	l
f0102706	obj/kern/kernel.asm	/^f0102706:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f010270d	obj/kern/kernel.asm	/^f010270d:	e8 73 d9 ff ff       	call   f0100085 <_panic>$/;"	l
f0102712	obj/kern/kernel.asm	/^f0102712:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102719	obj/kern/kernel.asm	/^f0102719:	00 $/;"	l
f010271a	obj/kern/kernel.asm	/^f010271a:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f010271f	obj/kern/kernel.asm	/^f010271f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102722	obj/kern/kernel.asm	/^f0102722:	e8 98 ed ff ff       	call   f01014bf <page_remove>$/;"	l
f0102727	obj/kern/kernel.asm	/^f0102727:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010272c	obj/kern/kernel.asm	/^f010272c:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f0102731	obj/kern/kernel.asm	/^f0102731:	e8 e0 e9 ff ff       	call   f0101116 <check_va2pa>$/;"	l
f0102736	obj/kern/kernel.asm	/^f0102736:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102739	obj/kern/kernel.asm	/^f0102739:	74 24                	je     f010275f <i386_vm_init+0x1087>$/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	c7 44 24 0c d0 6f 10 	movl   $0xf0106fd0,0xc(%esp)$/;"	l
f0102742	obj/kern/kernel.asm	/^f0102742:	f0 $/;"	l
f0102743	obj/kern/kernel.asm	/^f0102743:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f010274a	obj/kern/kernel.asm	/^f010274a:	f0 $/;"	l
f010274b	obj/kern/kernel.asm	/^f010274b:	c7 44 24 04 de 03 00 	movl   $0x3de,0x4(%esp)$/;"	l
f0102752	obj/kern/kernel.asm	/^f0102752:	00 $/;"	l
f0102753	obj/kern/kernel.asm	/^f0102753:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f010275a	obj/kern/kernel.asm	/^f010275a:	e8 26 d9 ff ff       	call   f0100085 <_panic>$/;"	l
f010275f	obj/kern/kernel.asm	/^f010275f:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102764	obj/kern/kernel.asm	/^f0102764:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f0102769	obj/kern/kernel.asm	/^f0102769:	e8 a8 e9 ff ff       	call   f0101116 <check_va2pa>$/;"	l
f010276e	obj/kern/kernel.asm	/^f010276e:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0102771	obj/kern/kernel.asm	/^f0102771:	89 d1                	mov    %edx,%ecx$/;"	l
f0102773	obj/kern/kernel.asm	/^f0102773:	2b 0d 64 48 29 f0    	sub    0xf0294864,%ecx$/;"	l
f0102779	obj/kern/kernel.asm	/^f0102779:	c1 f9 02             	sar    $0x2,%ecx$/;"	l
f010277c	obj/kern/kernel.asm	/^f010277c:	69 c9 ab aa aa aa    	imul   $0xaaaaaaab,%ecx,%ecx$/;"	l
f0102782	obj/kern/kernel.asm	/^f0102782:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0102785	obj/kern/kernel.asm	/^f0102785:	39 c8                	cmp    %ecx,%eax$/;"	l
f0102787	obj/kern/kernel.asm	/^f0102787:	74 24                	je     f01027ad <i386_vm_init+0x10d5>$/;"	l
f0102789	obj/kern/kernel.asm	/^f0102789:	c7 44 24 0c 7c 6f 10 	movl   $0xf0106f7c,0xc(%esp)$/;"	l
f0102790	obj/kern/kernel.asm	/^f0102790:	f0 $/;"	l
f0102791	obj/kern/kernel.asm	/^f0102791:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102798	obj/kern/kernel.asm	/^f0102798:	f0 $/;"	l
f0102799	obj/kern/kernel.asm	/^f0102799:	c7 44 24 04 df 03 00 	movl   $0x3df,0x4(%esp)$/;"	l
f01027a0	obj/kern/kernel.asm	/^f01027a0:	00 $/;"	l
f01027a1	obj/kern/kernel.asm	/^f01027a1:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f01027a8	obj/kern/kernel.asm	/^f01027a8:	e8 d8 d8 ff ff       	call   f0100085 <_panic>$/;"	l
f01027ad	obj/kern/kernel.asm	/^f01027ad:	66 83 7a 08 01       	cmpw   $0x1,0x8(%edx)$/;"	l
f01027b2	obj/kern/kernel.asm	/^f01027b2:	74 24                	je     f01027d8 <i386_vm_init+0x1100>$/;"	l
f01027b4	obj/kern/kernel.asm	/^f01027b4:	c7 44 24 0c c9 72 10 	movl   $0xf01072c9,0xc(%esp)$/;"	l
f01027bb	obj/kern/kernel.asm	/^f01027bb:	f0 $/;"	l
f01027bc	obj/kern/kernel.asm	/^f01027bc:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f01027c3	obj/kern/kernel.asm	/^f01027c3:	f0 $/;"	l
f01027c4	obj/kern/kernel.asm	/^f01027c4:	c7 44 24 04 e0 03 00 	movl   $0x3e0,0x4(%esp)$/;"	l
f01027cb	obj/kern/kernel.asm	/^f01027cb:	00 $/;"	l
f01027cc	obj/kern/kernel.asm	/^f01027cc:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	e8 ad d8 ff ff       	call   f0100085 <_panic>$/;"	l
f01027d8	obj/kern/kernel.asm	/^f01027d8:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01027db	obj/kern/kernel.asm	/^f01027db:	66 83 78 08 00       	cmpw   $0x0,0x8(%eax)$/;"	l
f01027e0	obj/kern/kernel.asm	/^f01027e0:	74 24                	je     f0102806 <i386_vm_init+0x112e>$/;"	l
f01027e2	obj/kern/kernel.asm	/^f01027e2:	c7 44 24 0c 23 73 10 	movl   $0xf0107323,0xc(%esp)$/;"	l
f01027e9	obj/kern/kernel.asm	/^f01027e9:	f0 $/;"	l
f01027ea	obj/kern/kernel.asm	/^f01027ea:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f01027f1	obj/kern/kernel.asm	/^f01027f1:	f0 $/;"	l
f01027f2	obj/kern/kernel.asm	/^f01027f2:	c7 44 24 04 e1 03 00 	movl   $0x3e1,0x4(%esp)$/;"	l
f01027f9	obj/kern/kernel.asm	/^f01027f9:	00 $/;"	l
f01027fa	obj/kern/kernel.asm	/^f01027fa:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102801	obj/kern/kernel.asm	/^f0102801:	e8 7f d8 ff ff       	call   f0100085 <_panic>$/;"	l
f0102806	obj/kern/kernel.asm	/^f0102806:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010280d	obj/kern/kernel.asm	/^f010280d:	00 $/;"	l
f010280e	obj/kern/kernel.asm	/^f010280e:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f0102813	obj/kern/kernel.asm	/^f0102813:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102816	obj/kern/kernel.asm	/^f0102816:	e8 a4 ec ff ff       	call   f01014bf <page_remove>$/;"	l
f010281b	obj/kern/kernel.asm	/^f010281b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102820	obj/kern/kernel.asm	/^f0102820:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f0102825	obj/kern/kernel.asm	/^f0102825:	e8 ec e8 ff ff       	call   f0101116 <check_va2pa>$/;"	l
f010282a	obj/kern/kernel.asm	/^f010282a:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010282d	obj/kern/kernel.asm	/^f010282d:	74 24                	je     f0102853 <i386_vm_init+0x117b>$/;"	l
f010282f	obj/kern/kernel.asm	/^f010282f:	c7 44 24 0c d0 6f 10 	movl   $0xf0106fd0,0xc(%esp)$/;"	l
f0102836	obj/kern/kernel.asm	/^f0102836:	f0 $/;"	l
f0102837	obj/kern/kernel.asm	/^f0102837:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f010283e	obj/kern/kernel.asm	/^f010283e:	f0 $/;"	l
f010283f	obj/kern/kernel.asm	/^f010283f:	c7 44 24 04 e5 03 00 	movl   $0x3e5,0x4(%esp)$/;"	l
f0102846	obj/kern/kernel.asm	/^f0102846:	00 $/;"	l
f0102847	obj/kern/kernel.asm	/^f0102847:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f010284e	obj/kern/kernel.asm	/^f010284e:	e8 32 d8 ff ff       	call   f0100085 <_panic>$/;"	l
f0102853	obj/kern/kernel.asm	/^f0102853:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102858	obj/kern/kernel.asm	/^f0102858:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f010285d	obj/kern/kernel.asm	/^f010285d:	e8 b4 e8 ff ff       	call   f0101116 <check_va2pa>$/;"	l
f0102862	obj/kern/kernel.asm	/^f0102862:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102865	obj/kern/kernel.asm	/^f0102865:	74 24                	je     f010288b <i386_vm_init+0x11b3>$/;"	l
f0102867	obj/kern/kernel.asm	/^f0102867:	c7 44 24 0c f4 6f 10 	movl   $0xf0106ff4,0xc(%esp)$/;"	l
f010286e	obj/kern/kernel.asm	/^f010286e:	f0 $/;"	l
f010286f	obj/kern/kernel.asm	/^f010286f:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102876	obj/kern/kernel.asm	/^f0102876:	f0 $/;"	l
f0102877	obj/kern/kernel.asm	/^f0102877:	c7 44 24 04 e6 03 00 	movl   $0x3e6,0x4(%esp)$/;"	l
f010287e	obj/kern/kernel.asm	/^f010287e:	00 $/;"	l
f010287f	obj/kern/kernel.asm	/^f010287f:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102886	obj/kern/kernel.asm	/^f0102886:	e8 fa d7 ff ff       	call   f0100085 <_panic>$/;"	l
f010288b	obj/kern/kernel.asm	/^f010288b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010288e	obj/kern/kernel.asm	/^f010288e:	66 83 78 08 00       	cmpw   $0x0,0x8(%eax)$/;"	l
f0102893	obj/kern/kernel.asm	/^f0102893:	74 24                	je     f01028b9 <i386_vm_init+0x11e1>$/;"	l
f0102895	obj/kern/kernel.asm	/^f0102895:	c7 44 24 0c 34 73 10 	movl   $0xf0107334,0xc(%esp)$/;"	l
f010289c	obj/kern/kernel.asm	/^f010289c:	f0 $/;"	l
f010289d	obj/kern/kernel.asm	/^f010289d:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f01028a4	obj/kern/kernel.asm	/^f01028a4:	f0 $/;"	l
f01028a5	obj/kern/kernel.asm	/^f01028a5:	c7 44 24 04 e7 03 00 	movl   $0x3e7,0x4(%esp)$/;"	l
f01028ac	obj/kern/kernel.asm	/^f01028ac:	00 $/;"	l
f01028ad	obj/kern/kernel.asm	/^f01028ad:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f01028b4	obj/kern/kernel.asm	/^f01028b4:	e8 cc d7 ff ff       	call   f0100085 <_panic>$/;"	l
f01028b9	obj/kern/kernel.asm	/^f01028b9:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01028bc	obj/kern/kernel.asm	/^f01028bc:	66 83 78 08 00       	cmpw   $0x0,0x8(%eax)$/;"	l
f01028c1	obj/kern/kernel.asm	/^f01028c1:	74 24                	je     f01028e7 <i386_vm_init+0x120f>$/;"	l
f01028c3	obj/kern/kernel.asm	/^f01028c3:	c7 44 24 0c 23 73 10 	movl   $0xf0107323,0xc(%esp)$/;"	l
f01028ca	obj/kern/kernel.asm	/^f01028ca:	f0 $/;"	l
f01028cb	obj/kern/kernel.asm	/^f01028cb:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f01028d2	obj/kern/kernel.asm	/^f01028d2:	f0 $/;"	l
f01028d3	obj/kern/kernel.asm	/^f01028d3:	c7 44 24 04 e8 03 00 	movl   $0x3e8,0x4(%esp)$/;"	l
f01028da	obj/kern/kernel.asm	/^f01028da:	00 $/;"	l
f01028db	obj/kern/kernel.asm	/^f01028db:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f01028e2	obj/kern/kernel.asm	/^f01028e2:	e8 9e d7 ff ff       	call   f0100085 <_panic>$/;"	l
f01028e7	obj/kern/kernel.asm	/^f01028e7:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01028ea	obj/kern/kernel.asm	/^f01028ea:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01028ed	obj/kern/kernel.asm	/^f01028ed:	e8 9d e8 ff ff       	call   f010118f <page_alloc>$/;"	l
f01028f2	obj/kern/kernel.asm	/^f01028f2:	85 c0                	test   %eax,%eax$/;"	l
f01028f4	obj/kern/kernel.asm	/^f01028f4:	75 08                	jne    f01028fe <i386_vm_init+0x1226>$/;"	l
f01028f6	obj/kern/kernel.asm	/^f01028f6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01028f9	obj/kern/kernel.asm	/^f01028f9:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
f01028fc	obj/kern/kernel.asm	/^f01028fc:	74 24                	je     f0102922 <i386_vm_init+0x124a>$/;"	l
f01028fe	obj/kern/kernel.asm	/^f01028fe:	c7 44 24 0c 1c 70 10 	movl   $0xf010701c,0xc(%esp)$/;"	l
f0102905	obj/kern/kernel.asm	/^f0102905:	f0 $/;"	l
f0102906	obj/kern/kernel.asm	/^f0102906:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f010290d	obj/kern/kernel.asm	/^f010290d:	f0 $/;"	l
f010290e	obj/kern/kernel.asm	/^f010290e:	c7 44 24 04 eb 03 00 	movl   $0x3eb,0x4(%esp)$/;"	l
f0102915	obj/kern/kernel.asm	/^f0102915:	00 $/;"	l
f0102916	obj/kern/kernel.asm	/^f0102916:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f010291d	obj/kern/kernel.asm	/^f010291d:	e8 63 d7 ff ff       	call   f0100085 <_panic>$/;"	l
f0102922	obj/kern/kernel.asm	/^f0102922:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0102925	obj/kern/kernel.asm	/^f0102925:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102928	obj/kern/kernel.asm	/^f0102928:	e8 62 e8 ff ff       	call   f010118f <page_alloc>$/;"	l
f010292d	obj/kern/kernel.asm	/^f010292d:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f0102930	obj/kern/kernel.asm	/^f0102930:	74 24                	je     f0102956 <i386_vm_init+0x127e>$/;"	l
f0102932	obj/kern/kernel.asm	/^f0102932:	c7 44 24 0c ac 72 10 	movl   $0xf01072ac,0xc(%esp)$/;"	l
f0102939	obj/kern/kernel.asm	/^f0102939:	f0 $/;"	l
f010293a	obj/kern/kernel.asm	/^f010293a:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102941	obj/kern/kernel.asm	/^f0102941:	f0 $/;"	l
f0102942	obj/kern/kernel.asm	/^f0102942:	c7 44 24 04 ee 03 00 	movl   $0x3ee,0x4(%esp)$/;"	l
f0102949	obj/kern/kernel.asm	/^f0102949:	00 $/;"	l
f010294a	obj/kern/kernel.asm	/^f010294a:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102951	obj/kern/kernel.asm	/^f0102951:	e8 2f d7 ff ff       	call   f0100085 <_panic>$/;"	l
f0102956	obj/kern/kernel.asm	/^f0102956:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f010295b	obj/kern/kernel.asm	/^f010295b:	8b 08                	mov    (%eax),%ecx$/;"	l
f010295d	obj/kern/kernel.asm	/^f010295d:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102963	obj/kern/kernel.asm	/^f0102963:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0102966	obj/kern/kernel.asm	/^f0102966:	2b 15 64 48 29 f0    	sub    0xf0294864,%edx$/;"	l
f010296c	obj/kern/kernel.asm	/^f010296c:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f010296f	obj/kern/kernel.asm	/^f010296f:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0102975	obj/kern/kernel.asm	/^f0102975:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102978	obj/kern/kernel.asm	/^f0102978:	39 d1                	cmp    %edx,%ecx$/;"	l
f010297a	obj/kern/kernel.asm	/^f010297a:	74 24                	je     f01029a0 <i386_vm_init+0x12c8>$/;"	l
f010297c	obj/kern/kernel.asm	/^f010297c:	c7 44 24 0c 3c 6d 10 	movl   $0xf0106d3c,0xc(%esp)$/;"	l
f0102983	obj/kern/kernel.asm	/^f0102983:	f0 $/;"	l
f0102984	obj/kern/kernel.asm	/^f0102984:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f010298b	obj/kern/kernel.asm	/^f010298b:	f0 $/;"	l
f010298c	obj/kern/kernel.asm	/^f010298c:	c7 44 24 04 01 04 00 	movl   $0x401,0x4(%esp)$/;"	l
f0102993	obj/kern/kernel.asm	/^f0102993:	00 $/;"	l
f0102994	obj/kern/kernel.asm	/^f0102994:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f010299b	obj/kern/kernel.asm	/^f010299b:	e8 e5 d6 ff ff       	call   f0100085 <_panic>$/;"	l
f01029a0	obj/kern/kernel.asm	/^f01029a0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01029a6	obj/kern/kernel.asm	/^f01029a6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01029a9	obj/kern/kernel.asm	/^f01029a9:	66 83 78 08 01       	cmpw   $0x1,0x8(%eax)$/;"	l
f01029ae	obj/kern/kernel.asm	/^f01029ae:	74 24                	je     f01029d4 <i386_vm_init+0x12fc>$/;"	l
f01029b0	obj/kern/kernel.asm	/^f01029b0:	c7 44 24 0c da 72 10 	movl   $0xf01072da,0xc(%esp)$/;"	l
f01029b7	obj/kern/kernel.asm	/^f01029b7:	f0 $/;"	l
f01029b8	obj/kern/kernel.asm	/^f01029b8:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f01029bf	obj/kern/kernel.asm	/^f01029bf:	f0 $/;"	l
f01029c0	obj/kern/kernel.asm	/^f01029c0:	c7 44 24 04 03 04 00 	movl   $0x403,0x4(%esp)$/;"	l
f01029c7	obj/kern/kernel.asm	/^f01029c7:	00 $/;"	l
f01029c8	obj/kern/kernel.asm	/^f01029c8:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f01029cf	obj/kern/kernel.asm	/^f01029cf:	e8 b1 d6 ff ff       	call   f0100085 <_panic>$/;"	l
f01029d4	obj/kern/kernel.asm	/^f01029d4:	66 c7 40 08 00 00    	movw   $0x0,0x8(%eax)$/;"	l
f01029da	obj/kern/kernel.asm	/^f01029da:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01029dd	obj/kern/kernel.asm	/^f01029dd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01029e0	obj/kern/kernel.asm	/^f01029e0:	e8 f1 e4 ff ff       	call   f0100ed6 <page_free>$/;"	l
f01029e5	obj/kern/kernel.asm	/^f01029e5:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01029ec	obj/kern/kernel.asm	/^f01029ec:	00 $/;"	l
f01029ed	obj/kern/kernel.asm	/^f01029ed:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f01029f4	obj/kern/kernel.asm	/^f01029f4:	00 $/;"	l
f01029f5	obj/kern/kernel.asm	/^f01029f5:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f01029fa	obj/kern/kernel.asm	/^f01029fa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01029fd	obj/kern/kernel.asm	/^f01029fd:	e8 dd e7 ff ff       	call   f01011df <pgdir_walk>$/;"	l
f0102a02	obj/kern/kernel.asm	/^f0102a02:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102a05	obj/kern/kernel.asm	/^f0102a05:	8b 0d 60 48 29 f0    	mov    0xf0294860,%ecx$/;"	l
f0102a0b	obj/kern/kernel.asm	/^f0102a0b:	83 c1 04             	add    $0x4,%ecx$/;"	l
f0102a0e	obj/kern/kernel.asm	/^f0102a0e:	8b 11                	mov    (%ecx),%edx$/;"	l
f0102a10	obj/kern/kernel.asm	/^f0102a10:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102a16	obj/kern/kernel.asm	/^f0102a16:	89 d6                	mov    %edx,%esi$/;"	l
f0102a18	obj/kern/kernel.asm	/^f0102a18:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0102a1b	obj/kern/kernel.asm	/^f0102a1b:	3b 35 58 48 29 f0    	cmp    0xf0294858,%esi$/;"	l
f0102a21	obj/kern/kernel.asm	/^f0102a21:	72 20                	jb     f0102a43 <i386_vm_init+0x136b>$/;"	l
f0102a23	obj/kern/kernel.asm	/^f0102a23:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102a27	obj/kern/kernel.asm	/^f0102a27:	c7 44 24 08 a0 6b 10 	movl   $0xf0106ba0,0x8(%esp)$/;"	l
f0102a2e	obj/kern/kernel.asm	/^f0102a2e:	f0 $/;"	l
f0102a2f	obj/kern/kernel.asm	/^f0102a2f:	c7 44 24 04 0a 04 00 	movl   $0x40a,0x4(%esp)$/;"	l
f0102a36	obj/kern/kernel.asm	/^f0102a36:	00 $/;"	l
f0102a37	obj/kern/kernel.asm	/^f0102a37:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102a3e	obj/kern/kernel.asm	/^f0102a3e:	e8 42 d6 ff ff       	call   f0100085 <_panic>$/;"	l
f0102a43	obj/kern/kernel.asm	/^f0102a43:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edx$/;"	l
f0102a49	obj/kern/kernel.asm	/^f0102a49:	39 d0                	cmp    %edx,%eax$/;"	l
f0102a4b	obj/kern/kernel.asm	/^f0102a4b:	74 24                	je     f0102a71 <i386_vm_init+0x1399>$/;"	l
f0102a4d	obj/kern/kernel.asm	/^f0102a4d:	c7 44 24 0c 45 73 10 	movl   $0xf0107345,0xc(%esp)$/;"	l
f0102a54	obj/kern/kernel.asm	/^f0102a54:	f0 $/;"	l
f0102a55	obj/kern/kernel.asm	/^f0102a55:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102a5c	obj/kern/kernel.asm	/^f0102a5c:	f0 $/;"	l
f0102a5d	obj/kern/kernel.asm	/^f0102a5d:	c7 44 24 04 0b 04 00 	movl   $0x40b,0x4(%esp)$/;"	l
f0102a64	obj/kern/kernel.asm	/^f0102a64:	00 $/;"	l
f0102a65	obj/kern/kernel.asm	/^f0102a65:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102a6c	obj/kern/kernel.asm	/^f0102a6c:	e8 14 d6 ff ff       	call   f0100085 <_panic>$/;"	l
f0102a71	obj/kern/kernel.asm	/^f0102a71:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0102a77	obj/kern/kernel.asm	/^f0102a77:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0102a7a	obj/kern/kernel.asm	/^f0102a7a:	66 c7 40 08 00 00    	movw   $0x0,0x8(%eax)$/;"	l
f0102a80	obj/kern/kernel.asm	/^f0102a80:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0102a83	obj/kern/kernel.asm	/^f0102a83:	2b 05 64 48 29 f0    	sub    0xf0294864,%eax$/;"	l
f0102a89	obj/kern/kernel.asm	/^f0102a89:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0102a8c	obj/kern/kernel.asm	/^f0102a8c:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0102a92	obj/kern/kernel.asm	/^f0102a92:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102a95	obj/kern/kernel.asm	/^f0102a95:	89 c2                	mov    %eax,%edx$/;"	l
f0102a97	obj/kern/kernel.asm	/^f0102a97:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102a9a	obj/kern/kernel.asm	/^f0102a9a:	3b 15 58 48 29 f0    	cmp    0xf0294858,%edx$/;"	l
f0102aa0	obj/kern/kernel.asm	/^f0102aa0:	72 20                	jb     f0102ac2 <i386_vm_init+0x13ea>$/;"	l
f0102aa2	obj/kern/kernel.asm	/^f0102aa2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102aa6	obj/kern/kernel.asm	/^f0102aa6:	c7 44 24 08 a0 6b 10 	movl   $0xf0106ba0,0x8(%esp)$/;"	l
f0102aad	obj/kern/kernel.asm	/^f0102aad:	f0 $/;"	l
f0102aae	obj/kern/kernel.asm	/^f0102aae:	c7 44 24 04 5a 00 00 	movl   $0x5a,0x4(%esp)$/;"	l
f0102ab5	obj/kern/kernel.asm	/^f0102ab5:	00 $/;"	l
f0102ab6	obj/kern/kernel.asm	/^f0102ab6:	c7 04 24 da 66 10 f0 	movl   $0xf01066da,(%esp)$/;"	l
f0102abd	obj/kern/kernel.asm	/^f0102abd:	e8 c3 d5 ff ff       	call   f0100085 <_panic>$/;"	l
f0102ac2	obj/kern/kernel.asm	/^f0102ac2:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102ac9	obj/kern/kernel.asm	/^f0102ac9:	00 $/;"	l
f0102aca	obj/kern/kernel.asm	/^f0102aca:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f0102ad1	obj/kern/kernel.asm	/^f0102ad1:	00 $/;"	l
f0102ad2	obj/kern/kernel.asm	/^f0102ad2:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102ad7	obj/kern/kernel.asm	/^f0102ad7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ada	obj/kern/kernel.asm	/^f0102ada:	e8 d7 28 00 00       	call   f01053b6 <memset>$/;"	l
f0102adf	obj/kern/kernel.asm	/^f0102adf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0102ae2	obj/kern/kernel.asm	/^f0102ae2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ae5	obj/kern/kernel.asm	/^f0102ae5:	e8 ec e3 ff ff       	call   f0100ed6 <page_free>$/;"	l
f0102aea	obj/kern/kernel.asm	/^f0102aea:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102af1	obj/kern/kernel.asm	/^f0102af1:	00 $/;"	l
f0102af2	obj/kern/kernel.asm	/^f0102af2:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102af9	obj/kern/kernel.asm	/^f0102af9:	00 $/;"	l
f0102afa	obj/kern/kernel.asm	/^f0102afa:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f0102aff	obj/kern/kernel.asm	/^f0102aff:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b02	obj/kern/kernel.asm	/^f0102b02:	e8 d8 e6 ff ff       	call   f01011df <pgdir_walk>$/;"	l
f0102b07	obj/kern/kernel.asm	/^f0102b07:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0102b0a	obj/kern/kernel.asm	/^f0102b0a:	2b 15 64 48 29 f0    	sub    0xf0294864,%edx$/;"	l
f0102b10	obj/kern/kernel.asm	/^f0102b10:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0102b13	obj/kern/kernel.asm	/^f0102b13:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edx$/;"	l
f0102b19	obj/kern/kernel.asm	/^f0102b19:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102b1c	obj/kern/kernel.asm	/^f0102b1c:	89 d0                	mov    %edx,%eax$/;"	l
f0102b1e	obj/kern/kernel.asm	/^f0102b1e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102b21	obj/kern/kernel.asm	/^f0102b21:	3b 05 58 48 29 f0    	cmp    0xf0294858,%eax$/;"	l
f0102b27	obj/kern/kernel.asm	/^f0102b27:	72 20                	jb     f0102b49 <i386_vm_init+0x1471>$/;"	l
f0102b29	obj/kern/kernel.asm	/^f0102b29:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102b2d	obj/kern/kernel.asm	/^f0102b2d:	c7 44 24 08 a0 6b 10 	movl   $0xf0106ba0,0x8(%esp)$/;"	l
f0102b34	obj/kern/kernel.asm	/^f0102b34:	f0 $/;"	l
f0102b35	obj/kern/kernel.asm	/^f0102b35:	c7 44 24 04 5a 00 00 	movl   $0x5a,0x4(%esp)$/;"	l
f0102b3c	obj/kern/kernel.asm	/^f0102b3c:	00 $/;"	l
f0102b3d	obj/kern/kernel.asm	/^f0102b3d:	c7 04 24 da 66 10 f0 	movl   $0xf01066da,(%esp)$/;"	l
f0102b44	obj/kern/kernel.asm	/^f0102b44:	e8 3c d5 ff ff       	call   f0100085 <_panic>$/;"	l
f0102b49	obj/kern/kernel.asm	/^f0102b49:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0102b4f	obj/kern/kernel.asm	/^f0102b4f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102b52	obj/kern/kernel.asm	/^f0102b52:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102b55	obj/kern/kernel.asm	/^f0102b55:	75 11                	jne    f0102b68 <i386_vm_init+0x1490>$/;"	l
f0102b57	obj/kern/kernel.asm	/^f0102b57:	8d 82 04 00 00 f0    	lea    -0xffffffc(%edx),%eax$/;"	l
f0102b5d	obj/kern/kernel.asm	/^f0102b5d:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102b63	obj/kern/kernel.asm	/^f0102b63:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102b66	obj/kern/kernel.asm	/^f0102b66:	74 24                	je     f0102b8c <i386_vm_init+0x14b4>$/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	c7 44 24 0c 5d 73 10 	movl   $0xf010735d,0xc(%esp)$/;"	l
f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	f0 $/;"	l
f0102b70	obj/kern/kernel.asm	/^f0102b70:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102b77	obj/kern/kernel.asm	/^f0102b77:	f0 $/;"	l
f0102b78	obj/kern/kernel.asm	/^f0102b78:	c7 44 24 04 15 04 00 	movl   $0x415,0x4(%esp)$/;"	l
f0102b7f	obj/kern/kernel.asm	/^f0102b7f:	00 $/;"	l
f0102b80	obj/kern/kernel.asm	/^f0102b80:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102b87	obj/kern/kernel.asm	/^f0102b87:	e8 f9 d4 ff ff       	call   f0100085 <_panic>$/;"	l
f0102b8c	obj/kern/kernel.asm	/^f0102b8c:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102b8f	obj/kern/kernel.asm	/^f0102b8f:	39 d0                	cmp    %edx,%eax$/;"	l
f0102b91	obj/kern/kernel.asm	/^f0102b91:	75 d0                	jne    f0102b63 <i386_vm_init+0x148b>$/;"	l
f0102b93	obj/kern/kernel.asm	/^f0102b93:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f0102b98	obj/kern/kernel.asm	/^f0102b98:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102b9e	obj/kern/kernel.asm	/^f0102b9e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0102ba1	obj/kern/kernel.asm	/^f0102ba1:	66 c7 40 08 00 00    	movw   $0x0,0x8(%eax)$/;"	l
f0102ba7	obj/kern/kernel.asm	/^f0102ba7:	89 1d 18 e4 26 f0    	mov    %ebx,0xf026e418$/;"	l
f0102bad	obj/kern/kernel.asm	/^f0102bad:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0102bb0	obj/kern/kernel.asm	/^f0102bb0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102bb3	obj/kern/kernel.asm	/^f0102bb3:	e8 1e e3 ff ff       	call   f0100ed6 <page_free>$/;"	l
f0102bb8	obj/kern/kernel.asm	/^f0102bb8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0102bbb	obj/kern/kernel.asm	/^f0102bbb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102bbe	obj/kern/kernel.asm	/^f0102bbe:	e8 13 e3 ff ff       	call   f0100ed6 <page_free>$/;"	l
f0102bc3	obj/kern/kernel.asm	/^f0102bc3:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0102bc6	obj/kern/kernel.asm	/^f0102bc6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102bc9	obj/kern/kernel.asm	/^f0102bc9:	e8 08 e3 ff ff       	call   f0100ed6 <page_free>$/;"	l
f0102bce	obj/kern/kernel.asm	/^f0102bce:	c7 04 24 74 73 10 f0 	movl   $0xf0107374,(%esp)$/;"	l
f0102bd5	obj/kern/kernel.asm	/^f0102bd5:	e8 f1 0d 00 00       	call   f01039cb <cprintf>$/;"	l
f0102bda	obj/kern/kernel.asm	/^f0102bda:	a1 64 48 29 f0       	mov    0xf0294864,%eax$/;"	l
f0102bdf	obj/kern/kernel.asm	/^f0102bdf:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102be4	obj/kern/kernel.asm	/^f0102be4:	77 20                	ja     f0102c06 <i386_vm_init+0x152e>$/;"	l
f0102be6	obj/kern/kernel.asm	/^f0102be6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102bea	obj/kern/kernel.asm	/^f0102bea:	c7 44 24 08 fc 69 10 	movl   $0xf01069fc,0x8(%esp)$/;"	l
f0102bf1	obj/kern/kernel.asm	/^f0102bf1:	f0 $/;"	l
f0102bf2	obj/kern/kernel.asm	/^f0102bf2:	c7 44 24 04 d3 00 00 	movl   $0xd3,0x4(%esp)$/;"	l
f0102bf9	obj/kern/kernel.asm	/^f0102bf9:	00 $/;"	l
f0102bfa	obj/kern/kernel.asm	/^f0102bfa:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102c01	obj/kern/kernel.asm	/^f0102c01:	e8 7f d4 ff ff       	call   f0100085 <_panic>$/;"	l
f0102c06	obj/kern/kernel.asm	/^f0102c06:	8b 15 58 48 29 f0    	mov    0xf0294858,%edx$/;"	l
f0102c0c	obj/kern/kernel.asm	/^f0102c0c:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0102c0f	obj/kern/kernel.asm	/^f0102c0f:	8d 0c 95 ff 0f 00 00 	lea    0xfff(,%edx,4),%ecx$/;"	l
f0102c16	obj/kern/kernel.asm	/^f0102c16:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102c1c	obj/kern/kernel.asm	/^f0102c1c:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f0102c23	obj/kern/kernel.asm	/^f0102c23:	00 $/;"	l
f0102c24	obj/kern/kernel.asm	/^f0102c24:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102c29	obj/kern/kernel.asm	/^f0102c29:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c2c	obj/kern/kernel.asm	/^f0102c2c:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f0102c31	obj/kern/kernel.asm	/^f0102c31:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f0102c36	obj/kern/kernel.asm	/^f0102c36:	e8 97 e9 ff ff       	call   f01015d2 <boot_map_segment>$/;"	l
f0102c3b	obj/kern/kernel.asm	/^f0102c3b:	a1 20 e4 26 f0       	mov    0xf026e420,%eax$/;"	l
f0102c40	obj/kern/kernel.asm	/^f0102c40:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0102c45	obj/kern/kernel.asm	/^f0102c45:	77 20                	ja     f0102c67 <i386_vm_init+0x158f>$/;"	l
f0102c47	obj/kern/kernel.asm	/^f0102c47:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102c4b	obj/kern/kernel.asm	/^f0102c4b:	c7 44 24 08 fc 69 10 	movl   $0xf01069fc,0x8(%esp)$/;"	l
f0102c52	obj/kern/kernel.asm	/^f0102c52:	f0 $/;"	l
f0102c53	obj/kern/kernel.asm	/^f0102c53:	c7 44 24 04 dd 00 00 	movl   $0xdd,0x4(%esp)$/;"	l
f0102c5a	obj/kern/kernel.asm	/^f0102c5a:	00 $/;"	l
f0102c5b	obj/kern/kernel.asm	/^f0102c5b:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102c62	obj/kern/kernel.asm	/^f0102c62:	e8 1e d4 ff ff       	call   f0100085 <_panic>$/;"	l
f0102c67	obj/kern/kernel.asm	/^f0102c67:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f0102c6e	obj/kern/kernel.asm	/^f0102c6e:	00 $/;"	l
f0102c6f	obj/kern/kernel.asm	/^f0102c6f:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0102c74	obj/kern/kernel.asm	/^f0102c74:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c77	obj/kern/kernel.asm	/^f0102c77:	b9 00 f0 01 00       	mov    $0x1f000,%ecx$/;"	l
f0102c7c	obj/kern/kernel.asm	/^f0102c7c:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0102c81	obj/kern/kernel.asm	/^f0102c81:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f0102c86	obj/kern/kernel.asm	/^f0102c86:	e8 47 e9 ff ff       	call   f01015d2 <boot_map_segment>$/;"	l
f0102c8b	obj/kern/kernel.asm	/^f0102c8b:	bb 00 60 11 f0       	mov    $0xf0116000,%ebx$/;"	l
f0102c90	obj/kern/kernel.asm	/^f0102c90:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0102c96	obj/kern/kernel.asm	/^f0102c96:	77 20                	ja     f0102cb8 <i386_vm_init+0x15e0>$/;"	l
f0102c98	obj/kern/kernel.asm	/^f0102c98:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0102c9c	obj/kern/kernel.asm	/^f0102c9c:	c7 44 24 08 fc 69 10 	movl   $0xf01069fc,0x8(%esp)$/;"	l
f0102ca3	obj/kern/kernel.asm	/^f0102ca3:	f0 $/;"	l
f0102ca4	obj/kern/kernel.asm	/^f0102ca4:	c7 44 24 04 f2 00 00 	movl   $0xf2,0x4(%esp)$/;"	l
f0102cab	obj/kern/kernel.asm	/^f0102cab:	00 $/;"	l
f0102cac	obj/kern/kernel.asm	/^f0102cac:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102cb3	obj/kern/kernel.asm	/^f0102cb3:	e8 cd d3 ff ff       	call   f0100085 <_panic>$/;"	l
f0102cb8	obj/kern/kernel.asm	/^f0102cb8:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f0102cbf	obj/kern/kernel.asm	/^f0102cbf:	00 $/;"	l
f0102cc0	obj/kern/kernel.asm	/^f0102cc0:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0102cc6	obj/kern/kernel.asm	/^f0102cc6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102cc9	obj/kern/kernel.asm	/^f0102cc9:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0102cce	obj/kern/kernel.asm	/^f0102cce:	ba 00 80 bf ef       	mov    $0xefbf8000,%edx$/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f0102cd8	obj/kern/kernel.asm	/^f0102cd8:	e8 f5 e8 ff ff       	call   f01015d2 <boot_map_segment>$/;"	l
f0102cdd	obj/kern/kernel.asm	/^f0102cdd:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f0102ce4	obj/kern/kernel.asm	/^f0102ce4:	00 $/;"	l
f0102ce5	obj/kern/kernel.asm	/^f0102ce5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102cec	obj/kern/kernel.asm	/^f0102cec:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f0102cf1	obj/kern/kernel.asm	/^f0102cf1:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0102cf6	obj/kern/kernel.asm	/^f0102cf6:	a1 60 48 29 f0       	mov    0xf0294860,%eax$/;"	l
f0102cfb	obj/kern/kernel.asm	/^f0102cfb:	e8 d2 e8 ff ff       	call   f01015d2 <boot_map_segment>$/;"	l
f0102d00	obj/kern/kernel.asm	/^f0102d00:	8b 35 60 48 29 f0    	mov    0xf0294860,%esi$/;"	l
f0102d06	obj/kern/kernel.asm	/^f0102d06:	6b 05 58 48 29 f0 0c 	imul   $0xc,0xf0294858,%eax$/;"	l
f0102d0d	obj/kern/kernel.asm	/^f0102d0d:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0102d12	obj/kern/kernel.asm	/^f0102d12:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102d17	obj/kern/kernel.asm	/^f0102d17:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0102d1a	obj/kern/kernel.asm	/^f0102d1a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0102d1f	obj/kern/kernel.asm	/^f0102d1f:	eb 70                	jmp    f0102d91 <i386_vm_init+0x16b9>$/;"	l
f0102d21	obj/kern/kernel.asm	/^f0102d21:	8d 97 00 00 00 ef    	lea    -0x11000000(%edi),%edx$/;"	l
f0102d27	obj/kern/kernel.asm	/^f0102d27:	89 f0                	mov    %esi,%eax$/;"	l
f0102d29	obj/kern/kernel.asm	/^f0102d29:	e8 e8 e3 ff ff       	call   f0101116 <check_va2pa>$/;"	l
f0102d2e	obj/kern/kernel.asm	/^f0102d2e:	8b 15 64 48 29 f0    	mov    0xf0294864,%edx$/;"	l
f0102d34	obj/kern/kernel.asm	/^f0102d34:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0102d3a	obj/kern/kernel.asm	/^f0102d3a:	77 20                	ja     f0102d5c <i386_vm_init+0x1684>$/;"	l
f0102d3c	obj/kern/kernel.asm	/^f0102d3c:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102d40	obj/kern/kernel.asm	/^f0102d40:	c7 44 24 08 fc 69 10 	movl   $0xf01069fc,0x8(%esp)$/;"	l
f0102d47	obj/kern/kernel.asm	/^f0102d47:	f0 $/;"	l
f0102d48	obj/kern/kernel.asm	/^f0102d48:	c7 44 24 04 93 01 00 	movl   $0x193,0x4(%esp)$/;"	l
f0102d4f	obj/kern/kernel.asm	/^f0102d4f:	00 $/;"	l
f0102d50	obj/kern/kernel.asm	/^f0102d50:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102d57	obj/kern/kernel.asm	/^f0102d57:	e8 29 d3 ff ff       	call   f0100085 <_panic>$/;"	l
f0102d5c	obj/kern/kernel.asm	/^f0102d5c:	8d 94 17 00 00 00 10 	lea    0x10000000(%edi,%edx,1),%edx$/;"	l
f0102d63	obj/kern/kernel.asm	/^f0102d63:	39 d0                	cmp    %edx,%eax$/;"	l
f0102d65	obj/kern/kernel.asm	/^f0102d65:	74 24                	je     f0102d8b <i386_vm_init+0x16b3>$/;"	l
f0102d67	obj/kern/kernel.asm	/^f0102d67:	c7 44 24 0c 40 70 10 	movl   $0xf0107040,0xc(%esp)$/;"	l
f0102d6e	obj/kern/kernel.asm	/^f0102d6e:	f0 $/;"	l
f0102d6f	obj/kern/kernel.asm	/^f0102d6f:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102d76	obj/kern/kernel.asm	/^f0102d76:	f0 $/;"	l
f0102d77	obj/kern/kernel.asm	/^f0102d77:	c7 44 24 04 93 01 00 	movl   $0x193,0x4(%esp)$/;"	l
f0102d7e	obj/kern/kernel.asm	/^f0102d7e:	00 $/;"	l
f0102d7f	obj/kern/kernel.asm	/^f0102d7f:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102d86	obj/kern/kernel.asm	/^f0102d86:	e8 fa d2 ff ff       	call   f0100085 <_panic>$/;"	l
f0102d8b	obj/kern/kernel.asm	/^f0102d8b:	81 c7 00 10 00 00    	add    $0x1000,%edi$/;"	l
f0102d91	obj/kern/kernel.asm	/^f0102d91:	39 7d c4             	cmp    %edi,-0x3c(%ebp)$/;"	l
f0102d94	obj/kern/kernel.asm	/^f0102d94:	77 8b                	ja     f0102d21 <i386_vm_init+0x1649>$/;"	l
f0102d96	obj/kern/kernel.asm	/^f0102d96:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0102d9b	obj/kern/kernel.asm	/^f0102d9b:	8d 97 00 00 c0 ee    	lea    -0x11400000(%edi),%edx$/;"	l
f0102da1	obj/kern/kernel.asm	/^f0102da1:	89 f0                	mov    %esi,%eax$/;"	l
f0102da3	obj/kern/kernel.asm	/^f0102da3:	e8 6e e3 ff ff       	call   f0101116 <check_va2pa>$/;"	l
f0102da8	obj/kern/kernel.asm	/^f0102da8:	8b 15 20 e4 26 f0    	mov    0xf026e420,%edx$/;"	l
f0102dae	obj/kern/kernel.asm	/^f0102dae:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0102db4	obj/kern/kernel.asm	/^f0102db4:	77 20                	ja     f0102dd6 <i386_vm_init+0x16fe>$/;"	l
f0102db6	obj/kern/kernel.asm	/^f0102db6:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102dba	obj/kern/kernel.asm	/^f0102dba:	c7 44 24 08 fc 69 10 	movl   $0xf01069fc,0x8(%esp)$/;"	l
f0102dc1	obj/kern/kernel.asm	/^f0102dc1:	f0 $/;"	l
f0102dc2	obj/kern/kernel.asm	/^f0102dc2:	c7 44 24 04 99 01 00 	movl   $0x199,0x4(%esp)$/;"	l
f0102dc9	obj/kern/kernel.asm	/^f0102dc9:	00 $/;"	l
f0102dca	obj/kern/kernel.asm	/^f0102dca:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102dd1	obj/kern/kernel.asm	/^f0102dd1:	e8 af d2 ff ff       	call   f0100085 <_panic>$/;"	l
f0102dd6	obj/kern/kernel.asm	/^f0102dd6:	8d 94 17 00 00 00 10 	lea    0x10000000(%edi,%edx,1),%edx$/;"	l
f0102ddd	obj/kern/kernel.asm	/^f0102ddd:	39 d0                	cmp    %edx,%eax$/;"	l
f0102ddf	obj/kern/kernel.asm	/^f0102ddf:	74 24                	je     f0102e05 <i386_vm_init+0x172d>$/;"	l
f0102de1	obj/kern/kernel.asm	/^f0102de1:	c7 44 24 0c 74 70 10 	movl   $0xf0107074,0xc(%esp)$/;"	l
f0102de8	obj/kern/kernel.asm	/^f0102de8:	f0 $/;"	l
f0102de9	obj/kern/kernel.asm	/^f0102de9:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102df0	obj/kern/kernel.asm	/^f0102df0:	f0 $/;"	l
f0102df1	obj/kern/kernel.asm	/^f0102df1:	c7 44 24 04 99 01 00 	movl   $0x199,0x4(%esp)$/;"	l
f0102df8	obj/kern/kernel.asm	/^f0102df8:	00 $/;"	l
f0102df9	obj/kern/kernel.asm	/^f0102df9:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102e00	obj/kern/kernel.asm	/^f0102e00:	e8 80 d2 ff ff       	call   f0100085 <_panic>$/;"	l
f0102e05	obj/kern/kernel.asm	/^f0102e05:	81 c7 00 10 00 00    	add    $0x1000,%edi$/;"	l
f0102e0b	obj/kern/kernel.asm	/^f0102e0b:	81 ff 00 f0 01 00    	cmp    $0x1f000,%edi$/;"	l
f0102e11	obj/kern/kernel.asm	/^f0102e11:	75 88                	jne    f0102d9b <i386_vm_init+0x16c3>$/;"	l
f0102e13	obj/kern/kernel.asm	/^f0102e13:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0102e18	obj/kern/kernel.asm	/^f0102e18:	eb 3b                	jmp    f0102e55 <i386_vm_init+0x177d>$/;"	l
f0102e1a	obj/kern/kernel.asm	/^f0102e1a:	8d 97 00 00 00 f0    	lea    -0x10000000(%edi),%edx$/;"	l
f0102e20	obj/kern/kernel.asm	/^f0102e20:	89 f0                	mov    %esi,%eax$/;"	l
f0102e22	obj/kern/kernel.asm	/^f0102e22:	e8 ef e2 ff ff       	call   f0101116 <check_va2pa>$/;"	l
f0102e27	obj/kern/kernel.asm	/^f0102e27:	39 c7                	cmp    %eax,%edi$/;"	l
f0102e29	obj/kern/kernel.asm	/^f0102e29:	74 24                	je     f0102e4f <i386_vm_init+0x1777>$/;"	l
f0102e2b	obj/kern/kernel.asm	/^f0102e2b:	c7 44 24 0c a8 70 10 	movl   $0xf01070a8,0xc(%esp)$/;"	l
f0102e32	obj/kern/kernel.asm	/^f0102e32:	f0 $/;"	l
f0102e33	obj/kern/kernel.asm	/^f0102e33:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102e3a	obj/kern/kernel.asm	/^f0102e3a:	f0 $/;"	l
f0102e3b	obj/kern/kernel.asm	/^f0102e3b:	c7 44 24 04 9d 01 00 	movl   $0x19d,0x4(%esp)$/;"	l
f0102e42	obj/kern/kernel.asm	/^f0102e42:	00 $/;"	l
f0102e43	obj/kern/kernel.asm	/^f0102e43:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102e4a	obj/kern/kernel.asm	/^f0102e4a:	e8 36 d2 ff ff       	call   f0100085 <_panic>$/;"	l
f0102e4f	obj/kern/kernel.asm	/^f0102e4f:	81 c7 00 10 00 00    	add    $0x1000,%edi$/;"	l
f0102e55	obj/kern/kernel.asm	/^f0102e55:	a1 58 48 29 f0       	mov    0xf0294858,%eax$/;"	l
f0102e5a	obj/kern/kernel.asm	/^f0102e5a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102e5d	obj/kern/kernel.asm	/^f0102e5d:	39 c7                	cmp    %eax,%edi$/;"	l
f0102e5f	obj/kern/kernel.asm	/^f0102e5f:	72 b9                	jb     f0102e1a <i386_vm_init+0x1742>$/;"	l
f0102e61	obj/kern/kernel.asm	/^f0102e61:	bf 00 80 bf ef       	mov    $0xefbf8000,%edi$/;"	l
f0102e66	obj/kern/kernel.asm	/^f0102e66:	81 c3 00 80 40 20    	add    $0x20408000,%ebx$/;"	l
f0102e6c	obj/kern/kernel.asm	/^f0102e6c:	89 fa                	mov    %edi,%edx$/;"	l
f0102e6e	obj/kern/kernel.asm	/^f0102e6e:	89 f0                	mov    %esi,%eax$/;"	l
f0102e70	obj/kern/kernel.asm	/^f0102e70:	e8 a1 e2 ff ff       	call   f0101116 <check_va2pa>$/;"	l
f0102e75	obj/kern/kernel.asm	/^f0102e75:	8d 14 3b             	lea    (%ebx,%edi,1),%edx$/;"	l
f0102e78	obj/kern/kernel.asm	/^f0102e78:	39 d0                	cmp    %edx,%eax$/;"	l
f0102e7a	obj/kern/kernel.asm	/^f0102e7a:	74 24                	je     f0102ea0 <i386_vm_init+0x17c8>$/;"	l
f0102e7c	obj/kern/kernel.asm	/^f0102e7c:	c7 44 24 0c d0 70 10 	movl   $0xf01070d0,0xc(%esp)$/;"	l
f0102e83	obj/kern/kernel.asm	/^f0102e83:	f0 $/;"	l
f0102e84	obj/kern/kernel.asm	/^f0102e84:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102e8b	obj/kern/kernel.asm	/^f0102e8b:	f0 $/;"	l
f0102e8c	obj/kern/kernel.asm	/^f0102e8c:	c7 44 24 04 a1 01 00 	movl   $0x1a1,0x4(%esp)$/;"	l
f0102e93	obj/kern/kernel.asm	/^f0102e93:	00 $/;"	l
f0102e94	obj/kern/kernel.asm	/^f0102e94:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102e9b	obj/kern/kernel.asm	/^f0102e9b:	e8 e5 d1 ff ff       	call   f0100085 <_panic>$/;"	l
f0102ea0	obj/kern/kernel.asm	/^f0102ea0:	81 c7 00 10 00 00    	add    $0x1000,%edi$/;"	l
f0102ea6	obj/kern/kernel.asm	/^f0102ea6:	81 ff 00 00 c0 ef    	cmp    $0xefc00000,%edi$/;"	l
f0102eac	obj/kern/kernel.asm	/^f0102eac:	75 be                	jne    f0102e6c <i386_vm_init+0x1794>$/;"	l
f0102eae	obj/kern/kernel.asm	/^f0102eae:	ba 00 00 80 ef       	mov    $0xef800000,%edx$/;"	l
f0102eb3	obj/kern/kernel.asm	/^f0102eb3:	89 f0                	mov    %esi,%eax$/;"	l
f0102eb5	obj/kern/kernel.asm	/^f0102eb5:	e8 5c e2 ff ff       	call   f0101116 <check_va2pa>$/;"	l
f0102eba	obj/kern/kernel.asm	/^f0102eba:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102ebf	obj/kern/kernel.asm	/^f0102ebf:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102ec2	obj/kern/kernel.asm	/^f0102ec2:	74 24                	je     f0102ee8 <i386_vm_init+0x1810>$/;"	l
f0102ec4	obj/kern/kernel.asm	/^f0102ec4:	c7 44 24 0c 18 71 10 	movl   $0xf0107118,0xc(%esp)$/;"	l
f0102ecb	obj/kern/kernel.asm	/^f0102ecb:	f0 $/;"	l
f0102ecc	obj/kern/kernel.asm	/^f0102ecc:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102ed3	obj/kern/kernel.asm	/^f0102ed3:	f0 $/;"	l
f0102ed4	obj/kern/kernel.asm	/^f0102ed4:	c7 44 24 04 a2 01 00 	movl   $0x1a2,0x4(%esp)$/;"	l
f0102edb	obj/kern/kernel.asm	/^f0102edb:	00 $/;"	l
f0102edc	obj/kern/kernel.asm	/^f0102edc:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102ee3	obj/kern/kernel.asm	/^f0102ee3:	e8 9d d1 ff ff       	call   f0100085 <_panic>$/;"	l
f0102ee8	obj/kern/kernel.asm	/^f0102ee8:	8d 82 45 fc ff ff    	lea    -0x3bb(%edx),%eax$/;"	l
f0102eee	obj/kern/kernel.asm	/^f0102eee:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0102ef1	obj/kern/kernel.asm	/^f0102ef1:	77 2e                	ja     f0102f21 <i386_vm_init+0x1849>$/;"	l
f0102ef3	obj/kern/kernel.asm	/^f0102ef3:	83 3c 96 00          	cmpl   $0x0,(%esi,%edx,4)$/;"	l
f0102ef7	obj/kern/kernel.asm	/^f0102ef7:	0f 85 80 00 00 00    	jne    f0102f7d <i386_vm_init+0x18a5>$/;"	l
f0102efd	obj/kern/kernel.asm	/^f0102efd:	c7 44 24 0c 8d 73 10 	movl   $0xf010738d,0xc(%esp)$/;"	l
f0102f04	obj/kern/kernel.asm	/^f0102f04:	f0 $/;"	l
f0102f05	obj/kern/kernel.asm	/^f0102f05:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102f0c	obj/kern/kernel.asm	/^f0102f0c:	f0 $/;"	l
f0102f0d	obj/kern/kernel.asm	/^f0102f0d:	c7 44 24 04 ae 01 00 	movl   $0x1ae,0x4(%esp)$/;"	l
f0102f14	obj/kern/kernel.asm	/^f0102f14:	00 $/;"	l
f0102f15	obj/kern/kernel.asm	/^f0102f15:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102f1c	obj/kern/kernel.asm	/^f0102f1c:	e8 64 d1 ff ff       	call   f0100085 <_panic>$/;"	l
f0102f21	obj/kern/kernel.asm	/^f0102f21:	81 fa bf 03 00 00    	cmp    $0x3bf,%edx$/;"	l
f0102f27	obj/kern/kernel.asm	/^f0102f27:	76 2a                	jbe    f0102f53 <i386_vm_init+0x187b>$/;"	l
f0102f29	obj/kern/kernel.asm	/^f0102f29:	83 3c 96 00          	cmpl   $0x0,(%esi,%edx,4)$/;"	l
f0102f2d	obj/kern/kernel.asm	/^f0102f2d:	75 4e                	jne    f0102f7d <i386_vm_init+0x18a5>$/;"	l
f0102f2f	obj/kern/kernel.asm	/^f0102f2f:	c7 44 24 0c 8d 73 10 	movl   $0xf010738d,0xc(%esp)$/;"	l
f0102f36	obj/kern/kernel.asm	/^f0102f36:	f0 $/;"	l
f0102f37	obj/kern/kernel.asm	/^f0102f37:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102f3e	obj/kern/kernel.asm	/^f0102f3e:	f0 $/;"	l
f0102f3f	obj/kern/kernel.asm	/^f0102f3f:	c7 44 24 04 b2 01 00 	movl   $0x1b2,0x4(%esp)$/;"	l
f0102f46	obj/kern/kernel.asm	/^f0102f46:	00 $/;"	l
f0102f47	obj/kern/kernel.asm	/^f0102f47:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102f4e	obj/kern/kernel.asm	/^f0102f4e:	e8 32 d1 ff ff       	call   f0100085 <_panic>$/;"	l
f0102f53	obj/kern/kernel.asm	/^f0102f53:	83 3c 96 00          	cmpl   $0x0,(%esi,%edx,4)$/;"	l
f0102f57	obj/kern/kernel.asm	/^f0102f57:	74 24                	je     f0102f7d <i386_vm_init+0x18a5>$/;"	l
f0102f59	obj/kern/kernel.asm	/^f0102f59:	c7 44 24 0c 96 73 10 	movl   $0xf0107396,0xc(%esp)$/;"	l
f0102f60	obj/kern/kernel.asm	/^f0102f60:	f0 $/;"	l
f0102f61	obj/kern/kernel.asm	/^f0102f61:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68:	f0 $/;"	l
f0102f69	obj/kern/kernel.asm	/^f0102f69:	c7 44 24 04 b4 01 00 	movl   $0x1b4,0x4(%esp)$/;"	l
f0102f70	obj/kern/kernel.asm	/^f0102f70:	00 $/;"	l
f0102f71	obj/kern/kernel.asm	/^f0102f71:	c7 04 24 45 71 10 f0 	movl   $0xf0107145,(%esp)$/;"	l
f0102f78	obj/kern/kernel.asm	/^f0102f78:	e8 08 d1 ff ff       	call   f0100085 <_panic>$/;"	l
f0102f7d	obj/kern/kernel.asm	/^f0102f7d:	83 c2 01             	add    $0x1,%edx$/;"	l
f0102f80	obj/kern/kernel.asm	/^f0102f80:	81 fa 00 04 00 00    	cmp    $0x400,%edx$/;"	l
f0102f86	obj/kern/kernel.asm	/^f0102f86:	0f 85 5c ff ff ff    	jne    f0102ee8 <i386_vm_init+0x1810>$/;"	l
f0102f8c	obj/kern/kernel.asm	/^f0102f8c:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0102f8f	obj/kern/kernel.asm	/^f0102f8f:	8b 82 00 0f 00 00    	mov    0xf00(%edx),%eax$/;"	l
f0102f95	obj/kern/kernel.asm	/^f0102f95:	89 02                	mov    %eax,(%edx)$/;"	l
f0102f97	obj/kern/kernel.asm	/^f0102f97:	a1 5c 48 29 f0       	mov    0xf029485c,%eax$/;"	l
f0102f9c	obj/kern/kernel.asm	/^f0102f9c:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102f9f	obj/kern/kernel.asm	/^f0102f9f:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0102fa2	obj/kern/kernel.asm	/^f0102fa2:	0d 2f 00 05 80       	or     $0x8005002f,%eax$/;"	l
f0102fa7	obj/kern/kernel.asm	/^f0102fa7:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0102faa	obj/kern/kernel.asm	/^f0102faa:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0102fad	obj/kern/kernel.asm	/^f0102fad:	0f 01 15 50 e3 11 f0 	lgdtl  0xf011e350$/;"	l
f0102fb4	obj/kern/kernel.asm	/^f0102fb4:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0102fb9	obj/kern/kernel.asm	/^f0102fb9:	8e e8                	mov    %eax,%gs$/;"	l
f0102fbb	obj/kern/kernel.asm	/^f0102fbb:	8e e0                	mov    %eax,%fs$/;"	l
f0102fbd	obj/kern/kernel.asm	/^f0102fbd:	b0 10                	mov    $0x10,%al$/;"	l
f0102fbf	obj/kern/kernel.asm	/^f0102fbf:	8e c0                	mov    %eax,%es$/;"	l
f0102fc1	obj/kern/kernel.asm	/^f0102fc1:	8e d8                	mov    %eax,%ds$/;"	l
f0102fc3	obj/kern/kernel.asm	/^f0102fc3:	8e d0                	mov    %eax,%ss$/;"	l
f0102fc5	obj/kern/kernel.asm	/^f0102fc5:	ea cc 2f 10 f0 08 00 	ljmp   $0x8,$0xf0102fcc$/;"	l
f0102fcc	obj/kern/kernel.asm	/^f0102fcc:	b0 00                	mov    $0x0,%al$/;"	l
f0102fce	obj/kern/kernel.asm	/^f0102fce:	0f 00 d0             	lldt   %ax$/;"	l
f0102fd1	obj/kern/kernel.asm	/^f0102fd1:	c7 02 00 00 00 00    	movl   $0x0,(%edx)$/;"	l
f0102fd7	obj/kern/kernel.asm	/^f0102fd7:	a1 5c 48 29 f0       	mov    0xf029485c,%eax$/;"	l
f0102fdc	obj/kern/kernel.asm	/^f0102fdc:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0102fdf	obj/kern/kernel.asm	/^f0102fdf:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0102fe2	obj/kern/kernel.asm	/^f0102fe2:	5b                   	pop    %ebx$/;"	l
f0102fe3	obj/kern/kernel.asm	/^f0102fe3:	5e                   	pop    %esi$/;"	l
f0102fe4	obj/kern/kernel.asm	/^f0102fe4:	5f                   	pop    %edi$/;"	l
f0102fe5	obj/kern/kernel.asm	/^f0102fe5:	5d                   	pop    %ebp$/;"	l
f0102fe6	obj/kern/kernel.asm	/^f0102fe6:	c3                   	ret    $/;"	l
f0102ff0	obj/kern/kernel.asm	/^f0102ff0 <envid2env>:$/;"	l
f0102ff0	obj/kern/kernel.asm	/^f0102ff0:	55                   	push   %ebp$/;"	l
f0102ff1	obj/kern/kernel.asm	/^f0102ff1:	89 e5                	mov    %esp,%ebp$/;"	l
f0102ff3	obj/kern/kernel.asm	/^f0102ff3:	53                   	push   %ebx$/;"	l
f0102ff4	obj/kern/kernel.asm	/^f0102ff4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102ff7	obj/kern/kernel.asm	/^f0102ff7:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0102ffa	obj/kern/kernel.asm	/^f0102ffa:	85 c0                	test   %eax,%eax$/;"	l
f0102ffc	obj/kern/kernel.asm	/^f0102ffc:	75 0e                	jne    f010300c <envid2env+0x1c>$/;"	l
f0102ffe	obj/kern/kernel.asm	/^f0102ffe:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0103003	obj/kern/kernel.asm	/^f0103003:	89 01                	mov    %eax,(%ecx)$/;"	l
f0103005	obj/kern/kernel.asm	/^f0103005:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010300a	obj/kern/kernel.asm	/^f010300a:	eb 54                	jmp    f0103060 <envid2env+0x70>$/;"	l
f010300c	obj/kern/kernel.asm	/^f010300c:	89 c2                	mov    %eax,%edx$/;"	l
f010300e	obj/kern/kernel.asm	/^f010300e:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0103014	obj/kern/kernel.asm	/^f0103014:	6b d2 7c             	imul   $0x7c,%edx,%edx$/;"	l
f0103017	obj/kern/kernel.asm	/^f0103017:	03 15 20 e4 26 f0    	add    0xf026e420,%edx$/;"	l
f010301d	obj/kern/kernel.asm	/^f010301d:	83 7a 54 00          	cmpl   $0x0,0x54(%edx)$/;"	l
f0103021	obj/kern/kernel.asm	/^f0103021:	74 05                	je     f0103028 <envid2env+0x38>$/;"	l
f0103023	obj/kern/kernel.asm	/^f0103023:	39 42 4c             	cmp    %eax,0x4c(%edx)$/;"	l
f0103026	obj/kern/kernel.asm	/^f0103026:	74 0d                	je     f0103035 <envid2env+0x45>$/;"	l
f0103028	obj/kern/kernel.asm	/^f0103028:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f010302e	obj/kern/kernel.asm	/^f010302e:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103033	obj/kern/kernel.asm	/^f0103033:	eb 2b                	jmp    f0103060 <envid2env+0x70>$/;"	l
f0103035	obj/kern/kernel.asm	/^f0103035:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0103039	obj/kern/kernel.asm	/^f0103039:	74 1e                	je     f0103059 <envid2env+0x69>$/;"	l
f010303b	obj/kern/kernel.asm	/^f010303b:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0103040	obj/kern/kernel.asm	/^f0103040:	39 c2                	cmp    %eax,%edx$/;"	l
f0103042	obj/kern/kernel.asm	/^f0103042:	74 15                	je     f0103059 <envid2env+0x69>$/;"	l
f0103044	obj/kern/kernel.asm	/^f0103044:	8b 5a 50             	mov    0x50(%edx),%ebx$/;"	l
f0103047	obj/kern/kernel.asm	/^f0103047:	3b 58 4c             	cmp    0x4c(%eax),%ebx$/;"	l
f010304a	obj/kern/kernel.asm	/^f010304a:	74 0d                	je     f0103059 <envid2env+0x69>$/;"	l
f010304c	obj/kern/kernel.asm	/^f010304c:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0103052	obj/kern/kernel.asm	/^f0103052:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103057	obj/kern/kernel.asm	/^f0103057:	eb 07                	jmp    f0103060 <envid2env+0x70>$/;"	l
f0103059	obj/kern/kernel.asm	/^f0103059:	89 11                	mov    %edx,(%ecx)$/;"	l
f010305b	obj/kern/kernel.asm	/^f010305b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103060	obj/kern/kernel.asm	/^f0103060:	5b                   	pop    %ebx$/;"	l
f0103061	obj/kern/kernel.asm	/^f0103061:	5d                   	pop    %ebp$/;"	l
f0103062	obj/kern/kernel.asm	/^f0103062:	c3                   	ret    $/;"	l
f0103063	obj/kern/kernel.asm	/^f0103063 <env_pop_tf>:$/;"	l
f0103063	obj/kern/kernel.asm	/^f0103063:	55                   	push   %ebp$/;"	l
f0103064	obj/kern/kernel.asm	/^f0103064:	89 e5                	mov    %esp,%ebp$/;"	l
f0103066	obj/kern/kernel.asm	/^f0103066:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103069	obj/kern/kernel.asm	/^f0103069:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f010306c	obj/kern/kernel.asm	/^f010306c:	61                   	popa   $/;"	l
f010306d	obj/kern/kernel.asm	/^f010306d:	07                   	pop    %es$/;"	l
f010306e	obj/kern/kernel.asm	/^f010306e:	1f                   	pop    %ds$/;"	l
f010306f	obj/kern/kernel.asm	/^f010306f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0103072	obj/kern/kernel.asm	/^f0103072:	cf                   	iret   $/;"	l
f0103073	obj/kern/kernel.asm	/^f0103073:	c7 44 24 08 a4 73 10 	movl   $0xf01073a4,0x8(%esp)$/;"	l
f010307a	obj/kern/kernel.asm	/^f010307a:	f0 $/;"	l
f010307b	obj/kern/kernel.asm	/^f010307b:	c7 44 24 04 03 02 00 	movl   $0x203,0x4(%esp)$/;"	l
f0103082	obj/kern/kernel.asm	/^f0103082:	00 $/;"	l
f0103083	obj/kern/kernel.asm	/^f0103083:	c7 04 24 b0 73 10 f0 	movl   $0xf01073b0,(%esp)$/;"	l
f010308a	obj/kern/kernel.asm	/^f010308a:	e8 f6 cf ff ff       	call   f0100085 <_panic>$/;"	l
f010308f	obj/kern/kernel.asm	/^f010308f <env_run>:$/;"	l
f010308f	obj/kern/kernel.asm	/^f010308f:	55                   	push   %ebp$/;"	l
f0103090	obj/kern/kernel.asm	/^f0103090:	89 e5                	mov    %esp,%ebp$/;"	l
f0103092	obj/kern/kernel.asm	/^f0103092:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103095	obj/kern/kernel.asm	/^f0103095:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103098	obj/kern/kernel.asm	/^f0103098:	39 05 24 e4 26 f0    	cmp    %eax,0xf026e424$/;"	l
f010309e	obj/kern/kernel.asm	/^f010309e:	74 14                	je     f01030b4 <env_run+0x25>$/;"	l
f01030a0	obj/kern/kernel.asm	/^f01030a0:	a3 24 e4 26 f0       	mov    %eax,0xf026e424$/;"	l
f01030a5	obj/kern/kernel.asm	/^f01030a5:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f01030a9	obj/kern/kernel.asm	/^f01030a9:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f01030ae	obj/kern/kernel.asm	/^f01030ae:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01030b1	obj/kern/kernel.asm	/^f01030b1:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01030b4	obj/kern/kernel.asm	/^f01030b4:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f01030b9	obj/kern/kernel.asm	/^f01030b9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01030bc	obj/kern/kernel.asm	/^f01030bc:	e8 a2 ff ff ff       	call   f0103063 <env_pop_tf>$/;"	l
f01030c1	obj/kern/kernel.asm	/^f01030c1 <env_init>:$/;"	l
f01030c1	obj/kern/kernel.asm	/^f01030c1:	55                   	push   %ebp$/;"	l
f01030c2	obj/kern/kernel.asm	/^f01030c2:	89 e5                	mov    %esp,%ebp$/;"	l
f01030c4	obj/kern/kernel.asm	/^f01030c4:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01030c7	obj/kern/kernel.asm	/^f01030c7:	c7 04 24 bb 73 10 f0 	movl   $0xf01073bb,(%esp)$/;"	l
f01030ce	obj/kern/kernel.asm	/^f01030ce:	e8 f8 08 00 00       	call   f01039cb <cprintf>$/;"	l
f01030d3	obj/kern/kernel.asm	/^f01030d3:	b8 84 ef 01 00       	mov    $0x1ef84,%eax$/;"	l
f01030d8	obj/kern/kernel.asm	/^f01030d8:	8b 15 20 e4 26 f0    	mov    0xf026e420,%edx$/;"	l
f01030de	obj/kern/kernel.asm	/^f01030de:	c7 44 02 4c 00 00 00 	movl   $0x0,0x4c(%edx,%eax,1)$/;"	l
f01030e5	obj/kern/kernel.asm	/^f01030e5:	00 $/;"	l
f01030e6	obj/kern/kernel.asm	/^f01030e6:	8b 15 28 e4 26 f0    	mov    0xf026e428,%edx$/;"	l
f01030ec	obj/kern/kernel.asm	/^f01030ec:	8b 0d 20 e4 26 f0    	mov    0xf026e420,%ecx$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	89 54 01 44          	mov    %edx,0x44(%ecx,%eax,1)$/;"	l
f01030f6	obj/kern/kernel.asm	/^f01030f6:	85 d2                	test   %edx,%edx$/;"	l
f01030f8	obj/kern/kernel.asm	/^f01030f8:	74 14                	je     f010310e <env_init+0x4d>$/;"	l
f01030fa	obj/kern/kernel.asm	/^f01030fa:	89 c1                	mov    %eax,%ecx$/;"	l
f01030fc	obj/kern/kernel.asm	/^f01030fc:	03 0d 20 e4 26 f0    	add    0xf026e420,%ecx$/;"	l
f0103102	obj/kern/kernel.asm	/^f0103102:	83 c1 44             	add    $0x44,%ecx$/;"	l
f0103105	obj/kern/kernel.asm	/^f0103105:	8b 15 28 e4 26 f0    	mov    0xf026e428,%edx$/;"	l
f010310b	obj/kern/kernel.asm	/^f010310b:	89 4a 48             	mov    %ecx,0x48(%edx)$/;"	l
f010310e	obj/kern/kernel.asm	/^f010310e:	89 c2                	mov    %eax,%edx$/;"	l
f0103110	obj/kern/kernel.asm	/^f0103110:	03 15 20 e4 26 f0    	add    0xf026e420,%edx$/;"	l
f0103116	obj/kern/kernel.asm	/^f0103116:	89 15 28 e4 26 f0    	mov    %edx,0xf026e428$/;"	l
f010311c	obj/kern/kernel.asm	/^f010311c:	c7 42 48 28 e4 26 f0 	movl   $0xf026e428,0x48(%edx)$/;"	l
f0103123	obj/kern/kernel.asm	/^f0103123:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
f0103126	obj/kern/kernel.asm	/^f0103126:	83 f8 84             	cmp    $0xffffff84,%eax$/;"	l
f0103129	obj/kern/kernel.asm	/^f0103129:	75 ad                	jne    f01030d8 <env_init+0x17>$/;"	l
f010312b	obj/kern/kernel.asm	/^f010312b:	c9                   	leave  $/;"	l
f010312c	obj/kern/kernel.asm	/^f010312c:	c3                   	ret    $/;"	l
f010312d	obj/kern/kernel.asm	/^f010312d <env_free>:$/;"	l
f010312d	obj/kern/kernel.asm	/^f010312d:	55                   	push   %ebp$/;"	l
f010312e	obj/kern/kernel.asm	/^f010312e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103130	obj/kern/kernel.asm	/^f0103130:	57                   	push   %edi$/;"	l
f0103131	obj/kern/kernel.asm	/^f0103131:	56                   	push   %esi$/;"	l
f0103132	obj/kern/kernel.asm	/^f0103132:	53                   	push   %ebx$/;"	l
f0103133	obj/kern/kernel.asm	/^f0103133:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103136	obj/kern/kernel.asm	/^f0103136:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103139	obj/kern/kernel.asm	/^f0103139:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103140	obj/kern/kernel.asm	/^f0103140:	3b 3d 24 e4 26 f0    	cmp    0xf026e424,%edi$/;"	l
f0103146	obj/kern/kernel.asm	/^f0103146:	75 08                	jne    f0103150 <env_free+0x23>$/;"	l
f0103148	obj/kern/kernel.asm	/^f0103148:	a1 5c 48 29 f0       	mov    0xf029485c,%eax$/;"	l
f010314d	obj/kern/kernel.asm	/^f010314d:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103153	obj/kern/kernel.asm	/^f0103153:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103156	obj/kern/kernel.asm	/^f0103156:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103159	obj/kern/kernel.asm	/^f0103159:	8b 47 5c             	mov    0x5c(%edi),%eax$/;"	l
f010315c	obj/kern/kernel.asm	/^f010315c:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010315f	obj/kern/kernel.asm	/^f010315f:	8b 34 10             	mov    (%eax,%edx,1),%esi$/;"	l
f0103162	obj/kern/kernel.asm	/^f0103162:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103168	obj/kern/kernel.asm	/^f0103168:	0f 84 bb 00 00 00    	je     f0103229 <env_free+0xfc>$/;"	l
f010316e	obj/kern/kernel.asm	/^f010316e:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103174	obj/kern/kernel.asm	/^f0103174:	89 f0                	mov    %esi,%eax$/;"	l
f0103176	obj/kern/kernel.asm	/^f0103176:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103179	obj/kern/kernel.asm	/^f0103179:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010317c	obj/kern/kernel.asm	/^f010317c:	3b 05 58 48 29 f0    	cmp    0xf0294858,%eax$/;"	l
f0103182	obj/kern/kernel.asm	/^f0103182:	72 20                	jb     f01031a4 <env_free+0x77>$/;"	l
f0103184	obj/kern/kernel.asm	/^f0103184:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103188	obj/kern/kernel.asm	/^f0103188:	c7 44 24 08 a0 6b 10 	movl   $0xf0106ba0,0x8(%esp)$/;"	l
f010318f	obj/kern/kernel.asm	/^f010318f:	f0 $/;"	l
f0103190	obj/kern/kernel.asm	/^f0103190:	c7 44 24 04 c6 01 00 	movl   $0x1c6,0x4(%esp)$/;"	l
f0103197	obj/kern/kernel.asm	/^f0103197:	00 $/;"	l
f0103198	obj/kern/kernel.asm	/^f0103198:	c7 04 24 b0 73 10 f0 	movl   $0xf01073b0,(%esp)$/;"	l
f010319f	obj/kern/kernel.asm	/^f010319f:	e8 e1 ce ff ff       	call   f0100085 <_panic>$/;"	l
f01031a4	obj/kern/kernel.asm	/^f01031a4:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01031a7	obj/kern/kernel.asm	/^f01031a7:	c1 e2 16             	shl    $0x16,%edx$/;"	l
f01031aa	obj/kern/kernel.asm	/^f01031aa:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01031ad	obj/kern/kernel.asm	/^f01031ad:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01031b2	obj/kern/kernel.asm	/^f01031b2:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f01031b9	obj/kern/kernel.asm	/^f01031b9:	01 $/;"	l
f01031ba	obj/kern/kernel.asm	/^f01031ba:	74 17                	je     f01031d3 <env_free+0xa6>$/;"	l
f01031bc	obj/kern/kernel.asm	/^f01031bc:	89 d8                	mov    %ebx,%eax$/;"	l
f01031be	obj/kern/kernel.asm	/^f01031be:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01031c1	obj/kern/kernel.asm	/^f01031c1:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f01031c4	obj/kern/kernel.asm	/^f01031c4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01031c8	obj/kern/kernel.asm	/^f01031c8:	8b 47 5c             	mov    0x5c(%edi),%eax$/;"	l
f01031cb	obj/kern/kernel.asm	/^f01031cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01031ce	obj/kern/kernel.asm	/^f01031ce:	e8 ec e2 ff ff       	call   f01014bf <page_remove>$/;"	l
f01031d3	obj/kern/kernel.asm	/^f01031d3:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01031d6	obj/kern/kernel.asm	/^f01031d6:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f01031dc	obj/kern/kernel.asm	/^f01031dc:	75 d4                	jne    f01031b2 <env_free+0x85>$/;"	l
f01031de	obj/kern/kernel.asm	/^f01031de:	8b 47 5c             	mov    0x5c(%edi),%eax$/;"	l
f01031e1	obj/kern/kernel.asm	/^f01031e1:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01031e4	obj/kern/kernel.asm	/^f01031e4:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f01031eb	obj/kern/kernel.asm	/^f01031eb:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01031ee	obj/kern/kernel.asm	/^f01031ee:	3b 05 58 48 29 f0    	cmp    0xf0294858,%eax$/;"	l
f01031f4	obj/kern/kernel.asm	/^f01031f4:	72 1c                	jb     f0103212 <env_free+0xe5>$/;"	l
f01031f6	obj/kern/kernel.asm	/^f01031f6:	c7 44 24 08 50 6a 10 	movl   $0xf0106a50,0x8(%esp)$/;"	l
f01031fd	obj/kern/kernel.asm	/^f01031fd:	f0 $/;"	l
f01031fe	obj/kern/kernel.asm	/^f01031fe:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
f0103205	obj/kern/kernel.asm	/^f0103205:	00 $/;"	l
f0103206	obj/kern/kernel.asm	/^f0103206:	c7 04 24 da 66 10 f0 	movl   $0xf01066da,(%esp)$/;"	l
f010320d	obj/kern/kernel.asm	/^f010320d:	e8 73 ce ff ff       	call   f0100085 <_panic>$/;"	l
f0103212	obj/kern/kernel.asm	/^f0103212:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103215	obj/kern/kernel.asm	/^f0103215:	8d 04 52             	lea    (%edx,%edx,2),%eax$/;"	l
f0103218	obj/kern/kernel.asm	/^f0103218:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010321b	obj/kern/kernel.asm	/^f010321b:	03 05 64 48 29 f0    	add    0xf0294864,%eax$/;"	l
f0103221	obj/kern/kernel.asm	/^f0103221:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103224	obj/kern/kernel.asm	/^f0103224:	e8 d6 dc ff ff       	call   f0100eff <page_decref>$/;"	l
f0103229	obj/kern/kernel.asm	/^f0103229:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f010322d	obj/kern/kernel.asm	/^f010322d:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0103234	obj/kern/kernel.asm	/^f0103234:	0f 85 16 ff ff ff    	jne    f0103150 <env_free+0x23>$/;"	l
f010323a	obj/kern/kernel.asm	/^f010323a:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f010323d	obj/kern/kernel.asm	/^f010323d:	c7 47 5c 00 00 00 00 	movl   $0x0,0x5c(%edi)$/;"	l
f0103244	obj/kern/kernel.asm	/^f0103244:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f010324b	obj/kern/kernel.asm	/^f010324b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	3b 05 58 48 29 f0    	cmp    0xf0294858,%eax$/;"	l
f0103254	obj/kern/kernel.asm	/^f0103254:	72 1c                	jb     f0103272 <env_free+0x145>$/;"	l
f0103256	obj/kern/kernel.asm	/^f0103256:	c7 44 24 08 50 6a 10 	movl   $0xf0106a50,0x8(%esp)$/;"	l
f010325d	obj/kern/kernel.asm	/^f010325d:	f0 $/;"	l
f010325e	obj/kern/kernel.asm	/^f010325e:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
f0103265	obj/kern/kernel.asm	/^f0103265:	00 $/;"	l
f0103266	obj/kern/kernel.asm	/^f0103266:	c7 04 24 da 66 10 f0 	movl   $0xf01066da,(%esp)$/;"	l
f010326d	obj/kern/kernel.asm	/^f010326d:	e8 13 ce ff ff       	call   f0100085 <_panic>$/;"	l
f0103272	obj/kern/kernel.asm	/^f0103272:	6b c0 0c             	imul   $0xc,%eax,%eax$/;"	l
f0103275	obj/kern/kernel.asm	/^f0103275:	03 05 64 48 29 f0    	add    0xf0294864,%eax$/;"	l
f010327b	obj/kern/kernel.asm	/^f010327b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010327e	obj/kern/kernel.asm	/^f010327e:	e8 7c dc ff ff       	call   f0100eff <page_decref>$/;"	l
f0103283	obj/kern/kernel.asm	/^f0103283:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f010328a	obj/kern/kernel.asm	/^f010328a:	a1 28 e4 26 f0       	mov    0xf026e428,%eax$/;"	l
f010328f	obj/kern/kernel.asm	/^f010328f:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0103292	obj/kern/kernel.asm	/^f0103292:	85 c0                	test   %eax,%eax$/;"	l
f0103294	obj/kern/kernel.asm	/^f0103294:	74 0b                	je     f01032a1 <env_free+0x174>$/;"	l
f0103296	obj/kern/kernel.asm	/^f0103296:	8d 57 44             	lea    0x44(%edi),%edx$/;"	l
f0103299	obj/kern/kernel.asm	/^f0103299:	a1 28 e4 26 f0       	mov    0xf026e428,%eax$/;"	l
f010329e	obj/kern/kernel.asm	/^f010329e:	89 50 48             	mov    %edx,0x48(%eax)$/;"	l
f01032a1	obj/kern/kernel.asm	/^f01032a1:	89 3d 28 e4 26 f0    	mov    %edi,0xf026e428$/;"	l
f01032a7	obj/kern/kernel.asm	/^f01032a7:	c7 47 48 28 e4 26 f0 	movl   $0xf026e428,0x48(%edi)$/;"	l
f01032ae	obj/kern/kernel.asm	/^f01032ae:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01032b1	obj/kern/kernel.asm	/^f01032b1:	5b                   	pop    %ebx$/;"	l
f01032b2	obj/kern/kernel.asm	/^f01032b2:	5e                   	pop    %esi$/;"	l
f01032b3	obj/kern/kernel.asm	/^f01032b3:	5f                   	pop    %edi$/;"	l
f01032b4	obj/kern/kernel.asm	/^f01032b4:	5d                   	pop    %ebp$/;"	l
f01032b5	obj/kern/kernel.asm	/^f01032b5:	c3                   	ret    $/;"	l
f01032b6	obj/kern/kernel.asm	/^f01032b6 <env_destroy>:$/;"	l
f01032b6	obj/kern/kernel.asm	/^f01032b6:	55                   	push   %ebp$/;"	l
f01032b7	obj/kern/kernel.asm	/^f01032b7:	89 e5                	mov    %esp,%ebp$/;"	l
f01032b9	obj/kern/kernel.asm	/^f01032b9:	53                   	push   %ebx$/;"	l
f01032ba	obj/kern/kernel.asm	/^f01032ba:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01032bd	obj/kern/kernel.asm	/^f01032bd:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01032c0	obj/kern/kernel.asm	/^f01032c0:	c7 04 24 ca 73 10 f0 	movl   $0xf01073ca,(%esp)$/;"	l
f01032c7	obj/kern/kernel.asm	/^f01032c7:	e8 ff 06 00 00       	call   f01039cb <cprintf>$/;"	l
f01032cc	obj/kern/kernel.asm	/^f01032cc:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01032cf	obj/kern/kernel.asm	/^f01032cf:	e8 59 fe ff ff       	call   f010312d <env_free>$/;"	l
f01032d4	obj/kern/kernel.asm	/^f01032d4:	39 1d 24 e4 26 f0    	cmp    %ebx,0xf026e424$/;"	l
f01032da	obj/kern/kernel.asm	/^f01032da:	75 0f                	jne    f01032eb <env_destroy+0x35>$/;"	l
f01032dc	obj/kern/kernel.asm	/^f01032dc:	c7 05 24 e4 26 f0 00 	movl   $0x0,0xf026e424$/;"	l
f01032e3	obj/kern/kernel.asm	/^f01032e3:	00 00 00 $/;"	l
f01032e6	obj/kern/kernel.asm	/^f01032e6:	e8 b9 0d 00 00       	call   f01040a4 <sched_yield>$/;"	l
f01032eb	obj/kern/kernel.asm	/^f01032eb:	83 c4 14             	add    $0x14,%esp$/;"	l
f01032ee	obj/kern/kernel.asm	/^f01032ee:	5b                   	pop    %ebx$/;"	l
f01032ef	obj/kern/kernel.asm	/^f01032ef:	5d                   	pop    %ebp$/;"	l
f01032f0	obj/kern/kernel.asm	/^f01032f0:	c3                   	ret    $/;"	l
f01032f1	obj/kern/kernel.asm	/^f01032f1 <segment_alloc>:$/;"	l
f01032f1	obj/kern/kernel.asm	/^f01032f1:	55                   	push   %ebp$/;"	l
f01032f2	obj/kern/kernel.asm	/^f01032f2:	89 e5                	mov    %esp,%ebp$/;"	l
f01032f4	obj/kern/kernel.asm	/^f01032f4:	57                   	push   %edi$/;"	l
f01032f5	obj/kern/kernel.asm	/^f01032f5:	56                   	push   %esi$/;"	l
f01032f6	obj/kern/kernel.asm	/^f01032f6:	53                   	push   %ebx$/;"	l
f01032f7	obj/kern/kernel.asm	/^f01032f7:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01032fa	obj/kern/kernel.asm	/^f01032fa:	89 c7                	mov    %eax,%edi$/;"	l
f01032fc	obj/kern/kernel.asm	/^f01032fc:	89 d3                	mov    %edx,%ebx$/;"	l
f01032fe	obj/kern/kernel.asm	/^f01032fe:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103304	obj/kern/kernel.asm	/^f0103304:	8d 84 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%eax$/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0103310	obj/kern/kernel.asm	/^f0103310:	29 d8                	sub    %ebx,%eax$/;"	l
f0103312	obj/kern/kernel.asm	/^f0103312:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103315	obj/kern/kernel.asm	/^f0103315:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103318	obj/kern/kernel.asm	/^f0103318:	85 c0                	test   %eax,%eax$/;"	l
f010331a	obj/kern/kernel.asm	/^f010331a:	74 5f                	je     f010337b <segment_alloc+0x8a>$/;"	l
f010331c	obj/kern/kernel.asm	/^f010331c:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0103321	obj/kern/kernel.asm	/^f0103321:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0103324	obj/kern/kernel.asm	/^f0103324:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103327	obj/kern/kernel.asm	/^f0103327:	e8 63 de ff ff       	call   f010118f <page_alloc>$/;"	l
f010332c	obj/kern/kernel.asm	/^f010332c:	c7 44 24 0c 07 00 00 	movl   $0x7,0xc(%esp)$/;"	l
f0103333	obj/kern/kernel.asm	/^f0103333:	00 $/;"	l
f0103334	obj/kern/kernel.asm	/^f0103334:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103338	obj/kern/kernel.asm	/^f0103338:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010333b	obj/kern/kernel.asm	/^f010333b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010333f	obj/kern/kernel.asm	/^f010333f:	8b 47 5c             	mov    0x5c(%edi),%eax$/;"	l
f0103342	obj/kern/kernel.asm	/^f0103342:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103345	obj/kern/kernel.asm	/^f0103345:	e8 d4 e1 ff ff       	call   f010151e <page_insert>$/;"	l
f010334a	obj/kern/kernel.asm	/^f010334a:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f010334d	obj/kern/kernel.asm	/^f010334d:	75 1c                	jne    f010336b <segment_alloc+0x7a>$/;"	l
f010334f	obj/kern/kernel.asm	/^f010334f:	c7 44 24 08 f4 73 10 	movl   $0xf01073f4,0x8(%esp)$/;"	l
f0103356	obj/kern/kernel.asm	/^f0103356:	f0 $/;"	l
f0103357	obj/kern/kernel.asm	/^f0103357:	c7 44 24 04 29 01 00 	movl   $0x129,0x4(%esp)$/;"	l
f010335e	obj/kern/kernel.asm	/^f010335e:	00 $/;"	l
f010335f	obj/kern/kernel.asm	/^f010335f:	c7 04 24 b0 73 10 f0 	movl   $0xf01073b0,(%esp)$/;"	l
f0103366	obj/kern/kernel.asm	/^f0103366:	e8 1a cd ff ff       	call   f0100085 <_panic>$/;"	l
f010336b	obj/kern/kernel.asm	/^f010336b:	83 c6 01             	add    $0x1,%esi$/;"	l
f010336e	obj/kern/kernel.asm	/^f010336e:	39 75 d4             	cmp    %esi,-0x2c(%ebp)$/;"	l
f0103371	obj/kern/kernel.asm	/^f0103371:	76 08                	jbe    f010337b <segment_alloc+0x8a>$/;"	l
f0103373	obj/kern/kernel.asm	/^f0103373:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103379	obj/kern/kernel.asm	/^f0103379:	eb a6                	jmp    f0103321 <segment_alloc+0x30>$/;"	l
f010337b	obj/kern/kernel.asm	/^f010337b:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f010337e	obj/kern/kernel.asm	/^f010337e:	5b                   	pop    %ebx$/;"	l
f010337f	obj/kern/kernel.asm	/^f010337f:	5e                   	pop    %esi$/;"	l
f0103380	obj/kern/kernel.asm	/^f0103380:	5f                   	pop    %edi$/;"	l
f0103381	obj/kern/kernel.asm	/^f0103381:	5d                   	pop    %ebp$/;"	l
f0103382	obj/kern/kernel.asm	/^f0103382:	c3                   	ret    $/;"	l
f0103383	obj/kern/kernel.asm	/^f0103383 <Env_map_segment>:$/;"	l
f0103383	obj/kern/kernel.asm	/^f0103383:	55                   	push   %ebp$/;"	l
f0103384	obj/kern/kernel.asm	/^f0103384:	89 e5                	mov    %esp,%ebp$/;"	l
f0103386	obj/kern/kernel.asm	/^f0103386:	57                   	push   %edi$/;"	l
f0103387	obj/kern/kernel.asm	/^f0103387:	56                   	push   %esi$/;"	l
f0103388	obj/kern/kernel.asm	/^f0103388:	53                   	push   %ebx$/;"	l
f0103389	obj/kern/kernel.asm	/^f0103389:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010338c	obj/kern/kernel.asm	/^f010338c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010338f	obj/kern/kernel.asm	/^f010338f:	89 d3                	mov    %edx,%ebx$/;"	l
f0103391	obj/kern/kernel.asm	/^f0103391:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103394	obj/kern/kernel.asm	/^f0103394:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0103397	obj/kern/kernel.asm	/^f0103397:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f010339a	obj/kern/kernel.asm	/^f010339a:	85 c9                	test   %ecx,%ecx$/;"	l
f010339c	obj/kern/kernel.asm	/^f010339c:	74 54                	je     f01033f2 <Env_map_segment+0x6f>$/;"	l
f010339e	obj/kern/kernel.asm	/^f010339e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01033a3	obj/kern/kernel.asm	/^f01033a3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01033a6	obj/kern/kernel.asm	/^f01033a6:	83 c8 01             	or     $0x1,%eax$/;"	l
f01033a9	obj/kern/kernel.asm	/^f01033a9:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01033ac	obj/kern/kernel.asm	/^f01033ac:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01033b3	obj/kern/kernel.asm	/^f01033b3:	00 $/;"	l
f01033b4	obj/kern/kernel.asm	/^f01033b4:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01033b8	obj/kern/kernel.asm	/^f01033b8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01033bb	obj/kern/kernel.asm	/^f01033bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01033be	obj/kern/kernel.asm	/^f01033be:	e8 1c de ff ff       	call   f01011df <pgdir_walk>$/;"	l
f01033c3	obj/kern/kernel.asm	/^f01033c3:	85 c0                	test   %eax,%eax$/;"	l
f01033c5	obj/kern/kernel.asm	/^f01033c5:	75 0e                	jne    f01033d5 <Env_map_segment+0x52>$/;"	l
f01033c7	obj/kern/kernel.asm	/^f01033c7:	c7 04 24 24 74 10 f0 	movl   $0xf0107424,(%esp)$/;"	l
f01033ce	obj/kern/kernel.asm	/^f01033ce:	e8 f8 05 00 00       	call   f01039cb <cprintf>$/;"	l
f01033d3	obj/kern/kernel.asm	/^f01033d3:	eb 1d                	jmp    f01033f2 <Env_map_segment+0x6f>$/;"	l
f01033d5	obj/kern/kernel.asm	/^f01033d5:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01033d8	obj/kern/kernel.asm	/^f01033d8:	09 fa                	or     %edi,%edx$/;"	l
f01033da	obj/kern/kernel.asm	/^f01033da:	89 10                	mov    %edx,(%eax)$/;"	l
f01033dc	obj/kern/kernel.asm	/^f01033dc:	83 c6 01             	add    $0x1,%esi$/;"	l
f01033df	obj/kern/kernel.asm	/^f01033df:	3b 75 e4             	cmp    -0x1c(%ebp),%esi$/;"	l
f01033e2	obj/kern/kernel.asm	/^f01033e2:	73 0e                	jae    f01033f2 <Env_map_segment+0x6f>$/;"	l
f01033e4	obj/kern/kernel.asm	/^f01033e4:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01033ea	obj/kern/kernel.asm	/^f01033ea:	81 c7 00 10 00 00    	add    $0x1000,%edi$/;"	l
f01033f0	obj/kern/kernel.asm	/^f01033f0:	eb ba                	jmp    f01033ac <Env_map_segment+0x29>$/;"	l
f01033f2	obj/kern/kernel.asm	/^f01033f2:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01033f5	obj/kern/kernel.asm	/^f01033f5:	5b                   	pop    %ebx$/;"	l
f01033f6	obj/kern/kernel.asm	/^f01033f6:	5e                   	pop    %esi$/;"	l
f01033f7	obj/kern/kernel.asm	/^f01033f7:	5f                   	pop    %edi$/;"	l
f01033f8	obj/kern/kernel.asm	/^f01033f8:	5d                   	pop    %ebp$/;"	l
f01033f9	obj/kern/kernel.asm	/^f01033f9:	c3                   	ret    $/;"	l
f01033fa	obj/kern/kernel.asm	/^f01033fa <env_alloc>:$/;"	l
f01033fa	obj/kern/kernel.asm	/^f01033fa:	55                   	push   %ebp$/;"	l
f01033fb	obj/kern/kernel.asm	/^f01033fb:	89 e5                	mov    %esp,%ebp$/;"	l
f01033fd	obj/kern/kernel.asm	/^f01033fd:	53                   	push   %ebx$/;"	l
f01033fe	obj/kern/kernel.asm	/^f01033fe:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0103401	obj/kern/kernel.asm	/^f0103401:	8b 1d 28 e4 26 f0    	mov    0xf026e428,%ebx$/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f010340c	obj/kern/kernel.asm	/^f010340c:	85 db                	test   %ebx,%ebx$/;"	l
f010340e	obj/kern/kernel.asm	/^f010340e:	0f 84 9f 02 00 00    	je     f01036b3 <env_alloc+0x2b9>$/;"	l
f0103414	obj/kern/kernel.asm	/^f0103414:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010341b	obj/kern/kernel.asm	/^f010341b:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f010341e	obj/kern/kernel.asm	/^f010341e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103421	obj/kern/kernel.asm	/^f0103421:	e8 69 dd ff ff       	call   f010118f <page_alloc>$/;"	l
f0103426	obj/kern/kernel.asm	/^f0103426:	85 c0                	test   %eax,%eax$/;"	l
f0103428	obj/kern/kernel.asm	/^f0103428:	0f 88 85 02 00 00    	js     f01036b3 <env_alloc+0x2b9>$/;"	l
f010342e	obj/kern/kernel.asm	/^f010342e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103431	obj/kern/kernel.asm	/^f0103431:	2b 05 64 48 29 f0    	sub    0xf0294864,%eax$/;"	l
f0103437	obj/kern/kernel.asm	/^f0103437:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010343a	obj/kern/kernel.asm	/^f010343a:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0103440	obj/kern/kernel.asm	/^f0103440:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103443	obj/kern/kernel.asm	/^f0103443:	89 c2                	mov    %eax,%edx$/;"	l
f0103445	obj/kern/kernel.asm	/^f0103445:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103448	obj/kern/kernel.asm	/^f0103448:	3b 15 58 48 29 f0    	cmp    0xf0294858,%edx$/;"	l
f010344e	obj/kern/kernel.asm	/^f010344e:	72 20                	jb     f0103470 <env_alloc+0x76>$/;"	l
f0103450	obj/kern/kernel.asm	/^f0103450:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103454	obj/kern/kernel.asm	/^f0103454:	c7 44 24 08 a0 6b 10 	movl   $0xf0106ba0,0x8(%esp)$/;"	l
f010345b	obj/kern/kernel.asm	/^f010345b:	f0 $/;"	l
f010345c	obj/kern/kernel.asm	/^f010345c:	c7 44 24 04 5a 00 00 	movl   $0x5a,0x4(%esp)$/;"	l
f0103463	obj/kern/kernel.asm	/^f0103463:	00 $/;"	l
f0103464	obj/kern/kernel.asm	/^f0103464:	c7 04 24 da 66 10 f0 	movl   $0xf01066da,(%esp)$/;"	l
f010346b	obj/kern/kernel.asm	/^f010346b:	e8 15 cc ff ff       	call   f0100085 <_panic>$/;"	l
f0103470	obj/kern/kernel.asm	/^f0103470:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103475	obj/kern/kernel.asm	/^f0103475:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0103478	obj/kern/kernel.asm	/^f0103478:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010347b	obj/kern/kernel.asm	/^f010347b:	2b 05 64 48 29 f0    	sub    0xf0294864,%eax$/;"	l
f0103481	obj/kern/kernel.asm	/^f0103481:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0103484	obj/kern/kernel.asm	/^f0103484:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f010348a	obj/kern/kernel.asm	/^f010348a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010348d	obj/kern/kernel.asm	/^f010348d:	89 43 60             	mov    %eax,0x60(%ebx)$/;"	l
f0103490	obj/kern/kernel.asm	/^f0103490:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103493	obj/kern/kernel.asm	/^f0103493:	66 83 40 08 01       	addw   $0x1,0x8(%eax)$/;"	l
f0103498	obj/kern/kernel.asm	/^f0103498:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010349f	obj/kern/kernel.asm	/^f010349f:	00 $/;"	l
f01034a0	obj/kern/kernel.asm	/^f01034a0:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01034a7	obj/kern/kernel.asm	/^f01034a7:	00 $/;"	l
f01034a8	obj/kern/kernel.asm	/^f01034a8:	8b 43 5c             	mov    0x5c(%ebx),%eax$/;"	l
f01034ab	obj/kern/kernel.asm	/^f01034ab:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01034ae	obj/kern/kernel.asm	/^f01034ae:	e8 03 1f 00 00       	call   f01053b6 <memset>$/;"	l
f01034b3	obj/kern/kernel.asm	/^f01034b3:	8b 15 64 48 29 f0    	mov    0xf0294864,%edx$/;"	l
f01034b9	obj/kern/kernel.asm	/^f01034b9:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f01034bf	obj/kern/kernel.asm	/^f01034bf:	77 20                	ja     f01034e1 <env_alloc+0xe7>$/;"	l
f01034c1	obj/kern/kernel.asm	/^f01034c1:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01034c5	obj/kern/kernel.asm	/^f01034c5:	c7 44 24 08 fc 69 10 	movl   $0xf01069fc,0x8(%esp)$/;"	l
f01034cc	obj/kern/kernel.asm	/^f01034cc:	f0 $/;"	l
f01034cd	obj/kern/kernel.asm	/^f01034cd:	c7 44 24 04 ab 00 00 	movl   $0xab,0x4(%esp)$/;"	l
f01034d4	obj/kern/kernel.asm	/^f01034d4:	00 $/;"	l
f01034d5	obj/kern/kernel.asm	/^f01034d5:	c7 04 24 b0 73 10 f0 	movl   $0xf01073b0,(%esp)$/;"	l
f01034dc	obj/kern/kernel.asm	/^f01034dc:	e8 a4 cb ff ff       	call   f0100085 <_panic>$/;"	l
f01034e1	obj/kern/kernel.asm	/^f01034e1:	a1 58 48 29 f0       	mov    0xf0294858,%eax$/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f01034e9	obj/kern/kernel.asm	/^f01034e9:	8d 0c 85 ff 0f 00 00 	lea    0xfff(,%eax,4),%ecx$/;"	l
f01034f0	obj/kern/kernel.asm	/^f01034f0:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01034f6	obj/kern/kernel.asm	/^f01034f6:	8b 43 5c             	mov    0x5c(%ebx),%eax$/;"	l
f01034f9	obj/kern/kernel.asm	/^f01034f9:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f0103500	obj/kern/kernel.asm	/^f0103500:	00 $/;"	l
f0103501	obj/kern/kernel.asm	/^f0103501:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f0103507	obj/kern/kernel.asm	/^f0103507:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010350a	obj/kern/kernel.asm	/^f010350a:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f010350f	obj/kern/kernel.asm	/^f010350f:	e8 6f fe ff ff       	call   f0103383 <Env_map_segment>$/;"	l
f0103514	obj/kern/kernel.asm	/^f0103514:	8b 15 20 e4 26 f0    	mov    0xf026e420,%edx$/;"	l
f010351a	obj/kern/kernel.asm	/^f010351a:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0103520	obj/kern/kernel.asm	/^f0103520:	77 20                	ja     f0103542 <env_alloc+0x148>$/;"	l
f0103522	obj/kern/kernel.asm	/^f0103522:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103526	obj/kern/kernel.asm	/^f0103526:	c7 44 24 08 fc 69 10 	movl   $0xf01069fc,0x8(%esp)$/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	f0 $/;"	l
f010352e	obj/kern/kernel.asm	/^f010352e:	c7 44 24 04 ac 00 00 	movl   $0xac,0x4(%esp)$/;"	l
f0103535	obj/kern/kernel.asm	/^f0103535:	00 $/;"	l
f0103536	obj/kern/kernel.asm	/^f0103536:	c7 04 24 b0 73 10 f0 	movl   $0xf01073b0,(%esp)$/;"	l
f010353d	obj/kern/kernel.asm	/^f010353d:	e8 43 cb ff ff       	call   f0100085 <_panic>$/;"	l
f0103542	obj/kern/kernel.asm	/^f0103542:	8b 43 5c             	mov    0x5c(%ebx),%eax$/;"	l
f0103545	obj/kern/kernel.asm	/^f0103545:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f010354c	obj/kern/kernel.asm	/^f010354c:	00 $/;"	l
f010354d	obj/kern/kernel.asm	/^f010354d:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0103556	obj/kern/kernel.asm	/^f0103556:	b9 00 f0 01 00       	mov    $0x1f000,%ecx$/;"	l
f010355b	obj/kern/kernel.asm	/^f010355b:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0103560	obj/kern/kernel.asm	/^f0103560:	e8 1e fe ff ff       	call   f0103383 <Env_map_segment>$/;"	l
f0103565	obj/kern/kernel.asm	/^f0103565:	ba 00 60 11 f0       	mov    $0xf0116000,%edx$/;"	l
f010356a	obj/kern/kernel.asm	/^f010356a:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0103570	obj/kern/kernel.asm	/^f0103570:	77 20                	ja     f0103592 <env_alloc+0x198>$/;"	l
f0103572	obj/kern/kernel.asm	/^f0103572:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103576	obj/kern/kernel.asm	/^f0103576:	c7 44 24 08 fc 69 10 	movl   $0xf01069fc,0x8(%esp)$/;"	l
f010357d	obj/kern/kernel.asm	/^f010357d:	f0 $/;"	l
f010357e	obj/kern/kernel.asm	/^f010357e:	c7 44 24 04 ad 00 00 	movl   $0xad,0x4(%esp)$/;"	l
f0103585	obj/kern/kernel.asm	/^f0103585:	00 $/;"	l
f0103586	obj/kern/kernel.asm	/^f0103586:	c7 04 24 b0 73 10 f0 	movl   $0xf01073b0,(%esp)$/;"	l
f010358d	obj/kern/kernel.asm	/^f010358d:	e8 f3 ca ff ff       	call   f0100085 <_panic>$/;"	l
f0103592	obj/kern/kernel.asm	/^f0103592:	8b 43 5c             	mov    0x5c(%ebx),%eax$/;"	l
f0103595	obj/kern/kernel.asm	/^f0103595:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f010359c	obj/kern/kernel.asm	/^f010359c:	00 $/;"	l
f010359d	obj/kern/kernel.asm	/^f010359d:	81 c2 00 00 00 10    	add    $0x10000000,%edx$/;"	l
f01035a3	obj/kern/kernel.asm	/^f01035a3:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01035a6	obj/kern/kernel.asm	/^f01035a6:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	ba 00 80 bf ef       	mov    $0xefbf8000,%edx$/;"	l
f01035b0	obj/kern/kernel.asm	/^f01035b0:	e8 ce fd ff ff       	call   f0103383 <Env_map_segment>$/;"	l
f01035b5	obj/kern/kernel.asm	/^f01035b5:	8b 43 5c             	mov    0x5c(%ebx),%eax$/;"	l
f01035b8	obj/kern/kernel.asm	/^f01035b8:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f01035bf	obj/kern/kernel.asm	/^f01035bf:	00 $/;"	l
f01035c0	obj/kern/kernel.asm	/^f01035c0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01035c7	obj/kern/kernel.asm	/^f01035c7:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f01035cc	obj/kern/kernel.asm	/^f01035cc:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f01035d1	obj/kern/kernel.asm	/^f01035d1:	e8 ad fd ff ff       	call   f0103383 <Env_map_segment>$/;"	l
f01035d6	obj/kern/kernel.asm	/^f01035d6:	8b 43 5c             	mov    0x5c(%ebx),%eax$/;"	l
f01035d9	obj/kern/kernel.asm	/^f01035d9:	8b 53 60             	mov    0x60(%ebx),%edx$/;"	l
f01035dc	obj/kern/kernel.asm	/^f01035dc:	83 ca 03             	or     $0x3,%edx$/;"	l
f01035df	obj/kern/kernel.asm	/^f01035df:	89 90 fc 0e 00 00    	mov    %edx,0xefc(%eax)$/;"	l
f01035e5	obj/kern/kernel.asm	/^f01035e5:	8b 43 5c             	mov    0x5c(%ebx),%eax$/;"	l
f01035e8	obj/kern/kernel.asm	/^f01035e8:	8b 53 60             	mov    0x60(%ebx),%edx$/;"	l
f01035eb	obj/kern/kernel.asm	/^f01035eb:	83 ca 05             	or     $0x5,%edx$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f01035f4	obj/kern/kernel.asm	/^f01035f4:	8b 4b 4c             	mov    0x4c(%ebx),%ecx$/;"	l
f01035f7	obj/kern/kernel.asm	/^f01035f7:	81 c1 00 10 00 00    	add    $0x1000,%ecx$/;"	l
f01035fd	obj/kern/kernel.asm	/^f01035fd:	81 e1 00 fc ff ff    	and    $0xfffffc00,%ecx$/;"	l
f0103603	obj/kern/kernel.asm	/^f0103603:	7f 05                	jg     f010360a <env_alloc+0x210>$/;"	l
f0103605	obj/kern/kernel.asm	/^f0103605:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f010360a	obj/kern/kernel.asm	/^f010360a:	89 da                	mov    %ebx,%edx$/;"	l
f010360c	obj/kern/kernel.asm	/^f010360c:	2b 15 20 e4 26 f0    	sub    0xf026e420,%edx$/;"	l
f0103612	obj/kern/kernel.asm	/^f0103612:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0103615	obj/kern/kernel.asm	/^f0103615:	69 c2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%eax$/;"	l
f010361b	obj/kern/kernel.asm	/^f010361b:	09 c8                	or     %ecx,%eax$/;"	l
f010361d	obj/kern/kernel.asm	/^f010361d:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0103620	obj/kern/kernel.asm	/^f0103620:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103623	obj/kern/kernel.asm	/^f0103623:	89 43 50             	mov    %eax,0x50(%ebx)$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f010362d	obj/kern/kernel.asm	/^f010362d:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0103634	obj/kern/kernel.asm	/^f0103634:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f010363b	obj/kern/kernel.asm	/^f010363b:	00 $/;"	l
f010363c	obj/kern/kernel.asm	/^f010363c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	00 $/;"	l
f0103644	obj/kern/kernel.asm	/^f0103644:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103647	obj/kern/kernel.asm	/^f0103647:	e8 6a 1d 00 00       	call   f01053b6 <memset>$/;"	l
f010364c	obj/kern/kernel.asm	/^f010364c:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103652	obj/kern/kernel.asm	/^f0103652:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f0103658	obj/kern/kernel.asm	/^f0103658:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f010365e	obj/kern/kernel.asm	/^f010365e:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0103665	obj/kern/kernel.asm	/^f0103665:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f010366b	obj/kern/kernel.asm	/^f010366b:	8b 53 38             	mov    0x38(%ebx),%edx$/;"	l
f010366e	obj/kern/kernel.asm	/^f010366e:	80 ce 02             	or     $0x2,%dh$/;"	l
f0103671	obj/kern/kernel.asm	/^f0103671:	89 53 38             	mov    %edx,0x38(%ebx)$/;"	l
f0103674	obj/kern/kernel.asm	/^f0103674:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f010367b	obj/kern/kernel.asm	/^f010367b:	c7 43 68 00 00 00 00 	movl   $0x0,0x68(%ebx)$/;"	l
f0103682	obj/kern/kernel.asm	/^f0103682:	a1 20 e4 26 f0       	mov    0xf026e420,%eax$/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	83 c0 7c             	add    $0x7c,%eax$/;"	l
f010368a	obj/kern/kernel.asm	/^f010368a:	39 d8                	cmp    %ebx,%eax$/;"	l
f010368c	obj/kern/kernel.asm	/^f010368c:	75 06                	jne    f0103694 <env_alloc+0x29a>$/;"	l
f010368e	obj/kern/kernel.asm	/^f010368e:	80 ce 30             	or     $0x30,%dh$/;"	l
f0103691	obj/kern/kernel.asm	/^f0103691:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
f0103694	obj/kern/kernel.asm	/^f0103694:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0103697	obj/kern/kernel.asm	/^f0103697:	85 c0                	test   %eax,%eax$/;"	l
f0103699	obj/kern/kernel.asm	/^f0103699:	74 06                	je     f01036a1 <env_alloc+0x2a7>$/;"	l
f010369b	obj/kern/kernel.asm	/^f010369b:	8b 53 48             	mov    0x48(%ebx),%edx$/;"	l
f010369e	obj/kern/kernel.asm	/^f010369e:	89 50 48             	mov    %edx,0x48(%eax)$/;"	l
f01036a1	obj/kern/kernel.asm	/^f01036a1:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f01036a4	obj/kern/kernel.asm	/^f01036a4:	8b 53 44             	mov    0x44(%ebx),%edx$/;"	l
f01036a7	obj/kern/kernel.asm	/^f01036a7:	89 10                	mov    %edx,(%eax)$/;"	l
f01036a9	obj/kern/kernel.asm	/^f01036a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01036ac	obj/kern/kernel.asm	/^f01036ac:	89 18                	mov    %ebx,(%eax)$/;"	l
f01036ae	obj/kern/kernel.asm	/^f01036ae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01036b3	obj/kern/kernel.asm	/^f01036b3:	83 c4 24             	add    $0x24,%esp$/;"	l
f01036b6	obj/kern/kernel.asm	/^f01036b6:	5b                   	pop    %ebx$/;"	l
f01036b7	obj/kern/kernel.asm	/^f01036b7:	5d                   	pop    %ebp$/;"	l
f01036b8	obj/kern/kernel.asm	/^f01036b8:	c3                   	ret    $/;"	l
f01036b9	obj/kern/kernel.asm	/^f01036b9 <env_create>:$/;"	l
f01036b9	obj/kern/kernel.asm	/^f01036b9:	55                   	push   %ebp$/;"	l
f01036ba	obj/kern/kernel.asm	/^f01036ba:	89 e5                	mov    %esp,%ebp$/;"	l
f01036bc	obj/kern/kernel.asm	/^f01036bc:	57                   	push   %edi$/;"	l
f01036bd	obj/kern/kernel.asm	/^f01036bd:	56                   	push   %esi$/;"	l
f01036be	obj/kern/kernel.asm	/^f01036be:	53                   	push   %ebx$/;"	l
f01036bf	obj/kern/kernel.asm	/^f01036bf:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01036c2	obj/kern/kernel.asm	/^f01036c2:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01036c9	obj/kern/kernel.asm	/^f01036c9:	00 $/;"	l
f01036ca	obj/kern/kernel.asm	/^f01036ca:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01036cd	obj/kern/kernel.asm	/^f01036cd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01036d0	obj/kern/kernel.asm	/^f01036d0:	e8 25 fd ff ff       	call   f01033fa <env_alloc>$/;"	l
f01036d5	obj/kern/kernel.asm	/^f01036d5:	83 f8 fb             	cmp    $0xfffffffb,%eax$/;"	l
f01036d8	obj/kern/kernel.asm	/^f01036d8:	75 1c                	jne    f01036f6 <env_create+0x3d>$/;"	l
f01036da	obj/kern/kernel.asm	/^f01036da:	c7 44 24 08 5c 74 10 	movl   $0xf010745c,0x8(%esp)$/;"	l
f01036e1	obj/kern/kernel.asm	/^f01036e1:	f0 $/;"	l
f01036e2	obj/kern/kernel.asm	/^f01036e2:	c7 44 24 04 9e 01 00 	movl   $0x19e,0x4(%esp)$/;"	l
f01036e9	obj/kern/kernel.asm	/^f01036e9:	00 $/;"	l
f01036ea	obj/kern/kernel.asm	/^f01036ea:	c7 04 24 b0 73 10 f0 	movl   $0xf01073b0,(%esp)$/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1:	e8 8f c9 ff ff       	call   f0100085 <_panic>$/;"	l
f01036f6	obj/kern/kernel.asm	/^f01036f6:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f01036f9	obj/kern/kernel.asm	/^f01036f9:	75 1c                	jne    f0103717 <env_create+0x5e>$/;"	l
f01036fb	obj/kern/kernel.asm	/^f01036fb:	c7 44 24 08 90 74 10 	movl   $0xf0107490,0x8(%esp)$/;"	l
f0103702	obj/kern/kernel.asm	/^f0103702:	f0 $/;"	l
f0103703	obj/kern/kernel.asm	/^f0103703:	c7 44 24 04 a2 01 00 	movl   $0x1a2,0x4(%esp)$/;"	l
f010370a	obj/kern/kernel.asm	/^f010370a:	00 $/;"	l
f010370b	obj/kern/kernel.asm	/^f010370b:	c7 04 24 b0 73 10 f0 	movl   $0xf01073b0,(%esp)$/;"	l
f0103712	obj/kern/kernel.asm	/^f0103712:	e8 6e c9 ff ff       	call   f0100085 <_panic>$/;"	l
f0103717	obj/kern/kernel.asm	/^f0103717:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010371a	obj/kern/kernel.asm	/^f010371a:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f010371d	obj/kern/kernel.asm	/^f010371d:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103720	obj/kern/kernel.asm	/^f0103720:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103723	obj/kern/kernel.asm	/^f0103723:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103726	obj/kern/kernel.asm	/^f0103726:	81 38 7f 45 4c 46    	cmpl   $0x464c457f,(%eax)$/;"	l
f010372c	obj/kern/kernel.asm	/^f010372c:	74 1c                	je     f010374a <env_create+0x91>$/;"	l
f010372e	obj/kern/kernel.asm	/^f010372e:	c7 44 24 08 bc 74 10 	movl   $0xf01074bc,0x8(%esp)$/;"	l
f0103735	obj/kern/kernel.asm	/^f0103735:	f0 $/;"	l
f0103736	obj/kern/kernel.asm	/^f0103736:	c7 44 24 04 6c 01 00 	movl   $0x16c,0x4(%esp)$/;"	l
f010373d	obj/kern/kernel.asm	/^f010373d:	00 $/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	c7 04 24 b0 73 10 f0 	movl   $0xf01073b0,(%esp)$/;"	l
f0103745	obj/kern/kernel.asm	/^f0103745:	e8 3b c9 ff ff       	call   f0100085 <_panic>$/;"	l
f010374a	obj/kern/kernel.asm	/^f010374a:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f010374d	obj/kern/kernel.asm	/^f010374d:	03 5b 1c             	add    0x1c(%ebx),%ebx$/;"	l
f0103750	obj/kern/kernel.asm	/^f0103750:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0103753	obj/kern/kernel.asm	/^f0103753:	0f b7 72 2c          	movzwl 0x2c(%edx),%esi$/;"	l
f0103757	obj/kern/kernel.asm	/^f0103757:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f010375a	obj/kern/kernel.asm	/^f010375a:	8d 34 33             	lea    (%ebx,%esi,1),%esi$/;"	l
f010375d	obj/kern/kernel.asm	/^f010375d:	39 f3                	cmp    %esi,%ebx$/;"	l
f010375f	obj/kern/kernel.asm	/^f010375f:	0f 83 88 00 00 00    	jae    f01037ed <env_create+0x134>$/;"	l
f0103765	obj/kern/kernel.asm	/^f0103765:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103768	obj/kern/kernel.asm	/^f0103768:	75 78                	jne    f01037e2 <env_create+0x129>$/;"	l
f010376a	obj/kern/kernel.asm	/^f010376a:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f010376d	obj/kern/kernel.asm	/^f010376d:	85 c9                	test   %ecx,%ecx$/;"	l
f010376f	obj/kern/kernel.asm	/^f010376f:	75 1c                	jne    f010378d <env_create+0xd4>$/;"	l
f0103771	obj/kern/kernel.asm	/^f0103771:	c7 44 24 08 db 73 10 	movl   $0xf01073db,0x8(%esp)$/;"	l
f0103778	obj/kern/kernel.asm	/^f0103778:	f0 $/;"	l
f0103779	obj/kern/kernel.asm	/^f0103779:	c7 44 24 04 76 01 00 	movl   $0x176,0x4(%esp)$/;"	l
f0103780	obj/kern/kernel.asm	/^f0103780:	00 $/;"	l
f0103781	obj/kern/kernel.asm	/^f0103781:	c7 04 24 b0 73 10 f0 	movl   $0xf01073b0,(%esp)$/;"	l
f0103788	obj/kern/kernel.asm	/^f0103788:	e8 f8 c8 ff ff       	call   f0100085 <_panic>$/;"	l
f010378d	obj/kern/kernel.asm	/^f010378d:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0103790	obj/kern/kernel.asm	/^f0103790:	89 f8                	mov    %edi,%eax$/;"	l
f0103792	obj/kern/kernel.asm	/^f0103792:	e8 5a fb ff ff       	call   f01032f1 <segment_alloc>$/;"	l
f0103797	obj/kern/kernel.asm	/^f0103797:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f010379a	obj/kern/kernel.asm	/^f010379a:	89 c2                	mov    %eax,%edx$/;"	l
f010379c	obj/kern/kernel.asm	/^f010379c:	03 53 14             	add    0x14(%ebx),%edx$/;"	l
f010379f	obj/kern/kernel.asm	/^f010379f:	81 c2 ff 0f 00 00    	add    $0xfff,%edx$/;"	l
f01037a5	obj/kern/kernel.asm	/^f01037a5:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01037aa	obj/kern/kernel.asm	/^f01037aa:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01037b0	obj/kern/kernel.asm	/^f01037b0:	29 c2                	sub    %eax,%edx$/;"	l
f01037b2	obj/kern/kernel.asm	/^f01037b2:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01037b6	obj/kern/kernel.asm	/^f01037b6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01037bd	obj/kern/kernel.asm	/^f01037bd:	00 $/;"	l
f01037be	obj/kern/kernel.asm	/^f01037be:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01037c1	obj/kern/kernel.asm	/^f01037c1:	e8 f0 1b 00 00       	call   f01053b6 <memset>$/;"	l
f01037c6	obj/kern/kernel.asm	/^f01037c6:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01037c9	obj/kern/kernel.asm	/^f01037c9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01037cd	obj/kern/kernel.asm	/^f01037cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01037d0	obj/kern/kernel.asm	/^f01037d0:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f01037d3	obj/kern/kernel.asm	/^f01037d3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01037d7	obj/kern/kernel.asm	/^f01037d7:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01037da	obj/kern/kernel.asm	/^f01037da:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01037dd	obj/kern/kernel.asm	/^f01037dd:	e8 33 1c 00 00       	call   f0105415 <memmove>$/;"	l
f01037e2	obj/kern/kernel.asm	/^f01037e2:	83 c3 20             	add    $0x20,%ebx$/;"	l
f01037e5	obj/kern/kernel.asm	/^f01037e5:	39 de                	cmp    %ebx,%esi$/;"	l
f01037e7	obj/kern/kernel.asm	/^f01037e7:	0f 87 78 ff ff ff    	ja     f0103765 <env_create+0xac>$/;"	l
f01037ed	obj/kern/kernel.asm	/^f01037ed:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01037f0	obj/kern/kernel.asm	/^f01037f0:	8b 42 18             	mov    0x18(%edx),%eax$/;"	l
f01037f3	obj/kern/kernel.asm	/^f01037f3:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f01037f6	obj/kern/kernel.asm	/^f01037f6:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f01037fb	obj/kern/kernel.asm	/^f01037fb:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0103800	obj/kern/kernel.asm	/^f0103800:	89 f8                	mov    %edi,%eax$/;"	l
f0103802	obj/kern/kernel.asm	/^f0103802:	e8 ea fa ff ff       	call   f01032f1 <segment_alloc>$/;"	l
f0103807	obj/kern/kernel.asm	/^f0103807:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f010380a	obj/kern/kernel.asm	/^f010380a:	5b                   	pop    %ebx$/;"	l
f010380b	obj/kern/kernel.asm	/^f010380b:	5e                   	pop    %esi$/;"	l
f010380c	obj/kern/kernel.asm	/^f010380c:	5f                   	pop    %edi$/;"	l
f010380d	obj/kern/kernel.asm	/^f010380d:	5d                   	pop    %ebp$/;"	l
f010380e	obj/kern/kernel.asm	/^f010380e:	c3                   	ret    $/;"	l
f0103810	obj/kern/kernel.asm	/^f0103810 <mc146818_read>:$/;"	l
f0103810	obj/kern/kernel.asm	/^f0103810:	55                   	push   %ebp$/;"	l
f0103811	obj/kern/kernel.asm	/^f0103811:	89 e5                	mov    %esp,%ebp$/;"	l
f0103813	obj/kern/kernel.asm	/^f0103813:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0103818	obj/kern/kernel.asm	/^f0103818:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010381b	obj/kern/kernel.asm	/^f010381b:	ee                   	out    %al,(%dx)$/;"	l
f010381c	obj/kern/kernel.asm	/^f010381c:	b2 71                	mov    $0x71,%dl$/;"	l
f010381e	obj/kern/kernel.asm	/^f010381e:	ec                   	in     (%dx),%al$/;"	l
f010381f	obj/kern/kernel.asm	/^f010381f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103822	obj/kern/kernel.asm	/^f0103822:	5d                   	pop    %ebp$/;"	l
f0103823	obj/kern/kernel.asm	/^f0103823:	c3                   	ret    $/;"	l
f0103824	obj/kern/kernel.asm	/^f0103824 <mc146818_write>:$/;"	l
f0103824	obj/kern/kernel.asm	/^f0103824:	55                   	push   %ebp$/;"	l
f0103825	obj/kern/kernel.asm	/^f0103825:	89 e5                	mov    %esp,%ebp$/;"	l
f0103827	obj/kern/kernel.asm	/^f0103827:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010382c	obj/kern/kernel.asm	/^f010382c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010382f	obj/kern/kernel.asm	/^f010382f:	ee                   	out    %al,(%dx)$/;"	l
f0103830	obj/kern/kernel.asm	/^f0103830:	b2 71                	mov    $0x71,%dl$/;"	l
f0103832	obj/kern/kernel.asm	/^f0103832:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103835	obj/kern/kernel.asm	/^f0103835:	ee                   	out    %al,(%dx)$/;"	l
f0103836	obj/kern/kernel.asm	/^f0103836:	5d                   	pop    %ebp$/;"	l
f0103837	obj/kern/kernel.asm	/^f0103837:	c3                   	ret    $/;"	l
f0103838	obj/kern/kernel.asm	/^f0103838 <kclock_init>:$/;"	l
f0103838	obj/kern/kernel.asm	/^f0103838:	55                   	push   %ebp$/;"	l
f0103839	obj/kern/kernel.asm	/^f0103839:	89 e5                	mov    %esp,%ebp$/;"	l
f010383b	obj/kern/kernel.asm	/^f010383b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010383e	obj/kern/kernel.asm	/^f010383e:	ba 43 00 00 00       	mov    $0x43,%edx$/;"	l
f0103843	obj/kern/kernel.asm	/^f0103843:	b8 34 00 00 00       	mov    $0x34,%eax$/;"	l
f0103848	obj/kern/kernel.asm	/^f0103848:	ee                   	out    %al,(%dx)$/;"	l
f0103849	obj/kern/kernel.asm	/^f0103849:	b2 40                	mov    $0x40,%dl$/;"	l
f010384b	obj/kern/kernel.asm	/^f010384b:	b8 9c ff ff ff       	mov    $0xffffff9c,%eax$/;"	l
f0103850	obj/kern/kernel.asm	/^f0103850:	ee                   	out    %al,(%dx)$/;"	l
f0103851	obj/kern/kernel.asm	/^f0103851:	b8 2e 00 00 00       	mov    $0x2e,%eax$/;"	l
f0103856	obj/kern/kernel.asm	/^f0103856:	ee                   	out    %al,(%dx)$/;"	l
f0103857	obj/kern/kernel.asm	/^f0103857:	c7 04 24 e0 74 10 f0 	movl   $0xf01074e0,(%esp)$/;"	l
f010385e	obj/kern/kernel.asm	/^f010385e:	e8 68 01 00 00       	call   f01039cb <cprintf>$/;"	l
f0103863	obj/kern/kernel.asm	/^f0103863:	0f b7 05 58 e3 11 f0 	movzwl 0xf011e358,%eax$/;"	l
f010386a	obj/kern/kernel.asm	/^f010386a:	25 fe ff 00 00       	and    $0xfffe,%eax$/;"	l
f010386f	obj/kern/kernel.asm	/^f010386f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103872	obj/kern/kernel.asm	/^f0103872:	e8 24 00 00 00       	call   f010389b <irq_setmask_8259A>$/;"	l
f0103877	obj/kern/kernel.asm	/^f0103877:	c7 04 24 03 75 10 f0 	movl   $0xf0107503,(%esp)$/;"	l
f010387e	obj/kern/kernel.asm	/^f010387e:	e8 48 01 00 00       	call   f01039cb <cprintf>$/;"	l
f0103883	obj/kern/kernel.asm	/^f0103883:	c9                   	leave  $/;"	l
f0103884	obj/kern/kernel.asm	/^f0103884:	c3                   	ret    $/;"	l
f0103885	obj/kern/kernel.asm	/^f0103885:	00 00                	add    %al,(%eax)$/;"	l
f0103888	obj/kern/kernel.asm	/^f0103888 <irq_eoi>:$/;"	l
f0103888	obj/kern/kernel.asm	/^f0103888:	55                   	push   %ebp$/;"	l
f0103889	obj/kern/kernel.asm	/^f0103889:	89 e5                	mov    %esp,%ebp$/;"	l
f010388b	obj/kern/kernel.asm	/^f010388b:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f0103890	obj/kern/kernel.asm	/^f0103890:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103895	obj/kern/kernel.asm	/^f0103895:	ee                   	out    %al,(%dx)$/;"	l
f0103896	obj/kern/kernel.asm	/^f0103896:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103898	obj/kern/kernel.asm	/^f0103898:	ee                   	out    %al,(%dx)$/;"	l
f0103899	obj/kern/kernel.asm	/^f0103899:	5d                   	pop    %ebp$/;"	l
f010389a	obj/kern/kernel.asm	/^f010389a:	c3                   	ret    $/;"	l
f010389b	obj/kern/kernel.asm	/^f010389b <irq_setmask_8259A>:$/;"	l
f010389b	obj/kern/kernel.asm	/^f010389b:	55                   	push   %ebp$/;"	l
f010389c	obj/kern/kernel.asm	/^f010389c:	89 e5                	mov    %esp,%ebp$/;"	l
f010389e	obj/kern/kernel.asm	/^f010389e:	56                   	push   %esi$/;"	l
f010389f	obj/kern/kernel.asm	/^f010389f:	53                   	push   %ebx$/;"	l
f01038a0	obj/kern/kernel.asm	/^f01038a0:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01038a3	obj/kern/kernel.asm	/^f01038a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01038a6	obj/kern/kernel.asm	/^f01038a6:	89 c6                	mov    %eax,%esi$/;"	l
f01038a8	obj/kern/kernel.asm	/^f01038a8:	66 a3 58 e3 11 f0    	mov    %ax,0xf011e358$/;"	l
f01038ae	obj/kern/kernel.asm	/^f01038ae:	83 3d 2c e4 26 f0 00 	cmpl   $0x0,0xf026e42c$/;"	l
f01038b5	obj/kern/kernel.asm	/^f01038b5:	74 4e                	je     f0103905 <irq_setmask_8259A+0x6a>$/;"	l
f01038b7	obj/kern/kernel.asm	/^f01038b7:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f01038bc	obj/kern/kernel.asm	/^f01038bc:	ee                   	out    %al,(%dx)$/;"	l
f01038bd	obj/kern/kernel.asm	/^f01038bd:	89 f0                	mov    %esi,%eax$/;"	l
f01038bf	obj/kern/kernel.asm	/^f01038bf:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01038c3	obj/kern/kernel.asm	/^f01038c3:	b2 a1                	mov    $0xa1,%dl$/;"	l
f01038c5	obj/kern/kernel.asm	/^f01038c5:	ee                   	out    %al,(%dx)$/;"	l
f01038c6	obj/kern/kernel.asm	/^f01038c6:	c7 04 24 1e 75 10 f0 	movl   $0xf010751e,(%esp)$/;"	l
f01038cd	obj/kern/kernel.asm	/^f01038cd:	e8 f9 00 00 00       	call   f01039cb <cprintf>$/;"	l
f01038d2	obj/kern/kernel.asm	/^f01038d2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01038d7	obj/kern/kernel.asm	/^f01038d7:	0f b7 f6             	movzwl %si,%esi$/;"	l
f01038da	obj/kern/kernel.asm	/^f01038da:	f7 d6                	not    %esi$/;"	l
f01038dc	obj/kern/kernel.asm	/^f01038dc:	0f a3 de             	bt     %ebx,%esi$/;"	l
f01038df	obj/kern/kernel.asm	/^f01038df:	73 10                	jae    f01038f1 <irq_setmask_8259A+0x56>$/;"	l
f01038e1	obj/kern/kernel.asm	/^f01038e1:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01038e5	obj/kern/kernel.asm	/^f01038e5:	c7 04 24 a0 79 10 f0 	movl   $0xf01079a0,(%esp)$/;"	l
f01038ec	obj/kern/kernel.asm	/^f01038ec:	e8 da 00 00 00       	call   f01039cb <cprintf>$/;"	l
f01038f1	obj/kern/kernel.asm	/^f01038f1:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01038f4	obj/kern/kernel.asm	/^f01038f4:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f01038f7	obj/kern/kernel.asm	/^f01038f7:	75 e3                	jne    f01038dc <irq_setmask_8259A+0x41>$/;"	l
f01038f9	obj/kern/kernel.asm	/^f01038f9:	c7 04 24 f3 66 10 f0 	movl   $0xf01066f3,(%esp)$/;"	l
f0103900	obj/kern/kernel.asm	/^f0103900:	e8 c6 00 00 00       	call   f01039cb <cprintf>$/;"	l
f0103905	obj/kern/kernel.asm	/^f0103905:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103908	obj/kern/kernel.asm	/^f0103908:	5b                   	pop    %ebx$/;"	l
f0103909	obj/kern/kernel.asm	/^f0103909:	5e                   	pop    %esi$/;"	l
f010390a	obj/kern/kernel.asm	/^f010390a:	5d                   	pop    %ebp$/;"	l
f010390b	obj/kern/kernel.asm	/^f010390b:	c3                   	ret    $/;"	l
f010390c	obj/kern/kernel.asm	/^f010390c <pic_init>:$/;"	l
f010390c	obj/kern/kernel.asm	/^f010390c:	55                   	push   %ebp$/;"	l
f010390d	obj/kern/kernel.asm	/^f010390d:	89 e5                	mov    %esp,%ebp$/;"	l
f010390f	obj/kern/kernel.asm	/^f010390f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103912	obj/kern/kernel.asm	/^f0103912:	c7 05 2c e4 26 f0 01 	movl   $0x1,0xf026e42c$/;"	l
f0103919	obj/kern/kernel.asm	/^f0103919:	00 00 00 $/;"	l
f010391c	obj/kern/kernel.asm	/^f010391c:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0103921	obj/kern/kernel.asm	/^f0103921:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0103926	obj/kern/kernel.asm	/^f0103926:	ee                   	out    %al,(%dx)$/;"	l
f0103927	obj/kern/kernel.asm	/^f0103927:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103929	obj/kern/kernel.asm	/^f0103929:	ee                   	out    %al,(%dx)$/;"	l
f010392a	obj/kern/kernel.asm	/^f010392a:	b2 20                	mov    $0x20,%dl$/;"	l
f010392c	obj/kern/kernel.asm	/^f010392c:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0103931	obj/kern/kernel.asm	/^f0103931:	ee                   	out    %al,(%dx)$/;"	l
f0103932	obj/kern/kernel.asm	/^f0103932:	b2 21                	mov    $0x21,%dl$/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0103939	obj/kern/kernel.asm	/^f0103939:	ee                   	out    %al,(%dx)$/;"	l
f010393a	obj/kern/kernel.asm	/^f010393a:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f010393f	obj/kern/kernel.asm	/^f010393f:	ee                   	out    %al,(%dx)$/;"	l
f0103940	obj/kern/kernel.asm	/^f0103940:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0103945	obj/kern/kernel.asm	/^f0103945:	ee                   	out    %al,(%dx)$/;"	l
f0103946	obj/kern/kernel.asm	/^f0103946:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103948	obj/kern/kernel.asm	/^f0103948:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f010394d	obj/kern/kernel.asm	/^f010394d:	ee                   	out    %al,(%dx)$/;"	l
f010394e	obj/kern/kernel.asm	/^f010394e:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0103950	obj/kern/kernel.asm	/^f0103950:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103955	obj/kern/kernel.asm	/^f0103955:	ee                   	out    %al,(%dx)$/;"	l
f0103956	obj/kern/kernel.asm	/^f0103956:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f010395b	obj/kern/kernel.asm	/^f010395b:	ee                   	out    %al,(%dx)$/;"	l
f010395c	obj/kern/kernel.asm	/^f010395c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0103961	obj/kern/kernel.asm	/^f0103961:	ee                   	out    %al,(%dx)$/;"	l
f0103962	obj/kern/kernel.asm	/^f0103962:	b2 20                	mov    $0x20,%dl$/;"	l
f0103964	obj/kern/kernel.asm	/^f0103964:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103969	obj/kern/kernel.asm	/^f0103969:	ee                   	out    %al,(%dx)$/;"	l
f010396a	obj/kern/kernel.asm	/^f010396a:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010396f	obj/kern/kernel.asm	/^f010396f:	ee                   	out    %al,(%dx)$/;"	l
f0103970	obj/kern/kernel.asm	/^f0103970:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0103972	obj/kern/kernel.asm	/^f0103972:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0103977	obj/kern/kernel.asm	/^f0103977:	ee                   	out    %al,(%dx)$/;"	l
f0103978	obj/kern/kernel.asm	/^f0103978:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010397d	obj/kern/kernel.asm	/^f010397d:	ee                   	out    %al,(%dx)$/;"	l
f010397e	obj/kern/kernel.asm	/^f010397e:	0f b7 05 58 e3 11 f0 	movzwl 0xf011e358,%eax$/;"	l
f0103985	obj/kern/kernel.asm	/^f0103985:	66 83 f8 ff          	cmp    $0xffffffff,%ax$/;"	l
f0103989	obj/kern/kernel.asm	/^f0103989:	74 0b                	je     f0103996 <pic_init+0x8a>$/;"	l
f010398b	obj/kern/kernel.asm	/^f010398b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010398e	obj/kern/kernel.asm	/^f010398e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103991	obj/kern/kernel.asm	/^f0103991:	e8 05 ff ff ff       	call   f010389b <irq_setmask_8259A>$/;"	l
f0103996	obj/kern/kernel.asm	/^f0103996:	c9                   	leave  $/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	c3                   	ret    $/;"	l
f0103998	obj/kern/kernel.asm	/^f0103998 <vcprintf>:$/;"	l
f0103998	obj/kern/kernel.asm	/^f0103998:	55                   	push   %ebp$/;"	l
f0103999	obj/kern/kernel.asm	/^f0103999:	89 e5                	mov    %esp,%ebp$/;"	l
f010399b	obj/kern/kernel.asm	/^f010399b:	83 ec 28             	sub    $0x28,%esp$/;"	l
f010399e	obj/kern/kernel.asm	/^f010399e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01039a5	obj/kern/kernel.asm	/^f01039a5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01039a8	obj/kern/kernel.asm	/^f01039a8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01039ac	obj/kern/kernel.asm	/^f01039ac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01039af	obj/kern/kernel.asm	/^f01039af:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01039b3	obj/kern/kernel.asm	/^f01039b3:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01039b6	obj/kern/kernel.asm	/^f01039b6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01039ba	obj/kern/kernel.asm	/^f01039ba:	c7 04 24 e5 39 10 f0 	movl   $0xf01039e5,(%esp)$/;"	l
f01039c1	obj/kern/kernel.asm	/^f01039c1:	e8 87 12 00 00       	call   f0104c4d <vprintfmt>$/;"	l
f01039c6	obj/kern/kernel.asm	/^f01039c6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01039c9	obj/kern/kernel.asm	/^f01039c9:	c9                   	leave  $/;"	l
f01039ca	obj/kern/kernel.asm	/^f01039ca:	c3                   	ret    $/;"	l
f01039cb	obj/kern/kernel.asm	/^f01039cb <cprintf>:$/;"	l
f01039cb	obj/kern/kernel.asm	/^f01039cb:	55                   	push   %ebp$/;"	l
f01039cc	obj/kern/kernel.asm	/^f01039cc:	89 e5                	mov    %esp,%ebp$/;"	l
f01039ce	obj/kern/kernel.asm	/^f01039ce:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01039d1	obj/kern/kernel.asm	/^f01039d1:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f01039d4	obj/kern/kernel.asm	/^f01039d4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01039d8	obj/kern/kernel.asm	/^f01039d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01039db	obj/kern/kernel.asm	/^f01039db:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01039de	obj/kern/kernel.asm	/^f01039de:	e8 b5 ff ff ff       	call   f0103998 <vcprintf>$/;"	l
f01039e3	obj/kern/kernel.asm	/^f01039e3:	c9                   	leave  $/;"	l
f01039e4	obj/kern/kernel.asm	/^f01039e4:	c3                   	ret    $/;"	l
f01039e5	obj/kern/kernel.asm	/^f01039e5 <putch>:$/;"	l
f01039e5	obj/kern/kernel.asm	/^f01039e5:	55                   	push   %ebp$/;"	l
f01039e6	obj/kern/kernel.asm	/^f01039e6:	89 e5                	mov    %esp,%ebp$/;"	l
f01039e8	obj/kern/kernel.asm	/^f01039e8:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01039eb	obj/kern/kernel.asm	/^f01039eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01039ee	obj/kern/kernel.asm	/^f01039ee:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01039f1	obj/kern/kernel.asm	/^f01039f1:	e8 a4 ca ff ff       	call   f010049a <cputchar>$/;"	l
f01039f6	obj/kern/kernel.asm	/^f01039f6:	c9                   	leave  $/;"	l
f01039f7	obj/kern/kernel.asm	/^f01039f7:	c3                   	ret    $/;"	l
f0103a00	obj/kern/kernel.asm	/^f0103a00 <idt_init>:$/;"	l
f0103a00	obj/kern/kernel.asm	/^f0103a00:	55                   	push   %ebp$/;"	l
f0103a01	obj/kern/kernel.asm	/^f0103a01:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a03	obj/kern/kernel.asm	/^f0103a03:	b8 4c 40 10 f0       	mov    $0xf010404c,%eax$/;"	l
f0103a08	obj/kern/kernel.asm	/^f0103a08:	66 a3 40 e4 26 f0    	mov    %ax,0xf026e440$/;"	l
f0103a0e	obj/kern/kernel.asm	/^f0103a0e:	66 c7 05 42 e4 26 f0 	movw   $0x8,0xf026e442$/;"	l
f0103a15	obj/kern/kernel.asm	/^f0103a15:	08 00 $/;"	l
f0103a17	obj/kern/kernel.asm	/^f0103a17:	c6 05 44 e4 26 f0 00 	movb   $0x0,0xf026e444$/;"	l
f0103a1e	obj/kern/kernel.asm	/^f0103a1e:	c6 05 45 e4 26 f0 8e 	movb   $0x8e,0xf026e445$/;"	l
f0103a25	obj/kern/kernel.asm	/^f0103a25:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a28	obj/kern/kernel.asm	/^f0103a28:	66 a3 46 e4 26 f0    	mov    %ax,0xf026e446$/;"	l
f0103a2e	obj/kern/kernel.asm	/^f0103a2e:	b8 52 40 10 f0       	mov    $0xf0104052,%eax$/;"	l
f0103a33	obj/kern/kernel.asm	/^f0103a33:	66 a3 a8 e4 26 f0    	mov    %ax,0xf026e4a8$/;"	l
f0103a39	obj/kern/kernel.asm	/^f0103a39:	66 c7 05 aa e4 26 f0 	movw   $0x8,0xf026e4aa$/;"	l
f0103a40	obj/kern/kernel.asm	/^f0103a40:	08 00 $/;"	l
f0103a42	obj/kern/kernel.asm	/^f0103a42:	c6 05 ac e4 26 f0 00 	movb   $0x0,0xf026e4ac$/;"	l
f0103a49	obj/kern/kernel.asm	/^f0103a49:	c6 05 ad e4 26 f0 8e 	movb   $0x8e,0xf026e4ad$/;"	l
f0103a50	obj/kern/kernel.asm	/^f0103a50:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a53	obj/kern/kernel.asm	/^f0103a53:	66 a3 ae e4 26 f0    	mov    %ax,0xf026e4ae$/;"	l
f0103a59	obj/kern/kernel.asm	/^f0103a59:	b8 56 40 10 f0       	mov    $0xf0104056,%eax$/;"	l
f0103a5e	obj/kern/kernel.asm	/^f0103a5e:	66 a3 b0 e4 26 f0    	mov    %ax,0xf026e4b0$/;"	l
f0103a64	obj/kern/kernel.asm	/^f0103a64:	66 c7 05 b2 e4 26 f0 	movw   $0x8,0xf026e4b2$/;"	l
f0103a6b	obj/kern/kernel.asm	/^f0103a6b:	08 00 $/;"	l
f0103a6d	obj/kern/kernel.asm	/^f0103a6d:	c6 05 b4 e4 26 f0 00 	movb   $0x0,0xf026e4b4$/;"	l
f0103a74	obj/kern/kernel.asm	/^f0103a74:	c6 05 b5 e4 26 f0 8e 	movb   $0x8e,0xf026e4b5$/;"	l
f0103a7b	obj/kern/kernel.asm	/^f0103a7b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103a7e	obj/kern/kernel.asm	/^f0103a7e:	66 a3 b6 e4 26 f0    	mov    %ax,0xf026e4b6$/;"	l
f0103a84	obj/kern/kernel.asm	/^f0103a84:	b8 5a 40 10 f0       	mov    $0xf010405a,%eax$/;"	l
f0103a89	obj/kern/kernel.asm	/^f0103a89:	66 a3 58 e4 26 f0    	mov    %ax,0xf026e458$/;"	l
f0103a8f	obj/kern/kernel.asm	/^f0103a8f:	66 c7 05 5a e4 26 f0 	movw   $0x8,0xf026e45a$/;"	l
f0103a96	obj/kern/kernel.asm	/^f0103a96:	08 00 $/;"	l
f0103a98	obj/kern/kernel.asm	/^f0103a98:	c6 05 5c e4 26 f0 00 	movb   $0x0,0xf026e45c$/;"	l
f0103a9f	obj/kern/kernel.asm	/^f0103a9f:	c6 05 5d e4 26 f0 ee 	movb   $0xee,0xf026e45d$/;"	l
f0103aa6	obj/kern/kernel.asm	/^f0103aa6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103aa9	obj/kern/kernel.asm	/^f0103aa9:	66 a3 5e e4 26 f0    	mov    %ax,0xf026e45e$/;"	l
f0103aaf	obj/kern/kernel.asm	/^f0103aaf:	b8 60 40 10 f0       	mov    $0xf0104060,%eax$/;"	l
f0103ab4	obj/kern/kernel.asm	/^f0103ab4:	66 a3 c0 e5 26 f0    	mov    %ax,0xf026e5c0$/;"	l
f0103aba	obj/kern/kernel.asm	/^f0103aba:	66 c7 05 c2 e5 26 f0 	movw   $0x8,0xf026e5c2$/;"	l
f0103ac1	obj/kern/kernel.asm	/^f0103ac1:	08 00 $/;"	l
f0103ac3	obj/kern/kernel.asm	/^f0103ac3:	c6 05 c4 e5 26 f0 00 	movb   $0x0,0xf026e5c4$/;"	l
f0103aca	obj/kern/kernel.asm	/^f0103aca:	c6 05 c5 e5 26 f0 ee 	movb   $0xee,0xf026e5c5$/;"	l
f0103ad1	obj/kern/kernel.asm	/^f0103ad1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103ad4	obj/kern/kernel.asm	/^f0103ad4:	66 a3 c6 e5 26 f0    	mov    %ax,0xf026e5c6$/;"	l
f0103ada	obj/kern/kernel.asm	/^f0103ada:	b8 66 40 10 f0       	mov    $0xf0104066,%eax$/;"	l
f0103adf	obj/kern/kernel.asm	/^f0103adf:	66 a3 40 e5 26 f0    	mov    %ax,0xf026e540$/;"	l
f0103ae5	obj/kern/kernel.asm	/^f0103ae5:	66 c7 05 42 e5 26 f0 	movw   $0x8,0xf026e542$/;"	l
f0103aec	obj/kern/kernel.asm	/^f0103aec:	08 00 $/;"	l
f0103aee	obj/kern/kernel.asm	/^f0103aee:	c6 05 44 e5 26 f0 00 	movb   $0x0,0xf026e544$/;"	l
f0103af5	obj/kern/kernel.asm	/^f0103af5:	c6 05 45 e5 26 f0 8e 	movb   $0x8e,0xf026e545$/;"	l
f0103afc	obj/kern/kernel.asm	/^f0103afc:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0103aff	obj/kern/kernel.asm	/^f0103aff:	66 a3 46 e5 26 f0    	mov    %ax,0xf026e546$/;"	l
f0103b05	obj/kern/kernel.asm	/^f0103b05:	c7 05 44 ec 26 f0 00 	movl   $0xefc00000,0xf026ec44$/;"	l
f0103b0c	obj/kern/kernel.asm	/^f0103b0c:	00 c0 ef $/;"	l
f0103b0f	obj/kern/kernel.asm	/^f0103b0f:	66 c7 05 48 ec 26 f0 	movw   $0x10,0xf026ec48$/;"	l
f0103b16	obj/kern/kernel.asm	/^f0103b16:	10 00 $/;"	l
f0103b18	obj/kern/kernel.asm	/^f0103b18:	66 c7 05 48 e3 11 f0 	movw   $0x68,0xf011e348$/;"	l
f0103b1f	obj/kern/kernel.asm	/^f0103b1f:	68 00 $/;"	l
f0103b21	obj/kern/kernel.asm	/^f0103b21:	b8 40 ec 26 f0       	mov    $0xf026ec40,%eax$/;"	l
f0103b26	obj/kern/kernel.asm	/^f0103b26:	66 a3 4a e3 11 f0    	mov    %ax,0xf011e34a$/;"	l
f0103b2c	obj/kern/kernel.asm	/^f0103b2c:	89 c2                	mov    %eax,%edx$/;"	l
f0103b2e	obj/kern/kernel.asm	/^f0103b2e:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0103b31	obj/kern/kernel.asm	/^f0103b31:	88 15 4c e3 11 f0    	mov    %dl,0xf011e34c$/;"	l
f0103b37	obj/kern/kernel.asm	/^f0103b37:	c6 05 4e e3 11 f0 40 	movb   $0x40,0xf011e34e$/;"	l
f0103b3e	obj/kern/kernel.asm	/^f0103b3e:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0103b41	obj/kern/kernel.asm	/^f0103b41:	a2 4f e3 11 f0       	mov    %al,0xf011e34f$/;"	l
f0103b46	obj/kern/kernel.asm	/^f0103b46:	c6 05 4d e3 11 f0 89 	movb   $0x89,0xf011e34d$/;"	l
f0103b4d	obj/kern/kernel.asm	/^f0103b4d:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0103b52	obj/kern/kernel.asm	/^f0103b52:	0f 00 d8             	ltr    %ax$/;"	l
f0103b55	obj/kern/kernel.asm	/^f0103b55:	0f 01 1d 5c e3 11 f0 	lidtl  0xf011e35c$/;"	l
f0103b5c	obj/kern/kernel.asm	/^f0103b5c:	5d                   	pop    %ebp$/;"	l
f0103b5d	obj/kern/kernel.asm	/^f0103b5d:	c3                   	ret    $/;"	l
f0103b5e	obj/kern/kernel.asm	/^f0103b5e <break_point_handler>:$/;"	l
f0103b5e	obj/kern/kernel.asm	/^f0103b5e:	55                   	push   %ebp$/;"	l
f0103b5f	obj/kern/kernel.asm	/^f0103b5f:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b61	obj/kern/kernel.asm	/^f0103b61:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103b64	obj/kern/kernel.asm	/^f0103b64:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103b67	obj/kern/kernel.asm	/^f0103b67:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103b6a	obj/kern/kernel.asm	/^f0103b6a:	e8 41 cc ff ff       	call   f01007b0 <monitor>$/;"	l
f0103b6f	obj/kern/kernel.asm	/^f0103b6f:	c9                   	leave  $/;"	l
f0103b70	obj/kern/kernel.asm	/^f0103b70:	c3                   	ret    $/;"	l
f0103b71	obj/kern/kernel.asm	/^f0103b71 <print_regs>:$/;"	l
f0103b71	obj/kern/kernel.asm	/^f0103b71:	55                   	push   %ebp$/;"	l
f0103b72	obj/kern/kernel.asm	/^f0103b72:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b74	obj/kern/kernel.asm	/^f0103b74:	53                   	push   %ebx$/;"	l
f0103b75	obj/kern/kernel.asm	/^f0103b75:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103b78	obj/kern/kernel.asm	/^f0103b78:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103b7b	obj/kern/kernel.asm	/^f0103b7b:	8b 03                	mov    (%ebx),%eax$/;"	l
f0103b7d	obj/kern/kernel.asm	/^f0103b7d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103b81	obj/kern/kernel.asm	/^f0103b81:	c7 04 24 32 75 10 f0 	movl   $0xf0107532,(%esp)$/;"	l
f0103b88	obj/kern/kernel.asm	/^f0103b88:	e8 3e fe ff ff       	call   f01039cb <cprintf>$/;"	l
f0103b8d	obj/kern/kernel.asm	/^f0103b8d:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0103b90	obj/kern/kernel.asm	/^f0103b90:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103b94	obj/kern/kernel.asm	/^f0103b94:	c7 04 24 41 75 10 f0 	movl   $0xf0107541,(%esp)$/;"	l
f0103b9b	obj/kern/kernel.asm	/^f0103b9b:	e8 2b fe ff ff       	call   f01039cb <cprintf>$/;"	l
f0103ba0	obj/kern/kernel.asm	/^f0103ba0:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0103ba3	obj/kern/kernel.asm	/^f0103ba3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103ba7	obj/kern/kernel.asm	/^f0103ba7:	c7 04 24 50 75 10 f0 	movl   $0xf0107550,(%esp)$/;"	l
f0103bae	obj/kern/kernel.asm	/^f0103bae:	e8 18 fe ff ff       	call   f01039cb <cprintf>$/;"	l
f0103bb3	obj/kern/kernel.asm	/^f0103bb3:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0103bb6	obj/kern/kernel.asm	/^f0103bb6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103bba	obj/kern/kernel.asm	/^f0103bba:	c7 04 24 5f 75 10 f0 	movl   $0xf010755f,(%esp)$/;"	l
f0103bc1	obj/kern/kernel.asm	/^f0103bc1:	e8 05 fe ff ff       	call   f01039cb <cprintf>$/;"	l
f0103bc6	obj/kern/kernel.asm	/^f0103bc6:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103bc9	obj/kern/kernel.asm	/^f0103bc9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103bcd	obj/kern/kernel.asm	/^f0103bcd:	c7 04 24 6e 75 10 f0 	movl   $0xf010756e,(%esp)$/;"	l
f0103bd4	obj/kern/kernel.asm	/^f0103bd4:	e8 f2 fd ff ff       	call   f01039cb <cprintf>$/;"	l
f0103bd9	obj/kern/kernel.asm	/^f0103bd9:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0103bdc	obj/kern/kernel.asm	/^f0103bdc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103be0	obj/kern/kernel.asm	/^f0103be0:	c7 04 24 7d 75 10 f0 	movl   $0xf010757d,(%esp)$/;"	l
f0103be7	obj/kern/kernel.asm	/^f0103be7:	e8 df fd ff ff       	call   f01039cb <cprintf>$/;"	l
f0103bec	obj/kern/kernel.asm	/^f0103bec:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f0103bef	obj/kern/kernel.asm	/^f0103bef:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103bf3	obj/kern/kernel.asm	/^f0103bf3:	c7 04 24 8c 75 10 f0 	movl   $0xf010758c,(%esp)$/;"	l
f0103bfa	obj/kern/kernel.asm	/^f0103bfa:	e8 cc fd ff ff       	call   f01039cb <cprintf>$/;"	l
f0103bff	obj/kern/kernel.asm	/^f0103bff:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f0103c02	obj/kern/kernel.asm	/^f0103c02:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103c06	obj/kern/kernel.asm	/^f0103c06:	c7 04 24 9b 75 10 f0 	movl   $0xf010759b,(%esp)$/;"	l
f0103c0d	obj/kern/kernel.asm	/^f0103c0d:	e8 b9 fd ff ff       	call   f01039cb <cprintf>$/;"	l
f0103c12	obj/kern/kernel.asm	/^f0103c12:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103c15	obj/kern/kernel.asm	/^f0103c15:	5b                   	pop    %ebx$/;"	l
f0103c16	obj/kern/kernel.asm	/^f0103c16:	5d                   	pop    %ebp$/;"	l
f0103c17	obj/kern/kernel.asm	/^f0103c17:	c3                   	ret    $/;"	l
f0103c18	obj/kern/kernel.asm	/^f0103c18 <print_trapframe>:$/;"	l
f0103c18	obj/kern/kernel.asm	/^f0103c18:	55                   	push   %ebp$/;"	l
f0103c19	obj/kern/kernel.asm	/^f0103c19:	89 e5                	mov    %esp,%ebp$/;"	l
f0103c1b	obj/kern/kernel.asm	/^f0103c1b:	53                   	push   %ebx$/;"	l
f0103c1c	obj/kern/kernel.asm	/^f0103c1c:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103c1f	obj/kern/kernel.asm	/^f0103c1f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103c22	obj/kern/kernel.asm	/^f0103c22:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103c26	obj/kern/kernel.asm	/^f0103c26:	c7 04 24 aa 75 10 f0 	movl   $0xf01075aa,(%esp)$/;"	l
f0103c2d	obj/kern/kernel.asm	/^f0103c2d:	e8 99 fd ff ff       	call   f01039cb <cprintf>$/;"	l
f0103c32	obj/kern/kernel.asm	/^f0103c32:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103c35	obj/kern/kernel.asm	/^f0103c35:	e8 37 ff ff ff       	call   f0103b71 <print_regs>$/;"	l
f0103c3a	obj/kern/kernel.asm	/^f0103c3a:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0103c3e	obj/kern/kernel.asm	/^f0103c3e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103c42	obj/kern/kernel.asm	/^f0103c42:	c7 04 24 bc 75 10 f0 	movl   $0xf01075bc,(%esp)$/;"	l
f0103c49	obj/kern/kernel.asm	/^f0103c49:	e8 7d fd ff ff       	call   f01039cb <cprintf>$/;"	l
f0103c4e	obj/kern/kernel.asm	/^f0103c4e:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0103c52	obj/kern/kernel.asm	/^f0103c52:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103c56	obj/kern/kernel.asm	/^f0103c56:	c7 04 24 cf 75 10 f0 	movl   $0xf01075cf,(%esp)$/;"	l
f0103c5d	obj/kern/kernel.asm	/^f0103c5d:	e8 69 fd ff ff       	call   f01039cb <cprintf>$/;"	l
f0103c62	obj/kern/kernel.asm	/^f0103c62:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0103c68	obj/kern/kernel.asm	/^f0103c68:	77 09                	ja     f0103c73 <print_trapframe+0x5b>$/;"	l
f0103c6a	obj/kern/kernel.asm	/^f0103c6a:	8b 14 85 80 78 10 f0 	mov    -0xfef8780(,%eax,4),%edx$/;"	l
f0103c71	obj/kern/kernel.asm	/^f0103c71:	eb 1c                	jmp    f0103c8f <print_trapframe+0x77>$/;"	l
f0103c73	obj/kern/kernel.asm	/^f0103c73:	ba e2 75 10 f0       	mov    $0xf01075e2,%edx$/;"	l
f0103c78	obj/kern/kernel.asm	/^f0103c78:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0103c7b	obj/kern/kernel.asm	/^f0103c7b:	74 12                	je     f0103c8f <print_trapframe+0x77>$/;"	l
f0103c7d	obj/kern/kernel.asm	/^f0103c7d:	8d 48 e0             	lea    -0x20(%eax),%ecx$/;"	l
f0103c80	obj/kern/kernel.asm	/^f0103c80:	ba fd 75 10 f0       	mov    $0xf01075fd,%edx$/;"	l
f0103c85	obj/kern/kernel.asm	/^f0103c85:	83 f9 0f             	cmp    $0xf,%ecx$/;"	l
f0103c88	obj/kern/kernel.asm	/^f0103c88:	76 05                	jbe    f0103c8f <print_trapframe+0x77>$/;"	l
f0103c8a	obj/kern/kernel.asm	/^f0103c8a:	ba ee 75 10 f0       	mov    $0xf01075ee,%edx$/;"	l
f0103c8f	obj/kern/kernel.asm	/^f0103c8f:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0103c93	obj/kern/kernel.asm	/^f0103c93:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103c97	obj/kern/kernel.asm	/^f0103c97:	c7 04 24 10 76 10 f0 	movl   $0xf0107610,(%esp)$/;"	l
f0103c9e	obj/kern/kernel.asm	/^f0103c9e:	e8 28 fd ff ff       	call   f01039cb <cprintf>$/;"	l
f0103ca3	obj/kern/kernel.asm	/^f0103ca3:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0103ca6	obj/kern/kernel.asm	/^f0103ca6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103caa	obj/kern/kernel.asm	/^f0103caa:	c7 04 24 22 76 10 f0 	movl   $0xf0107622,(%esp)$/;"	l
f0103cb1	obj/kern/kernel.asm	/^f0103cb1:	e8 15 fd ff ff       	call   f01039cb <cprintf>$/;"	l
f0103cb6	obj/kern/kernel.asm	/^f0103cb6:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0103cb9	obj/kern/kernel.asm	/^f0103cb9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103cbd	obj/kern/kernel.asm	/^f0103cbd:	c7 04 24 31 76 10 f0 	movl   $0xf0107631,(%esp)$/;"	l
f0103cc4	obj/kern/kernel.asm	/^f0103cc4:	e8 02 fd ff ff       	call   f01039cb <cprintf>$/;"	l
f0103cc9	obj/kern/kernel.asm	/^f0103cc9:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0103ccd	obj/kern/kernel.asm	/^f0103ccd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103cd1	obj/kern/kernel.asm	/^f0103cd1:	c7 04 24 40 76 10 f0 	movl   $0xf0107640,(%esp)$/;"	l
f0103cd8	obj/kern/kernel.asm	/^f0103cd8:	e8 ee fc ff ff       	call   f01039cb <cprintf>$/;"	l
f0103cdd	obj/kern/kernel.asm	/^f0103cdd:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0103ce0	obj/kern/kernel.asm	/^f0103ce0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103ce4	obj/kern/kernel.asm	/^f0103ce4:	c7 04 24 53 76 10 f0 	movl   $0xf0107653,(%esp)$/;"	l
f0103ceb	obj/kern/kernel.asm	/^f0103ceb:	e8 db fc ff ff       	call   f01039cb <cprintf>$/;"	l
f0103cf0	obj/kern/kernel.asm	/^f0103cf0:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0103cf3	obj/kern/kernel.asm	/^f0103cf3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103cf7	obj/kern/kernel.asm	/^f0103cf7:	c7 04 24 62 76 10 f0 	movl   $0xf0107662,(%esp)$/;"	l
f0103cfe	obj/kern/kernel.asm	/^f0103cfe:	e8 c8 fc ff ff       	call   f01039cb <cprintf>$/;"	l
f0103d03	obj/kern/kernel.asm	/^f0103d03:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0103d07	obj/kern/kernel.asm	/^f0103d07:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103d0b	obj/kern/kernel.asm	/^f0103d0b:	c7 04 24 71 76 10 f0 	movl   $0xf0107671,(%esp)$/;"	l
f0103d12	obj/kern/kernel.asm	/^f0103d12:	e8 b4 fc ff ff       	call   f01039cb <cprintf>$/;"	l
f0103d17	obj/kern/kernel.asm	/^f0103d17:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	5b                   	pop    %ebx$/;"	l
f0103d1b	obj/kern/kernel.asm	/^f0103d1b:	5d                   	pop    %ebp$/;"	l
f0103d1c	obj/kern/kernel.asm	/^f0103d1c:	c3                   	ret    $/;"	l
f0103d1d	obj/kern/kernel.asm	/^f0103d1d <page_fault_handler>:$/;"	l
f0103d1d	obj/kern/kernel.asm	/^f0103d1d:	55                   	push   %ebp$/;"	l
f0103d1e	obj/kern/kernel.asm	/^f0103d1e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d20	obj/kern/kernel.asm	/^f0103d20:	83 ec 68             	sub    $0x68,%esp$/;"	l
f0103d23	obj/kern/kernel.asm	/^f0103d23:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0103d26	obj/kern/kernel.asm	/^f0103d26:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0103d29	obj/kern/kernel.asm	/^f0103d29:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0103d2c	obj/kern/kernel.asm	/^f0103d2c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103d2f	obj/kern/kernel.asm	/^f0103d2f:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f0103d32	obj/kern/kernel.asm	/^f0103d32:	66 83 7b 34 08       	cmpw   $0x8,0x34(%ebx)$/;"	l
f0103d37	obj/kern/kernel.asm	/^f0103d37:	75 24                	jne    f0103d5d <page_fault_handler+0x40>$/;"	l
f0103d39	obj/kern/kernel.asm	/^f0103d39:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103d3c	obj/kern/kernel.asm	/^f0103d3c:	e8 d7 fe ff ff       	call   f0103c18 <print_trapframe>$/;"	l
f0103d41	obj/kern/kernel.asm	/^f0103d41:	c7 44 24 08 84 76 10 	movl   $0xf0107684,0x8(%esp)$/;"	l
f0103d48	obj/kern/kernel.asm	/^f0103d48:	f0 $/;"	l
f0103d49	obj/kern/kernel.asm	/^f0103d49:	c7 44 24 04 fb 00 00 	movl   $0xfb,0x4(%esp)$/;"	l
f0103d50	obj/kern/kernel.asm	/^f0103d50:	00 $/;"	l
f0103d51	obj/kern/kernel.asm	/^f0103d51:	c7 04 24 9b 76 10 f0 	movl   $0xf010769b,(%esp)$/;"	l
f0103d58	obj/kern/kernel.asm	/^f0103d58:	e8 28 c3 ff ff       	call   f0100085 <_panic>$/;"	l
f0103d5d	obj/kern/kernel.asm	/^f0103d5d:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0103d62	obj/kern/kernel.asm	/^f0103d62:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f0103d66	obj/kern/kernel.asm	/^f0103d66:	0f 84 1e 01 00 00    	je     f0103e8a <page_fault_handler+0x16d>$/;"	l
f0103d6c	obj/kern/kernel.asm	/^f0103d6c:	c7 44 24 0c 07 00 00 	movl   $0x7,0xc(%esp)$/;"	l
f0103d73	obj/kern/kernel.asm	/^f0103d73:	00 $/;"	l
f0103d74	obj/kern/kernel.asm	/^f0103d74:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0103d7b	obj/kern/kernel.asm	/^f0103d7b:	00 $/;"	l
f0103d7c	obj/kern/kernel.asm	/^f0103d7c:	c7 44 24 04 ff ff bf 	movl   $0xeebfffff,0x4(%esp)$/;"	l
f0103d83	obj/kern/kernel.asm	/^f0103d83:	ee $/;"	l
f0103d84	obj/kern/kernel.asm	/^f0103d84:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87:	e8 58 d6 ff ff       	call   f01013e4 <user_mem_assert>$/;"	l
f0103d8c	obj/kern/kernel.asm	/^f0103d8c:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0103d91	obj/kern/kernel.asm	/^f0103d91:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
f0103d94	obj/kern/kernel.asm	/^f0103d94:	3d ff ef bf ee       	cmp    $0xeebfefff,%eax$/;"	l
f0103d99	obj/kern/kernel.asm	/^f0103d99:	77 73                	ja     f0103e0e <page_fault_handler+0xf1>$/;"	l
f0103d9b	obj/kern/kernel.asm	/^f0103d9b:	89 75 b4             	mov    %esi,-0x4c(%ebp)$/;"	l
f0103d9e	obj/kern/kernel.asm	/^f0103d9e:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0103da3	obj/kern/kernel.asm	/^f0103da3:	8b 50 2c             	mov    0x2c(%eax),%edx$/;"	l
f0103da6	obj/kern/kernel.asm	/^f0103da6:	89 55 b8             	mov    %edx,-0x48(%ebp)$/;"	l
f0103da9	obj/kern/kernel.asm	/^f0103da9:	8d 55 bc             	lea    -0x44(%ebp),%edx$/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0103db1	obj/kern/kernel.asm	/^f0103db1:	89 d7                	mov    %edx,%edi$/;"	l
f0103db3	obj/kern/kernel.asm	/^f0103db3:	89 c6                	mov    %eax,%esi$/;"	l
f0103db5	obj/kern/kernel.asm	/^f0103db5:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0103db7	obj/kern/kernel.asm	/^f0103db7:	8b 50 30             	mov    0x30(%eax),%edx$/;"	l
f0103dba	obj/kern/kernel.asm	/^f0103dba:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0103dbd	obj/kern/kernel.asm	/^f0103dbd:	8b 50 38             	mov    0x38(%eax),%edx$/;"	l
f0103dc0	obj/kern/kernel.asm	/^f0103dc0:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0103dc3	obj/kern/kernel.asm	/^f0103dc3:	8b 50 3c             	mov    0x3c(%eax),%edx$/;"	l
f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0103dc9	obj/kern/kernel.asm	/^f0103dc9:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)$/;"	l
f0103dd6	obj/kern/kernel.asm	/^f0103dd6:	00 $/;"	l
f0103dd7	obj/kern/kernel.asm	/^f0103dd7:	8d 45 b4             	lea    -0x4c(%ebp),%eax$/;"	l
f0103dda	obj/kern/kernel.asm	/^f0103dda:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103dde	obj/kern/kernel.asm	/^f0103dde:	c7 04 24 cc ff bf ee 	movl   $0xeebfffcc,(%esp)$/;"	l
f0103de5	obj/kern/kernel.asm	/^f0103de5:	e8 2b 16 00 00       	call   f0105415 <memmove>$/;"	l
f0103dea	obj/kern/kernel.asm	/^f0103dea:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0103def	obj/kern/kernel.asm	/^f0103def:	c7 40 3c cc ff bf ee 	movl   $0xeebfffcc,0x3c(%eax)$/;"	l
f0103df6	obj/kern/kernel.asm	/^f0103df6:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0103dfb	obj/kern/kernel.asm	/^f0103dfb:	8b 50 64             	mov    0x64(%eax),%edx$/;"	l
f0103dfe	obj/kern/kernel.asm	/^f0103dfe:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
f0103e01	obj/kern/kernel.asm	/^f0103e01:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0103e06	obj/kern/kernel.asm	/^f0103e06:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103e09	obj/kern/kernel.asm	/^f0103e09:	e8 81 f2 ff ff       	call   f010308f <env_run>$/;"	l
f0103e0e	obj/kern/kernel.asm	/^f0103e0e:	83 e8 38             	sub    $0x38,%eax$/;"	l
f0103e11	obj/kern/kernel.asm	/^f0103e11:	3d 00 f0 bf ee       	cmp    $0xeebff000,%eax$/;"	l
f0103e16	obj/kern/kernel.asm	/^f0103e16:	76 72                	jbe    f0103e8a <page_fault_handler+0x16d>$/;"	l
f0103e18	obj/kern/kernel.asm	/^f0103e18:	89 75 b4             	mov    %esi,-0x4c(%ebp)$/;"	l
f0103e1b	obj/kern/kernel.asm	/^f0103e1b:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0103e20	obj/kern/kernel.asm	/^f0103e20:	8b 50 2c             	mov    0x2c(%eax),%edx$/;"	l
f0103e23	obj/kern/kernel.asm	/^f0103e23:	89 55 b8             	mov    %edx,-0x48(%ebp)$/;"	l
f0103e26	obj/kern/kernel.asm	/^f0103e26:	8d 55 bc             	lea    -0x44(%ebp),%edx$/;"	l
f0103e29	obj/kern/kernel.asm	/^f0103e29:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0103e2e	obj/kern/kernel.asm	/^f0103e2e:	89 d7                	mov    %edx,%edi$/;"	l
f0103e30	obj/kern/kernel.asm	/^f0103e30:	89 c6                	mov    %eax,%esi$/;"	l
f0103e32	obj/kern/kernel.asm	/^f0103e32:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0103e34	obj/kern/kernel.asm	/^f0103e34:	8b 50 30             	mov    0x30(%eax),%edx$/;"	l
f0103e37	obj/kern/kernel.asm	/^f0103e37:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0103e3a	obj/kern/kernel.asm	/^f0103e3a:	8b 50 38             	mov    0x38(%eax),%edx$/;"	l
f0103e3d	obj/kern/kernel.asm	/^f0103e3d:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40:	8b 50 3c             	mov    0x3c(%eax),%edx$/;"	l
f0103e43	obj/kern/kernel.asm	/^f0103e43:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0103e46	obj/kern/kernel.asm	/^f0103e46:	8b 50 60             	mov    0x60(%eax),%edx$/;"	l
f0103e49	obj/kern/kernel.asm	/^f0103e49:	0f 22 da             	mov    %edx,%cr3$/;"	l
f0103e4c	obj/kern/kernel.asm	/^f0103e4c:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)$/;"	l
f0103e53	obj/kern/kernel.asm	/^f0103e53:	00 $/;"	l
f0103e54	obj/kern/kernel.asm	/^f0103e54:	8d 55 b4             	lea    -0x4c(%ebp),%edx$/;"	l
f0103e57	obj/kern/kernel.asm	/^f0103e57:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0103e5b	obj/kern/kernel.asm	/^f0103e5b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
f0103e5e	obj/kern/kernel.asm	/^f0103e5e:	83 e8 38             	sub    $0x38,%eax$/;"	l
f0103e61	obj/kern/kernel.asm	/^f0103e61:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103e64	obj/kern/kernel.asm	/^f0103e64:	e8 ac 15 00 00       	call   f0105415 <memmove>$/;"	l
f0103e69	obj/kern/kernel.asm	/^f0103e69:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0103e6e	obj/kern/kernel.asm	/^f0103e6e:	83 68 3c 38          	subl   $0x38,0x3c(%eax)$/;"	l
f0103e72	obj/kern/kernel.asm	/^f0103e72:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0103e77	obj/kern/kernel.asm	/^f0103e77:	8b 50 64             	mov    0x64(%eax),%edx$/;"	l
f0103e7a	obj/kern/kernel.asm	/^f0103e7a:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
f0103e7d	obj/kern/kernel.asm	/^f0103e7d:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0103e82	obj/kern/kernel.asm	/^f0103e82:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85:	e8 05 f2 ff ff       	call   f010308f <env_run>$/;"	l
f0103e8a	obj/kern/kernel.asm	/^f0103e8a:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0103e8d	obj/kern/kernel.asm	/^f0103e8d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103e91	obj/kern/kernel.asm	/^f0103e91:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0103e95	obj/kern/kernel.asm	/^f0103e95:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a:	8b 40 4c             	mov    0x4c(%eax),%eax$/;"	l
f0103e9d	obj/kern/kernel.asm	/^f0103e9d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103ea1	obj/kern/kernel.asm	/^f0103ea1:	c7 04 24 58 78 10 f0 	movl   $0xf0107858,(%esp)$/;"	l
f0103ea8	obj/kern/kernel.asm	/^f0103ea8:	e8 1e fb ff ff       	call   f01039cb <cprintf>$/;"	l
f0103ead	obj/kern/kernel.asm	/^f0103ead:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103eb0	obj/kern/kernel.asm	/^f0103eb0:	e8 63 fd ff ff       	call   f0103c18 <print_trapframe>$/;"	l
f0103eb5	obj/kern/kernel.asm	/^f0103eb5:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0103eba	obj/kern/kernel.asm	/^f0103eba:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ebd	obj/kern/kernel.asm	/^f0103ebd:	e8 f4 f3 ff ff       	call   f01032b6 <env_destroy>$/;"	l
f0103ec2	obj/kern/kernel.asm	/^f0103ec2:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0103ec5	obj/kern/kernel.asm	/^f0103ec5:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0103ec8	obj/kern/kernel.asm	/^f0103ec8:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0103ecb	obj/kern/kernel.asm	/^f0103ecb:	89 ec                	mov    %ebp,%esp$/;"	l
f0103ecd	obj/kern/kernel.asm	/^f0103ecd:	5d                   	pop    %ebp$/;"	l
f0103ece	obj/kern/kernel.asm	/^f0103ece:	c3                   	ret    $/;"	l
f0103ecf	obj/kern/kernel.asm	/^f0103ecf <trap>:$/;"	l
f0103ecf	obj/kern/kernel.asm	/^f0103ecf:	55                   	push   %ebp$/;"	l
f0103ed0	obj/kern/kernel.asm	/^f0103ed0:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ed2	obj/kern/kernel.asm	/^f0103ed2:	57                   	push   %edi$/;"	l
f0103ed3	obj/kern/kernel.asm	/^f0103ed3:	56                   	push   %esi$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0103ed7	obj/kern/kernel.asm	/^f0103ed7:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103eda	obj/kern/kernel.asm	/^f0103eda:	fc                   	cld    $/;"	l
f0103edb	obj/kern/kernel.asm	/^f0103edb:	9c                   	pushf  $/;"	l
f0103edc	obj/kern/kernel.asm	/^f0103edc:	58                   	pop    %eax$/;"	l
f0103edd	obj/kern/kernel.asm	/^f0103edd:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0103ee0	obj/kern/kernel.asm	/^f0103ee0:	74 24                	je     f0103f06 <trap+0x37>$/;"	l
f0103ee2	obj/kern/kernel.asm	/^f0103ee2:	c7 44 24 0c a7 76 10 	movl   $0xf01076a7,0xc(%esp)$/;"	l
f0103ee9	obj/kern/kernel.asm	/^f0103ee9:	f0 $/;"	l
f0103eea	obj/kern/kernel.asm	/^f0103eea:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0103ef1	obj/kern/kernel.asm	/^f0103ef1:	f0 $/;"	l
f0103ef2	obj/kern/kernel.asm	/^f0103ef2:	c7 44 24 04 ce 00 00 	movl   $0xce,0x4(%esp)$/;"	l
f0103ef9	obj/kern/kernel.asm	/^f0103ef9:	00 $/;"	l
f0103efa	obj/kern/kernel.asm	/^f0103efa:	c7 04 24 9b 76 10 f0 	movl   $0xf010769b,(%esp)$/;"	l
f0103f01	obj/kern/kernel.asm	/^f0103f01:	e8 7f c1 ff ff       	call   f0100085 <_panic>$/;"	l
f0103f06	obj/kern/kernel.asm	/^f0103f06:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0103f0a	obj/kern/kernel.asm	/^f0103f0a:	83 e0 03             	and    $0x3,%eax$/;"	l
f0103f0d	obj/kern/kernel.asm	/^f0103f0d:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0103f10	obj/kern/kernel.asm	/^f0103f10:	75 3c                	jne    f0103f4e <trap+0x7f>$/;"	l
f0103f12	obj/kern/kernel.asm	/^f0103f12:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	85 c0                	test   %eax,%eax$/;"	l
f0103f19	obj/kern/kernel.asm	/^f0103f19:	75 24                	jne    f0103f3f <trap+0x70>$/;"	l
f0103f1b	obj/kern/kernel.asm	/^f0103f1b:	c7 44 24 0c c0 76 10 	movl   $0xf01076c0,0xc(%esp)$/;"	l
f0103f22	obj/kern/kernel.asm	/^f0103f22:	f0 $/;"	l
f0103f23	obj/kern/kernel.asm	/^f0103f23:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0103f2a	obj/kern/kernel.asm	/^f0103f2a:	f0 $/;"	l
f0103f2b	obj/kern/kernel.asm	/^f0103f2b:	c7 44 24 04 d7 00 00 	movl   $0xd7,0x4(%esp)$/;"	l
f0103f32	obj/kern/kernel.asm	/^f0103f32:	00 $/;"	l
f0103f33	obj/kern/kernel.asm	/^f0103f33:	c7 04 24 9b 76 10 f0 	movl   $0xf010769b,(%esp)$/;"	l
f0103f3a	obj/kern/kernel.asm	/^f0103f3a:	e8 46 c1 ff ff       	call   f0100085 <_panic>$/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0103f44	obj/kern/kernel.asm	/^f0103f44:	89 c7                	mov    %eax,%edi$/;"	l
f0103f46	obj/kern/kernel.asm	/^f0103f46:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0103f48	obj/kern/kernel.asm	/^f0103f48:	8b 35 24 e4 26 f0    	mov    0xf026e424,%esi$/;"	l
f0103f4e	obj/kern/kernel.asm	/^f0103f4e:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0103f51	obj/kern/kernel.asm	/^f0103f51:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0103f54	obj/kern/kernel.asm	/^f0103f54:	75 19                	jne    f0103f6f <trap+0xa0>$/;"	l
f0103f56	obj/kern/kernel.asm	/^f0103f56:	c7 04 24 c7 76 10 f0 	movl   $0xf01076c7,(%esp)$/;"	l
f0103f5d	obj/kern/kernel.asm	/^f0103f5d:	e8 69 fa ff ff       	call   f01039cb <cprintf>$/;"	l
f0103f62	obj/kern/kernel.asm	/^f0103f62:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103f65	obj/kern/kernel.asm	/^f0103f65:	e8 ae fc ff ff       	call   f0103c18 <print_trapframe>$/;"	l
f0103f6a	obj/kern/kernel.asm	/^f0103f6a:	e9 bf 00 00 00       	jmp    f010402e <trap+0x15f>$/;"	l
f0103f6f	obj/kern/kernel.asm	/^f0103f6f:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0103f72	obj/kern/kernel.asm	/^f0103f72:	75 11                	jne    f0103f85 <trap+0xb6>$/;"	l
f0103f74	obj/kern/kernel.asm	/^f0103f74:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103f77	obj/kern/kernel.asm	/^f0103f77:	90                   	nop$/;"	l
f0103f78	obj/kern/kernel.asm	/^f0103f78:	e8 33 c8 ff ff       	call   f01007b0 <monitor>$/;"	l
f0103f7d	obj/kern/kernel.asm	/^f0103f7d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0103f80	obj/kern/kernel.asm	/^f0103f80:	e9 a9 00 00 00       	jmp    f010402e <trap+0x15f>$/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0103f88	obj/kern/kernel.asm	/^f0103f88:	75 10                	jne    f0103f9a <trap+0xcb>$/;"	l
f0103f8a	obj/kern/kernel.asm	/^f0103f8a:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103f8d	obj/kern/kernel.asm	/^f0103f8d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0103f90	obj/kern/kernel.asm	/^f0103f90:	e8 88 fd ff ff       	call   f0103d1d <page_fault_handler>$/;"	l
f0103f95	obj/kern/kernel.asm	/^f0103f95:	e9 94 00 00 00       	jmp    f010402e <trap+0x15f>$/;"	l
f0103f9a	obj/kern/kernel.asm	/^f0103f9a:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0103f9d	obj/kern/kernel.asm	/^f0103f9d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0103fa0	obj/kern/kernel.asm	/^f0103fa0:	75 32                	jne    f0103fd4 <trap+0x105>$/;"	l
f0103fa2	obj/kern/kernel.asm	/^f0103fa2:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0103fa5	obj/kern/kernel.asm	/^f0103fa5:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0103fa9	obj/kern/kernel.asm	/^f0103fa9:	8b 06                	mov    (%esi),%eax$/;"	l
f0103fab	obj/kern/kernel.asm	/^f0103fab:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0103faf	obj/kern/kernel.asm	/^f0103faf:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f0103fb2	obj/kern/kernel.asm	/^f0103fb2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103fb6	obj/kern/kernel.asm	/^f0103fb6:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f0103fb9	obj/kern/kernel.asm	/^f0103fb9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103fbd	obj/kern/kernel.asm	/^f0103fbd:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0103fc0	obj/kern/kernel.asm	/^f0103fc0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103fc4	obj/kern/kernel.asm	/^f0103fc4:	8b 46 1c             	mov    0x1c(%esi),%eax$/;"	l
f0103fc7	obj/kern/kernel.asm	/^f0103fc7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103fca	obj/kern/kernel.asm	/^f0103fca:	e8 b3 01 00 00       	call   f0104182 <syscall>$/;"	l
f0103fcf	obj/kern/kernel.asm	/^f0103fcf:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0103fd2	obj/kern/kernel.asm	/^f0103fd2:	eb 5a                	jmp    f010402e <trap+0x15f>$/;"	l
f0103fd4	obj/kern/kernel.asm	/^f0103fd4:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0103fd7	obj/kern/kernel.asm	/^f0103fd7:	75 11                	jne    f0103fea <trap+0x11b>$/;"	l
f0103fd9	obj/kern/kernel.asm	/^f0103fd9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0103fe0	obj/kern/kernel.asm	/^f0103fe0:	e8 69 20 00 00       	call   f010604e <time_tick>$/;"	l
f0103fe5	obj/kern/kernel.asm	/^f0103fe5:	e8 ba 00 00 00       	call   f01040a4 <sched_yield>$/;"	l
f0103fea	obj/kern/kernel.asm	/^f0103fea:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	e8 26 fc ff ff       	call   f0103c18 <print_trapframe>$/;"	l
f0103ff2	obj/kern/kernel.asm	/^f0103ff2:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0103ff7	obj/kern/kernel.asm	/^f0103ff7:	75 1c                	jne    f0104015 <trap+0x146>$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0104000	obj/kern/kernel.asm	/^f0104000:	f0 $/;"	l
f0104001	obj/kern/kernel.asm	/^f0104001:	c7 44 24 04 ba 00 00 	movl   $0xba,0x4(%esp)$/;"	l
f0104008	obj/kern/kernel.asm	/^f0104008:	00 $/;"	l
f0104009	obj/kern/kernel.asm	/^f0104009:	c7 04 24 9b 76 10 f0 	movl   $0xf010769b,(%esp)$/;"	l
f0104010	obj/kern/kernel.asm	/^f0104010:	e8 70 c0 ff ff       	call   f0100085 <_panic>$/;"	l
f0104015	obj/kern/kernel.asm	/^f0104015:	c7 04 24 fd 76 10 f0 	movl   $0xf01076fd,(%esp)$/;"	l
f010401c	obj/kern/kernel.asm	/^f010401c:	e8 aa f9 ff ff       	call   f01039cb <cprintf>$/;"	l
f0104021	obj/kern/kernel.asm	/^f0104021:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0104026	obj/kern/kernel.asm	/^f0104026:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104029	obj/kern/kernel.asm	/^f0104029:	e8 88 f2 ff ff       	call   f01032b6 <env_destroy>$/;"	l
f010402e	obj/kern/kernel.asm	/^f010402e:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0104033	obj/kern/kernel.asm	/^f0104033:	85 c0                	test   %eax,%eax$/;"	l
f0104035	obj/kern/kernel.asm	/^f0104035:	74 0e                	je     f0104045 <trap+0x176>$/;"	l
f0104037	obj/kern/kernel.asm	/^f0104037:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f010403b	obj/kern/kernel.asm	/^f010403b:	75 08                	jne    f0104045 <trap+0x176>$/;"	l
f010403d	obj/kern/kernel.asm	/^f010403d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104040	obj/kern/kernel.asm	/^f0104040:	e8 4a f0 ff ff       	call   f010308f <env_run>$/;"	l
f0104045	obj/kern/kernel.asm	/^f0104045:	e8 5a 00 00 00       	call   f01040a4 <sched_yield>$/;"	l
f010404c	obj/kern/kernel.asm	/^f010404c <DivideByZero>:$/;"	l
f010404c	obj/kern/kernel.asm	/^f010404c:	6a 00                	push   $0x0$/;"	l
f010404e	obj/kern/kernel.asm	/^f010404e:	6a 00                	push   $0x0$/;"	l
f0104050	obj/kern/kernel.asm	/^f0104050:	eb 3e                	jmp    f0104090 <_alltraps>$/;"	l
f0104052	obj/kern/kernel.asm	/^f0104052 <BadSegment>:$/;"	l
f0104052	obj/kern/kernel.asm	/^f0104052:	6a 0d                	push   $0xd$/;"	l
f0104054	obj/kern/kernel.asm	/^f0104054:	eb 3a                	jmp    f0104090 <_alltraps>$/;"	l
f0104056	obj/kern/kernel.asm	/^f0104056 <PageFault>:$/;"	l
f0104056	obj/kern/kernel.asm	/^f0104056:	6a 0e                	push   $0xe$/;"	l
f0104058	obj/kern/kernel.asm	/^f0104058:	eb 36                	jmp    f0104090 <_alltraps>$/;"	l
f010405a	obj/kern/kernel.asm	/^f010405a <BreakPoint>:$/;"	l
f010405a	obj/kern/kernel.asm	/^f010405a:	6a 00                	push   $0x0$/;"	l
f010405c	obj/kern/kernel.asm	/^f010405c:	6a 03                	push   $0x3$/;"	l
f010405e	obj/kern/kernel.asm	/^f010405e:	eb 30                	jmp    f0104090 <_alltraps>$/;"	l
f0104060	obj/kern/kernel.asm	/^f0104060 <syscaller>:$/;"	l
f0104060	obj/kern/kernel.asm	/^f0104060:	6a 00                	push   $0x0$/;"	l
f0104062	obj/kern/kernel.asm	/^f0104062:	6a 30                	push   $0x30$/;"	l
f0104064	obj/kern/kernel.asm	/^f0104064:	eb 2a                	jmp    f0104090 <_alltraps>$/;"	l
f0104066	obj/kern/kernel.asm	/^f0104066 <irq_timer>:$/;"	l
f0104066	obj/kern/kernel.asm	/^f0104066:	6a 00                	push   $0x0$/;"	l
f0104068	obj/kern/kernel.asm	/^f0104068:	6a 20                	push   $0x20$/;"	l
f010406a	obj/kern/kernel.asm	/^f010406a:	eb 24                	jmp    f0104090 <_alltraps>$/;"	l
f010406c	obj/kern/kernel.asm	/^f010406c <irq_kbd>:$/;"	l
f010406c	obj/kern/kernel.asm	/^f010406c:	6a 00                	push   $0x0$/;"	l
f010406e	obj/kern/kernel.asm	/^f010406e:	6a 21                	push   $0x21$/;"	l
f0104070	obj/kern/kernel.asm	/^f0104070:	eb 1e                	jmp    f0104090 <_alltraps>$/;"	l
f0104072	obj/kern/kernel.asm	/^f0104072 <irq_slave>:$/;"	l
f0104072	obj/kern/kernel.asm	/^f0104072:	6a 00                	push   $0x0$/;"	l
f0104074	obj/kern/kernel.asm	/^f0104074:	6a 22                	push   $0x22$/;"	l
f0104076	obj/kern/kernel.asm	/^f0104076:	eb 18                	jmp    f0104090 <_alltraps>$/;"	l
f0104078	obj/kern/kernel.asm	/^f0104078 <irq_ide>:$/;"	l
f0104078	obj/kern/kernel.asm	/^f0104078:	6a 00                	push   $0x0$/;"	l
f010407a	obj/kern/kernel.asm	/^f010407a:	6a 2e                	push   $0x2e$/;"	l
f010407c	obj/kern/kernel.asm	/^f010407c:	eb 12                	jmp    f0104090 <_alltraps>$/;"	l
f010407e	obj/kern/kernel.asm	/^f010407e <irq_error>:$/;"	l
f010407e	obj/kern/kernel.asm	/^f010407e:	6a 00                	push   $0x0$/;"	l
f0104080	obj/kern/kernel.asm	/^f0104080:	6a 33                	push   $0x33$/;"	l
f0104082	obj/kern/kernel.asm	/^f0104082:	eb 0c                	jmp    f0104090 <_alltraps>$/;"	l
f0104084	obj/kern/kernel.asm	/^f0104084 <irq_spurious>:$/;"	l
f0104084	obj/kern/kernel.asm	/^f0104084:	6a 00                	push   $0x0$/;"	l
f0104086	obj/kern/kernel.asm	/^f0104086:	6a 27                	push   $0x27$/;"	l
f0104088	obj/kern/kernel.asm	/^f0104088:	eb 06                	jmp    f0104090 <_alltraps>$/;"	l
f010408a	obj/kern/kernel.asm	/^f010408a <irq_serial>:$/;"	l
f010408a	obj/kern/kernel.asm	/^f010408a:	6a 00                	push   $0x0$/;"	l
f010408c	obj/kern/kernel.asm	/^f010408c:	6a 24                	push   $0x24$/;"	l
f010408e	obj/kern/kernel.asm	/^f010408e:	eb 00                	jmp    f0104090 <_alltraps>$/;"	l
f0104090	obj/kern/kernel.asm	/^f0104090 <_alltraps>:$/;"	l
f0104090	obj/kern/kernel.asm	/^f0104090:	1e                   	push   %ds$/;"	l
f0104091	obj/kern/kernel.asm	/^f0104091:	06                   	push   %es$/;"	l
f0104092	obj/kern/kernel.asm	/^f0104092:	60                   	pusha  $/;"	l
f0104093	obj/kern/kernel.asm	/^f0104093:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0104098	obj/kern/kernel.asm	/^f0104098:	8e d8                	mov    %eax,%ds$/;"	l
f010409a	obj/kern/kernel.asm	/^f010409a:	8e c0                	mov    %eax,%es$/;"	l
f010409c	obj/kern/kernel.asm	/^f010409c:	54                   	push   %esp$/;"	l
f010409d	obj/kern/kernel.asm	/^f010409d:	e8 2d fe ff ff       	call   f0103ecf <trap>$/;"	l
f01040a4	obj/kern/kernel.asm	/^f01040a4 <sched_yield>:$/;"	l
f01040a4	obj/kern/kernel.asm	/^f01040a4:	55                   	push   %ebp$/;"	l
f01040a5	obj/kern/kernel.asm	/^f01040a5:	89 e5                	mov    %esp,%ebp$/;"	l
f01040a7	obj/kern/kernel.asm	/^f01040a7:	56                   	push   %esi$/;"	l
f01040a8	obj/kern/kernel.asm	/^f01040a8:	53                   	push   %ebx$/;"	l
f01040a9	obj/kern/kernel.asm	/^f01040a9:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01040ac	obj/kern/kernel.asm	/^f01040ac:	8b 15 24 e4 26 f0    	mov    0xf026e424,%edx$/;"	l
f01040b2	obj/kern/kernel.asm	/^f01040b2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01040b7	obj/kern/kernel.asm	/^f01040b7:	85 d2                	test   %edx,%edx$/;"	l
f01040b9	obj/kern/kernel.asm	/^f01040b9:	74 08                	je     f01040c3 <sched_yield+0x1f>$/;"	l
f01040bb	obj/kern/kernel.asm	/^f01040bb:	8b 42 4c             	mov    0x4c(%edx),%eax$/;"	l
f01040be	obj/kern/kernel.asm	/^f01040be:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f01040c3	obj/kern/kernel.asm	/^f01040c3:	83 c0 01             	add    $0x1,%eax$/;"	l
f01040c6	obj/kern/kernel.asm	/^f01040c6:	8b 1d 20 e4 26 f0    	mov    0xf026e420,%ebx$/;"	l
f01040cc	obj/kern/kernel.asm	/^f01040cc:	6b c8 7c             	imul   $0x7c,%eax,%ecx$/;"	l
f01040cf	obj/kern/kernel.asm	/^f01040cf:	8d 0c 0b             	lea    (%ebx,%ecx,1),%ecx$/;"	l
f01040d2	obj/kern/kernel.asm	/^f01040d2:	83 79 54 01          	cmpl   $0x1,0x54(%ecx)$/;"	l
f01040d6	obj/kern/kernel.asm	/^f01040d6:	75 16                	jne    f01040ee <sched_yield+0x4a>$/;"	l
f01040d8	obj/kern/kernel.asm	/^f01040d8:	eb 0c                	jmp    f01040e6 <sched_yield+0x42>$/;"	l
f01040da	obj/kern/kernel.asm	/^f01040da:	6b c8 7c             	imul   $0x7c,%eax,%ecx$/;"	l
f01040dd	obj/kern/kernel.asm	/^f01040dd:	8d 0c 0b             	lea    (%ebx,%ecx,1),%ecx$/;"	l
f01040e0	obj/kern/kernel.asm	/^f01040e0:	83 79 54 01          	cmpl   $0x1,0x54(%ecx)$/;"	l
f01040e4	obj/kern/kernel.asm	/^f01040e4:	75 12                	jne    f01040f8 <sched_yield+0x54>$/;"	l
f01040e6	obj/kern/kernel.asm	/^f01040e6:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f01040e9	obj/kern/kernel.asm	/^f01040e9:	e8 a1 ef ff ff       	call   f010308f <env_run>$/;"	l
f01040ee	obj/kern/kernel.asm	/^f01040ee:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01040f3	obj/kern/kernel.asm	/^f01040f3:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f01040f8	obj/kern/kernel.asm	/^f01040f8:	83 c0 01             	add    $0x1,%eax$/;"	l
f01040fb	obj/kern/kernel.asm	/^f01040fb:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0104100	obj/kern/kernel.asm	/^f0104100:	75 02                	jne    f0104104 <sched_yield+0x60>$/;"	l
f0104102	obj/kern/kernel.asm	/^f0104102:	89 f0                	mov    %esi,%eax$/;"	l
f0104104	obj/kern/kernel.asm	/^f0104104:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104107	obj/kern/kernel.asm	/^f0104107:	81 fa ff 03 00 00    	cmp    $0x3ff,%edx$/;"	l
f010410d	obj/kern/kernel.asm	/^f010410d:	75 cb                	jne    f01040da <sched_yield+0x36>$/;"	l
f010410f	obj/kern/kernel.asm	/^f010410f:	83 7b 54 01          	cmpl   $0x1,0x54(%ebx)$/;"	l
f0104113	obj/kern/kernel.asm	/^f0104113:	75 08                	jne    f010411d <sched_yield+0x79>$/;"	l
f0104115	obj/kern/kernel.asm	/^f0104115:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104118	obj/kern/kernel.asm	/^f0104118:	e8 72 ef ff ff       	call   f010308f <env_run>$/;"	l
f010411d	obj/kern/kernel.asm	/^f010411d:	c7 04 24 d0 78 10 f0 	movl   $0xf01078d0,(%esp)$/;"	l
f0104124	obj/kern/kernel.asm	/^f0104124:	e8 a2 f8 ff ff       	call   f01039cb <cprintf>$/;"	l
f0104129	obj/kern/kernel.asm	/^f0104129:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0104130	obj/kern/kernel.asm	/^f0104130:	e8 7b c6 ff ff       	call   f01007b0 <monitor>$/;"	l
f0104135	obj/kern/kernel.asm	/^f0104135:	eb f2                	jmp    f0104129 <sched_yield+0x85>$/;"	l
f0104140	obj/kern/kernel.asm	/^f0104140 <sys_getenvid>:$/;"	l
f0104140	obj/kern/kernel.asm	/^f0104140:	55                   	push   %ebp$/;"	l
f0104141	obj/kern/kernel.asm	/^f0104141:	89 e5                	mov    %esp,%ebp$/;"	l
f0104143	obj/kern/kernel.asm	/^f0104143:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0104148	obj/kern/kernel.asm	/^f0104148:	8b 40 4c             	mov    0x4c(%eax),%eax$/;"	l
f010414b	obj/kern/kernel.asm	/^f010414b:	5d                   	pop    %ebp$/;"	l
f010414c	obj/kern/kernel.asm	/^f010414c:	c3                   	ret    $/;"	l
f010414d	obj/kern/kernel.asm	/^f010414d <sys_ns_recv>:$/;"	l
f010414d	obj/kern/kernel.asm	/^f010414d:	55                   	push   %ebp$/;"	l
f010414e	obj/kern/kernel.asm	/^f010414e:	89 e5                	mov    %esp,%ebp$/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104153	obj/kern/kernel.asm	/^f0104153:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104156	obj/kern/kernel.asm	/^f0104156:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104159	obj/kern/kernel.asm	/^f0104159:	e8 2c 16 00 00       	call   f010578a <pkt_recv>$/;"	l
f010415e	obj/kern/kernel.asm	/^f010415e:	c9                   	leave  $/;"	l
f010415f	obj/kern/kernel.asm	/^f010415f:	c3                   	ret    $/;"	l
f0104160	obj/kern/kernel.asm	/^f0104160 <sys_ns_send>:$/;"	l
f0104160	obj/kern/kernel.asm	/^f0104160:	55                   	push   %ebp$/;"	l
f0104161	obj/kern/kernel.asm	/^f0104161:	89 e5                	mov    %esp,%ebp$/;"	l
f0104163	obj/kern/kernel.asm	/^f0104163:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104166	obj/kern/kernel.asm	/^f0104166:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104169	obj/kern/kernel.asm	/^f0104169:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010416d	obj/kern/kernel.asm	/^f010416d:	0f b7 45 0c          	movzwl 0xc(%ebp),%eax$/;"	l
f0104171	obj/kern/kernel.asm	/^f0104171:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104175	obj/kern/kernel.asm	/^f0104175:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104178	obj/kern/kernel.asm	/^f0104178:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010417b	obj/kern/kernel.asm	/^f010417b:	e8 d1 14 00 00       	call   f0105651 <pkt_transmit>$/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180:	c9                   	leave  $/;"	l
f0104181	obj/kern/kernel.asm	/^f0104181:	c3                   	ret    $/;"	l
f0104182	obj/kern/kernel.asm	/^f0104182 <syscall>:$/;"	l
f0104182	obj/kern/kernel.asm	/^f0104182:	55                   	push   %ebp$/;"	l
f0104183	obj/kern/kernel.asm	/^f0104183:	89 e5                	mov    %esp,%ebp$/;"	l
f0104185	obj/kern/kernel.asm	/^f0104185:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0104188	obj/kern/kernel.asm	/^f0104188:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f010418b	obj/kern/kernel.asm	/^f010418b:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f010418e	obj/kern/kernel.asm	/^f010418e:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0104191	obj/kern/kernel.asm	/^f0104191:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104194	obj/kern/kernel.asm	/^f0104194:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104197	obj/kern/kernel.asm	/^f0104197:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010419a	obj/kern/kernel.asm	/^f010419a:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010419f	obj/kern/kernel.asm	/^f010419f:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f01041a2	obj/kern/kernel.asm	/^f01041a2:	0f 87 cf 05 00 00    	ja     f0104777 <syscall+0x5f5>$/;"	l
f01041a8	obj/kern/kernel.asm	/^f01041a8:	0f 87 c4 05 00 00    	ja     f0104772 <syscall+0x5f0>$/;"	l
f01041ae	obj/kern/kernel.asm	/^f01041ae:	ff 24 95 3c 79 10 f0 	jmp    *-0xfef86c4(,%edx,4)$/;"	l
f01041b5	obj/kern/kernel.asm	/^f01041b5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01041b9	obj/kern/kernel.asm	/^f01041b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi$/;"	l
f01041c0	obj/kern/kernel.asm	/^f01041c0:	e8 7b ff ff ff       	call   f0104140 <sys_getenvid>$/;"	l
f01041c5	obj/kern/kernel.asm	/^f01041c5:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
f01041cc	obj/kern/kernel.asm	/^f01041cc:	00 $/;"	l
f01041cd	obj/kern/kernel.asm	/^f01041cd:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f01041d1	obj/kern/kernel.asm	/^f01041d1:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01041d5	obj/kern/kernel.asm	/^f01041d5:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f01041da	obj/kern/kernel.asm	/^f01041da:	6b c0 7c             	imul   $0x7c,%eax,%eax$/;"	l
f01041dd	obj/kern/kernel.asm	/^f01041dd:	03 05 20 e4 26 f0    	add    0xf026e420,%eax$/;"	l
f01041e3	obj/kern/kernel.asm	/^f01041e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01041e6	obj/kern/kernel.asm	/^f01041e6:	e8 f9 d1 ff ff       	call   f01013e4 <user_mem_assert>$/;"	l
f01041eb	obj/kern/kernel.asm	/^f01041eb:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01041ef	obj/kern/kernel.asm	/^f01041ef:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01041f3	obj/kern/kernel.asm	/^f01041f3:	c7 04 24 02 79 10 f0 	movl   $0xf0107902,(%esp)$/;"	l
f01041fa	obj/kern/kernel.asm	/^f01041fa:	e8 cc f7 ff ff       	call   f01039cb <cprintf>$/;"	l
f01041ff	obj/kern/kernel.asm	/^f01041ff:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104204	obj/kern/kernel.asm	/^f0104204:	e9 6e 05 00 00       	jmp    f0104777 <syscall+0x5f5>$/;"	l
f0104209	obj/kern/kernel.asm	/^f0104209:	e8 31 c0 ff ff       	call   f010023f <cons_getc>$/;"	l
f010420e	obj/kern/kernel.asm	/^f010420e:	66 90                	xchg   %ax,%ax$/;"	l
f0104210	obj/kern/kernel.asm	/^f0104210:	e9 62 05 00 00       	jmp    f0104777 <syscall+0x5f5>$/;"	l
f0104215	obj/kern/kernel.asm	/^f0104215:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104218	obj/kern/kernel.asm	/^f0104218:	e8 23 ff ff ff       	call   f0104140 <sys_getenvid>$/;"	l
f010421d	obj/kern/kernel.asm	/^f010421d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104220	obj/kern/kernel.asm	/^f0104220:	e9 52 05 00 00       	jmp    f0104777 <syscall+0x5f5>$/;"	l
f0104225	obj/kern/kernel.asm	/^f0104225:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010422c	obj/kern/kernel.asm	/^f010422c:	00 $/;"	l
f010422d	obj/kern/kernel.asm	/^f010422d:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104230	obj/kern/kernel.asm	/^f0104230:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104234	obj/kern/kernel.asm	/^f0104234:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104237	obj/kern/kernel.asm	/^f0104237:	e8 b4 ed ff ff       	call   f0102ff0 <envid2env>$/;"	l
f010423c	obj/kern/kernel.asm	/^f010423c:	85 c0                	test   %eax,%eax$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e:	0f 88 33 05 00 00    	js     f0104777 <syscall+0x5f5>$/;"	l
f0104244	obj/kern/kernel.asm	/^f0104244:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104247	obj/kern/kernel.asm	/^f0104247:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010424a	obj/kern/kernel.asm	/^f010424a:	e8 67 f0 ff ff       	call   f01032b6 <env_destroy>$/;"	l
f010424f	obj/kern/kernel.asm	/^f010424f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104254	obj/kern/kernel.asm	/^f0104254:	e9 1e 05 00 00       	jmp    f0104777 <syscall+0x5f5>$/;"	l
f0104259	obj/kern/kernel.asm	/^f0104259:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f010425c	obj/kern/kernel.asm	/^f010425c:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104260	obj/kern/kernel.asm	/^f0104260:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0104263	obj/kern/kernel.asm	/^f0104263:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104267	obj/kern/kernel.asm	/^f0104267:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010426a	obj/kern/kernel.asm	/^f010426a:	e8 81 ed ff ff       	call   f0102ff0 <envid2env>$/;"	l
f010426f	obj/kern/kernel.asm	/^f010426f:	89 c2                	mov    %eax,%edx$/;"	l
f0104271	obj/kern/kernel.asm	/^f0104271:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0104276	obj/kern/kernel.asm	/^f0104276:	83 fa fe             	cmp    $0xfffffffe,%edx$/;"	l
f0104279	obj/kern/kernel.asm	/^f0104279:	0f 84 f8 04 00 00    	je     f0104777 <syscall+0x5f5>$/;"	l
f010427f	obj/kern/kernel.asm	/^f010427f:	81 ff ff ff bf ee    	cmp    $0xeebfffff,%edi$/;"	l
f0104285	obj/kern/kernel.asm	/^f0104285:	0f 87 d5 00 00 00    	ja     f0104360 <syscall+0x1de>$/;"	l
f010428b	obj/kern/kernel.asm	/^f010428b:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi$/;"	l
f0104291	obj/kern/kernel.asm	/^f0104291:	0f 85 c9 00 00 00    	jne    f0104360 <syscall+0x1de>$/;"	l
f0104297	obj/kern/kernel.asm	/^f0104297:	89 d8                	mov    %ebx,%eax$/;"	l
f0104299	obj/kern/kernel.asm	/^f0104299:	83 e0 05             	and    $0x5,%eax$/;"	l
f010429c	obj/kern/kernel.asm	/^f010429c:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f010429f	obj/kern/kernel.asm	/^f010429f:	0f 85 bb 00 00 00    	jne    f0104360 <syscall+0x1de>$/;"	l
f01042a5	obj/kern/kernel.asm	/^f01042a5:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01042a8	obj/kern/kernel.asm	/^f01042a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01042ab	obj/kern/kernel.asm	/^f01042ab:	e8 df ce ff ff       	call   f010118f <page_alloc>$/;"	l
f01042b0	obj/kern/kernel.asm	/^f01042b0:	89 c2                	mov    %eax,%edx$/;"	l
f01042b2	obj/kern/kernel.asm	/^f01042b2:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01042b7	obj/kern/kernel.asm	/^f01042b7:	83 fa fc             	cmp    $0xfffffffc,%edx$/;"	l
f01042ba	obj/kern/kernel.asm	/^f01042ba:	0f 84 b7 04 00 00    	je     f0104777 <syscall+0x5f5>$/;"	l
f01042c0	obj/kern/kernel.asm	/^f01042c0:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f01042c4	obj/kern/kernel.asm	/^f01042c4:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f01042c8	obj/kern/kernel.asm	/^f01042c8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01042cb	obj/kern/kernel.asm	/^f01042cb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01042cf	obj/kern/kernel.asm	/^f01042cf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01042d2	obj/kern/kernel.asm	/^f01042d2:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f01042d5	obj/kern/kernel.asm	/^f01042d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01042d8	obj/kern/kernel.asm	/^f01042d8:	e8 41 d2 ff ff       	call   f010151e <page_insert>$/;"	l
f01042dd	obj/kern/kernel.asm	/^f01042dd:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f01042e0	obj/kern/kernel.asm	/^f01042e0:	75 15                	jne    f01042f7 <syscall+0x175>$/;"	l
f01042e2	obj/kern/kernel.asm	/^f01042e2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01042e5	obj/kern/kernel.asm	/^f01042e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01042e8	obj/kern/kernel.asm	/^f01042e8:	e8 e9 cb ff ff       	call   f0100ed6 <page_free>$/;"	l
f01042ed	obj/kern/kernel.asm	/^f01042ed:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01042f2	obj/kern/kernel.asm	/^f01042f2:	e9 80 04 00 00       	jmp    f0104777 <syscall+0x5f5>$/;"	l
f01042f7	obj/kern/kernel.asm	/^f01042f7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01042fa	obj/kern/kernel.asm	/^f01042fa:	2b 05 64 48 29 f0    	sub    0xf0294864,%eax$/;"	l
f0104300	obj/kern/kernel.asm	/^f0104300:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0104303	obj/kern/kernel.asm	/^f0104303:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0104309	obj/kern/kernel.asm	/^f0104309:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010430c	obj/kern/kernel.asm	/^f010430c:	89 c2                	mov    %eax,%edx$/;"	l
f010430e	obj/kern/kernel.asm	/^f010430e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0104311	obj/kern/kernel.asm	/^f0104311:	3b 15 58 48 29 f0    	cmp    0xf0294858,%edx$/;"	l
f0104317	obj/kern/kernel.asm	/^f0104317:	72 20                	jb     f0104339 <syscall+0x1b7>$/;"	l
f0104319	obj/kern/kernel.asm	/^f0104319:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010431d	obj/kern/kernel.asm	/^f010431d:	c7 44 24 08 a0 6b 10 	movl   $0xf0106ba0,0x8(%esp)$/;"	l
f0104324	obj/kern/kernel.asm	/^f0104324:	f0 $/;"	l
f0104325	obj/kern/kernel.asm	/^f0104325:	c7 44 24 04 02 01 00 	movl   $0x102,0x4(%esp)$/;"	l
f010432c	obj/kern/kernel.asm	/^f010432c:	00 $/;"	l
f010432d	obj/kern/kernel.asm	/^f010432d:	c7 04 24 07 79 10 f0 	movl   $0xf0107907,(%esp)$/;"	l
f0104334	obj/kern/kernel.asm	/^f0104334:	e8 4c bd ff ff       	call   f0100085 <_panic>$/;"	l
f0104339	obj/kern/kernel.asm	/^f0104339:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0104340	obj/kern/kernel.asm	/^f0104340:	00 $/;"	l
f0104341	obj/kern/kernel.asm	/^f0104341:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0104348	obj/kern/kernel.asm	/^f0104348:	00 $/;"	l
f0104349	obj/kern/kernel.asm	/^f0104349:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010434e	obj/kern/kernel.asm	/^f010434e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104351	obj/kern/kernel.asm	/^f0104351:	e8 60 10 00 00       	call   f01053b6 <memset>$/;"	l
f0104356	obj/kern/kernel.asm	/^f0104356:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010435b	obj/kern/kernel.asm	/^f010435b:	e9 17 04 00 00       	jmp    f0104777 <syscall+0x5f5>$/;"	l
f0104360	obj/kern/kernel.asm	/^f0104360:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104365	obj/kern/kernel.asm	/^f0104365:	e9 0d 04 00 00       	jmp    f0104777 <syscall+0x5f5>$/;"	l
f010436a	obj/kern/kernel.asm	/^f010436a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0104370	obj/kern/kernel.asm	/^f0104370:	e8 2f fd ff ff       	call   f01040a4 <sched_yield>$/;"	l
f0104375	obj/kern/kernel.asm	/^f0104375:	8b 5d 1c             	mov    0x1c(%ebp),%ebx$/;"	l
f0104378	obj/kern/kernel.asm	/^f0104378:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010437c	obj/kern/kernel.asm	/^f010437c:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010437f	obj/kern/kernel.asm	/^f010437f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104383	obj/kern/kernel.asm	/^f0104383:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104386	obj/kern/kernel.asm	/^f0104386:	e8 65 ec ff ff       	call   f0102ff0 <envid2env>$/;"	l
f010438b	obj/kern/kernel.asm	/^f010438b:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	0f 84 b1 00 00 00    	je     f0104445 <syscall+0x2c3>$/;"	l
f0104394	obj/kern/kernel.asm	/^f0104394:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104398	obj/kern/kernel.asm	/^f0104398:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f010439b	obj/kern/kernel.asm	/^f010439b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010439f	obj/kern/kernel.asm	/^f010439f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01043a2	obj/kern/kernel.asm	/^f01043a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01043a5	obj/kern/kernel.asm	/^f01043a5:	e8 46 ec ff ff       	call   f0102ff0 <envid2env>$/;"	l
f01043aa	obj/kern/kernel.asm	/^f01043aa:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f01043ad	obj/kern/kernel.asm	/^f01043ad:	0f 84 92 00 00 00    	je     f0104445 <syscall+0x2c3>$/;"	l
f01043b3	obj/kern/kernel.asm	/^f01043b3:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f01043b6	obj/kern/kernel.asm	/^f01043b6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01043ba	obj/kern/kernel.asm	/^f01043ba:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01043be	obj/kern/kernel.asm	/^f01043be:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f01043c4	obj/kern/kernel.asm	/^f01043c4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01043c7	obj/kern/kernel.asm	/^f01043c7:	e8 70 d0 ff ff       	call   f010143c <page_lookup>$/;"	l
f01043cc	obj/kern/kernel.asm	/^f01043cc:	81 ff ff ff bf ee    	cmp    $0xeebfffff,%edi$/;"	l
f01043d2	obj/kern/kernel.asm	/^f01043d2:	77 7b                	ja     f010444f <syscall+0x2cd>$/;"	l
f01043d4	obj/kern/kernel.asm	/^f01043d4:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi$/;"	l
f01043da	obj/kern/kernel.asm	/^f01043da:	75 73                	jne    f010444f <syscall+0x2cd>$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	89 da                	mov    %ebx,%edx$/;"	l
f01043de	obj/kern/kernel.asm	/^f01043de:	83 e2 05             	and    $0x5,%edx$/;"	l
f01043e1	obj/kern/kernel.asm	/^f01043e1:	83 fa 05             	cmp    $0x5,%edx$/;"	l
f01043e4	obj/kern/kernel.asm	/^f01043e4:	75 69                	jne    f010444f <syscall+0x2cd>$/;"	l
f01043e6	obj/kern/kernel.asm	/^f01043e6:	89 da                	mov    %ebx,%edx$/;"	l
f01043e8	obj/kern/kernel.asm	/^f01043e8:	83 e2 02             	and    $0x2,%edx$/;"	l
f01043eb	obj/kern/kernel.asm	/^f01043eb:	74 08                	je     f01043f5 <syscall+0x273>$/;"	l
f01043ed	obj/kern/kernel.asm	/^f01043ed:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f01043f0	obj/kern/kernel.asm	/^f01043f0:	f6 01 02             	testb  $0x2,(%ecx)$/;"	l
f01043f3	obj/kern/kernel.asm	/^f01043f3:	74 5a                	je     f010444f <syscall+0x2cd>$/;"	l
f01043f5	obj/kern/kernel.asm	/^f01043f5:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	77 51                	ja     f010444f <syscall+0x2cd>$/;"	l
f01043fe	obj/kern/kernel.asm	/^f01043fe:	f7 45 18 ff 0f 00 00 	testl  $0xfff,0x18(%ebp)$/;"	l
f0104405	obj/kern/kernel.asm	/^f0104405:	75 48                	jne    f010444f <syscall+0x2cd>$/;"	l
f0104407	obj/kern/kernel.asm	/^f0104407:	85 d2                	test   %edx,%edx$/;"	l
f0104409	obj/kern/kernel.asm	/^f0104409:	74 08                	je     f0104413 <syscall+0x291>$/;"	l
f010440b	obj/kern/kernel.asm	/^f010440b:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010440e	obj/kern/kernel.asm	/^f010440e:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0104411	obj/kern/kernel.asm	/^f0104411:	74 3c                	je     f010444f <syscall+0x2cd>$/;"	l
f0104413	obj/kern/kernel.asm	/^f0104413:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0104417	obj/kern/kernel.asm	/^f0104417:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
f010441a	obj/kern/kernel.asm	/^f010441a:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010441e	obj/kern/kernel.asm	/^f010441e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104422	obj/kern/kernel.asm	/^f0104422:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104425	obj/kern/kernel.asm	/^f0104425:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f0104428	obj/kern/kernel.asm	/^f0104428:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010442b	obj/kern/kernel.asm	/^f010442b:	e8 ee d0 ff ff       	call   f010151e <page_insert>$/;"	l
f0104430	obj/kern/kernel.asm	/^f0104430:	83 f8 fc             	cmp    $0xfffffffc,%eax$/;"	l
f0104433	obj/kern/kernel.asm	/^f0104433:	0f 95 c0             	setne  %al$/;"	l
f0104436	obj/kern/kernel.asm	/^f0104436:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	8d 04 85 fc ff ff ff 	lea    -0x4(,%eax,4),%eax$/;"	l
f0104440	obj/kern/kernel.asm	/^f0104440:	e9 32 03 00 00       	jmp    f0104777 <syscall+0x5f5>$/;"	l
f0104445	obj/kern/kernel.asm	/^f0104445:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010444a	obj/kern/kernel.asm	/^f010444a:	e9 28 03 00 00       	jmp    f0104777 <syscall+0x5f5>$/;"	l
f010444f	obj/kern/kernel.asm	/^f010444f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0104454	obj/kern/kernel.asm	/^f0104454:	e9 1e 03 00 00       	jmp    f0104777 <syscall+0x5f5>$/;"	l
f0104459	obj/kern/kernel.asm	/^f0104459:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104460	obj/kern/kernel.asm	/^f0104460:	00 $/;"	l
f0104461	obj/kern/kernel.asm	/^f0104461:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104464	obj/kern/kernel.asm	/^f0104464:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104468	obj/kern/kernel.asm	/^f0104468:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010446b	obj/kern/kernel.asm	/^f010446b:	e8 80 eb ff ff       	call   f0102ff0 <envid2env>$/;"	l
f0104470	obj/kern/kernel.asm	/^f0104470:	89 c2                	mov    %eax,%edx$/;"	l
f0104472	obj/kern/kernel.asm	/^f0104472:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0104477	obj/kern/kernel.asm	/^f0104477:	83 fa fe             	cmp    $0xfffffffe,%edx$/;"	l
f010447a	obj/kern/kernel.asm	/^f010447a:	0f 84 f7 02 00 00    	je     f0104777 <syscall+0x5f5>$/;"	l
f0104480	obj/kern/kernel.asm	/^f0104480:	81 ff ff ff bf ee    	cmp    $0xeebfffff,%edi$/;"	l
f0104486	obj/kern/kernel.asm	/^f0104486:	77 24                	ja     f01044ac <syscall+0x32a>$/;"	l
f0104488	obj/kern/kernel.asm	/^f0104488:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi$/;"	l
f010448e	obj/kern/kernel.asm	/^f010448e:	75 1c                	jne    f01044ac <syscall+0x32a>$/;"	l
f0104490	obj/kern/kernel.asm	/^f0104490:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104494	obj/kern/kernel.asm	/^f0104494:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104497	obj/kern/kernel.asm	/^f0104497:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f010449a	obj/kern/kernel.asm	/^f010449a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010449d	obj/kern/kernel.asm	/^f010449d:	e8 1d d0 ff ff       	call   f01014bf <page_remove>$/;"	l
f01044a2	obj/kern/kernel.asm	/^f01044a2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01044a7	obj/kern/kernel.asm	/^f01044a7:	e9 cb 02 00 00       	jmp    f0104777 <syscall+0x5f5>$/;"	l
f01044ac	obj/kern/kernel.asm	/^f01044ac:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01044b1	obj/kern/kernel.asm	/^f01044b1:	e9 c1 02 00 00       	jmp    f0104777 <syscall+0x5f5>$/;"	l
f01044b6	obj/kern/kernel.asm	/^f01044b6:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f01044bb	obj/kern/kernel.asm	/^f01044bb:	8b 40 4c             	mov    0x4c(%eax),%eax$/;"	l
f01044be	obj/kern/kernel.asm	/^f01044be:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01044c2	obj/kern/kernel.asm	/^f01044c2:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f01044c5	obj/kern/kernel.asm	/^f01044c5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01044c8	obj/kern/kernel.asm	/^f01044c8:	e8 2d ef ff ff       	call   f01033fa <env_alloc>$/;"	l
f01044cd	obj/kern/kernel.asm	/^f01044cd:	89 c2                	mov    %eax,%edx$/;"	l
f01044cf	obj/kern/kernel.asm	/^f01044cf:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01044d4	obj/kern/kernel.asm	/^f01044d4:	83 fa fc             	cmp    $0xfffffffc,%edx$/;"	l
f01044d7	obj/kern/kernel.asm	/^f01044d7:	0f 84 9a 02 00 00    	je     f0104777 <syscall+0x5f5>$/;"	l
f01044dd	obj/kern/kernel.asm	/^f01044dd:	b0 fb                	mov    $0xfb,%al$/;"	l
f01044df	obj/kern/kernel.asm	/^f01044df:	83 fa fb             	cmp    $0xfffffffb,%edx$/;"	l
f01044e2	obj/kern/kernel.asm	/^f01044e2:	0f 84 8f 02 00 00    	je     f0104777 <syscall+0x5f5>$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01044eb	obj/kern/kernel.asm	/^f01044eb:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f01044f2	obj/kern/kernel.asm	/^f01044f2:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01044f5	obj/kern/kernel.asm	/^f01044f5:	8b 35 24 e4 26 f0    	mov    0xf026e424,%esi$/;"	l
f01044fb	obj/kern/kernel.asm	/^f01044fb:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104500	obj/kern/kernel.asm	/^f0104500:	89 c7                	mov    %eax,%edi$/;"	l
f0104502	obj/kern/kernel.asm	/^f0104502:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104504	obj/kern/kernel.asm	/^f0104504:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104507	obj/kern/kernel.asm	/^f0104507:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f010450e	obj/kern/kernel.asm	/^f010450e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104511	obj/kern/kernel.asm	/^f0104511:	8b 40 4c             	mov    0x4c(%eax),%eax$/;"	l
f0104514	obj/kern/kernel.asm	/^f0104514:	e9 5e 02 00 00       	jmp    f0104777 <syscall+0x5f5>$/;"	l
f0104519	obj/kern/kernel.asm	/^f0104519:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104520	obj/kern/kernel.asm	/^f0104520:	00 $/;"	l
f0104521	obj/kern/kernel.asm	/^f0104521:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104524	obj/kern/kernel.asm	/^f0104524:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104528	obj/kern/kernel.asm	/^f0104528:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010452b	obj/kern/kernel.asm	/^f010452b:	e8 c0 ea ff ff       	call   f0102ff0 <envid2env>$/;"	l
f0104530	obj/kern/kernel.asm	/^f0104530:	83 f8 fe             	cmp    $0xfffffffe,%eax$/;"	l
f0104533	obj/kern/kernel.asm	/^f0104533:	0f 84 3e 02 00 00    	je     f0104777 <syscall+0x5f5>$/;"	l
f0104539	obj/kern/kernel.asm	/^f0104539:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010453c	obj/kern/kernel.asm	/^f010453c:	89 78 54             	mov    %edi,0x54(%eax)$/;"	l
f010453f	obj/kern/kernel.asm	/^f010453f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104544	obj/kern/kernel.asm	/^f0104544:	e9 2e 02 00 00       	jmp    f0104777 <syscall+0x5f5>$/;"	l
f0104549	obj/kern/kernel.asm	/^f0104549:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0104550	obj/kern/kernel.asm	/^f0104550:	00 $/;"	l
f0104551	obj/kern/kernel.asm	/^f0104551:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104558	obj/kern/kernel.asm	/^f0104558:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010455b	obj/kern/kernel.asm	/^f010455b:	e8 90 ea ff ff       	call   f0102ff0 <envid2env>$/;"	l
f0104560	obj/kern/kernel.asm	/^f0104560:	89 c2                	mov    %eax,%edx$/;"	l
f0104562	obj/kern/kernel.asm	/^f0104562:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0104567	obj/kern/kernel.asm	/^f0104567:	83 fa fe             	cmp    $0xfffffffe,%edx$/;"	l
f010456a	obj/kern/kernel.asm	/^f010456a:	0f 84 07 02 00 00    	je     f0104777 <syscall+0x5f5>$/;"	l
f0104570	obj/kern/kernel.asm	/^f0104570:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f0104577	obj/kern/kernel.asm	/^f0104577:	00 $/;"	l
f0104578	obj/kern/kernel.asm	/^f0104578:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010457f	obj/kern/kernel.asm	/^f010457f:	00 $/;"	l
f0104580	obj/kern/kernel.asm	/^f0104580:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104584	obj/kern/kernel.asm	/^f0104584:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104587	obj/kern/kernel.asm	/^f0104587:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010458a	obj/kern/kernel.asm	/^f010458a:	e8 55 ce ff ff       	call   f01013e4 <user_mem_assert>$/;"	l
f010458f	obj/kern/kernel.asm	/^f010458f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104592	obj/kern/kernel.asm	/^f0104592:	89 78 64             	mov    %edi,0x64(%eax)$/;"	l
f0104595	obj/kern/kernel.asm	/^f0104595:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010459a	obj/kern/kernel.asm	/^f010459a:	e9 d8 01 00 00       	jmp    f0104777 <syscall+0x5f5>$/;"	l
f010459f	obj/kern/kernel.asm	/^f010459f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01045a6	obj/kern/kernel.asm	/^f01045a6:	00 $/;"	l
f01045a7	obj/kern/kernel.asm	/^f01045a7:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f01045aa	obj/kern/kernel.asm	/^f01045aa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045ae	obj/kern/kernel.asm	/^f01045ae:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01045b1	obj/kern/kernel.asm	/^f01045b1:	e8 3a ea ff ff       	call   f0102ff0 <envid2env>$/;"	l
f01045b6	obj/kern/kernel.asm	/^f01045b6:	89 c2                	mov    %eax,%edx$/;"	l
f01045b8	obj/kern/kernel.asm	/^f01045b8:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01045bd	obj/kern/kernel.asm	/^f01045bd:	85 d2                	test   %edx,%edx$/;"	l
f01045bf	obj/kern/kernel.asm	/^f01045bf:	0f 88 b2 01 00 00    	js     f0104777 <syscall+0x5f5>$/;"	l
f01045c5	obj/kern/kernel.asm	/^f01045c5:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01045c8	obj/kern/kernel.asm	/^f01045c8:	b0 f9                	mov    $0xf9,%al$/;"	l
f01045ca	obj/kern/kernel.asm	/^f01045ca:	83 7a 68 00          	cmpl   $0x0,0x68(%edx)$/;"	l
f01045ce	obj/kern/kernel.asm	/^f01045ce:	0f 84 a3 01 00 00    	je     f0104777 <syscall+0x5f5>$/;"	l
f01045d4	obj/kern/kernel.asm	/^f01045d4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01045d7	obj/kern/kernel.asm	/^f01045d7:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f01045dc	obj/kern/kernel.asm	/^f01045dc:	77 42                	ja     f0104620 <syscall+0x49e>$/;"	l
f01045de	obj/kern/kernel.asm	/^f01045de:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
f01045e1	obj/kern/kernel.asm	/^f01045e1:	81 e2 05 0e 00 00    	and    $0xe05,%edx$/;"	l
f01045e7	obj/kern/kernel.asm	/^f01045e7:	83 fa 05             	cmp    $0x5,%edx$/;"	l
f01045ea	obj/kern/kernel.asm	/^f01045ea:	0f 85 b5 00 00 00    	jne    f01046a5 <syscall+0x523>$/;"	l
f01045f0	obj/kern/kernel.asm	/^f01045f0:	a9 ff 0f 00 00       	test   $0xfff,%eax$/;"	l
f01045f5	obj/kern/kernel.asm	/^f01045f5:	0f 85 aa 00 00 00    	jne    f01046a5 <syscall+0x523>$/;"	l
f01045fb	obj/kern/kernel.asm	/^f01045fb:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0104602	obj/kern/kernel.asm	/^f0104602:	00 $/;"	l
f0104603	obj/kern/kernel.asm	/^f0104603:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104607	obj/kern/kernel.asm	/^f0104607:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f010460c	obj/kern/kernel.asm	/^f010460c:	8b 40 5c             	mov    0x5c(%eax),%eax$/;"	l
f010460f	obj/kern/kernel.asm	/^f010460f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104612	obj/kern/kernel.asm	/^f0104612:	e8 25 ce ff ff       	call   f010143c <page_lookup>$/;"	l
f0104617	obj/kern/kernel.asm	/^f0104617:	85 c0                	test   %eax,%eax$/;"	l
f0104619	obj/kern/kernel.asm	/^f0104619:	75 18                	jne    f0104633 <syscall+0x4b1>$/;"	l
f010461b	obj/kern/kernel.asm	/^f010461b:	e9 85 00 00 00       	jmp    f01046a5 <syscall+0x523>$/;"	l
f0104620	obj/kern/kernel.asm	/^f0104620:	c7 42 78 00 00 00 00 	movl   $0x0,0x78(%edx)$/;"	l
f0104627	obj/kern/kernel.asm	/^f0104627:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010462a	obj/kern/kernel.asm	/^f010462a:	c7 40 68 00 00 00 00 	movl   $0x0,0x68(%eax)$/;"	l
f0104631	obj/kern/kernel.asm	/^f0104631:	eb 41                	jmp    f0104674 <syscall+0x4f2>$/;"	l
f0104633	obj/kern/kernel.asm	/^f0104633:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0104636	obj/kern/kernel.asm	/^f0104636:	c7 42 68 00 00 00 00 	movl   $0x0,0x68(%edx)$/;"	l
f010463d	obj/kern/kernel.asm	/^f010463d:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0104640	obj/kern/kernel.asm	/^f0104640:	8b 4a 6c             	mov    0x6c(%edx),%ecx$/;"	l
f0104643	obj/kern/kernel.asm	/^f0104643:	81 f9 ff ff bf ee    	cmp    $0xeebfffff,%ecx$/;"	l
f0104649	obj/kern/kernel.asm	/^f0104649:	77 29                	ja     f0104674 <syscall+0x4f2>$/;"	l
f010464b	obj/kern/kernel.asm	/^f010464b:	8b 5d 18             	mov    0x18(%ebp),%ebx$/;"	l
f010464e	obj/kern/kernel.asm	/^f010464e:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0104652	obj/kern/kernel.asm	/^f0104652:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0104656	obj/kern/kernel.asm	/^f0104656:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010465a	obj/kern/kernel.asm	/^f010465a:	8b 42 5c             	mov    0x5c(%edx),%eax$/;"	l
f010465d	obj/kern/kernel.asm	/^f010465d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104660	obj/kern/kernel.asm	/^f0104660:	e8 b9 ce ff ff       	call   f010151e <page_insert>$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	89 c2                	mov    %eax,%edx$/;"	l
f0104667	obj/kern/kernel.asm	/^f0104667:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010466c	obj/kern/kernel.asm	/^f010466c:	85 d2                	test   %edx,%edx$/;"	l
f010466e	obj/kern/kernel.asm	/^f010466e:	0f 88 03 01 00 00    	js     f0104777 <syscall+0x5f5>$/;"	l
f0104674	obj/kern/kernel.asm	/^f0104674:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104677	obj/kern/kernel.asm	/^f0104677:	89 78 70             	mov    %edi,0x70(%eax)$/;"	l
f010467a	obj/kern/kernel.asm	/^f010467a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010467d	obj/kern/kernel.asm	/^f010467d:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%eax)$/;"	l
f0104684	obj/kern/kernel.asm	/^f0104684:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104687	obj/kern/kernel.asm	/^f0104687:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
f010468a	obj/kern/kernel.asm	/^f010468a:	89 50 78             	mov    %edx,0x78(%eax)$/;"	l
f010468d	obj/kern/kernel.asm	/^f010468d:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f0104692	obj/kern/kernel.asm	/^f0104692:	8b 50 4c             	mov    0x4c(%eax),%edx$/;"	l
f0104695	obj/kern/kernel.asm	/^f0104695:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104698	obj/kern/kernel.asm	/^f0104698:	89 50 74             	mov    %edx,0x74(%eax)$/;"	l
f010469b	obj/kern/kernel.asm	/^f010469b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01046a0	obj/kern/kernel.asm	/^f01046a0:	e9 d2 00 00 00       	jmp    f0104777 <syscall+0x5f5>$/;"	l
f01046a5	obj/kern/kernel.asm	/^f01046a5:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01046aa	obj/kern/kernel.asm	/^f01046aa:	e9 c8 00 00 00       	jmp    f0104777 <syscall+0x5f5>$/;"	l
f01046af	obj/kern/kernel.asm	/^f01046af:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f01046b4	obj/kern/kernel.asm	/^f01046b4:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f01046c0	obj/kern/kernel.asm	/^f01046c0:	c7 40 68 01 00 00 00 	movl   $0x1,0x68(%eax)$/;"	l
f01046c7	obj/kern/kernel.asm	/^f01046c7:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f01046cc	obj/kern/kernel.asm	/^f01046cc:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f01046d3	obj/kern/kernel.asm	/^f01046d3:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi$/;"	l
f01046d9	obj/kern/kernel.asm	/^f01046d9:	0f 85 93 00 00 00    	jne    f0104772 <syscall+0x5f0>$/;"	l
f01046df	obj/kern/kernel.asm	/^f01046df:	a1 24 e4 26 f0       	mov    0xf026e424,%eax$/;"	l
f01046e4	obj/kern/kernel.asm	/^f01046e4:	89 70 6c             	mov    %esi,0x6c(%eax)$/;"	l
f01046e7	obj/kern/kernel.asm	/^f01046e7:	e8 b8 f9 ff ff       	call   f01040a4 <sched_yield>$/;"	l
f01046ec	obj/kern/kernel.asm	/^f01046ec:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01046f3	obj/kern/kernel.asm	/^f01046f3:	00 $/;"	l
f01046f4	obj/kern/kernel.asm	/^f01046f4:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f01046f7	obj/kern/kernel.asm	/^f01046f7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046fb	obj/kern/kernel.asm	/^f01046fb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	e8 ed e8 ff ff       	call   f0102ff0 <envid2env>$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	89 c2                	mov    %eax,%edx$/;"	l
f0104705	obj/kern/kernel.asm	/^f0104705:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010470a	obj/kern/kernel.asm	/^f010470a:	83 fa fe             	cmp    $0xfffffffe,%edx$/;"	l
f010470d	obj/kern/kernel.asm	/^f010470d:	74 68                	je     f0104777 <syscall+0x5f5>$/;"	l
f010470f	obj/kern/kernel.asm	/^f010470f:	89 fe                	mov    %edi,%esi$/;"	l
f0104711	obj/kern/kernel.asm	/^f0104711:	b0 fd                	mov    $0xfd,%al$/;"	l
f0104713	obj/kern/kernel.asm	/^f0104713:	85 ff                	test   %edi,%edi$/;"	l
f0104715	obj/kern/kernel.asm	/^f0104715:	74 60                	je     f0104777 <syscall+0x5f5>$/;"	l
f0104717	obj/kern/kernel.asm	/^f0104717:	81 4f 38 00 02 00 00 	orl    $0x200,0x38(%edi)$/;"	l
f010471e	obj/kern/kernel.asm	/^f010471e:	8b 47 30             	mov    0x30(%edi),%eax$/;"	l
f0104721	obj/kern/kernel.asm	/^f0104721:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104725	obj/kern/kernel.asm	/^f0104725:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104729	obj/kern/kernel.asm	/^f0104729:	c7 04 24 18 79 10 f0 	movl   $0xf0107918,(%esp)$/;"	l
f0104730	obj/kern/kernel.asm	/^f0104730:	e8 96 f2 ff ff       	call   f01039cb <cprintf>$/;"	l
f0104735	obj/kern/kernel.asm	/^f0104735:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104738	obj/kern/kernel.asm	/^f0104738:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f010473d	obj/kern/kernel.asm	/^f010473d:	89 c7                	mov    %eax,%edi$/;"	l
f010473f	obj/kern/kernel.asm	/^f010473f:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104741	obj/kern/kernel.asm	/^f0104741:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104746	obj/kern/kernel.asm	/^f0104746:	eb 2f                	jmp    f0104777 <syscall+0x5f5>$/;"	l
f0104748	obj/kern/kernel.asm	/^f0104748:	e8 f2 18 00 00       	call   f010603f <time_msec>$/;"	l
f010474d	obj/kern/kernel.asm	/^f010474d:	eb 28                	jmp    f0104777 <syscall+0x5f5>$/;"	l
f010474f	obj/kern/kernel.asm	/^f010474f:	0f be 5d 14          	movsbl 0x14(%ebp),%ebx$/;"	l
f0104753	obj/kern/kernel.asm	/^f0104753:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104757	obj/kern/kernel.asm	/^f0104757:	0f b7 ff             	movzwl %di,%edi$/;"	l
f010475a	obj/kern/kernel.asm	/^f010475a:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010475e	obj/kern/kernel.asm	/^f010475e:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104761	obj/kern/kernel.asm	/^f0104761:	e8 fa f9 ff ff       	call   f0104160 <sys_ns_send>$/;"	l
f0104766	obj/kern/kernel.asm	/^f0104766:	eb 0f                	jmp    f0104777 <syscall+0x5f5>$/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010476b	obj/kern/kernel.asm	/^f010476b:	e8 dd f9 ff ff       	call   f010414d <sys_ns_recv>$/;"	l
f0104770	obj/kern/kernel.asm	/^f0104770:	eb 05                	jmp    f0104777 <syscall+0x5f5>$/;"	l
f0104772	obj/kern/kernel.asm	/^f0104772:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104777	obj/kern/kernel.asm	/^f0104777:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f010477a	obj/kern/kernel.asm	/^f010477a:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f010477d	obj/kern/kernel.asm	/^f010477d:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0104780	obj/kern/kernel.asm	/^f0104780:	89 ec                	mov    %ebp,%esp$/;"	l
f0104782	obj/kern/kernel.asm	/^f0104782:	5d                   	pop    %ebp$/;"	l
f0104783	obj/kern/kernel.asm	/^f0104783:	c3                   	ret    $/;"	l
f0104790	obj/kern/kernel.asm	/^f0104790 <stab_binsearch>:$/;"	l
f0104790	obj/kern/kernel.asm	/^f0104790:	55                   	push   %ebp$/;"	l
f0104791	obj/kern/kernel.asm	/^f0104791:	89 e5                	mov    %esp,%ebp$/;"	l
f0104793	obj/kern/kernel.asm	/^f0104793:	57                   	push   %edi$/;"	l
f0104794	obj/kern/kernel.asm	/^f0104794:	56                   	push   %esi$/;"	l
f0104795	obj/kern/kernel.asm	/^f0104795:	53                   	push   %ebx$/;"	l
f0104796	obj/kern/kernel.asm	/^f0104796:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104799	obj/kern/kernel.asm	/^f0104799:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010479c	obj/kern/kernel.asm	/^f010479c:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f010479f	obj/kern/kernel.asm	/^f010479f:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f01047a2	obj/kern/kernel.asm	/^f01047a2:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01047a5	obj/kern/kernel.asm	/^f01047a5:	8b 1a                	mov    (%edx),%ebx$/;"	l
f01047a7	obj/kern/kernel.asm	/^f01047a7:	8b 01                	mov    (%ecx),%eax$/;"	l
f01047a9	obj/kern/kernel.asm	/^f01047a9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01047ac	obj/kern/kernel.asm	/^f01047ac:	39 c3                	cmp    %eax,%ebx$/;"	l
f01047ae	obj/kern/kernel.asm	/^f01047ae:	0f 8f 9c 00 00 00    	jg     f0104850 <stab_binsearch+0xc0>$/;"	l
f01047b4	obj/kern/kernel.asm	/^f01047b4:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01047bb	obj/kern/kernel.asm	/^f01047bb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01047be	obj/kern/kernel.asm	/^f01047be:	01 d8                	add    %ebx,%eax$/;"	l
f01047c0	obj/kern/kernel.asm	/^f01047c0:	89 c7                	mov    %eax,%edi$/;"	l
f01047c2	obj/kern/kernel.asm	/^f01047c2:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	01 c7                	add    %eax,%edi$/;"	l
f01047c7	obj/kern/kernel.asm	/^f01047c7:	d1 ff                	sar    %edi$/;"	d
f01047c9	obj/kern/kernel.asm	/^f01047c9:	39 df                	cmp    %ebx,%edi$/;"	l
f01047cb	obj/kern/kernel.asm	/^f01047cb:	7c 33                	jl     f0104800 <stab_binsearch+0x70>$/;"	l
f01047cd	obj/kern/kernel.asm	/^f01047cd:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f01047d0	obj/kern/kernel.asm	/^f01047d0:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01047d3	obj/kern/kernel.asm	/^f01047d3:	0f b6 44 82 04       	movzbl 0x4(%edx,%eax,4),%eax$/;"	l
f01047d8	obj/kern/kernel.asm	/^f01047d8:	39 f0                	cmp    %esi,%eax$/;"	l
f01047da	obj/kern/kernel.asm	/^f01047da:	0f 84 bc 00 00 00    	je     f010489c <stab_binsearch+0x10c>$/;"	l
f01047e0	obj/kern/kernel.asm	/^f01047e0:	8d 44 7f fd          	lea    -0x3(%edi,%edi,2),%eax$/;"	l
f01047e4	obj/kern/kernel.asm	/^f01047e4:	8d 54 82 04          	lea    0x4(%edx,%eax,4),%edx$/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8:	89 f8                	mov    %edi,%eax$/;"	l
f01047ea	obj/kern/kernel.asm	/^f01047ea:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01047ed	obj/kern/kernel.asm	/^f01047ed:	39 d8                	cmp    %ebx,%eax$/;"	l
f01047ef	obj/kern/kernel.asm	/^f01047ef:	7c 0f                	jl     f0104800 <stab_binsearch+0x70>$/;"	l
f01047f1	obj/kern/kernel.asm	/^f01047f1:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01047f4	obj/kern/kernel.asm	/^f01047f4:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01047f7	obj/kern/kernel.asm	/^f01047f7:	39 f1                	cmp    %esi,%ecx$/;"	l
f01047f9	obj/kern/kernel.asm	/^f01047f9:	75 ef                	jne    f01047ea <stab_binsearch+0x5a>$/;"	l
f01047fb	obj/kern/kernel.asm	/^f01047fb:	e9 9e 00 00 00       	jmp    f010489e <stab_binsearch+0x10e>$/;"	l
f0104800	obj/kern/kernel.asm	/^f0104800:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0104803	obj/kern/kernel.asm	/^f0104803:	eb 3c                	jmp    f0104841 <stab_binsearch+0xb1>$/;"	l
f0104805	obj/kern/kernel.asm	/^f0104805:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f0104808	obj/kern/kernel.asm	/^f0104808:	89 01                	mov    %eax,(%ecx)$/;"	l
f010480a	obj/kern/kernel.asm	/^f010480a:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f010480d	obj/kern/kernel.asm	/^f010480d:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0104814	obj/kern/kernel.asm	/^f0104814:	eb 2b                	jmp    f0104841 <stab_binsearch+0xb1>$/;"	l
f0104816	obj/kern/kernel.asm	/^f0104816:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0104819	obj/kern/kernel.asm	/^f0104819:	76 14                	jbe    f010482f <stab_binsearch+0x9f>$/;"	l
f010481b	obj/kern/kernel.asm	/^f010481b:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010481e	obj/kern/kernel.asm	/^f010481e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104821	obj/kern/kernel.asm	/^f0104821:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0104824	obj/kern/kernel.asm	/^f0104824:	89 02                	mov    %eax,(%edx)$/;"	l
f0104826	obj/kern/kernel.asm	/^f0104826:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f010482d	obj/kern/kernel.asm	/^f010482d:	eb 12                	jmp    f0104841 <stab_binsearch+0xb1>$/;"	l
f010482f	obj/kern/kernel.asm	/^f010482f:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f0104832	obj/kern/kernel.asm	/^f0104832:	89 01                	mov    %eax,(%ecx)$/;"	l
f0104834	obj/kern/kernel.asm	/^f0104834:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0104838	obj/kern/kernel.asm	/^f0104838:	89 c3                	mov    %eax,%ebx$/;"	l
f010483a	obj/kern/kernel.asm	/^f010483a:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0104841	obj/kern/kernel.asm	/^f0104841:	39 5d ec             	cmp    %ebx,-0x14(%ebp)$/;"	l
f0104844	obj/kern/kernel.asm	/^f0104844:	0f 8d 71 ff ff ff    	jge    f01047bb <stab_binsearch+0x2b>$/;"	l
f010484a	obj/kern/kernel.asm	/^f010484a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f010484e	obj/kern/kernel.asm	/^f010484e:	75 0f                	jne    f010485f <stab_binsearch+0xcf>$/;"	l
f0104850	obj/kern/kernel.asm	/^f0104850:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f0104853	obj/kern/kernel.asm	/^f0104853:	8b 03                	mov    (%ebx),%eax$/;"	l
f0104855	obj/kern/kernel.asm	/^f0104855:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104858	obj/kern/kernel.asm	/^f0104858:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f010485b	obj/kern/kernel.asm	/^f010485b:	89 02                	mov    %eax,(%edx)$/;"	l
f010485d	obj/kern/kernel.asm	/^f010485d:	eb 57                	jmp    f01048b6 <stab_binsearch+0x126>$/;"	l
f010485f	obj/kern/kernel.asm	/^f010485f:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0104862	obj/kern/kernel.asm	/^f0104862:	8b 01                	mov    (%ecx),%eax$/;"	l
f0104864	obj/kern/kernel.asm	/^f0104864:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f0104867	obj/kern/kernel.asm	/^f0104867:	8b 0b                	mov    (%ebx),%ecx$/;"	l
f0104869	obj/kern/kernel.asm	/^f0104869:	39 c1                	cmp    %eax,%ecx$/;"	l
f010486b	obj/kern/kernel.asm	/^f010486b:	7d 28                	jge    f0104895 <stab_binsearch+0x105>$/;"	l
f010486d	obj/kern/kernel.asm	/^f010486d:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0104870	obj/kern/kernel.asm	/^f0104870:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
f0104873	obj/kern/kernel.asm	/^f0104873:	0f b6 54 93 04       	movzbl 0x4(%ebx,%edx,4),%edx$/;"	l
f0104878	obj/kern/kernel.asm	/^f0104878:	39 f2                	cmp    %esi,%edx$/;"	l
f010487a	obj/kern/kernel.asm	/^f010487a:	74 19                	je     f0104895 <stab_binsearch+0x105>$/;"	l
f010487c	obj/kern/kernel.asm	/^f010487c:	8d 54 40 fd          	lea    -0x3(%eax,%eax,2),%edx$/;"	l
f0104880	obj/kern/kernel.asm	/^f0104880:	8d 54 93 04          	lea    0x4(%ebx,%edx,4),%edx$/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104887	obj/kern/kernel.asm	/^f0104887:	39 c1                	cmp    %eax,%ecx$/;"	l
f0104889	obj/kern/kernel.asm	/^f0104889:	7d 0a                	jge    f0104895 <stab_binsearch+0x105>$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f010488e	obj/kern/kernel.asm	/^f010488e:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104891	obj/kern/kernel.asm	/^f0104891:	39 f3                	cmp    %esi,%ebx$/;"	l
f0104893	obj/kern/kernel.asm	/^f0104893:	75 ef                	jne    f0104884 <stab_binsearch+0xf4>$/;"	l
f0104895	obj/kern/kernel.asm	/^f0104895:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0104898	obj/kern/kernel.asm	/^f0104898:	89 02                	mov    %eax,(%edx)$/;"	l
f010489a	obj/kern/kernel.asm	/^f010489a:	eb 1a                	jmp    f01048b6 <stab_binsearch+0x126>$/;"	l
f010489c	obj/kern/kernel.asm	/^f010489c:	89 f8                	mov    %edi,%eax$/;"	l
f010489e	obj/kern/kernel.asm	/^f010489e:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01048a1	obj/kern/kernel.asm	/^f01048a1:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
f01048a4	obj/kern/kernel.asm	/^f01048a4:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f01048a8	obj/kern/kernel.asm	/^f01048a8:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	0f 82 54 ff ff ff    	jb     f0104805 <stab_binsearch+0x75>$/;"	l
f01048b1	obj/kern/kernel.asm	/^f01048b1:	e9 60 ff ff ff       	jmp    f0104816 <stab_binsearch+0x86>$/;"	l
f01048b6	obj/kern/kernel.asm	/^f01048b6:	83 c4 14             	add    $0x14,%esp$/;"	l
f01048b9	obj/kern/kernel.asm	/^f01048b9:	5b                   	pop    %ebx$/;"	l
f01048ba	obj/kern/kernel.asm	/^f01048ba:	5e                   	pop    %esi$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	5f                   	pop    %edi$/;"	l
f01048bc	obj/kern/kernel.asm	/^f01048bc:	5d                   	pop    %ebp$/;"	l
f01048bd	obj/kern/kernel.asm	/^f01048bd:	c3                   	ret    $/;"	l
f01048be	obj/kern/kernel.asm	/^f01048be <debuginfo_eip>:$/;"	l
f01048be	obj/kern/kernel.asm	/^f01048be:	55                   	push   %ebp$/;"	l
f01048bf	obj/kern/kernel.asm	/^f01048bf:	89 e5                	mov    %esp,%ebp$/;"	l
f01048c1	obj/kern/kernel.asm	/^f01048c1:	83 ec 58             	sub    $0x58,%esp$/;"	l
f01048c4	obj/kern/kernel.asm	/^f01048c4:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f01048c7	obj/kern/kernel.asm	/^f01048c7:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f01048ca	obj/kern/kernel.asm	/^f01048ca:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01048cd	obj/kern/kernel.asm	/^f01048cd:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01048d0	obj/kern/kernel.asm	/^f01048d0:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01048d3	obj/kern/kernel.asm	/^f01048d3:	c7 03 80 79 10 f0    	movl   $0xf0107980,(%ebx)$/;"	l
f01048d9	obj/kern/kernel.asm	/^f01048d9:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f01048e0	obj/kern/kernel.asm	/^f01048e0:	c7 43 08 80 79 10 f0 	movl   $0xf0107980,0x8(%ebx)$/;"	l
f01048e7	obj/kern/kernel.asm	/^f01048e7:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f01048ee	obj/kern/kernel.asm	/^f01048ee:	89 7b 10             	mov    %edi,0x10(%ebx)$/;"	l
f01048f1	obj/kern/kernel.asm	/^f01048f1:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f01048f8	obj/kern/kernel.asm	/^f01048f8:	81 ff ff ff 7f ef    	cmp    $0xef7fffff,%edi$/;"	l
f01048fe	obj/kern/kernel.asm	/^f01048fe:	76 1a                	jbe    f010491a <debuginfo_eip+0x5c>$/;"	l
f0104900	obj/kern/kernel.asm	/^f0104900:	be 02 5a 11 f0       	mov    $0xf0115a02,%esi$/;"	l
f0104905	obj/kern/kernel.asm	/^f0104905:	c7 45 c4 e1 1e 11 f0 	movl   $0xf0111ee1,-0x3c(%ebp)$/;"	l
f010490c	obj/kern/kernel.asm	/^f010490c:	b8 e0 1e 11 f0       	mov    $0xf0111ee0,%eax$/;"	l
f0104911	obj/kern/kernel.asm	/^f0104911:	c7 45 c0 5c 7f 10 f0 	movl   $0xf0107f5c,-0x40(%ebp)$/;"	l
f0104918	obj/kern/kernel.asm	/^f0104918:	eb 16                	jmp    f0104930 <debuginfo_eip+0x72>$/;"	l
f010491a	obj/kern/kernel.asm	/^f010491a:	ba 00 00 20 00       	mov    $0x200000,%edx$/;"	l
f010491f	obj/kern/kernel.asm	/^f010491f:	8b 02                	mov    (%edx),%eax$/;"	l
f0104921	obj/kern/kernel.asm	/^f0104921:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f0104924	obj/kern/kernel.asm	/^f0104924:	8b 42 04             	mov    0x4(%edx),%eax$/;"	l
f0104927	obj/kern/kernel.asm	/^f0104927:	8b 4a 08             	mov    0x8(%edx),%ecx$/;"	l
f010492a	obj/kern/kernel.asm	/^f010492a:	89 4d c4             	mov    %ecx,-0x3c(%ebp)$/;"	l
f010492d	obj/kern/kernel.asm	/^f010492d:	8b 72 0c             	mov    0xc(%edx),%esi$/;"	l
f0104930	obj/kern/kernel.asm	/^f0104930:	39 75 c4             	cmp    %esi,-0x3c(%ebp)$/;"	l
f0104933	obj/kern/kernel.asm	/^f0104933:	0f 83 a1 01 00 00    	jae    f0104ada <debuginfo_eip+0x21c>$/;"	l
f0104939	obj/kern/kernel.asm	/^f0104939:	80 7e ff 00          	cmpb   $0x0,-0x1(%esi)$/;"	l
f010493d	obj/kern/kernel.asm	/^f010493d:	0f 85 97 01 00 00    	jne    f0104ada <debuginfo_eip+0x21c>$/;"	l
f0104943	obj/kern/kernel.asm	/^f0104943:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a:	2b 45 c0             	sub    -0x40(%ebp),%eax$/;"	l
f010494d	obj/kern/kernel.asm	/^f010494d:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0104956	obj/kern/kernel.asm	/^f0104956:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104959	obj/kern/kernel.asm	/^f0104959:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010495c	obj/kern/kernel.asm	/^f010495c:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f010495f	obj/kern/kernel.asm	/^f010495f:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0104962	obj/kern/kernel.asm	/^f0104962:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104966	obj/kern/kernel.asm	/^f0104966:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f010496d	obj/kern/kernel.asm	/^f010496d:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f0104970	obj/kern/kernel.asm	/^f0104970:	e8 1b fe ff ff       	call   f0104790 <stab_binsearch>$/;"	l
f0104975	obj/kern/kernel.asm	/^f0104975:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104978	obj/kern/kernel.asm	/^f0104978:	85 c0                	test   %eax,%eax$/;"	l
f010497a	obj/kern/kernel.asm	/^f010497a:	0f 84 5a 01 00 00    	je     f0104ada <debuginfo_eip+0x21c>$/;"	l
f0104980	obj/kern/kernel.asm	/^f0104980:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104983	obj/kern/kernel.asm	/^f0104983:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104986	obj/kern/kernel.asm	/^f0104986:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104989	obj/kern/kernel.asm	/^f0104989:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f010498c	obj/kern/kernel.asm	/^f010498c:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f010498f	obj/kern/kernel.asm	/^f010498f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104993	obj/kern/kernel.asm	/^f0104993:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f010499a	obj/kern/kernel.asm	/^f010499a:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f010499d	obj/kern/kernel.asm	/^f010499d:	e8 ee fd ff ff       	call   f0104790 <stab_binsearch>$/;"	l
f01049a2	obj/kern/kernel.asm	/^f01049a2:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01049a5	obj/kern/kernel.asm	/^f01049a5:	3b 45 d8             	cmp    -0x28(%ebp),%eax$/;"	l
f01049a8	obj/kern/kernel.asm	/^f01049a8:	7f 35                	jg     f01049df <debuginfo_eip+0x121>$/;"	l
f01049aa	obj/kern/kernel.asm	/^f01049aa:	6b c0 0c             	imul   $0xc,%eax,%eax$/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f01049b0	obj/kern/kernel.asm	/^f01049b0:	8b 04 10             	mov    (%eax,%edx,1),%eax$/;"	l
f01049b3	obj/kern/kernel.asm	/^f01049b3:	89 f2                	mov    %esi,%edx$/;"	l
f01049b5	obj/kern/kernel.asm	/^f01049b5:	2b 55 c4             	sub    -0x3c(%ebp),%edx$/;"	l
f01049b8	obj/kern/kernel.asm	/^f01049b8:	39 d0                	cmp    %edx,%eax$/;"	l
f01049ba	obj/kern/kernel.asm	/^f01049ba:	73 06                	jae    f01049c2 <debuginfo_eip+0x104>$/;"	l
f01049bc	obj/kern/kernel.asm	/^f01049bc:	03 45 c4             	add    -0x3c(%ebp),%eax$/;"	l
f01049bf	obj/kern/kernel.asm	/^f01049bf:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f01049c2	obj/kern/kernel.asm	/^f01049c2:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01049c5	obj/kern/kernel.asm	/^f01049c5:	6b c2 0c             	imul   $0xc,%edx,%eax$/;"	l
f01049c8	obj/kern/kernel.asm	/^f01049c8:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f01049cb	obj/kern/kernel.asm	/^f01049cb:	8b 44 08 08          	mov    0x8(%eax,%ecx,1),%eax$/;"	l
f01049cf	obj/kern/kernel.asm	/^f01049cf:	89 43 10             	mov    %eax,0x10(%ebx)$/;"	l
f01049d2	obj/kern/kernel.asm	/^f01049d2:	29 c7                	sub    %eax,%edi$/;"	l
f01049d4	obj/kern/kernel.asm	/^f01049d4:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f01049d7	obj/kern/kernel.asm	/^f01049d7:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01049da	obj/kern/kernel.asm	/^f01049da:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01049dd	obj/kern/kernel.asm	/^f01049dd:	eb 0f                	jmp    f01049ee <debuginfo_eip+0x130>$/;"	l
f01049df	obj/kern/kernel.asm	/^f01049df:	89 7b 10             	mov    %edi,0x10(%ebx)$/;"	l
f01049e2	obj/kern/kernel.asm	/^f01049e2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01049e5	obj/kern/kernel.asm	/^f01049e5:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01049e8	obj/kern/kernel.asm	/^f01049e8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01049eb	obj/kern/kernel.asm	/^f01049eb:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01049ee	obj/kern/kernel.asm	/^f01049ee:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f01049f5	obj/kern/kernel.asm	/^f01049f5:	00 $/;"	l
f01049f6	obj/kern/kernel.asm	/^f01049f6:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01049f9	obj/kern/kernel.asm	/^f01049f9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01049fc	obj/kern/kernel.asm	/^f01049fc:	e8 8a 09 00 00       	call   f010538b <strfind>$/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f0104a04	obj/kern/kernel.asm	/^f0104a04:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f0104a07	obj/kern/kernel.asm	/^f0104a07:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0104a0a	obj/kern/kernel.asm	/^f0104a0a:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0104a0d	obj/kern/kernel.asm	/^f0104a0d:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104a11	obj/kern/kernel.asm	/^f0104a11:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f0104a18	obj/kern/kernel.asm	/^f0104a18:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
f0104a1b	obj/kern/kernel.asm	/^f0104a1b:	e8 70 fd ff ff       	call   f0104790 <stab_binsearch>$/;"	l
f0104a20	obj/kern/kernel.asm	/^f0104a20:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	39 55 d4             	cmp    %edx,-0x2c(%ebp)$/;"	l
f0104a26	obj/kern/kernel.asm	/^f0104a26:	0f 9e c0             	setle  %al$/;"	l
f0104a29	obj/kern/kernel.asm	/^f0104a29:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104a2c	obj/kern/kernel.asm	/^f0104a2c:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104a2f	obj/kern/kernel.asm	/^f0104a2f:	09 d0                	or     %edx,%eax$/;"	l
f0104a31	obj/kern/kernel.asm	/^f0104a31:	89 43 04             	mov    %eax,0x4(%ebx)$/;"	l
f0104a34	obj/kern/kernel.asm	/^f0104a34:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0104a37	obj/kern/kernel.asm	/^f0104a37:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104a3a	obj/kern/kernel.asm	/^f0104a3a:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
f0104a3d	obj/kern/kernel.asm	/^f0104a3d:	39 d0                	cmp    %edx,%eax$/;"	l
f0104a3f	obj/kern/kernel.asm	/^f0104a3f:	7c 58                	jl     f0104a99 <debuginfo_eip+0x1db>$/;"	l
f0104a41	obj/kern/kernel.asm	/^f0104a41:	6b f8 0c             	imul   $0xc,%eax,%edi$/;"	l
f0104a44	obj/kern/kernel.asm	/^f0104a44:	03 7d c0             	add    -0x40(%ebp),%edi$/;"	l
f0104a47	obj/kern/kernel.asm	/^f0104a47:	0f b6 4f 04          	movzbl 0x4(%edi),%ecx$/;"	l
f0104a4b	obj/kern/kernel.asm	/^f0104a4b:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0104a4e	obj/kern/kernel.asm	/^f0104a4e:	74 34                	je     f0104a84 <debuginfo_eip+0x1c6>$/;"	l
f0104a50	obj/kern/kernel.asm	/^f0104a50:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f0104a53	obj/kern/kernel.asm	/^f0104a53:	6b d2 0c             	imul   $0xc,%edx,%edx$/;"	l
f0104a56	obj/kern/kernel.asm	/^f0104a56:	03 55 c0             	add    -0x40(%ebp),%edx$/;"	l
f0104a59	obj/kern/kernel.asm	/^f0104a59:	eb 19                	jmp    f0104a74 <debuginfo_eip+0x1b6>$/;"	l
f0104a5b	obj/kern/kernel.asm	/^f0104a5b:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0104a5e	obj/kern/kernel.asm	/^f0104a5e:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104a61	obj/kern/kernel.asm	/^f0104a61:	39 45 bc             	cmp    %eax,-0x44(%ebp)$/;"	l
f0104a64	obj/kern/kernel.asm	/^f0104a64:	7f 33                	jg     f0104a99 <debuginfo_eip+0x1db>$/;"	l
f0104a66	obj/kern/kernel.asm	/^f0104a66:	89 d7                	mov    %edx,%edi$/;"	l
f0104a68	obj/kern/kernel.asm	/^f0104a68:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0104a6c	obj/kern/kernel.asm	/^f0104a6c:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0104a6f	obj/kern/kernel.asm	/^f0104a6f:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0104a72	obj/kern/kernel.asm	/^f0104a72:	74 10                	je     f0104a84 <debuginfo_eip+0x1c6>$/;"	l
f0104a74	obj/kern/kernel.asm	/^f0104a74:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0104a77	obj/kern/kernel.asm	/^f0104a77:	75 e2                	jne    f0104a5b <debuginfo_eip+0x19d>$/;"	l
f0104a79	obj/kern/kernel.asm	/^f0104a79:	83 7f 08 00          	cmpl   $0x0,0x8(%edi)$/;"	l
f0104a7d	obj/kern/kernel.asm	/^f0104a7d:	74 dc                	je     f0104a5b <debuginfo_eip+0x19d>$/;"	l
f0104a7f	obj/kern/kernel.asm	/^f0104a7f:	3b 45 bc             	cmp    -0x44(%ebp),%eax$/;"	l
f0104a82	obj/kern/kernel.asm	/^f0104a82:	7c 15                	jl     f0104a99 <debuginfo_eip+0x1db>$/;"	l
f0104a84	obj/kern/kernel.asm	/^f0104a84:	6b c0 0c             	imul   $0xc,%eax,%eax$/;"	l
f0104a87	obj/kern/kernel.asm	/^f0104a87:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f0104a8a	obj/kern/kernel.asm	/^f0104a8a:	8b 04 08             	mov    (%eax,%ecx,1),%eax$/;"	l
f0104a8d	obj/kern/kernel.asm	/^f0104a8d:	2b 75 c4             	sub    -0x3c(%ebp),%esi$/;"	l
f0104a90	obj/kern/kernel.asm	/^f0104a90:	39 f0                	cmp    %esi,%eax$/;"	l
f0104a92	obj/kern/kernel.asm	/^f0104a92:	73 05                	jae    f0104a99 <debuginfo_eip+0x1db>$/;"	l
f0104a94	obj/kern/kernel.asm	/^f0104a94:	03 45 c4             	add    -0x3c(%ebp),%eax$/;"	l
f0104a97	obj/kern/kernel.asm	/^f0104a97:	89 03                	mov    %eax,(%ebx)$/;"	l
f0104a99	obj/kern/kernel.asm	/^f0104a99:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104a9c	obj/kern/kernel.asm	/^f0104a9c:	3b 45 d8             	cmp    -0x28(%ebp),%eax$/;"	l
f0104a9f	obj/kern/kernel.asm	/^f0104a9f:	7d 41                	jge    f0104ae2 <debuginfo_eip+0x224>$/;"	l
f0104aa1	obj/kern/kernel.asm	/^f0104aa1:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104aa4	obj/kern/kernel.asm	/^f0104aa4:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104aa7	obj/kern/kernel.asm	/^f0104aa7:	39 45 d8             	cmp    %eax,-0x28(%ebp)$/;"	l
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	7e 36                	jle    f0104ae2 <debuginfo_eip+0x224>$/;"	l
f0104aac	obj/kern/kernel.asm	/^f0104aac:	6b c0 0c             	imul   $0xc,%eax,%eax$/;"	l
f0104aaf	obj/kern/kernel.asm	/^f0104aaf:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f0104ab2	obj/kern/kernel.asm	/^f0104ab2:	80 7c 10 04 a0       	cmpb   $0xa0,0x4(%eax,%edx,1)$/;"	l
f0104ab7	obj/kern/kernel.asm	/^f0104ab7:	75 29                	jne    f0104ae2 <debuginfo_eip+0x224>$/;"	l
f0104ab9	obj/kern/kernel.asm	/^f0104ab9:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f0104abd	obj/kern/kernel.asm	/^f0104abd:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0104ac0	obj/kern/kernel.asm	/^f0104ac0:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104ac3	obj/kern/kernel.asm	/^f0104ac3:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0104ac6	obj/kern/kernel.asm	/^f0104ac6:	39 45 d8             	cmp    %eax,-0x28(%ebp)$/;"	l
f0104ac9	obj/kern/kernel.asm	/^f0104ac9:	7e 17                	jle    f0104ae2 <debuginfo_eip+0x224>$/;"	l
f0104acb	obj/kern/kernel.asm	/^f0104acb:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0104ace	obj/kern/kernel.asm	/^f0104ace:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f0104ad1	obj/kern/kernel.asm	/^f0104ad1:	80 7c 81 04 a0       	cmpb   $0xa0,0x4(%ecx,%eax,4)$/;"	l
f0104ad6	obj/kern/kernel.asm	/^f0104ad6:	74 e1                	je     f0104ab9 <debuginfo_eip+0x1fb>$/;"	l
f0104ad8	obj/kern/kernel.asm	/^f0104ad8:	eb 08                	jmp    f0104ae2 <debuginfo_eip+0x224>$/;"	l
f0104ada	obj/kern/kernel.asm	/^f0104ada:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0104adf	obj/kern/kernel.asm	/^f0104adf:	90                   	nop$/;"	l
f0104ae0	obj/kern/kernel.asm	/^f0104ae0:	eb 05                	jmp    f0104ae7 <debuginfo_eip+0x229>$/;"	l
f0104ae2	obj/kern/kernel.asm	/^f0104ae2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104ae7	obj/kern/kernel.asm	/^f0104ae7:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0104aea	obj/kern/kernel.asm	/^f0104aea:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0104aed	obj/kern/kernel.asm	/^f0104aed:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0104af0	obj/kern/kernel.asm	/^f0104af0:	89 ec                	mov    %ebp,%esp$/;"	l
f0104af2	obj/kern/kernel.asm	/^f0104af2:	5d                   	pop    %ebp$/;"	l
f0104af3	obj/kern/kernel.asm	/^f0104af3:	c3                   	ret    $/;"	l
f0104b00	obj/kern/kernel.asm	/^f0104b00 <printnum>:$/;"	l
f0104b00	obj/kern/kernel.asm	/^f0104b00:	55                   	push   %ebp$/;"	l
f0104b01	obj/kern/kernel.asm	/^f0104b01:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b03	obj/kern/kernel.asm	/^f0104b03:	57                   	push   %edi$/;"	l
f0104b04	obj/kern/kernel.asm	/^f0104b04:	56                   	push   %esi$/;"	l
f0104b05	obj/kern/kernel.asm	/^f0104b05:	53                   	push   %ebx$/;"	l
f0104b06	obj/kern/kernel.asm	/^f0104b06:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0104b09	obj/kern/kernel.asm	/^f0104b09:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0104b0c	obj/kern/kernel.asm	/^f0104b0c:	89 d6                	mov    %edx,%esi$/;"	l
f0104b0e	obj/kern/kernel.asm	/^f0104b0e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104b11	obj/kern/kernel.asm	/^f0104b11:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104b14	obj/kern/kernel.asm	/^f0104b14:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0104b17	obj/kern/kernel.asm	/^f0104b17:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0104b1a	obj/kern/kernel.asm	/^f0104b1a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0104b1d	obj/kern/kernel.asm	/^f0104b1d:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0104b20	obj/kern/kernel.asm	/^f0104b20:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f0104b23	obj/kern/kernel.asm	/^f0104b23:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104b26	obj/kern/kernel.asm	/^f0104b26:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104b2b	obj/kern/kernel.asm	/^f0104b2b:	39 d1                	cmp    %edx,%ecx$/;"	l
f0104b2d	obj/kern/kernel.asm	/^f0104b2d:	72 15                	jb     f0104b44 <printnum+0x44>$/;"	l
f0104b2f	obj/kern/kernel.asm	/^f0104b2f:	77 07                	ja     f0104b38 <printnum+0x38>$/;"	l
f0104b31	obj/kern/kernel.asm	/^f0104b31:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0104b34	obj/kern/kernel.asm	/^f0104b34:	39 d0                	cmp    %edx,%eax$/;"	l
f0104b36	obj/kern/kernel.asm	/^f0104b36:	76 0c                	jbe    f0104b44 <printnum+0x44>$/;"	l
f0104b38	obj/kern/kernel.asm	/^f0104b38:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104b3b	obj/kern/kernel.asm	/^f0104b3b:	85 db                	test   %ebx,%ebx$/;"	l
f0104b3d	obj/kern/kernel.asm	/^f0104b3d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104b40	obj/kern/kernel.asm	/^f0104b40:	7f 61                	jg     f0104ba3 <printnum+0xa3>$/;"	l
f0104b42	obj/kern/kernel.asm	/^f0104b42:	eb 70                	jmp    f0104bb4 <printnum+0xb4>$/;"	l
f0104b44	obj/kern/kernel.asm	/^f0104b44:	89 7c 24 10          	mov    %edi,0x10(%esp)$/;"	l
f0104b48	obj/kern/kernel.asm	/^f0104b48:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104b4b	obj/kern/kernel.asm	/^f0104b4b:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0104b4f	obj/kern/kernel.asm	/^f0104b4f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104b53	obj/kern/kernel.asm	/^f0104b53:	8b 4c 24 08          	mov    0x8(%esp),%ecx$/;"	l
f0104b57	obj/kern/kernel.asm	/^f0104b57:	8b 5c 24 0c          	mov    0xc(%esp),%ebx$/;"	l
f0104b5b	obj/kern/kernel.asm	/^f0104b5b:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0104b5e	obj/kern/kernel.asm	/^f0104b5e:	89 5d d4             	mov    %ebx,-0x2c(%ebp)$/;"	l
f0104b61	obj/kern/kernel.asm	/^f0104b61:	8b 5d dc             	mov    -0x24(%ebp),%ebx$/;"	l
f0104b64	obj/kern/kernel.asm	/^f0104b64:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0104b6f	obj/kern/kernel.asm	/^f0104b6f:	00 $/;"	l
f0104b70	obj/kern/kernel.asm	/^f0104b70:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0104b73	obj/kern/kernel.asm	/^f0104b73:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b76	obj/kern/kernel.asm	/^f0104b76:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0104b79	obj/kern/kernel.asm	/^f0104b79:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104b7d	obj/kern/kernel.asm	/^f0104b7d:	e8 0e 15 00 00       	call   f0106090 <__udivdi3>$/;"	l
f0104b82	obj/kern/kernel.asm	/^f0104b82:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0104b85	obj/kern/kernel.asm	/^f0104b85:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0104b88	obj/kern/kernel.asm	/^f0104b88:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0104b8c	obj/kern/kernel.asm	/^f0104b8c:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0104b90	obj/kern/kernel.asm	/^f0104b90:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b93	obj/kern/kernel.asm	/^f0104b93:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104b97	obj/kern/kernel.asm	/^f0104b97:	89 f2                	mov    %esi,%edx$/;"	l
f0104b99	obj/kern/kernel.asm	/^f0104b99:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104b9c	obj/kern/kernel.asm	/^f0104b9c:	e8 5f ff ff ff       	call   f0104b00 <printnum>$/;"	l
f0104ba1	obj/kern/kernel.asm	/^f0104ba1:	eb 11                	jmp    f0104bb4 <printnum+0xb4>$/;"	l
f0104ba3	obj/kern/kernel.asm	/^f0104ba3:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104ba7	obj/kern/kernel.asm	/^f0104ba7:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0104baa	obj/kern/kernel.asm	/^f0104baa:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0104bad	obj/kern/kernel.asm	/^f0104bad:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104bb0	obj/kern/kernel.asm	/^f0104bb0:	85 db                	test   %ebx,%ebx$/;"	l
f0104bb2	obj/kern/kernel.asm	/^f0104bb2:	7f ef                	jg     f0104ba3 <printnum+0xa3>$/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f0104bbc	obj/kern/kernel.asm	/^f0104bbc:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0104bbf	obj/kern/kernel.asm	/^f0104bbf:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104bc3	obj/kern/kernel.asm	/^f0104bc3:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca:	00 $/;"	l
f0104bcb	obj/kern/kernel.asm	/^f0104bcb:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0104bce	obj/kern/kernel.asm	/^f0104bce:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0104bd4	obj/kern/kernel.asm	/^f0104bd4:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0104bd8	obj/kern/kernel.asm	/^f0104bd8:	e8 e3 15 00 00       	call   f01061c0 <__umoddi3>$/;"	l
f0104bdd	obj/kern/kernel.asm	/^f0104bdd:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104be1	obj/kern/kernel.asm	/^f0104be1:	0f be 80 8a 79 10 f0 	movsbl -0xfef8676(%eax),%eax$/;"	l
f0104be8	obj/kern/kernel.asm	/^f0104be8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104beb	obj/kern/kernel.asm	/^f0104beb:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0104bee	obj/kern/kernel.asm	/^f0104bee:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0104bf1	obj/kern/kernel.asm	/^f0104bf1:	5b                   	pop    %ebx$/;"	l
f0104bf2	obj/kern/kernel.asm	/^f0104bf2:	5e                   	pop    %esi$/;"	l
f0104bf3	obj/kern/kernel.asm	/^f0104bf3:	5f                   	pop    %edi$/;"	l
f0104bf4	obj/kern/kernel.asm	/^f0104bf4:	5d                   	pop    %ebp$/;"	l
f0104bf5	obj/kern/kernel.asm	/^f0104bf5:	c3                   	ret    $/;"	l
f0104bf6	obj/kern/kernel.asm	/^f0104bf6 <getuint>:$/;"	l
f0104bf6	obj/kern/kernel.asm	/^f0104bf6:	55                   	push   %ebp$/;"	l
f0104bf7	obj/kern/kernel.asm	/^f0104bf7:	89 e5                	mov    %esp,%ebp$/;"	l
f0104bf9	obj/kern/kernel.asm	/^f0104bf9:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0104bfc	obj/kern/kernel.asm	/^f0104bfc:	7e 0e                	jle    f0104c0c <getuint+0x16>$/;"	l
f0104bfe	obj/kern/kernel.asm	/^f0104bfe:	8b 10                	mov    (%eax),%edx$/;"	l
f0104c00	obj/kern/kernel.asm	/^f0104c00:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0104c03	obj/kern/kernel.asm	/^f0104c03:	89 08                	mov    %ecx,(%eax)$/;"	l
f0104c05	obj/kern/kernel.asm	/^f0104c05:	8b 02                	mov    (%edx),%eax$/;"	l
f0104c07	obj/kern/kernel.asm	/^f0104c07:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0104c0a	obj/kern/kernel.asm	/^f0104c0a:	eb 22                	jmp    f0104c2e <getuint+0x38>$/;"	l
f0104c0c	obj/kern/kernel.asm	/^f0104c0c:	85 d2                	test   %edx,%edx$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	74 10                	je     f0104c20 <getuint+0x2a>$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	8b 10                	mov    (%eax),%edx$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	89 08                	mov    %ecx,(%eax)$/;"	l
f0104c17	obj/kern/kernel.asm	/^f0104c17:	8b 02                	mov    (%edx),%eax$/;"	l
f0104c19	obj/kern/kernel.asm	/^f0104c19:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104c1e	obj/kern/kernel.asm	/^f0104c1e:	eb 0e                	jmp    f0104c2e <getuint+0x38>$/;"	l
f0104c20	obj/kern/kernel.asm	/^f0104c20:	8b 10                	mov    (%eax),%edx$/;"	l
f0104c22	obj/kern/kernel.asm	/^f0104c22:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0104c25	obj/kern/kernel.asm	/^f0104c25:	89 08                	mov    %ecx,(%eax)$/;"	l
f0104c27	obj/kern/kernel.asm	/^f0104c27:	8b 02                	mov    (%edx),%eax$/;"	l
f0104c29	obj/kern/kernel.asm	/^f0104c29:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104c2e	obj/kern/kernel.asm	/^f0104c2e:	5d                   	pop    %ebp$/;"	l
f0104c2f	obj/kern/kernel.asm	/^f0104c2f:	c3                   	ret    $/;"	l
f0104c30	obj/kern/kernel.asm	/^f0104c30 <sprintputch>:$/;"	l
f0104c30	obj/kern/kernel.asm	/^f0104c30:	55                   	push   %ebp$/;"	l
f0104c31	obj/kern/kernel.asm	/^f0104c31:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c33	obj/kern/kernel.asm	/^f0104c33:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0104c3a	obj/kern/kernel.asm	/^f0104c3a:	8b 10                	mov    (%eax),%edx$/;"	l
f0104c3c	obj/kern/kernel.asm	/^f0104c3c:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0104c3f	obj/kern/kernel.asm	/^f0104c3f:	73 0a                	jae    f0104c4b <sprintputch+0x1b>$/;"	l
f0104c41	obj/kern/kernel.asm	/^f0104c41:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	88 0a                	mov    %cl,(%edx)$/;"	l
f0104c46	obj/kern/kernel.asm	/^f0104c46:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104c49	obj/kern/kernel.asm	/^f0104c49:	89 10                	mov    %edx,(%eax)$/;"	l
f0104c4b	obj/kern/kernel.asm	/^f0104c4b:	5d                   	pop    %ebp$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	c3                   	ret    $/;"	l
f0104c4d	obj/kern/kernel.asm	/^f0104c4d <vprintfmt>:$/;"	l
f0104c4d	obj/kern/kernel.asm	/^f0104c4d:	55                   	push   %ebp$/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c50	obj/kern/kernel.asm	/^f0104c50:	57                   	push   %edi$/;"	l
f0104c51	obj/kern/kernel.asm	/^f0104c51:	56                   	push   %esi$/;"	l
f0104c52	obj/kern/kernel.asm	/^f0104c52:	53                   	push   %ebx$/;"	l
f0104c53	obj/kern/kernel.asm	/^f0104c53:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104c59	obj/kern/kernel.asm	/^f0104c59:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0104c5c	obj/kern/kernel.asm	/^f0104c5c:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0104c5f	obj/kern/kernel.asm	/^f0104c5f:	c7 45 c8 ff ff ff ff 	movl   $0xffffffff,-0x38(%ebp)$/;"	l
f0104c66	obj/kern/kernel.asm	/^f0104c66:	eb 11                	jmp    f0104c79 <vprintfmt+0x2c>$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68:	85 c0                	test   %eax,%eax$/;"	l
f0104c6a	obj/kern/kernel.asm	/^f0104c6a:	0f 84 02 04 00 00    	je     f0105072 <vprintfmt+0x425>$/;"	l
f0104c70	obj/kern/kernel.asm	/^f0104c70:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104c74	obj/kern/kernel.asm	/^f0104c74:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c77	obj/kern/kernel.asm	/^f0104c77:	ff d7                	call   *%edi$/;"	l
f0104c79	obj/kern/kernel.asm	/^f0104c79:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0104c7c	obj/kern/kernel.asm	/^f0104c7c:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0104c82	obj/kern/kernel.asm	/^f0104c82:	75 e4                	jne    f0104c68 <vprintfmt+0x1b>$/;"	l
f0104c84	obj/kern/kernel.asm	/^f0104c84:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)$/;"	l
f0104c88	obj/kern/kernel.asm	/^f0104c88:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)$/;"	l
f0104c8f	obj/kern/kernel.asm	/^f0104c8f:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)$/;"	l
f0104c96	obj/kern/kernel.asm	/^f0104c96:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f0104c9d	obj/kern/kernel.asm	/^f0104c9d:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0104ca2	obj/kern/kernel.asm	/^f0104ca2:	eb 06                	jmp    f0104caa <vprintfmt+0x5d>$/;"	l
f0104ca4	obj/kern/kernel.asm	/^f0104ca4:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)$/;"	l
f0104ca8	obj/kern/kernel.asm	/^f0104ca8:	89 c3                	mov    %eax,%ebx$/;"	l
f0104caa	obj/kern/kernel.asm	/^f0104caa:	0f b6 13             	movzbl (%ebx),%edx$/;"	l
f0104cad	obj/kern/kernel.asm	/^f0104cad:	0f b6 c2             	movzbl %dl,%eax$/;"	l
f0104cb0	obj/kern/kernel.asm	/^f0104cb0:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104cb3	obj/kern/kernel.asm	/^f0104cb3:	8d 43 01             	lea    0x1(%ebx),%eax$/;"	l
f0104cb6	obj/kern/kernel.asm	/^f0104cb6:	83 ea 23             	sub    $0x23,%edx$/;"	l
f0104cb9	obj/kern/kernel.asm	/^f0104cb9:	80 fa 55             	cmp    $0x55,%dl$/;"	l
f0104cbc	obj/kern/kernel.asm	/^f0104cbc:	0f 87 93 03 00 00    	ja     f0105055 <vprintfmt+0x408>$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0104cc5	obj/kern/kernel.asm	/^f0104cc5:	ff 24 95 c0 7a 10 f0 	jmp    *-0xfef8540(,%edx,4)$/;"	l
f0104ccc	obj/kern/kernel.asm	/^f0104ccc:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)$/;"	l
f0104cd0	obj/kern/kernel.asm	/^f0104cd0:	eb d6                	jmp    f0104ca8 <vprintfmt+0x5b>$/;"	l
f0104cd2	obj/kern/kernel.asm	/^f0104cd2:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0104cd5	obj/kern/kernel.asm	/^f0104cd5:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0104cdb	obj/kern/kernel.asm	/^f0104cdb:	0f be 10             	movsbl (%eax),%edx$/;"	l
f0104cde	obj/kern/kernel.asm	/^f0104cde:	8d 5a d0             	lea    -0x30(%edx),%ebx$/;"	l
f0104ce1	obj/kern/kernel.asm	/^f0104ce1:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0104ce4	obj/kern/kernel.asm	/^f0104ce4:	77 4c                	ja     f0104d32 <vprintfmt+0xe5>$/;"	l
f0104ce6	obj/kern/kernel.asm	/^f0104ce6:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0104ce9	obj/kern/kernel.asm	/^f0104ce9:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0104cec	obj/kern/kernel.asm	/^f0104cec:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104cef	obj/kern/kernel.asm	/^f0104cef:	8d 0c 89             	lea    (%ecx,%ecx,4),%ecx$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	8d 4c 4a d0          	lea    -0x30(%edx,%ecx,2),%ecx$/;"	l
f0104cf6	obj/kern/kernel.asm	/^f0104cf6:	0f be 10             	movsbl (%eax),%edx$/;"	l
f0104cf9	obj/kern/kernel.asm	/^f0104cf9:	8d 5a d0             	lea    -0x30(%edx),%ebx$/;"	l
f0104cfc	obj/kern/kernel.asm	/^f0104cfc:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0104cff	obj/kern/kernel.asm	/^f0104cff:	76 eb                	jbe    f0104cec <vprintfmt+0x9f>$/;"	l
f0104d01	obj/kern/kernel.asm	/^f0104d01:	89 4d d0             	mov    %ecx,-0x30(%ebp)$/;"	l
f0104d04	obj/kern/kernel.asm	/^f0104d04:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0104d07	obj/kern/kernel.asm	/^f0104d07:	eb 29                	jmp    f0104d32 <vprintfmt+0xe5>$/;"	l
f0104d09	obj/kern/kernel.asm	/^f0104d09:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0104d0c	obj/kern/kernel.asm	/^f0104d0c:	8d 5a 04             	lea    0x4(%edx),%ebx$/;"	l
f0104d0f	obj/kern/kernel.asm	/^f0104d0f:	89 5d 14             	mov    %ebx,0x14(%ebp)$/;"	l
f0104d12	obj/kern/kernel.asm	/^f0104d12:	8b 12                	mov    (%edx),%edx$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	eb 19                	jmp    f0104d32 <vprintfmt+0xe5>$/;"	l
f0104d19	obj/kern/kernel.asm	/^f0104d19:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f0104d1f	obj/kern/kernel.asm	/^f0104d1f:	f7 d2                	not    %edx$/;"	l
f0104d21	obj/kern/kernel.asm	/^f0104d21:	21 55 e4             	and    %edx,-0x1c(%ebp)$/;"	l
f0104d24	obj/kern/kernel.asm	/^f0104d24:	eb 82                	jmp    f0104ca8 <vprintfmt+0x5b>$/;"	l
f0104d26	obj/kern/kernel.asm	/^f0104d26:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
f0104d2d	obj/kern/kernel.asm	/^f0104d2d:	e9 76 ff ff ff       	jmp    f0104ca8 <vprintfmt+0x5b>$/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0104d36	obj/kern/kernel.asm	/^f0104d36:	0f 89 6c ff ff ff    	jns    f0104ca8 <vprintfmt+0x5b>$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0104d3f	obj/kern/kernel.asm	/^f0104d3f:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104d42	obj/kern/kernel.asm	/^f0104d42:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
f0104d45	obj/kern/kernel.asm	/^f0104d45:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0104d48	obj/kern/kernel.asm	/^f0104d48:	e9 5b ff ff ff       	jmp    f0104ca8 <vprintfmt+0x5b>$/;"	l
f0104d4d	obj/kern/kernel.asm	/^f0104d4d:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0104d50	obj/kern/kernel.asm	/^f0104d50:	e9 53 ff ff ff       	jmp    f0104ca8 <vprintfmt+0x5b>$/;"	l
f0104d55	obj/kern/kernel.asm	/^f0104d55:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0104d58	obj/kern/kernel.asm	/^f0104d58:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104d5b	obj/kern/kernel.asm	/^f0104d5b:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104d5e	obj/kern/kernel.asm	/^f0104d5e:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104d61	obj/kern/kernel.asm	/^f0104d61:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104d65	obj/kern/kernel.asm	/^f0104d65:	8b 00                	mov    (%eax),%eax$/;"	l
f0104d67	obj/kern/kernel.asm	/^f0104d67:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104d6a	obj/kern/kernel.asm	/^f0104d6a:	ff d7                	call   *%edi$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c:	8b 5d cc             	mov    -0x34(%ebp),%ebx$/;"	l
f0104d6f	obj/kern/kernel.asm	/^f0104d6f:	e9 05 ff ff ff       	jmp    f0104c79 <vprintfmt+0x2c>$/;"	l
f0104d74	obj/kern/kernel.asm	/^f0104d74:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0104d77	obj/kern/kernel.asm	/^f0104d77:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104d7a	obj/kern/kernel.asm	/^f0104d7a:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104d7d	obj/kern/kernel.asm	/^f0104d7d:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80:	8b 00                	mov    (%eax),%eax$/;"	l
f0104d82	obj/kern/kernel.asm	/^f0104d82:	89 c2                	mov    %eax,%edx$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f0104d87	obj/kern/kernel.asm	/^f0104d87:	31 d0                	xor    %edx,%eax$/;"	l
f0104d89	obj/kern/kernel.asm	/^f0104d89:	29 d0                	sub    %edx,%eax$/;"	l
f0104d8b	obj/kern/kernel.asm	/^f0104d8b:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f0104d8e	obj/kern/kernel.asm	/^f0104d8e:	7f 0b                	jg     f0104d9b <vprintfmt+0x14e>$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	8b 14 85 20 7c 10 f0 	mov    -0xfef83e0(,%eax,4),%edx$/;"	l
f0104d97	obj/kern/kernel.asm	/^f0104d97:	85 d2                	test   %edx,%edx$/;"	l
f0104d99	obj/kern/kernel.asm	/^f0104d99:	75 20                	jne    f0104dbb <vprintfmt+0x16e>$/;"	l
f0104d9b	obj/kern/kernel.asm	/^f0104d9b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104d9f	obj/kern/kernel.asm	/^f0104d9f:	c7 44 24 08 9b 79 10 	movl   $0xf010799b,0x8(%esp)$/;"	l
f0104da6	obj/kern/kernel.asm	/^f0104da6:	f0 $/;"	l
f0104da7	obj/kern/kernel.asm	/^f0104da7:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104dab	obj/kern/kernel.asm	/^f0104dab:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0104dae	obj/kern/kernel.asm	/^f0104dae:	e8 47 03 00 00       	call   f01050fa <printfmt>$/;"	l
f0104db3	obj/kern/kernel.asm	/^f0104db3:	8b 5d cc             	mov    -0x34(%ebp),%ebx$/;"	l
f0104db6	obj/kern/kernel.asm	/^f0104db6:	e9 be fe ff ff       	jmp    f0104c79 <vprintfmt+0x2c>$/;"	l
f0104dbb	obj/kern/kernel.asm	/^f0104dbb:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0104dbf	obj/kern/kernel.asm	/^f0104dbf:	c7 44 24 08 a6 71 10 	movl   $0xf01071a6,0x8(%esp)$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6:	f0 $/;"	l
f0104dc7	obj/kern/kernel.asm	/^f0104dc7:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104dcb	obj/kern/kernel.asm	/^f0104dcb:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0104dce	obj/kern/kernel.asm	/^f0104dce:	e8 27 03 00 00       	call   f01050fa <printfmt>$/;"	l
f0104dd3	obj/kern/kernel.asm	/^f0104dd3:	8b 5d cc             	mov    -0x34(%ebp),%ebx$/;"	l
f0104dd6	obj/kern/kernel.asm	/^f0104dd6:	e9 9e fe ff ff       	jmp    f0104c79 <vprintfmt+0x2c>$/;"	l
f0104ddb	obj/kern/kernel.asm	/^f0104ddb:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0104dde	obj/kern/kernel.asm	/^f0104dde:	89 c3                	mov    %eax,%ebx$/;"	l
f0104de0	obj/kern/kernel.asm	/^f0104de0:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0104de3	obj/kern/kernel.asm	/^f0104de3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0104de9	obj/kern/kernel.asm	/^f0104de9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104dec	obj/kern/kernel.asm	/^f0104dec:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104def	obj/kern/kernel.asm	/^f0104def:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104df2	obj/kern/kernel.asm	/^f0104df2:	8b 00                	mov    (%eax),%eax$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0104df7	obj/kern/kernel.asm	/^f0104df7:	85 c0                	test   %eax,%eax$/;"	l
f0104df9	obj/kern/kernel.asm	/^f0104df9:	75 07                	jne    f0104e02 <vprintfmt+0x1b5>$/;"	l
f0104dfb	obj/kern/kernel.asm	/^f0104dfb:	c7 45 e0 a4 79 10 f0 	movl   $0xf01079a4,-0x20(%ebp)$/;"	l
f0104e02	obj/kern/kernel.asm	/^f0104e02:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)$/;"	l
f0104e06	obj/kern/kernel.asm	/^f0104e06:	7e 06                	jle    f0104e0e <vprintfmt+0x1c1>$/;"	l
f0104e08	obj/kern/kernel.asm	/^f0104e08:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)$/;"	l
f0104e0c	obj/kern/kernel.asm	/^f0104e0c:	75 13                	jne    f0104e21 <vprintfmt+0x1d4>$/;"	l
f0104e0e	obj/kern/kernel.asm	/^f0104e0e:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0104e11	obj/kern/kernel.asm	/^f0104e11:	0f be 02             	movsbl (%edx),%eax$/;"	l
f0104e14	obj/kern/kernel.asm	/^f0104e14:	85 c0                	test   %eax,%eax$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	0f 85 99 00 00 00    	jne    f0104eb5 <vprintfmt+0x268>$/;"	l
f0104e1c	obj/kern/kernel.asm	/^f0104e1c:	e9 86 00 00 00       	jmp    f0104ea7 <vprintfmt+0x25a>$/;"	l
f0104e21	obj/kern/kernel.asm	/^f0104e21:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0104e25	obj/kern/kernel.asm	/^f0104e25:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0104e28	obj/kern/kernel.asm	/^f0104e28:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0104e2b	obj/kern/kernel.asm	/^f0104e2b:	e8 fb 03 00 00       	call   f010522b <strnlen>$/;"	l
f0104e30	obj/kern/kernel.asm	/^f0104e30:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f0104e33	obj/kern/kernel.asm	/^f0104e33:	29 c2                	sub    %eax,%edx$/;"	l
f0104e35	obj/kern/kernel.asm	/^f0104e35:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104e38	obj/kern/kernel.asm	/^f0104e38:	85 d2                	test   %edx,%edx$/;"	l
f0104e3a	obj/kern/kernel.asm	/^f0104e3a:	7e d2                	jle    f0104e0e <vprintfmt+0x1c1>$/;"	l
f0104e3c	obj/kern/kernel.asm	/^f0104e3c:	0f be 4d d4          	movsbl -0x2c(%ebp),%ecx$/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0104e43	obj/kern/kernel.asm	/^f0104e43:	89 5d c4             	mov    %ebx,-0x3c(%ebp)$/;"	l
f0104e46	obj/kern/kernel.asm	/^f0104e46:	89 d3                	mov    %edx,%ebx$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104e4c	obj/kern/kernel.asm	/^f0104e4c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0104e4f	obj/kern/kernel.asm	/^f0104e4f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e52	obj/kern/kernel.asm	/^f0104e52:	ff d7                	call   *%edi$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57:	85 db                	test   %ebx,%ebx$/;"	l
f0104e59	obj/kern/kernel.asm	/^f0104e59:	7f ed                	jg     f0104e48 <vprintfmt+0x1fb>$/;"	l
f0104e5b	obj/kern/kernel.asm	/^f0104e5b:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0104e5e	obj/kern/kernel.asm	/^f0104e5e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0104e65	obj/kern/kernel.asm	/^f0104e65:	eb a7                	jmp    f0104e0e <vprintfmt+0x1c1>$/;"	l
f0104e67	obj/kern/kernel.asm	/^f0104e67:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0104e6b	obj/kern/kernel.asm	/^f0104e6b:	74 18                	je     f0104e85 <vprintfmt+0x238>$/;"	l
f0104e6d	obj/kern/kernel.asm	/^f0104e6d:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0104e70	obj/kern/kernel.asm	/^f0104e70:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f0104e73	obj/kern/kernel.asm	/^f0104e73:	76 10                	jbe    f0104e85 <vprintfmt+0x238>$/;"	l
f0104e75	obj/kern/kernel.asm	/^f0104e75:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104e79	obj/kern/kernel.asm	/^f0104e79:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f0104e80	obj/kern/kernel.asm	/^f0104e80:	ff 55 e0             	call   *-0x20(%ebp)$/;"	l
f0104e83	obj/kern/kernel.asm	/^f0104e83:	eb 0a                	jmp    f0104e8f <vprintfmt+0x242>$/;"	l
f0104e85	obj/kern/kernel.asm	/^f0104e85:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0104e89	obj/kern/kernel.asm	/^f0104e89:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e8c	obj/kern/kernel.asm	/^f0104e8c:	ff 55 e0             	call   *-0x20(%ebp)$/;"	l
f0104e8f	obj/kern/kernel.asm	/^f0104e8f:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
f0104e93	obj/kern/kernel.asm	/^f0104e93:	0f be 03             	movsbl (%ebx),%eax$/;"	l
f0104e96	obj/kern/kernel.asm	/^f0104e96:	85 c0                	test   %eax,%eax$/;"	l
f0104e98	obj/kern/kernel.asm	/^f0104e98:	74 05                	je     f0104e9f <vprintfmt+0x252>$/;"	l
f0104e9a	obj/kern/kernel.asm	/^f0104e9a:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0104e9d	obj/kern/kernel.asm	/^f0104e9d:	eb 29                	jmp    f0104ec8 <vprintfmt+0x27b>$/;"	l
f0104e9f	obj/kern/kernel.asm	/^f0104e9f:	89 fe                	mov    %edi,%esi$/;"	l
f0104ea1	obj/kern/kernel.asm	/^f0104ea1:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0104ea4	obj/kern/kernel.asm	/^f0104ea4:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0104ea7	obj/kern/kernel.asm	/^f0104ea7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0104eab	obj/kern/kernel.asm	/^f0104eab:	7f 2e                	jg     f0104edb <vprintfmt+0x28e>$/;"	l
f0104ead	obj/kern/kernel.asm	/^f0104ead:	8b 5d cc             	mov    -0x34(%ebp),%ebx$/;"	l
f0104eb0	obj/kern/kernel.asm	/^f0104eb0:	e9 c4 fd ff ff       	jmp    f0104c79 <vprintfmt+0x2c>$/;"	l
f0104eb5	obj/kern/kernel.asm	/^f0104eb5:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0104eb8	obj/kern/kernel.asm	/^f0104eb8:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104ebb	obj/kern/kernel.asm	/^f0104ebb:	89 7d e0             	mov    %edi,-0x20(%ebp)$/;"	l
f0104ebe	obj/kern/kernel.asm	/^f0104ebe:	89 f7                	mov    %esi,%edi$/;"	l
f0104ec0	obj/kern/kernel.asm	/^f0104ec0:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f0104ec3	obj/kern/kernel.asm	/^f0104ec3:	89 5d d0             	mov    %ebx,-0x30(%ebp)$/;"	l
f0104ec6	obj/kern/kernel.asm	/^f0104ec6:	89 d3                	mov    %edx,%ebx$/;"	l
f0104ec8	obj/kern/kernel.asm	/^f0104ec8:	85 f6                	test   %esi,%esi$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	78 9b                	js     f0104e67 <vprintfmt+0x21a>$/;"	l
f0104ecc	obj/kern/kernel.asm	/^f0104ecc:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0104ecf	obj/kern/kernel.asm	/^f0104ecf:	79 96                	jns    f0104e67 <vprintfmt+0x21a>$/;"	l
f0104ed1	obj/kern/kernel.asm	/^f0104ed1:	89 fe                	mov    %edi,%esi$/;"	l
f0104ed3	obj/kern/kernel.asm	/^f0104ed3:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0104ed6	obj/kern/kernel.asm	/^f0104ed6:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0104ed9	obj/kern/kernel.asm	/^f0104ed9:	eb cc                	jmp    f0104ea7 <vprintfmt+0x25a>$/;"	l
f0104edb	obj/kern/kernel.asm	/^f0104edb:	89 5d d8             	mov    %ebx,-0x28(%ebp)$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0104ee1	obj/kern/kernel.asm	/^f0104ee1:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104ee5	obj/kern/kernel.asm	/^f0104ee5:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0104eec	obj/kern/kernel.asm	/^f0104eec:	ff d7                	call   *%edi$/;"	l
f0104eee	obj/kern/kernel.asm	/^f0104eee:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0104ef1	obj/kern/kernel.asm	/^f0104ef1:	85 db                	test   %ebx,%ebx$/;"	l
f0104ef3	obj/kern/kernel.asm	/^f0104ef3:	7f ec                	jg     f0104ee1 <vprintfmt+0x294>$/;"	l
f0104ef5	obj/kern/kernel.asm	/^f0104ef5:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f0104ef8	obj/kern/kernel.asm	/^f0104ef8:	e9 7c fd ff ff       	jmp    f0104c79 <vprintfmt+0x2c>$/;"	l
f0104efd	obj/kern/kernel.asm	/^f0104efd:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0104f00	obj/kern/kernel.asm	/^f0104f00:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0104f03	obj/kern/kernel.asm	/^f0104f03:	7e 16                	jle    f0104f1b <vprintfmt+0x2ce>$/;"	l
f0104f05	obj/kern/kernel.asm	/^f0104f05:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104f08	obj/kern/kernel.asm	/^f0104f08:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0104f0b	obj/kern/kernel.asm	/^f0104f0b:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104f0e	obj/kern/kernel.asm	/^f0104f0e:	8b 10                	mov    (%eax),%edx$/;"	l
f0104f10	obj/kern/kernel.asm	/^f0104f10:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
f0104f13	obj/kern/kernel.asm	/^f0104f13:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f0104f16	obj/kern/kernel.asm	/^f0104f16:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0104f19	obj/kern/kernel.asm	/^f0104f19:	eb 32                	jmp    f0104f4d <vprintfmt+0x300>$/;"	l
f0104f1b	obj/kern/kernel.asm	/^f0104f1b:	85 c9                	test   %ecx,%ecx$/;"	l
f0104f1d	obj/kern/kernel.asm	/^f0104f1d:	74 18                	je     f0104f37 <vprintfmt+0x2ea>$/;"	l
f0104f1f	obj/kern/kernel.asm	/^f0104f1f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104f22	obj/kern/kernel.asm	/^f0104f22:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104f25	obj/kern/kernel.asm	/^f0104f25:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104f28	obj/kern/kernel.asm	/^f0104f28:	8b 00                	mov    (%eax),%eax$/;"	l
f0104f2a	obj/kern/kernel.asm	/^f0104f2a:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104f2d	obj/kern/kernel.asm	/^f0104f2d:	89 c1                	mov    %eax,%ecx$/;"	l
f0104f2f	obj/kern/kernel.asm	/^f0104f2f:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0104f32	obj/kern/kernel.asm	/^f0104f32:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f0104f35	obj/kern/kernel.asm	/^f0104f35:	eb 16                	jmp    f0104f4d <vprintfmt+0x300>$/;"	l
f0104f37	obj/kern/kernel.asm	/^f0104f37:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104f3a	obj/kern/kernel.asm	/^f0104f3a:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104f3d	obj/kern/kernel.asm	/^f0104f3d:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104f40	obj/kern/kernel.asm	/^f0104f40:	8b 00                	mov    (%eax),%eax$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104f45	obj/kern/kernel.asm	/^f0104f45:	89 c2                	mov    %eax,%edx$/;"	l
f0104f47	obj/kern/kernel.asm	/^f0104f47:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f0104f4a	obj/kern/kernel.asm	/^f0104f4a:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104f4d	obj/kern/kernel.asm	/^f0104f4d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0104f50	obj/kern/kernel.asm	/^f0104f50:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0104f53	obj/kern/kernel.asm	/^f0104f53:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0104f5c	obj/kern/kernel.asm	/^f0104f5c:	0f 89 b1 00 00 00    	jns    f0105013 <vprintfmt+0x3c6>$/;"	l
f0104f62	obj/kern/kernel.asm	/^f0104f62:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104f66	obj/kern/kernel.asm	/^f0104f66:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f0104f6d	obj/kern/kernel.asm	/^f0104f6d:	ff d7                	call   *%edi$/;"	l
f0104f6f	obj/kern/kernel.asm	/^f0104f6f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0104f72	obj/kern/kernel.asm	/^f0104f72:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0104f75	obj/kern/kernel.asm	/^f0104f75:	f7 d8                	neg    %eax$/;"	l
f0104f77	obj/kern/kernel.asm	/^f0104f77:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0104f7a	obj/kern/kernel.asm	/^f0104f7a:	f7 da                	neg    %edx$/;"	l
f0104f7c	obj/kern/kernel.asm	/^f0104f7c:	e9 92 00 00 00       	jmp    f0105013 <vprintfmt+0x3c6>$/;"	l
f0104f81	obj/kern/kernel.asm	/^f0104f81:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0104f84	obj/kern/kernel.asm	/^f0104f84:	89 ca                	mov    %ecx,%edx$/;"	l
f0104f86	obj/kern/kernel.asm	/^f0104f86:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0104f89	obj/kern/kernel.asm	/^f0104f89:	e8 68 fc ff ff       	call   f0104bf6 <getuint>$/;"	l
f0104f8e	obj/kern/kernel.asm	/^f0104f8e:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0104f93	obj/kern/kernel.asm	/^f0104f93:	eb 7e                	jmp    f0105013 <vprintfmt+0x3c6>$/;"	l
f0104f95	obj/kern/kernel.asm	/^f0104f95:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0104f98	obj/kern/kernel.asm	/^f0104f98:	89 ca                	mov    %ecx,%edx$/;"	l
f0104f9a	obj/kern/kernel.asm	/^f0104f9a:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0104f9d	obj/kern/kernel.asm	/^f0104f9d:	e8 54 fc ff ff       	call   f0104bf6 <getuint>$/;"	l
f0104fa2	obj/kern/kernel.asm	/^f0104fa2:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0104fa5	obj/kern/kernel.asm	/^f0104fa5:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0104fa8	obj/kern/kernel.asm	/^f0104fa8:	bb 08 00 00 00       	mov    $0x8,%ebx$/;"	l
f0104fad	obj/kern/kernel.asm	/^f0104fad:	85 d2                	test   %edx,%edx$/;"	l
f0104faf	obj/kern/kernel.asm	/^f0104faf:	79 62                	jns    f0105013 <vprintfmt+0x3c6>$/;"	l
f0104fb1	obj/kern/kernel.asm	/^f0104fb1:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104fb5	obj/kern/kernel.asm	/^f0104fb5:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f0104fbc	obj/kern/kernel.asm	/^f0104fbc:	ff d7                	call   *%edi$/;"	l
f0104fbe	obj/kern/kernel.asm	/^f0104fbe:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0104fc1	obj/kern/kernel.asm	/^f0104fc1:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0104fc4	obj/kern/kernel.asm	/^f0104fc4:	f7 d8                	neg    %eax$/;"	l
f0104fc6	obj/kern/kernel.asm	/^f0104fc6:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0104fc9	obj/kern/kernel.asm	/^f0104fc9:	f7 da                	neg    %edx$/;"	l
f0104fcb	obj/kern/kernel.asm	/^f0104fcb:	eb 46                	jmp    f0105013 <vprintfmt+0x3c6>$/;"	l
f0104fcd	obj/kern/kernel.asm	/^f0104fcd:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104fd4	obj/kern/kernel.asm	/^f0104fd4:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f0104fdb	obj/kern/kernel.asm	/^f0104fdb:	ff d7                	call   *%edi$/;"	l
f0104fdd	obj/kern/kernel.asm	/^f0104fdd:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0104fe1	obj/kern/kernel.asm	/^f0104fe1:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f0104fe8	obj/kern/kernel.asm	/^f0104fe8:	ff d7                	call   *%edi$/;"	l
f0104fea	obj/kern/kernel.asm	/^f0104fea:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0104fed	obj/kern/kernel.asm	/^f0104fed:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0104ff0	obj/kern/kernel.asm	/^f0104ff0:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0104ff3	obj/kern/kernel.asm	/^f0104ff3:	8b 00                	mov    (%eax),%eax$/;"	l
f0104ff5	obj/kern/kernel.asm	/^f0104ff5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104ffa	obj/kern/kernel.asm	/^f0104ffa:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0104fff	obj/kern/kernel.asm	/^f0104fff:	eb 12                	jmp    f0105013 <vprintfmt+0x3c6>$/;"	l
f0105001	obj/kern/kernel.asm	/^f0105001:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0105004	obj/kern/kernel.asm	/^f0105004:	89 ca                	mov    %ecx,%edx$/;"	l
f0105006	obj/kern/kernel.asm	/^f0105006:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105009	obj/kern/kernel.asm	/^f0105009:	e8 e8 fb ff ff       	call   f0104bf6 <getuint>$/;"	l
f010500e	obj/kern/kernel.asm	/^f010500e:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013:	0f be 4d d4          	movsbl -0x2c(%ebp),%ecx$/;"	l
f0105017	obj/kern/kernel.asm	/^f0105017:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f010501b	obj/kern/kernel.asm	/^f010501b:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f010501e	obj/kern/kernel.asm	/^f010501e:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0105022	obj/kern/kernel.asm	/^f0105022:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105026	obj/kern/kernel.asm	/^f0105026:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105029	obj/kern/kernel.asm	/^f0105029:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010502d	obj/kern/kernel.asm	/^f010502d:	89 f2                	mov    %esi,%edx$/;"	l
f010502f	obj/kern/kernel.asm	/^f010502f:	89 f8                	mov    %edi,%eax$/;"	l
f0105031	obj/kern/kernel.asm	/^f0105031:	e8 ca fa ff ff       	call   f0104b00 <printnum>$/;"	l
f0105036	obj/kern/kernel.asm	/^f0105036:	8b 5d cc             	mov    -0x34(%ebp),%ebx$/;"	l
f0105039	obj/kern/kernel.asm	/^f0105039:	e9 3b fc ff ff       	jmp    f0104c79 <vprintfmt+0x2c>$/;"	l
f010503e	obj/kern/kernel.asm	/^f010503e:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0105041	obj/kern/kernel.asm	/^f0105041:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0105044	obj/kern/kernel.asm	/^f0105044:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105048	obj/kern/kernel.asm	/^f0105048:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010504b	obj/kern/kernel.asm	/^f010504b:	ff d7                	call   *%edi$/;"	l
f010504d	obj/kern/kernel.asm	/^f010504d:	8b 5d cc             	mov    -0x34(%ebp),%ebx$/;"	l
f0105050	obj/kern/kernel.asm	/^f0105050:	e9 24 fc ff ff       	jmp    f0104c79 <vprintfmt+0x2c>$/;"	l
f0105055	obj/kern/kernel.asm	/^f0105055:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105059	obj/kern/kernel.asm	/^f0105059:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f0105060	obj/kern/kernel.asm	/^f0105060:	ff d7                	call   *%edi$/;"	l
f0105062	obj/kern/kernel.asm	/^f0105062:	8d 43 ff             	lea    -0x1(%ebx),%eax$/;"	l
f0105065	obj/kern/kernel.asm	/^f0105065:	80 38 25             	cmpb   $0x25,(%eax)$/;"	l
f0105068	obj/kern/kernel.asm	/^f0105068:	0f 84 0b fc ff ff    	je     f0104c79 <vprintfmt+0x2c>$/;"	l
f010506e	obj/kern/kernel.asm	/^f010506e:	89 c3                	mov    %eax,%ebx$/;"	l
f0105070	obj/kern/kernel.asm	/^f0105070:	eb f0                	jmp    f0105062 <vprintfmt+0x415>$/;"	l
f0105072	obj/kern/kernel.asm	/^f0105072:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0105075	obj/kern/kernel.asm	/^f0105075:	5b                   	pop    %ebx$/;"	l
f0105076	obj/kern/kernel.asm	/^f0105076:	5e                   	pop    %esi$/;"	l
f0105077	obj/kern/kernel.asm	/^f0105077:	5f                   	pop    %edi$/;"	l
f0105078	obj/kern/kernel.asm	/^f0105078:	5d                   	pop    %ebp$/;"	l
f0105079	obj/kern/kernel.asm	/^f0105079:	c3                   	ret    $/;"	l
f010507a	obj/kern/kernel.asm	/^f010507a <vsnprintf>:$/;"	l
f010507a	obj/kern/kernel.asm	/^f010507a:	55                   	push   %ebp$/;"	l
f010507b	obj/kern/kernel.asm	/^f010507b:	89 e5                	mov    %esp,%ebp$/;"	l
f010507d	obj/kern/kernel.asm	/^f010507d:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0105080	obj/kern/kernel.asm	/^f0105080:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105083	obj/kern/kernel.asm	/^f0105083:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105086	obj/kern/kernel.asm	/^f0105086:	85 c0                	test   %eax,%eax$/;"	l
f0105088	obj/kern/kernel.asm	/^f0105088:	74 04                	je     f010508e <vsnprintf+0x14>$/;"	l
f010508a	obj/kern/kernel.asm	/^f010508a:	85 d2                	test   %edx,%edx$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c:	7f 07                	jg     f0105095 <vsnprintf+0x1b>$/;"	l
f010508e	obj/kern/kernel.asm	/^f010508e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105093	obj/kern/kernel.asm	/^f0105093:	eb 3b                	jmp    f01050d0 <vsnprintf+0x56>$/;"	l
f0105095	obj/kern/kernel.asm	/^f0105095:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098:	8d 44 10 ff          	lea    -0x1(%eax,%edx,1),%eax$/;"	l
f010509c	obj/kern/kernel.asm	/^f010509c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010509f	obj/kern/kernel.asm	/^f010509f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01050a6	obj/kern/kernel.asm	/^f01050a6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01050a9	obj/kern/kernel.asm	/^f01050a9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01050ad	obj/kern/kernel.asm	/^f01050ad:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01050b0	obj/kern/kernel.asm	/^f01050b0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01050b4	obj/kern/kernel.asm	/^f01050b4:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f01050b7	obj/kern/kernel.asm	/^f01050b7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01050bb	obj/kern/kernel.asm	/^f01050bb:	c7 04 24 30 4c 10 f0 	movl   $0xf0104c30,(%esp)$/;"	l
f01050c2	obj/kern/kernel.asm	/^f01050c2:	e8 86 fb ff ff       	call   f0104c4d <vprintfmt>$/;"	l
f01050c7	obj/kern/kernel.asm	/^f01050c7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01050ca	obj/kern/kernel.asm	/^f01050ca:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01050cd	obj/kern/kernel.asm	/^f01050cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01050d0	obj/kern/kernel.asm	/^f01050d0:	c9                   	leave  $/;"	l
f01050d1	obj/kern/kernel.asm	/^f01050d1:	c3                   	ret    $/;"	l
f01050d2	obj/kern/kernel.asm	/^f01050d2 <snprintf>:$/;"	l
f01050d2	obj/kern/kernel.asm	/^f01050d2:	55                   	push   %ebp$/;"	l
f01050d3	obj/kern/kernel.asm	/^f01050d3:	89 e5                	mov    %esp,%ebp$/;"	l
f01050d5	obj/kern/kernel.asm	/^f01050d5:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01050d8	obj/kern/kernel.asm	/^f01050d8:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01050db	obj/kern/kernel.asm	/^f01050db:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01050df	obj/kern/kernel.asm	/^f01050df:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01050e2	obj/kern/kernel.asm	/^f01050e2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01050e6	obj/kern/kernel.asm	/^f01050e6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01050e9	obj/kern/kernel.asm	/^f01050e9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01050ed	obj/kern/kernel.asm	/^f01050ed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01050f0	obj/kern/kernel.asm	/^f01050f0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050f3	obj/kern/kernel.asm	/^f01050f3:	e8 82 ff ff ff       	call   f010507a <vsnprintf>$/;"	l
f01050f8	obj/kern/kernel.asm	/^f01050f8:	c9                   	leave  $/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	c3                   	ret    $/;"	l
f01050fa	obj/kern/kernel.asm	/^f01050fa <printfmt>:$/;"	l
f01050fa	obj/kern/kernel.asm	/^f01050fa:	55                   	push   %ebp$/;"	l
f01050fb	obj/kern/kernel.asm	/^f01050fb:	89 e5                	mov    %esp,%ebp$/;"	l
f01050fd	obj/kern/kernel.asm	/^f01050fd:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105100	obj/kern/kernel.asm	/^f0105100:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105103	obj/kern/kernel.asm	/^f0105103:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105107	obj/kern/kernel.asm	/^f0105107:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010510a	obj/kern/kernel.asm	/^f010510a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010510e	obj/kern/kernel.asm	/^f010510e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105111	obj/kern/kernel.asm	/^f0105111:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105115	obj/kern/kernel.asm	/^f0105115:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105118	obj/kern/kernel.asm	/^f0105118:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010511b	obj/kern/kernel.asm	/^f010511b:	e8 2d fb ff ff       	call   f0104c4d <vprintfmt>$/;"	l
f0105120	obj/kern/kernel.asm	/^f0105120:	c9                   	leave  $/;"	l
f0105121	obj/kern/kernel.asm	/^f0105121:	c3                   	ret    $/;"	l
f0105130	obj/kern/kernel.asm	/^f0105130 <readline>:$/;"	l
f0105130	obj/kern/kernel.asm	/^f0105130:	55                   	push   %ebp$/;"	l
f0105131	obj/kern/kernel.asm	/^f0105131:	89 e5                	mov    %esp,%ebp$/;"	l
f0105133	obj/kern/kernel.asm	/^f0105133:	57                   	push   %edi$/;"	l
f0105134	obj/kern/kernel.asm	/^f0105134:	56                   	push   %esi$/;"	l
f0105135	obj/kern/kernel.asm	/^f0105135:	53                   	push   %ebx$/;"	l
f0105136	obj/kern/kernel.asm	/^f0105136:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105139	obj/kern/kernel.asm	/^f0105139:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010513c	obj/kern/kernel.asm	/^f010513c:	85 c0                	test   %eax,%eax$/;"	l
f010513e	obj/kern/kernel.asm	/^f010513e:	74 10                	je     f0105150 <readline+0x20>$/;"	l
f0105140	obj/kern/kernel.asm	/^f0105140:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105144	obj/kern/kernel.asm	/^f0105144:	c7 04 24 a6 71 10 f0 	movl   $0xf01071a6,(%esp)$/;"	l
f010514b	obj/kern/kernel.asm	/^f010514b:	e8 7b e8 ff ff       	call   f01039cb <cprintf>$/;"	l
f0105150	obj/kern/kernel.asm	/^f0105150:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0105157	obj/kern/kernel.asm	/^f0105157:	e8 3a b1 ff ff       	call   f0100296 <iscons>$/;"	l
f010515c	obj/kern/kernel.asm	/^f010515c:	89 c7                	mov    %eax,%edi$/;"	l
f010515e	obj/kern/kernel.asm	/^f010515e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105163	obj/kern/kernel.asm	/^f0105163:	e8 1d b1 ff ff       	call   f0100285 <getchar>$/;"	l
f0105168	obj/kern/kernel.asm	/^f0105168:	89 c3                	mov    %eax,%ebx$/;"	l
f010516a	obj/kern/kernel.asm	/^f010516a:	85 c0                	test   %eax,%eax$/;"	l
f010516c	obj/kern/kernel.asm	/^f010516c:	79 17                	jns    f0105185 <readline+0x55>$/;"	l
f010516e	obj/kern/kernel.asm	/^f010516e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105172	obj/kern/kernel.asm	/^f0105172:	c7 04 24 7f 7c 10 f0 	movl   $0xf0107c7f,(%esp)$/;"	l
f0105179	obj/kern/kernel.asm	/^f0105179:	e8 4d e8 ff ff       	call   f01039cb <cprintf>$/;"	l
f010517e	obj/kern/kernel.asm	/^f010517e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105183	obj/kern/kernel.asm	/^f0105183:	eb 76                	jmp    f01051fb <readline+0xcb>$/;"	l
f0105185	obj/kern/kernel.asm	/^f0105185:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0105188	obj/kern/kernel.asm	/^f0105188:	74 08                	je     f0105192 <readline+0x62>$/;"	l
f010518a	obj/kern/kernel.asm	/^f010518a:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f010518d	obj/kern/kernel.asm	/^f010518d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105190	obj/kern/kernel.asm	/^f0105190:	75 19                	jne    f01051ab <readline+0x7b>$/;"	l
f0105192	obj/kern/kernel.asm	/^f0105192:	85 f6                	test   %esi,%esi$/;"	l
f0105194	obj/kern/kernel.asm	/^f0105194:	7e 15                	jle    f01051ab <readline+0x7b>$/;"	l
f0105196	obj/kern/kernel.asm	/^f0105196:	85 ff                	test   %edi,%edi$/;"	l
f0105198	obj/kern/kernel.asm	/^f0105198:	74 0c                	je     f01051a6 <readline+0x76>$/;"	l
f010519a	obj/kern/kernel.asm	/^f010519a:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f01051a1	obj/kern/kernel.asm	/^f01051a1:	e8 f4 b2 ff ff       	call   f010049a <cputchar>$/;"	l
f01051a6	obj/kern/kernel.asm	/^f01051a6:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01051a9	obj/kern/kernel.asm	/^f01051a9:	eb b8                	jmp    f0105163 <readline+0x33>$/;"	l
f01051ab	obj/kern/kernel.asm	/^f01051ab:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f01051ae	obj/kern/kernel.asm	/^f01051ae:	66 90                	xchg   %ax,%ax$/;"	l
f01051b0	obj/kern/kernel.asm	/^f01051b0:	7e 23                	jle    f01051d5 <readline+0xa5>$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f01051b8	obj/kern/kernel.asm	/^f01051b8:	7f 1b                	jg     f01051d5 <readline+0xa5>$/;"	l
f01051ba	obj/kern/kernel.asm	/^f01051ba:	85 ff                	test   %edi,%edi$/;"	l
f01051bc	obj/kern/kernel.asm	/^f01051bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01051c0	obj/kern/kernel.asm	/^f01051c0:	74 08                	je     f01051ca <readline+0x9a>$/;"	l
f01051c2	obj/kern/kernel.asm	/^f01051c2:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01051c5	obj/kern/kernel.asm	/^f01051c5:	e8 d0 b2 ff ff       	call   f010049a <cputchar>$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca:	88 9e c0 ec 26 f0    	mov    %bl,-0xfd91340(%esi)$/;"	l
f01051d0	obj/kern/kernel.asm	/^f01051d0:	83 c6 01             	add    $0x1,%esi$/;"	l
f01051d3	obj/kern/kernel.asm	/^f01051d3:	eb 8e                	jmp    f0105163 <readline+0x33>$/;"	l
f01051d5	obj/kern/kernel.asm	/^f01051d5:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f01051d8	obj/kern/kernel.asm	/^f01051d8:	74 05                	je     f01051df <readline+0xaf>$/;"	l
f01051da	obj/kern/kernel.asm	/^f01051da:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f01051dd	obj/kern/kernel.asm	/^f01051dd:	75 84                	jne    f0105163 <readline+0x33>$/;"	l
f01051df	obj/kern/kernel.asm	/^f01051df:	85 ff                	test   %edi,%edi$/;"	l
f01051e1	obj/kern/kernel.asm	/^f01051e1:	74 0c                	je     f01051ef <readline+0xbf>$/;"	l
f01051e3	obj/kern/kernel.asm	/^f01051e3:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f01051ea	obj/kern/kernel.asm	/^f01051ea:	e8 ab b2 ff ff       	call   f010049a <cputchar>$/;"	l
f01051ef	obj/kern/kernel.asm	/^f01051ef:	c6 86 c0 ec 26 f0 00 	movb   $0x0,-0xfd91340(%esi)$/;"	l
f01051f6	obj/kern/kernel.asm	/^f01051f6:	b8 c0 ec 26 f0       	mov    $0xf026ecc0,%eax$/;"	l
f01051fb	obj/kern/kernel.asm	/^f01051fb:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01051fe	obj/kern/kernel.asm	/^f01051fe:	5b                   	pop    %ebx$/;"	l
f01051ff	obj/kern/kernel.asm	/^f01051ff:	5e                   	pop    %esi$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200:	5f                   	pop    %edi$/;"	l
f0105201	obj/kern/kernel.asm	/^f0105201:	5d                   	pop    %ebp$/;"	l
f0105202	obj/kern/kernel.asm	/^f0105202:	c3                   	ret    $/;"	l
f0105210	obj/kern/kernel.asm	/^f0105210 <strlen>:$/;"	l
f0105210	obj/kern/kernel.asm	/^f0105210:	55                   	push   %ebp$/;"	l
f0105211	obj/kern/kernel.asm	/^f0105211:	89 e5                	mov    %esp,%ebp$/;"	l
f0105213	obj/kern/kernel.asm	/^f0105213:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105216	obj/kern/kernel.asm	/^f0105216:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010521b	obj/kern/kernel.asm	/^f010521b:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f010521e	obj/kern/kernel.asm	/^f010521e:	74 09                	je     f0105229 <strlen+0x19>$/;"	l
f0105220	obj/kern/kernel.asm	/^f0105220:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105223	obj/kern/kernel.asm	/^f0105223:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0105227	obj/kern/kernel.asm	/^f0105227:	75 f7                	jne    f0105220 <strlen+0x10>$/;"	l
f0105229	obj/kern/kernel.asm	/^f0105229:	5d                   	pop    %ebp$/;"	l
f010522a	obj/kern/kernel.asm	/^f010522a:	c3                   	ret    $/;"	l
f010522b	obj/kern/kernel.asm	/^f010522b <strnlen>:$/;"	l
f010522b	obj/kern/kernel.asm	/^f010522b:	55                   	push   %ebp$/;"	l
f010522c	obj/kern/kernel.asm	/^f010522c:	89 e5                	mov    %esp,%ebp$/;"	l
f010522e	obj/kern/kernel.asm	/^f010522e:	53                   	push   %ebx$/;"	l
f010522f	obj/kern/kernel.asm	/^f010522f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105232	obj/kern/kernel.asm	/^f0105232:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105235	obj/kern/kernel.asm	/^f0105235:	85 c9                	test   %ecx,%ecx$/;"	l
f0105237	obj/kern/kernel.asm	/^f0105237:	74 19                	je     f0105252 <strnlen+0x27>$/;"	l
f0105239	obj/kern/kernel.asm	/^f0105239:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f010523c	obj/kern/kernel.asm	/^f010523c:	74 14                	je     f0105252 <strnlen+0x27>$/;"	l
f010523e	obj/kern/kernel.asm	/^f010523e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105243	obj/kern/kernel.asm	/^f0105243:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105248	obj/kern/kernel.asm	/^f0105248:	74 0d                	je     f0105257 <strnlen+0x2c>$/;"	l
f010524a	obj/kern/kernel.asm	/^f010524a:	80 3c 03 00          	cmpb   $0x0,(%ebx,%eax,1)$/;"	l
f010524e	obj/kern/kernel.asm	/^f010524e:	75 f3                	jne    f0105243 <strnlen+0x18>$/;"	l
f0105250	obj/kern/kernel.asm	/^f0105250:	eb 05                	jmp    f0105257 <strnlen+0x2c>$/;"	l
f0105252	obj/kern/kernel.asm	/^f0105252:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105257	obj/kern/kernel.asm	/^f0105257:	5b                   	pop    %ebx$/;"	l
f0105258	obj/kern/kernel.asm	/^f0105258:	5d                   	pop    %ebp$/;"	l
f0105259	obj/kern/kernel.asm	/^f0105259:	c3                   	ret    $/;"	l
f010525a	obj/kern/kernel.asm	/^f010525a <strcpy>:$/;"	l
f010525a	obj/kern/kernel.asm	/^f010525a:	55                   	push   %ebp$/;"	l
f010525b	obj/kern/kernel.asm	/^f010525b:	89 e5                	mov    %esp,%ebp$/;"	l
f010525d	obj/kern/kernel.asm	/^f010525d:	53                   	push   %ebx$/;"	l
f010525e	obj/kern/kernel.asm	/^f010525e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105261	obj/kern/kernel.asm	/^f0105261:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105264	obj/kern/kernel.asm	/^f0105264:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105269	obj/kern/kernel.asm	/^f0105269:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f010526d	obj/kern/kernel.asm	/^f010526d:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f0105270	obj/kern/kernel.asm	/^f0105270:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105273	obj/kern/kernel.asm	/^f0105273:	84 c9                	test   %cl,%cl$/;"	l
f0105275	obj/kern/kernel.asm	/^f0105275:	75 f2                	jne    f0105269 <strcpy+0xf>$/;"	l
f0105277	obj/kern/kernel.asm	/^f0105277:	5b                   	pop    %ebx$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	5d                   	pop    %ebp$/;"	l
f0105279	obj/kern/kernel.asm	/^f0105279:	c3                   	ret    $/;"	l
f010527a	obj/kern/kernel.asm	/^f010527a <strncpy>:$/;"	l
f010527a	obj/kern/kernel.asm	/^f010527a:	55                   	push   %ebp$/;"	l
f010527b	obj/kern/kernel.asm	/^f010527b:	89 e5                	mov    %esp,%ebp$/;"	l
f010527d	obj/kern/kernel.asm	/^f010527d:	56                   	push   %esi$/;"	l
f010527e	obj/kern/kernel.asm	/^f010527e:	53                   	push   %ebx$/;"	l
f010527f	obj/kern/kernel.asm	/^f010527f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105285	obj/kern/kernel.asm	/^f0105285:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105288	obj/kern/kernel.asm	/^f0105288:	85 f6                	test   %esi,%esi$/;"	l
f010528a	obj/kern/kernel.asm	/^f010528a:	74 18                	je     f01052a4 <strncpy+0x2a>$/;"	l
f010528c	obj/kern/kernel.asm	/^f010528c:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105291	obj/kern/kernel.asm	/^f0105291:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0105294	obj/kern/kernel.asm	/^f0105294:	88 1c 08             	mov    %bl,(%eax,%ecx,1)$/;"	l
f0105297	obj/kern/kernel.asm	/^f0105297:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f010529a	obj/kern/kernel.asm	/^f010529a:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f010529d	obj/kern/kernel.asm	/^f010529d:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01052a0	obj/kern/kernel.asm	/^f01052a0:	39 ce                	cmp    %ecx,%esi$/;"	l
f01052a2	obj/kern/kernel.asm	/^f01052a2:	77 ed                	ja     f0105291 <strncpy+0x17>$/;"	l
f01052a4	obj/kern/kernel.asm	/^f01052a4:	5b                   	pop    %ebx$/;"	l
f01052a5	obj/kern/kernel.asm	/^f01052a5:	5e                   	pop    %esi$/;"	l
f01052a6	obj/kern/kernel.asm	/^f01052a6:	5d                   	pop    %ebp$/;"	l
f01052a7	obj/kern/kernel.asm	/^f01052a7:	c3                   	ret    $/;"	l
f01052a8	obj/kern/kernel.asm	/^f01052a8 <strlcpy>:$/;"	l
f01052a8	obj/kern/kernel.asm	/^f01052a8:	55                   	push   %ebp$/;"	l
f01052a9	obj/kern/kernel.asm	/^f01052a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01052ab	obj/kern/kernel.asm	/^f01052ab:	56                   	push   %esi$/;"	l
f01052ac	obj/kern/kernel.asm	/^f01052ac:	53                   	push   %ebx$/;"	l
f01052ad	obj/kern/kernel.asm	/^f01052ad:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01052b0	obj/kern/kernel.asm	/^f01052b0:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01052b3	obj/kern/kernel.asm	/^f01052b3:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01052b6	obj/kern/kernel.asm	/^f01052b6:	89 f0                	mov    %esi,%eax$/;"	l
f01052b8	obj/kern/kernel.asm	/^f01052b8:	85 c9                	test   %ecx,%ecx$/;"	l
f01052ba	obj/kern/kernel.asm	/^f01052ba:	74 27                	je     f01052e3 <strlcpy+0x3b>$/;"	l
f01052bc	obj/kern/kernel.asm	/^f01052bc:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f01052bf	obj/kern/kernel.asm	/^f01052bf:	74 1d                	je     f01052de <strlcpy+0x36>$/;"	l
f01052c1	obj/kern/kernel.asm	/^f01052c1:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f01052c4	obj/kern/kernel.asm	/^f01052c4:	84 db                	test   %bl,%bl$/;"	l
f01052c6	obj/kern/kernel.asm	/^f01052c6:	74 16                	je     f01052de <strlcpy+0x36>$/;"	l
f01052c8	obj/kern/kernel.asm	/^f01052c8:	88 18                	mov    %bl,(%eax)$/;"	l
f01052ca	obj/kern/kernel.asm	/^f01052ca:	83 c0 01             	add    $0x1,%eax$/;"	l
f01052cd	obj/kern/kernel.asm	/^f01052cd:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f01052d0	obj/kern/kernel.asm	/^f01052d0:	74 0e                	je     f01052e0 <strlcpy+0x38>$/;"	l
f01052d2	obj/kern/kernel.asm	/^f01052d2:	83 c2 01             	add    $0x1,%edx$/;"	l
f01052d5	obj/kern/kernel.asm	/^f01052d5:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f01052d8	obj/kern/kernel.asm	/^f01052d8:	84 db                	test   %bl,%bl$/;"	l
f01052da	obj/kern/kernel.asm	/^f01052da:	75 ec                	jne    f01052c8 <strlcpy+0x20>$/;"	l
f01052dc	obj/kern/kernel.asm	/^f01052dc:	eb 02                	jmp    f01052e0 <strlcpy+0x38>$/;"	l
f01052de	obj/kern/kernel.asm	/^f01052de:	89 f0                	mov    %esi,%eax$/;"	l
f01052e0	obj/kern/kernel.asm	/^f01052e0:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01052e3	obj/kern/kernel.asm	/^f01052e3:	29 f0                	sub    %esi,%eax$/;"	l
f01052e5	obj/kern/kernel.asm	/^f01052e5:	5b                   	pop    %ebx$/;"	l
f01052e6	obj/kern/kernel.asm	/^f01052e6:	5e                   	pop    %esi$/;"	l
f01052e7	obj/kern/kernel.asm	/^f01052e7:	5d                   	pop    %ebp$/;"	l
f01052e8	obj/kern/kernel.asm	/^f01052e8:	c3                   	ret    $/;"	l
f01052e9	obj/kern/kernel.asm	/^f01052e9 <strcmp>:$/;"	l
f01052e9	obj/kern/kernel.asm	/^f01052e9:	55                   	push   %ebp$/;"	l
f01052ea	obj/kern/kernel.asm	/^f01052ea:	89 e5                	mov    %esp,%ebp$/;"	l
f01052ec	obj/kern/kernel.asm	/^f01052ec:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01052ef	obj/kern/kernel.asm	/^f01052ef:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01052f2	obj/kern/kernel.asm	/^f01052f2:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01052f5	obj/kern/kernel.asm	/^f01052f5:	84 c0                	test   %al,%al$/;"	l
f01052f7	obj/kern/kernel.asm	/^f01052f7:	74 15                	je     f010530e <strcmp+0x25>$/;"	l
f01052f9	obj/kern/kernel.asm	/^f01052f9:	3a 02                	cmp    (%edx),%al$/;"	l
f01052fb	obj/kern/kernel.asm	/^f01052fb:	75 11                	jne    f010530e <strcmp+0x25>$/;"	l
f01052fd	obj/kern/kernel.asm	/^f01052fd:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105300	obj/kern/kernel.asm	/^f0105300:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105303	obj/kern/kernel.asm	/^f0105303:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0105306	obj/kern/kernel.asm	/^f0105306:	84 c0                	test   %al,%al$/;"	l
f0105308	obj/kern/kernel.asm	/^f0105308:	74 04                	je     f010530e <strcmp+0x25>$/;"	l
f010530a	obj/kern/kernel.asm	/^f010530a:	3a 02                	cmp    (%edx),%al$/;"	l
f010530c	obj/kern/kernel.asm	/^f010530c:	74 ef                	je     f01052fd <strcmp+0x14>$/;"	l
f010530e	obj/kern/kernel.asm	/^f010530e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105311	obj/kern/kernel.asm	/^f0105311:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0105314	obj/kern/kernel.asm	/^f0105314:	29 d0                	sub    %edx,%eax$/;"	l
f0105316	obj/kern/kernel.asm	/^f0105316:	5d                   	pop    %ebp$/;"	l
f0105317	obj/kern/kernel.asm	/^f0105317:	c3                   	ret    $/;"	l
f0105318	obj/kern/kernel.asm	/^f0105318 <strncmp>:$/;"	l
f0105318	obj/kern/kernel.asm	/^f0105318:	55                   	push   %ebp$/;"	l
f0105319	obj/kern/kernel.asm	/^f0105319:	89 e5                	mov    %esp,%ebp$/;"	l
f010531b	obj/kern/kernel.asm	/^f010531b:	53                   	push   %ebx$/;"	l
f010531c	obj/kern/kernel.asm	/^f010531c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010531f	obj/kern/kernel.asm	/^f010531f:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105322	obj/kern/kernel.asm	/^f0105322:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105325	obj/kern/kernel.asm	/^f0105325:	85 c0                	test   %eax,%eax$/;"	l
f0105327	obj/kern/kernel.asm	/^f0105327:	74 23                	je     f010534c <strncmp+0x34>$/;"	l
f0105329	obj/kern/kernel.asm	/^f0105329:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f010532c	obj/kern/kernel.asm	/^f010532c:	84 db                	test   %bl,%bl$/;"	l
f010532e	obj/kern/kernel.asm	/^f010532e:	74 24                	je     f0105354 <strncmp+0x3c>$/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330:	3a 19                	cmp    (%ecx),%bl$/;"	l
f0105332	obj/kern/kernel.asm	/^f0105332:	75 20                	jne    f0105354 <strncmp+0x3c>$/;"	l
f0105334	obj/kern/kernel.asm	/^f0105334:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105337	obj/kern/kernel.asm	/^f0105337:	74 13                	je     f010534c <strncmp+0x34>$/;"	l
f0105339	obj/kern/kernel.asm	/^f0105339:	83 c2 01             	add    $0x1,%edx$/;"	l
f010533c	obj/kern/kernel.asm	/^f010533c:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010533f	obj/kern/kernel.asm	/^f010533f:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0105342	obj/kern/kernel.asm	/^f0105342:	84 db                	test   %bl,%bl$/;"	l
f0105344	obj/kern/kernel.asm	/^f0105344:	74 0e                	je     f0105354 <strncmp+0x3c>$/;"	l
f0105346	obj/kern/kernel.asm	/^f0105346:	3a 19                	cmp    (%ecx),%bl$/;"	l
f0105348	obj/kern/kernel.asm	/^f0105348:	74 ea                	je     f0105334 <strncmp+0x1c>$/;"	l
f010534a	obj/kern/kernel.asm	/^f010534a:	eb 08                	jmp    f0105354 <strncmp+0x3c>$/;"	l
f010534c	obj/kern/kernel.asm	/^f010534c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105351	obj/kern/kernel.asm	/^f0105351:	5b                   	pop    %ebx$/;"	l
f0105352	obj/kern/kernel.asm	/^f0105352:	5d                   	pop    %ebp$/;"	l
f0105353	obj/kern/kernel.asm	/^f0105353:	c3                   	ret    $/;"	l
f0105354	obj/kern/kernel.asm	/^f0105354:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0105357	obj/kern/kernel.asm	/^f0105357:	0f b6 11             	movzbl (%ecx),%edx$/;"	l
f010535a	obj/kern/kernel.asm	/^f010535a:	29 d0                	sub    %edx,%eax$/;"	l
f010535c	obj/kern/kernel.asm	/^f010535c:	eb f3                	jmp    f0105351 <strncmp+0x39>$/;"	l
f010535e	obj/kern/kernel.asm	/^f010535e <strchr>:$/;"	l
f010535e	obj/kern/kernel.asm	/^f010535e:	55                   	push   %ebp$/;"	l
f010535f	obj/kern/kernel.asm	/^f010535f:	89 e5                	mov    %esp,%ebp$/;"	l
f0105361	obj/kern/kernel.asm	/^f0105361:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105364	obj/kern/kernel.asm	/^f0105364:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105368	obj/kern/kernel.asm	/^f0105368:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f010536b	obj/kern/kernel.asm	/^f010536b:	84 d2                	test   %dl,%dl$/;"	l
f010536d	obj/kern/kernel.asm	/^f010536d:	74 15                	je     f0105384 <strchr+0x26>$/;"	l
f010536f	obj/kern/kernel.asm	/^f010536f:	38 ca                	cmp    %cl,%dl$/;"	l
f0105371	obj/kern/kernel.asm	/^f0105371:	75 07                	jne    f010537a <strchr+0x1c>$/;"	l
f0105373	obj/kern/kernel.asm	/^f0105373:	eb 14                	jmp    f0105389 <strchr+0x2b>$/;"	l
f0105375	obj/kern/kernel.asm	/^f0105375:	38 ca                	cmp    %cl,%dl$/;"	l
f0105377	obj/kern/kernel.asm	/^f0105377:	90                   	nop$/;"	l
f0105378	obj/kern/kernel.asm	/^f0105378:	74 0f                	je     f0105389 <strchr+0x2b>$/;"	l
f010537a	obj/kern/kernel.asm	/^f010537a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010537d	obj/kern/kernel.asm	/^f010537d:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105380	obj/kern/kernel.asm	/^f0105380:	84 d2                	test   %dl,%dl$/;"	l
f0105382	obj/kern/kernel.asm	/^f0105382:	75 f1                	jne    f0105375 <strchr+0x17>$/;"	l
f0105384	obj/kern/kernel.asm	/^f0105384:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105389	obj/kern/kernel.asm	/^f0105389:	5d                   	pop    %ebp$/;"	l
f010538a	obj/kern/kernel.asm	/^f010538a:	c3                   	ret    $/;"	l
f010538b	obj/kern/kernel.asm	/^f010538b <strfind>:$/;"	l
f010538b	obj/kern/kernel.asm	/^f010538b:	55                   	push   %ebp$/;"	l
f010538c	obj/kern/kernel.asm	/^f010538c:	89 e5                	mov    %esp,%ebp$/;"	l
f010538e	obj/kern/kernel.asm	/^f010538e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105391	obj/kern/kernel.asm	/^f0105391:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0105398	obj/kern/kernel.asm	/^f0105398:	84 d2                	test   %dl,%dl$/;"	l
f010539a	obj/kern/kernel.asm	/^f010539a:	74 18                	je     f01053b4 <strfind+0x29>$/;"	l
f010539c	obj/kern/kernel.asm	/^f010539c:	38 ca                	cmp    %cl,%dl$/;"	l
f010539e	obj/kern/kernel.asm	/^f010539e:	75 0a                	jne    f01053aa <strfind+0x1f>$/;"	l
f01053a0	obj/kern/kernel.asm	/^f01053a0:	eb 12                	jmp    f01053b4 <strfind+0x29>$/;"	l
f01053a2	obj/kern/kernel.asm	/^f01053a2:	38 ca                	cmp    %cl,%dl$/;"	l
f01053a4	obj/kern/kernel.asm	/^f01053a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01053a8	obj/kern/kernel.asm	/^f01053a8:	74 0a                	je     f01053b4 <strfind+0x29>$/;"	l
f01053aa	obj/kern/kernel.asm	/^f01053aa:	83 c0 01             	add    $0x1,%eax$/;"	l
f01053ad	obj/kern/kernel.asm	/^f01053ad:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01053b0	obj/kern/kernel.asm	/^f01053b0:	84 d2                	test   %dl,%dl$/;"	l
f01053b2	obj/kern/kernel.asm	/^f01053b2:	75 ee                	jne    f01053a2 <strfind+0x17>$/;"	l
f01053b4	obj/kern/kernel.asm	/^f01053b4:	5d                   	pop    %ebp$/;"	l
f01053b5	obj/kern/kernel.asm	/^f01053b5:	c3                   	ret    $/;"	l
f01053b6	obj/kern/kernel.asm	/^f01053b6 <memset>:$/;"	l
f01053b6	obj/kern/kernel.asm	/^f01053b6:	55                   	push   %ebp$/;"	l
f01053b7	obj/kern/kernel.asm	/^f01053b7:	89 e5                	mov    %esp,%ebp$/;"	l
f01053b9	obj/kern/kernel.asm	/^f01053b9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01053bc	obj/kern/kernel.asm	/^f01053bc:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01053bf	obj/kern/kernel.asm	/^f01053bf:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01053c3	obj/kern/kernel.asm	/^f01053c3:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f01053c7	obj/kern/kernel.asm	/^f01053c7:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01053ca	obj/kern/kernel.asm	/^f01053ca:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01053cd	obj/kern/kernel.asm	/^f01053cd:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01053d0	obj/kern/kernel.asm	/^f01053d0:	85 c9                	test   %ecx,%ecx$/;"	l
f01053d2	obj/kern/kernel.asm	/^f01053d2:	74 30                	je     f0105404 <memset+0x4e>$/;"	l
f01053d4	obj/kern/kernel.asm	/^f01053d4:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01053da	obj/kern/kernel.asm	/^f01053da:	75 25                	jne    f0105401 <memset+0x4b>$/;"	l
f01053dc	obj/kern/kernel.asm	/^f01053dc:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01053df	obj/kern/kernel.asm	/^f01053df:	75 20                	jne    f0105401 <memset+0x4b>$/;"	l
f01053e1	obj/kern/kernel.asm	/^f01053e1:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01053e4	obj/kern/kernel.asm	/^f01053e4:	89 d3                	mov    %edx,%ebx$/;"	l
f01053e6	obj/kern/kernel.asm	/^f01053e6:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01053e9	obj/kern/kernel.asm	/^f01053e9:	89 d6                	mov    %edx,%esi$/;"	l
f01053eb	obj/kern/kernel.asm	/^f01053eb:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01053ee	obj/kern/kernel.asm	/^f01053ee:	89 d0                	mov    %edx,%eax$/;"	l
f01053f0	obj/kern/kernel.asm	/^f01053f0:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01053f3	obj/kern/kernel.asm	/^f01053f3:	09 f0                	or     %esi,%eax$/;"	l
f01053f5	obj/kern/kernel.asm	/^f01053f5:	09 d0                	or     %edx,%eax$/;"	l
f01053f7	obj/kern/kernel.asm	/^f01053f7:	09 d8                	or     %ebx,%eax$/;"	l
f01053f9	obj/kern/kernel.asm	/^f01053f9:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01053fc	obj/kern/kernel.asm	/^f01053fc:	fc                   	cld    $/;"	l
f01053fd	obj/kern/kernel.asm	/^f01053fd:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01053ff	obj/kern/kernel.asm	/^f01053ff:	eb 03                	jmp    f0105404 <memset+0x4e>$/;"	l
f0105401	obj/kern/kernel.asm	/^f0105401:	fc                   	cld    $/;"	l
f0105402	obj/kern/kernel.asm	/^f0105402:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f0105404	obj/kern/kernel.asm	/^f0105404:	89 f8                	mov    %edi,%eax$/;"	l
f0105406	obj/kern/kernel.asm	/^f0105406:	8b 1c 24             	mov    (%esp),%ebx$/;"	l
f0105409	obj/kern/kernel.asm	/^f0105409:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f010540d	obj/kern/kernel.asm	/^f010540d:	8b 7c 24 08          	mov    0x8(%esp),%edi$/;"	l
f0105411	obj/kern/kernel.asm	/^f0105411:	89 ec                	mov    %ebp,%esp$/;"	l
f0105413	obj/kern/kernel.asm	/^f0105413:	5d                   	pop    %ebp$/;"	l
f0105414	obj/kern/kernel.asm	/^f0105414:	c3                   	ret    $/;"	l
f0105415	obj/kern/kernel.asm	/^f0105415 <memmove>:$/;"	l
f0105415	obj/kern/kernel.asm	/^f0105415:	55                   	push   %ebp$/;"	l
f0105416	obj/kern/kernel.asm	/^f0105416:	89 e5                	mov    %esp,%ebp$/;"	l
f0105418	obj/kern/kernel.asm	/^f0105418:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010541b	obj/kern/kernel.asm	/^f010541b:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010541e	obj/kern/kernel.asm	/^f010541e:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105422	obj/kern/kernel.asm	/^f0105422:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105425	obj/kern/kernel.asm	/^f0105425:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010542b	obj/kern/kernel.asm	/^f010542b:	89 c7                	mov    %eax,%edi$/;"	l
f010542d	obj/kern/kernel.asm	/^f010542d:	39 c6                	cmp    %eax,%esi$/;"	l
f010542f	obj/kern/kernel.asm	/^f010542f:	73 35                	jae    f0105466 <memmove+0x51>$/;"	l
f0105431	obj/kern/kernel.asm	/^f0105431:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0105434	obj/kern/kernel.asm	/^f0105434:	39 d0                	cmp    %edx,%eax$/;"	l
f0105436	obj/kern/kernel.asm	/^f0105436:	73 2e                	jae    f0105466 <memmove+0x51>$/;"	l
f0105438	obj/kern/kernel.asm	/^f0105438:	01 cf                	add    %ecx,%edi$/;"	l
f010543a	obj/kern/kernel.asm	/^f010543a:	f6 c2 03             	test   $0x3,%dl$/;"	l
f010543d	obj/kern/kernel.asm	/^f010543d:	75 1b                	jne    f010545a <memmove+0x45>$/;"	l
f010543f	obj/kern/kernel.asm	/^f010543f:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0105445	obj/kern/kernel.asm	/^f0105445:	75 13                	jne    f010545a <memmove+0x45>$/;"	l
f0105447	obj/kern/kernel.asm	/^f0105447:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010544a	obj/kern/kernel.asm	/^f010544a:	75 0e                	jne    f010545a <memmove+0x45>$/;"	l
f010544c	obj/kern/kernel.asm	/^f010544c:	83 ef 04             	sub    $0x4,%edi$/;"	l
f010544f	obj/kern/kernel.asm	/^f010544f:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0105452	obj/kern/kernel.asm	/^f0105452:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0105455	obj/kern/kernel.asm	/^f0105455:	fd                   	std    $/;"	l
f0105456	obj/kern/kernel.asm	/^f0105456:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105458	obj/kern/kernel.asm	/^f0105458:	eb 09                	jmp    f0105463 <memmove+0x4e>$/;"	l
f010545a	obj/kern/kernel.asm	/^f010545a:	83 ef 01             	sub    $0x1,%edi$/;"	l
f010545d	obj/kern/kernel.asm	/^f010545d:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0105460	obj/kern/kernel.asm	/^f0105460:	fd                   	std    $/;"	l
f0105461	obj/kern/kernel.asm	/^f0105461:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105463	obj/kern/kernel.asm	/^f0105463:	fc                   	cld    $/;"	l
f0105464	obj/kern/kernel.asm	/^f0105464:	eb 20                	jmp    f0105486 <memmove+0x71>$/;"	l
f0105466	obj/kern/kernel.asm	/^f0105466:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f010546c	obj/kern/kernel.asm	/^f010546c:	75 15                	jne    f0105483 <memmove+0x6e>$/;"	l
f010546e	obj/kern/kernel.asm	/^f010546e:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0105474	obj/kern/kernel.asm	/^f0105474:	75 0d                	jne    f0105483 <memmove+0x6e>$/;"	l
f0105476	obj/kern/kernel.asm	/^f0105476:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0105479	obj/kern/kernel.asm	/^f0105479:	75 08                	jne    f0105483 <memmove+0x6e>$/;"	l
f010547b	obj/kern/kernel.asm	/^f010547b:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010547e	obj/kern/kernel.asm	/^f010547e:	fc                   	cld    $/;"	l
f010547f	obj/kern/kernel.asm	/^f010547f:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105481	obj/kern/kernel.asm	/^f0105481:	eb 03                	jmp    f0105486 <memmove+0x71>$/;"	l
f0105483	obj/kern/kernel.asm	/^f0105483:	fc                   	cld    $/;"	l
f0105484	obj/kern/kernel.asm	/^f0105484:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0105486	obj/kern/kernel.asm	/^f0105486:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0105489	obj/kern/kernel.asm	/^f0105489:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f010548d	obj/kern/kernel.asm	/^f010548d:	89 ec                	mov    %ebp,%esp$/;"	l
f010548f	obj/kern/kernel.asm	/^f010548f:	5d                   	pop    %ebp$/;"	l
f0105490	obj/kern/kernel.asm	/^f0105490:	c3                   	ret    $/;"	l
f0105491	obj/kern/kernel.asm	/^f0105491 <memcpy>:$/;"	l
f0105491	obj/kern/kernel.asm	/^f0105491:	55                   	push   %ebp$/;"	l
f0105492	obj/kern/kernel.asm	/^f0105492:	89 e5                	mov    %esp,%ebp$/;"	l
f0105494	obj/kern/kernel.asm	/^f0105494:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105497	obj/kern/kernel.asm	/^f0105497:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010549a	obj/kern/kernel.asm	/^f010549a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010549e	obj/kern/kernel.asm	/^f010549e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01054a1	obj/kern/kernel.asm	/^f01054a1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01054a5	obj/kern/kernel.asm	/^f01054a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01054a8	obj/kern/kernel.asm	/^f01054a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01054ab	obj/kern/kernel.asm	/^f01054ab:	e8 65 ff ff ff       	call   f0105415 <memmove>$/;"	l
f01054b0	obj/kern/kernel.asm	/^f01054b0:	c9                   	leave  $/;"	l
f01054b1	obj/kern/kernel.asm	/^f01054b1:	c3                   	ret    $/;"	l
f01054b2	obj/kern/kernel.asm	/^f01054b2 <memcmp>:$/;"	l
f01054b2	obj/kern/kernel.asm	/^f01054b2:	55                   	push   %ebp$/;"	l
f01054b3	obj/kern/kernel.asm	/^f01054b3:	89 e5                	mov    %esp,%ebp$/;"	l
f01054b5	obj/kern/kernel.asm	/^f01054b5:	57                   	push   %edi$/;"	l
f01054b6	obj/kern/kernel.asm	/^f01054b6:	56                   	push   %esi$/;"	l
f01054b7	obj/kern/kernel.asm	/^f01054b7:	53                   	push   %ebx$/;"	l
f01054b8	obj/kern/kernel.asm	/^f01054b8:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01054bb	obj/kern/kernel.asm	/^f01054bb:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01054be	obj/kern/kernel.asm	/^f01054be:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01054c1	obj/kern/kernel.asm	/^f01054c1:	85 c9                	test   %ecx,%ecx$/;"	l
f01054c3	obj/kern/kernel.asm	/^f01054c3:	74 36                	je     f01054fb <memcmp+0x49>$/;"	l
f01054c5	obj/kern/kernel.asm	/^f01054c5:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f01054c8	obj/kern/kernel.asm	/^f01054c8:	0f b6 1f             	movzbl (%edi),%ebx$/;"	l
f01054cb	obj/kern/kernel.asm	/^f01054cb:	38 d8                	cmp    %bl,%al$/;"	l
f01054cd	obj/kern/kernel.asm	/^f01054cd:	74 20                	je     f01054ef <memcmp+0x3d>$/;"	l
f01054cf	obj/kern/kernel.asm	/^f01054cf:	eb 14                	jmp    f01054e5 <memcmp+0x33>$/;"	l
f01054d1	obj/kern/kernel.asm	/^f01054d1:	0f b6 44 16 01       	movzbl 0x1(%esi,%edx,1),%eax$/;"	l
f01054d6	obj/kern/kernel.asm	/^f01054d6:	0f b6 5c 17 01       	movzbl 0x1(%edi,%edx,1),%ebx$/;"	l
f01054db	obj/kern/kernel.asm	/^f01054db:	83 c2 01             	add    $0x1,%edx$/;"	l
f01054de	obj/kern/kernel.asm	/^f01054de:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f01054e1	obj/kern/kernel.asm	/^f01054e1:	38 d8                	cmp    %bl,%al$/;"	l
f01054e3	obj/kern/kernel.asm	/^f01054e3:	74 12                	je     f01054f7 <memcmp+0x45>$/;"	l
f01054e5	obj/kern/kernel.asm	/^f01054e5:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01054e8	obj/kern/kernel.asm	/^f01054e8:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f01054eb	obj/kern/kernel.asm	/^f01054eb:	29 d8                	sub    %ebx,%eax$/;"	l
f01054ed	obj/kern/kernel.asm	/^f01054ed:	eb 11                	jmp    f0105500 <memcmp+0x4e>$/;"	l
f01054ef	obj/kern/kernel.asm	/^f01054ef:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f01054f2	obj/kern/kernel.asm	/^f01054f2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01054f7	obj/kern/kernel.asm	/^f01054f7:	85 c9                	test   %ecx,%ecx$/;"	l
f01054f9	obj/kern/kernel.asm	/^f01054f9:	75 d6                	jne    f01054d1 <memcmp+0x1f>$/;"	l
f01054fb	obj/kern/kernel.asm	/^f01054fb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105500	obj/kern/kernel.asm	/^f0105500:	5b                   	pop    %ebx$/;"	l
f0105501	obj/kern/kernel.asm	/^f0105501:	5e                   	pop    %esi$/;"	l
f0105502	obj/kern/kernel.asm	/^f0105502:	5f                   	pop    %edi$/;"	l
f0105503	obj/kern/kernel.asm	/^f0105503:	5d                   	pop    %ebp$/;"	l
f0105504	obj/kern/kernel.asm	/^f0105504:	c3                   	ret    $/;"	l
f0105505	obj/kern/kernel.asm	/^f0105505 <memfind>:$/;"	l
f0105505	obj/kern/kernel.asm	/^f0105505:	55                   	push   %ebp$/;"	l
f0105506	obj/kern/kernel.asm	/^f0105506:	89 e5                	mov    %esp,%ebp$/;"	l
f0105508	obj/kern/kernel.asm	/^f0105508:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010550b	obj/kern/kernel.asm	/^f010550b:	89 c2                	mov    %eax,%edx$/;"	l
f010550d	obj/kern/kernel.asm	/^f010550d:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0105510	obj/kern/kernel.asm	/^f0105510:	39 d0                	cmp    %edx,%eax$/;"	l
f0105512	obj/kern/kernel.asm	/^f0105512:	73 15                	jae    f0105529 <memfind+0x24>$/;"	l
f0105514	obj/kern/kernel.asm	/^f0105514:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0105518	obj/kern/kernel.asm	/^f0105518:	38 08                	cmp    %cl,(%eax)$/;"	l
f010551a	obj/kern/kernel.asm	/^f010551a:	75 06                	jne    f0105522 <memfind+0x1d>$/;"	l
f010551c	obj/kern/kernel.asm	/^f010551c:	eb 0b                	jmp    f0105529 <memfind+0x24>$/;"	l
f010551e	obj/kern/kernel.asm	/^f010551e:	38 08                	cmp    %cl,(%eax)$/;"	l
f0105520	obj/kern/kernel.asm	/^f0105520:	74 07                	je     f0105529 <memfind+0x24>$/;"	l
f0105522	obj/kern/kernel.asm	/^f0105522:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105525	obj/kern/kernel.asm	/^f0105525:	39 c2                	cmp    %eax,%edx$/;"	l
f0105527	obj/kern/kernel.asm	/^f0105527:	77 f5                	ja     f010551e <memfind+0x19>$/;"	l
f0105529	obj/kern/kernel.asm	/^f0105529:	5d                   	pop    %ebp$/;"	l
f010552a	obj/kern/kernel.asm	/^f010552a:	c3                   	ret    $/;"	l
f010552b	obj/kern/kernel.asm	/^f010552b <strtol>:$/;"	l
f010552b	obj/kern/kernel.asm	/^f010552b:	55                   	push   %ebp$/;"	l
f010552c	obj/kern/kernel.asm	/^f010552c:	89 e5                	mov    %esp,%ebp$/;"	l
f010552e	obj/kern/kernel.asm	/^f010552e:	57                   	push   %edi$/;"	l
f010552f	obj/kern/kernel.asm	/^f010552f:	56                   	push   %esi$/;"	l
f0105530	obj/kern/kernel.asm	/^f0105530:	53                   	push   %ebx$/;"	l
f0105531	obj/kern/kernel.asm	/^f0105531:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105534	obj/kern/kernel.asm	/^f0105534:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105537	obj/kern/kernel.asm	/^f0105537:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010553a	obj/kern/kernel.asm	/^f010553a:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f010553d	obj/kern/kernel.asm	/^f010553d:	3c 20                	cmp    $0x20,%al$/;"	l
f010553f	obj/kern/kernel.asm	/^f010553f:	74 04                	je     f0105545 <strtol+0x1a>$/;"	l
f0105541	obj/kern/kernel.asm	/^f0105541:	3c 09                	cmp    $0x9,%al$/;"	l
f0105543	obj/kern/kernel.asm	/^f0105543:	75 0e                	jne    f0105553 <strtol+0x28>$/;"	l
f0105545	obj/kern/kernel.asm	/^f0105545:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105548	obj/kern/kernel.asm	/^f0105548:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f010554b	obj/kern/kernel.asm	/^f010554b:	3c 20                	cmp    $0x20,%al$/;"	l
f010554d	obj/kern/kernel.asm	/^f010554d:	74 f6                	je     f0105545 <strtol+0x1a>$/;"	l
f010554f	obj/kern/kernel.asm	/^f010554f:	3c 09                	cmp    $0x9,%al$/;"	l
f0105551	obj/kern/kernel.asm	/^f0105551:	74 f2                	je     f0105545 <strtol+0x1a>$/;"	l
f0105553	obj/kern/kernel.asm	/^f0105553:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0105555	obj/kern/kernel.asm	/^f0105555:	75 0c                	jne    f0105563 <strtol+0x38>$/;"	l
f0105557	obj/kern/kernel.asm	/^f0105557:	83 c2 01             	add    $0x1,%edx$/;"	l
f010555a	obj/kern/kernel.asm	/^f010555a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0105561	obj/kern/kernel.asm	/^f0105561:	eb 15                	jmp    f0105578 <strtol+0x4d>$/;"	l
f0105563	obj/kern/kernel.asm	/^f0105563:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f010556a	obj/kern/kernel.asm	/^f010556a:	3c 2d                	cmp    $0x2d,%al$/;"	l
f010556c	obj/kern/kernel.asm	/^f010556c:	75 0a                	jne    f0105578 <strtol+0x4d>$/;"	l
f010556e	obj/kern/kernel.asm	/^f010556e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105571	obj/kern/kernel.asm	/^f0105571:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
f0105578	obj/kern/kernel.asm	/^f0105578:	85 db                	test   %ebx,%ebx$/;"	l
f010557a	obj/kern/kernel.asm	/^f010557a:	0f 94 c0             	sete   %al$/;"	l
f010557d	obj/kern/kernel.asm	/^f010557d:	74 05                	je     f0105584 <strtol+0x59>$/;"	l
f010557f	obj/kern/kernel.asm	/^f010557f:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0105582	obj/kern/kernel.asm	/^f0105582:	75 18                	jne    f010559c <strtol+0x71>$/;"	l
f0105584	obj/kern/kernel.asm	/^f0105584:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0105587	obj/kern/kernel.asm	/^f0105587:	75 13                	jne    f010559c <strtol+0x71>$/;"	l
f0105589	obj/kern/kernel.asm	/^f0105589:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f010558d	obj/kern/kernel.asm	/^f010558d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0105590	obj/kern/kernel.asm	/^f0105590:	75 0a                	jne    f010559c <strtol+0x71>$/;"	l
f0105592	obj/kern/kernel.asm	/^f0105592:	83 c2 02             	add    $0x2,%edx$/;"	l
f0105595	obj/kern/kernel.asm	/^f0105595:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f010559a	obj/kern/kernel.asm	/^f010559a:	eb 15                	jmp    f01055b1 <strtol+0x86>$/;"	l
f010559c	obj/kern/kernel.asm	/^f010559c:	84 c0                	test   %al,%al$/;"	l
f010559e	obj/kern/kernel.asm	/^f010559e:	66 90                	xchg   %ax,%ax$/;"	l
f01055a0	obj/kern/kernel.asm	/^f01055a0:	74 0f                	je     f01055b1 <strtol+0x86>$/;"	l
f01055a2	obj/kern/kernel.asm	/^f01055a2:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f01055a7	obj/kern/kernel.asm	/^f01055a7:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f01055aa	obj/kern/kernel.asm	/^f01055aa:	75 05                	jne    f01055b1 <strtol+0x86>$/;"	l
f01055ac	obj/kern/kernel.asm	/^f01055ac:	83 c2 01             	add    $0x1,%edx$/;"	l
f01055af	obj/kern/kernel.asm	/^f01055af:	b3 08                	mov    $0x8,%bl$/;"	l
f01055b1	obj/kern/kernel.asm	/^f01055b1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01055b6	obj/kern/kernel.asm	/^f01055b6:	89 de                	mov    %ebx,%esi$/;"	l
f01055b8	obj/kern/kernel.asm	/^f01055b8:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01055bb	obj/kern/kernel.asm	/^f01055bb:	89 cf                	mov    %ecx,%edi$/;"	l
f01055bd	obj/kern/kernel.asm	/^f01055bd:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f01055c0	obj/kern/kernel.asm	/^f01055c0:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f01055c3	obj/kern/kernel.asm	/^f01055c3:	77 08                	ja     f01055cd <strtol+0xa2>$/;"	l
f01055c5	obj/kern/kernel.asm	/^f01055c5:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01055c8	obj/kern/kernel.asm	/^f01055c8:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f01055cb	obj/kern/kernel.asm	/^f01055cb:	eb 1e                	jmp    f01055eb <strtol+0xc0>$/;"	l
f01055cd	obj/kern/kernel.asm	/^f01055cd:	8d 5f 9f             	lea    -0x61(%edi),%ebx$/;"	l
f01055d0	obj/kern/kernel.asm	/^f01055d0:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f01055d3	obj/kern/kernel.asm	/^f01055d3:	77 08                	ja     f01055dd <strtol+0xb2>$/;"	l
f01055d5	obj/kern/kernel.asm	/^f01055d5:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01055d8	obj/kern/kernel.asm	/^f01055d8:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f01055db	obj/kern/kernel.asm	/^f01055db:	eb 0e                	jmp    f01055eb <strtol+0xc0>$/;"	l
f01055dd	obj/kern/kernel.asm	/^f01055dd:	8d 5f bf             	lea    -0x41(%edi),%ebx$/;"	l
f01055e0	obj/kern/kernel.asm	/^f01055e0:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f01055e3	obj/kern/kernel.asm	/^f01055e3:	77 15                	ja     f01055fa <strtol+0xcf>$/;"	l
f01055e5	obj/kern/kernel.asm	/^f01055e5:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01055e8	obj/kern/kernel.asm	/^f01055e8:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb:	39 f1                	cmp    %esi,%ecx$/;"	l
f01055ed	obj/kern/kernel.asm	/^f01055ed:	7d 0b                	jge    f01055fa <strtol+0xcf>$/;"	l
f01055ef	obj/kern/kernel.asm	/^f01055ef:	83 c2 01             	add    $0x1,%edx$/;"	l
f01055f2	obj/kern/kernel.asm	/^f01055f2:	0f af c6             	imul   %esi,%eax$/;"	l
f01055f5	obj/kern/kernel.asm	/^f01055f5:	8d 04 01             	lea    (%ecx,%eax,1),%eax$/;"	l
f01055f8	obj/kern/kernel.asm	/^f01055f8:	eb be                	jmp    f01055b8 <strtol+0x8d>$/;"	l
f01055fa	obj/kern/kernel.asm	/^f01055fa:	89 c1                	mov    %eax,%ecx$/;"	l
f01055fc	obj/kern/kernel.asm	/^f01055fc:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0105600	obj/kern/kernel.asm	/^f0105600:	74 05                	je     f0105607 <strtol+0xdc>$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105605	obj/kern/kernel.asm	/^f0105605:	89 13                	mov    %edx,(%ebx)$/;"	l
f0105607	obj/kern/kernel.asm	/^f0105607:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f010560b	obj/kern/kernel.asm	/^f010560b:	74 04                	je     f0105611 <strtol+0xe6>$/;"	l
f010560d	obj/kern/kernel.asm	/^f010560d:	89 c8                	mov    %ecx,%eax$/;"	l
f010560f	obj/kern/kernel.asm	/^f010560f:	f7 d8                	neg    %eax$/;"	l
f0105611	obj/kern/kernel.asm	/^f0105611:	83 c4 04             	add    $0x4,%esp$/;"	l
f0105614	obj/kern/kernel.asm	/^f0105614:	5b                   	pop    %ebx$/;"	l
f0105615	obj/kern/kernel.asm	/^f0105615:	5e                   	pop    %esi$/;"	l
f0105616	obj/kern/kernel.asm	/^f0105616:	5f                   	pop    %edi$/;"	l
f0105617	obj/kern/kernel.asm	/^f0105617:	5d                   	pop    %ebp$/;"	l
f0105618	obj/kern/kernel.asm	/^f0105618:	c3                   	ret    $/;"	l
f0105619	obj/kern/kernel.asm	/^f0105619:	00 00                	add    %al,(%eax)$/;"	l
f010561c	obj/kern/kernel.asm	/^f010561c <clear_rfd>:$/;"	l
f010561c	obj/kern/kernel.asm	/^f010561c:	55                   	push   %ebp$/;"	l
f010561d	obj/kern/kernel.asm	/^f010561d:	89 e5                	mov    %esp,%ebp$/;"	l
f010561f	obj/kern/kernel.asm	/^f010561f:	b8 e0 1c 28 f0       	mov    $0xf0281ce0,%eax$/;"	l
f0105624	obj/kern/kernel.asm	/^f0105624:	69 15 c0 f0 26 f0 fd 	imul   $0x5fd,0xf026f0c0,%edx$/;"	l
f010562b	obj/kern/kernel.asm	/^f010562b:	05 00 00 $/;"	l
f010562e	obj/kern/kernel.asm	/^f010562e:	c6 04 02 00          	movb   $0x0,(%edx,%eax,1)$/;"	l
f0105632	obj/kern/kernel.asm	/^f0105632:	66 c7 44 02 01 00 c0 	movw   $0xc000,0x1(%edx,%eax,1)$/;"	l
f0105639	obj/kern/kernel.asm	/^f0105639:	c7 44 02 07 00 00 00 	movl   $0x0,0x7(%edx,%eax,1)$/;"	l
f0105640	obj/kern/kernel.asm	/^f0105640:	00 $/;"	l
f0105641	obj/kern/kernel.asm	/^f0105641:	66 c7 44 02 0b 00 00 	movw   $0x0,0xb(%edx,%eax,1)$/;"	l
f0105648	obj/kern/kernel.asm	/^f0105648:	66 c7 44 02 0d ee 05 	movw   $0x5ee,0xd(%edx,%eax,1)$/;"	l
f010564f	obj/kern/kernel.asm	/^f010564f:	5d                   	pop    %ebp$/;"	l
f0105650	obj/kern/kernel.asm	/^f0105650:	c3                   	ret    $/;"	l
f0105651	obj/kern/kernel.asm	/^f0105651 <pkt_transmit>:$/;"	l
f0105651	obj/kern/kernel.asm	/^f0105651:	55                   	push   %ebp$/;"	l
f0105652	obj/kern/kernel.asm	/^f0105652:	89 e5                	mov    %esp,%ebp$/;"	l
f0105654	obj/kern/kernel.asm	/^f0105654:	57                   	push   %edi$/;"	l
f0105655	obj/kern/kernel.asm	/^f0105655:	56                   	push   %esi$/;"	l
f0105656	obj/kern/kernel.asm	/^f0105656:	53                   	push   %ebx$/;"	l
f0105657	obj/kern/kernel.asm	/^f0105657:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010565a	obj/kern/kernel.asm	/^f010565a:	0f b7 75 0c          	movzwl 0xc(%ebp),%esi$/;"	l
f010565e	obj/kern/kernel.asm	/^f010565e:	8b 0d 68 e3 11 f0    	mov    0xf011e368,%ecx$/;"	l
f0105664	obj/kern/kernel.asm	/^f0105664:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105667	obj/kern/kernel.asm	/^f0105667:	bb 1f 85 eb 51       	mov    $0x51eb851f,%ebx$/;"	l
f010566c	obj/kern/kernel.asm	/^f010566c:	89 c8                	mov    %ecx,%eax$/;"	l
f010566e	obj/kern/kernel.asm	/^f010566e:	f7 e3                	mul    %ebx$/;"	l
f0105670	obj/kern/kernel.asm	/^f0105670:	89 d3                	mov    %edx,%ebx$/;"	l
f0105672	obj/kern/kernel.asm	/^f0105672:	c1 eb 04             	shr    $0x4,%ebx$/;"	l
f0105675	obj/kern/kernel.asm	/^f0105675:	6b db 32             	imul   $0x32,%ebx,%ebx$/;"	l
f0105678	obj/kern/kernel.asm	/^f0105678:	29 d9                	sub    %ebx,%ecx$/;"	l
f010567a	obj/kern/kernel.asm	/^f010567a:	89 cb                	mov    %ecx,%ebx$/;"	l
f010567c	obj/kern/kernel.asm	/^f010567c:	89 0d 68 e3 11 f0    	mov    %ecx,0xf011e368$/;"	l
f0105682	obj/kern/kernel.asm	/^f0105682:	8d 04 49             	lea    (%ecx,%ecx,2),%eax$/;"	l
f0105685	obj/kern/kernel.asm	/^f0105685:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f0105688	obj/kern/kernel.asm	/^f0105688:	0f b7 90 e0 f0 26 f0 	movzwl -0xfd90f20(%eax),%edx$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694:	66 85 d2             	test   %dx,%dx$/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	0f 89 e5 00 00 00    	jns    f0105782 <pkt_transmit+0x131>$/;"	l
f010569d	obj/kern/kernel.asm	/^f010569d:	8d 04 49             	lea    (%ecx,%ecx,2),%eax$/;"	l
f01056a0	obj/kern/kernel.asm	/^f01056a0:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f01056a3	obj/kern/kernel.asm	/^f01056a3:	66 c7 80 e0 f0 26 f0 	movw   $0x0,-0xfd90f20(%eax)$/;"	l
f01056aa	obj/kern/kernel.asm	/^f01056aa:	00 00 $/;"	l
f01056ac	obj/kern/kernel.asm	/^f01056ac:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)$/;"	l
f01056b0	obj/kern/kernel.asm	/^f01056b0:	75 11                	jne    f01056c3 <pkt_transmit+0x72>$/;"	l
f01056b2	obj/kern/kernel.asm	/^f01056b2:	8d 04 49             	lea    (%ecx,%ecx,2),%eax$/;"	l
f01056b5	obj/kern/kernel.asm	/^f01056b5:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f01056b8	obj/kern/kernel.asm	/^f01056b8:	66 c7 80 e2 f0 26 f0 	movw   $0x8004,-0xfd90f1e(%eax)$/;"	l
f01056bf	obj/kern/kernel.asm	/^f01056bf:	04 80 $/;"	l
f01056c1	obj/kern/kernel.asm	/^f01056c1:	eb 0f                	jmp    f01056d2 <pkt_transmit+0x81>$/;"	l
f01056c3	obj/kern/kernel.asm	/^f01056c3:	8d 04 49             	lea    (%ecx,%ecx,2),%eax$/;"	l
f01056c6	obj/kern/kernel.asm	/^f01056c6:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f01056c9	obj/kern/kernel.asm	/^f01056c9:	66 c7 80 e2 f0 26 f0 	movw   $0x4,-0xfd90f1e(%eax)$/;"	l
f01056d0	obj/kern/kernel.asm	/^f01056d0:	04 00 $/;"	l
f01056d2	obj/kern/kernel.asm	/^f01056d2:	0f b7 c6             	movzwl %si,%eax$/;"	l
f01056d5	obj/kern/kernel.asm	/^f01056d5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01056d9	obj/kern/kernel.asm	/^f01056d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01056dc	obj/kern/kernel.asm	/^f01056dc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01056e0	obj/kern/kernel.asm	/^f01056e0:	8d 3c 5b             	lea    (%ebx,%ebx,2),%edi$/;"	l
f01056e3	obj/kern/kernel.asm	/^f01056e3:	89 f8                	mov    %edi,%eax$/;"	l
f01056e5	obj/kern/kernel.asm	/^f01056e5:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f01056e8	obj/kern/kernel.asm	/^f01056e8:	05 f0 f0 26 f0       	add    $0xf026f0f0,%eax$/;"	l
f01056ed	obj/kern/kernel.asm	/^f01056ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01056f0	obj/kern/kernel.asm	/^f01056f0:	e8 20 fd ff ff       	call   f0105415 <memmove>$/;"	l
f01056f5	obj/kern/kernel.asm	/^f01056f5:	c1 e7 09             	shl    $0x9,%edi$/;"	l
f01056f8	obj/kern/kernel.asm	/^f01056f8:	66 89 b7 ec f0 26 f0 	mov    %si,-0xfd90f14(%edi)$/;"	l
f01056ff	obj/kern/kernel.asm	/^f01056ff:	8b 35 c8 f0 26 f0    	mov    0xf026f0c8,%esi$/;"	l
f0105705	obj/kern/kernel.asm	/^f0105705:	89 f1                	mov    %esi,%ecx$/;"	l
f0105707	obj/kern/kernel.asm	/^f0105707:	89 f2                	mov    %esi,%edx$/;"	l
f0105709	obj/kern/kernel.asm	/^f0105709:	ec                   	in     (%dx),%al$/;"	l
f010570a	obj/kern/kernel.asm	/^f010570a:	c0 e8 06             	shr    $0x6,%al$/;"	l
f010570d	obj/kern/kernel.asm	/^f010570d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105710	obj/kern/kernel.asm	/^f0105710:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0105713	obj/kern/kernel.asm	/^f0105713:	76 0e                	jbe    f0105723 <pkt_transmit+0xd2>$/;"	l
f0105715	obj/kern/kernel.asm	/^f0105715:	89 ca                	mov    %ecx,%edx$/;"	l
f0105717	obj/kern/kernel.asm	/^f0105717:	ec                   	in     (%dx),%al$/;"	l
f0105718	obj/kern/kernel.asm	/^f0105718:	c0 e8 06             	shr    $0x6,%al$/;"	l
f010571b	obj/kern/kernel.asm	/^f010571b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010571e	obj/kern/kernel.asm	/^f010571e:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0105721	obj/kern/kernel.asm	/^f0105721:	77 f2                	ja     f0105715 <pkt_transmit+0xc4>$/;"	l
f0105723	obj/kern/kernel.asm	/^f0105723:	85 c0                	test   %eax,%eax$/;"	l
f0105725	obj/kern/kernel.asm	/^f0105725:	75 4c                	jne    f0105773 <pkt_transmit+0x122>$/;"	l
f0105727	obj/kern/kernel.asm	/^f0105727:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f010572a	obj/kern/kernel.asm	/^f010572a:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f010572d	obj/kern/kernel.asm	/^f010572d:	05 e0 f0 26 f0       	add    $0xf026f0e0,%eax$/;"	l
f0105732	obj/kern/kernel.asm	/^f0105732:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0105737	obj/kern/kernel.asm	/^f0105737:	77 20                	ja     f0105759 <pkt_transmit+0x108>$/;"	l
f0105739	obj/kern/kernel.asm	/^f0105739:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010573d	obj/kern/kernel.asm	/^f010573d:	c7 44 24 08 fc 69 10 	movl   $0xf01069fc,0x8(%esp)$/;"	l
f0105744	obj/kern/kernel.asm	/^f0105744:	f0 $/;"	l
f0105745	obj/kern/kernel.asm	/^f0105745:	c7 44 24 04 ba 00 00 	movl   $0xba,0x4(%esp)$/;"	l
f010574c	obj/kern/kernel.asm	/^f010574c:	00 $/;"	l
f010574d	obj/kern/kernel.asm	/^f010574d:	c7 04 24 8f 7c 10 f0 	movl   $0xf0107c8f,(%esp)$/;"	l
f0105754	obj/kern/kernel.asm	/^f0105754:	e8 2c a9 ff ff       	call   f0100085 <_panic>$/;"	l
f0105759	obj/kern/kernel.asm	/^f0105759:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010575e	obj/kern/kernel.asm	/^f010575e:	8d 56 04             	lea    0x4(%esi),%edx$/;"	l
f0105761	obj/kern/kernel.asm	/^f0105761:	ef                   	out    %eax,(%dx)$/;"	l
f0105762	obj/kern/kernel.asm	/^f0105762:	8d 56 02             	lea    0x2(%esi),%edx$/;"	l
f0105765	obj/kern/kernel.asm	/^f0105765:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f010576a	obj/kern/kernel.asm	/^f010576a:	66 ef                	out    %ax,(%dx)$/;"	l
f010576c	obj/kern/kernel.asm	/^f010576c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105771	obj/kern/kernel.asm	/^f0105771:	eb 0f                	jmp    f0105782 <pkt_transmit+0x131>$/;"	l
f0105773	obj/kern/kernel.asm	/^f0105773:	8d 56 02             	lea    0x2(%esi),%edx$/;"	l
f0105776	obj/kern/kernel.asm	/^f0105776:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010577b	obj/kern/kernel.asm	/^f010577b:	66 ef                	out    %ax,(%dx)$/;"	l
f010577d	obj/kern/kernel.asm	/^f010577d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105782	obj/kern/kernel.asm	/^f0105782:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105785	obj/kern/kernel.asm	/^f0105785:	5b                   	pop    %ebx$/;"	l
f0105786	obj/kern/kernel.asm	/^f0105786:	5e                   	pop    %esi$/;"	l
f0105787	obj/kern/kernel.asm	/^f0105787:	5f                   	pop    %edi$/;"	l
f0105788	obj/kern/kernel.asm	/^f0105788:	5d                   	pop    %ebp$/;"	l
f0105789	obj/kern/kernel.asm	/^f0105789:	c3                   	ret    $/;"	l
f010578a	obj/kern/kernel.asm	/^f010578a <pkt_recv>:$/;"	l
f010578a	obj/kern/kernel.asm	/^f010578a:	55                   	push   %ebp$/;"	l
f010578b	obj/kern/kernel.asm	/^f010578b:	89 e5                	mov    %esp,%ebp$/;"	l
f010578d	obj/kern/kernel.asm	/^f010578d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105790	obj/kern/kernel.asm	/^f0105790:	69 05 c0 f0 26 f0 fd 	imul   $0x5fd,0xf026f0c0,%eax$/;"	l
f0105797	obj/kern/kernel.asm	/^f0105797:	05 00 00 $/;"	l
f010579a	obj/kern/kernel.asm	/^f010579a:	0f b6 80 e0 1c 28 f0 	movzbl -0xfd7e320(%eax),%eax$/;"	l
f01057a1	obj/kern/kernel.asm	/^f01057a1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01057a6	obj/kern/kernel.asm	/^f01057a6:	c9                   	leave  $/;"	l
f01057a7	obj/kern/kernel.asm	/^f01057a7:	c3                   	ret    $/;"	l
f01057a8	obj/kern/kernel.asm	/^f01057a8 <init_attach>:$/;"	l
f01057a8	obj/kern/kernel.asm	/^f01057a8:	55                   	push   %ebp$/;"	l
f01057a9	obj/kern/kernel.asm	/^f01057a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01057ab	obj/kern/kernel.asm	/^f01057ab:	57                   	push   %edi$/;"	l
f01057ac	obj/kern/kernel.asm	/^f01057ac:	56                   	push   %esi$/;"	l
f01057ad	obj/kern/kernel.asm	/^f01057ad:	53                   	push   %ebx$/;"	l
f01057ae	obj/kern/kernel.asm	/^f01057ae:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01057b1	obj/kern/kernel.asm	/^f01057b1:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01057b4	obj/kern/kernel.asm	/^f01057b4:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01057b7	obj/kern/kernel.asm	/^f01057b7:	e8 12 07 00 00       	call   f0105ece <pci_func_enable>$/;"	l
f01057bc	obj/kern/kernel.asm	/^f01057bc:	0f b6 43 44          	movzbl 0x44(%ebx),%eax$/;"	l
f01057c0	obj/kern/kernel.asm	/^f01057c0:	a3 c4 f0 26 f0       	mov    %eax,0xf026f0c4$/;"	l
f01057c5	obj/kern/kernel.asm	/^f01057c5:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f01057c8	obj/kern/kernel.asm	/^f01057c8:	a3 c8 f0 26 f0       	mov    %eax,0xf026f0c8$/;"	l
f01057cd	obj/kern/kernel.asm	/^f01057cd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01057d1	obj/kern/kernel.asm	/^f01057d1:	c7 04 24 de 7c 10 f0 	movl   $0xf0107cde,(%esp)$/;"	l
f01057d8	obj/kern/kernel.asm	/^f01057d8:	e8 ee e1 ff ff       	call   f01039cb <cprintf>$/;"	l
f01057dd	obj/kern/kernel.asm	/^f01057dd:	8b 15 c8 f0 26 f0    	mov    0xf026f0c8,%edx$/;"	l
f01057e3	obj/kern/kernel.asm	/^f01057e3:	83 c2 08             	add    $0x8,%edx$/;"	l
f01057e6	obj/kern/kernel.asm	/^f01057e6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057eb	obj/kern/kernel.asm	/^f01057eb:	ef                   	out    %eax,(%dx)$/;"	l
f01057ec	obj/kern/kernel.asm	/^f01057ec:	c7 04 24 f4 7c 10 f0 	movl   $0xf0107cf4,(%esp)$/;"	l
f01057f3	obj/kern/kernel.asm	/^f01057f3:	e8 d3 e1 ff ff       	call   f01039cb <cprintf>$/;"	l
f01057f8	obj/kern/kernel.asm	/^f01057f8:	66 c7 05 e0 f0 26 f0 	movw   $0x8000,0xf026f0e0$/;"	l
f01057ff	obj/kern/kernel.asm	/^f01057ff:	00 80 $/;"	l
f0105801	obj/kern/kernel.asm	/^f0105801:	66 c7 05 e2 f0 26 f0 	movw   $0x0,0xf026f0e2$/;"	l
f0105808	obj/kern/kernel.asm	/^f0105808:	00 00 $/;"	l
f010580a	obj/kern/kernel.asm	/^f010580a:	b8 e0 f6 26 f0       	mov    $0xf026f6e0,%eax$/;"	l
f010580f	obj/kern/kernel.asm	/^f010580f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0105814	obj/kern/kernel.asm	/^f0105814:	0f 87 7c 01 00 00    	ja     f0105996 <init_attach+0x1ee>$/;"	l
f010581a	obj/kern/kernel.asm	/^f010581a:	eb 3b                	jmp    f0105857 <init_attach+0xaf>$/;"	l
f010581c	obj/kern/kernel.asm	/^f010581c:	8d 04 49             	lea    (%ecx,%ecx,2),%eax$/;"	l
f010581f	obj/kern/kernel.asm	/^f010581f:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f0105822	obj/kern/kernel.asm	/^f0105822:	66 c7 04 30 00 80    	movw   $0x8000,(%eax,%esi,1)$/;"	l
f0105828	obj/kern/kernel.asm	/^f0105828:	66 c7 03 00 00       	movw   $0x0,(%ebx)$/;"	l
f010582d	obj/kern/kernel.asm	/^f010582d:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105830	obj/kern/kernel.asm	/^f0105830:	89 c8                	mov    %ecx,%eax$/;"	l
f0105832	obj/kern/kernel.asm	/^f0105832:	f7 ef                	imul   %edi$/;"	l
f0105834	obj/kern/kernel.asm	/^f0105834:	c1 fa 04             	sar    $0x4,%edx$/;"	l
f0105837	obj/kern/kernel.asm	/^f0105837:	89 c8                	mov    %ecx,%eax$/;"	l
f0105839	obj/kern/kernel.asm	/^f0105839:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f010583c	obj/kern/kernel.asm	/^f010583c:	29 c2                	sub    %eax,%edx$/;"	l
f010583e	obj/kern/kernel.asm	/^f010583e:	6b d2 32             	imul   $0x32,%edx,%edx$/;"	l
f0105841	obj/kern/kernel.asm	/^f0105841:	89 c8                	mov    %ecx,%eax$/;"	l
f0105843	obj/kern/kernel.asm	/^f0105843:	29 d0                	sub    %edx,%eax$/;"	l
f0105845	obj/kern/kernel.asm	/^f0105845:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0105848	obj/kern/kernel.asm	/^f0105848:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f010584b	obj/kern/kernel.asm	/^f010584b:	05 e0 f0 26 f0       	add    $0xf026f0e0,%eax$/;"	l
f0105850	obj/kern/kernel.asm	/^f0105850:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0105855	obj/kern/kernel.asm	/^f0105855:	77 20                	ja     f0105877 <init_attach+0xcf>$/;"	l
f0105857	obj/kern/kernel.asm	/^f0105857:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010585b	obj/kern/kernel.asm	/^f010585b:	c7 44 24 08 fc 69 10 	movl   $0xf01069fc,0x8(%esp)$/;"	l
f0105862	obj/kern/kernel.asm	/^f0105862:	f0 $/;"	l
f0105863	obj/kern/kernel.asm	/^f0105863:	c7 44 24 04 3f 00 00 	movl   $0x3f,0x4(%esp)$/;"	l
f010586a	obj/kern/kernel.asm	/^f010586a:	00 $/;"	l
f010586b	obj/kern/kernel.asm	/^f010586b:	c7 04 24 8f 7c 10 f0 	movl   $0xf0107c8f,(%esp)$/;"	l
f0105872	obj/kern/kernel.asm	/^f0105872:	e8 0e a8 ff ff       	call   f0100085 <_panic>$/;"	l
f0105877	obj/kern/kernel.asm	/^f0105877:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010587c	obj/kern/kernel.asm	/^f010587c:	89 43 02             	mov    %eax,0x2(%ebx)$/;"	l
f010587f	obj/kern/kernel.asm	/^f010587f:	c7 43 06 ff ff ff ff 	movl   $0xffffffff,0x6(%ebx)$/;"	l
f0105886	obj/kern/kernel.asm	/^f0105886:	66 c7 43 0a f0 05    	movw   $0x5f0,0xa(%ebx)$/;"	l
f010588c	obj/kern/kernel.asm	/^f010588c:	c6 43 0c e0          	movb   $0xe0,0xc(%ebx)$/;"	l
f0105890	obj/kern/kernel.asm	/^f0105890:	c6 43 0d 00          	movb   $0x0,0xd(%ebx)$/;"	l
f0105894	obj/kern/kernel.asm	/^f0105894:	81 c3 00 06 00 00    	add    $0x600,%ebx$/;"	l
f010589a	obj/kern/kernel.asm	/^f010589a:	83 f9 32             	cmp    $0x32,%ecx$/;"	l
f010589d	obj/kern/kernel.asm	/^f010589d:	0f 85 79 ff ff ff    	jne    f010581c <init_attach+0x74>$/;"	l
f01058a3	obj/kern/kernel.asm	/^f01058a3:	ba e3 1c 28 f0       	mov    $0xf0281ce3,%edx$/;"	l
f01058a8	obj/kern/kernel.asm	/^f01058a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01058ad	obj/kern/kernel.asm	/^f01058ad:	be e0 1c 28 f0       	mov    $0xf0281ce0,%esi$/;"	l
f01058b2	obj/kern/kernel.asm	/^f01058b2:	bf 4e 42 29 f0       	mov    $0xf029424e,%edi$/;"	l
f01058b7	obj/kern/kernel.asm	/^f01058b7:	69 c8 fd 05 00 00    	imul   $0x5fd,%eax,%ecx$/;"	l
f01058bd	obj/kern/kernel.asm	/^f01058bd:	c6 04 31 00          	movb   $0x0,(%ecx,%esi,1)$/;"	l
f01058c1	obj/kern/kernel.asm	/^f01058c1:	83 f8 31             	cmp    $0x31,%eax$/;"	l
f01058c4	obj/kern/kernel.asm	/^f01058c4:	75 07                	jne    f01058cd <init_attach+0x125>$/;"	l
f01058c6	obj/kern/kernel.asm	/^f01058c6:	66 c7 07 00 c0       	movw   $0xc000,(%edi)$/;"	l
f01058cb	obj/kern/kernel.asm	/^f01058cb:	eb 06                	jmp    f01058d3 <init_attach+0x12b>$/;"	l
f01058cd	obj/kern/kernel.asm	/^f01058cd:	66 c7 42 fe 00 40    	movw   $0x4000,-0x2(%edx)$/;"	l
f01058d3	obj/kern/kernel.asm	/^f01058d3:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)$/;"	l
f01058da	obj/kern/kernel.asm	/^f01058da:	83 c0 01             	add    $0x1,%eax$/;"	l
f01058dd	obj/kern/kernel.asm	/^f01058dd:	89 c3                	mov    %eax,%ebx$/;"	l
f01058df	obj/kern/kernel.asm	/^f01058df:	c1 fb 1f             	sar    $0x1f,%ebx$/;"	l
f01058e2	obj/kern/kernel.asm	/^f01058e2:	c1 eb 1c             	shr    $0x1c,%ebx$/;"	l
f01058e5	obj/kern/kernel.asm	/^f01058e5:	8d 0c 18             	lea    (%eax,%ebx,1),%ecx$/;"	l
f01058e8	obj/kern/kernel.asm	/^f01058e8:	83 e1 0f             	and    $0xf,%ecx$/;"	l
f01058eb	obj/kern/kernel.asm	/^f01058eb:	29 d9                	sub    %ebx,%ecx$/;"	l
f01058ed	obj/kern/kernel.asm	/^f01058ed:	69 c9 fd 05 00 00    	imul   $0x5fd,%ecx,%ecx$/;"	l
f01058f3	obj/kern/kernel.asm	/^f01058f3:	81 c1 e0 1c 28 f0    	add    $0xf0281ce0,%ecx$/;"	l
f01058f9	obj/kern/kernel.asm	/^f01058f9:	81 f9 ff ff ff ef    	cmp    $0xefffffff,%ecx$/;"	l
f01058ff	obj/kern/kernel.asm	/^f01058ff:	77 20                	ja     f0105921 <init_attach+0x179>$/;"	l
f0105901	obj/kern/kernel.asm	/^f0105901:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0105905	obj/kern/kernel.asm	/^f0105905:	c7 44 24 08 fc 69 10 	movl   $0xf01069fc,0x8(%esp)$/;"	l
f010590c	obj/kern/kernel.asm	/^f010590c:	f0 $/;"	l
f010590d	obj/kern/kernel.asm	/^f010590d:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0105914	obj/kern/kernel.asm	/^f0105914:	00 $/;"	l
f0105915	obj/kern/kernel.asm	/^f0105915:	c7 04 24 8f 7c 10 f0 	movl   $0xf0107c8f,(%esp)$/;"	l
f010591c	obj/kern/kernel.asm	/^f010591c:	e8 64 a7 ff ff       	call   f0100085 <_panic>$/;"	l
f0105921	obj/kern/kernel.asm	/^f0105921:	81 c1 00 00 00 10    	add    $0x10000000,%ecx$/;"	l
f0105927	obj/kern/kernel.asm	/^f0105927:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0105929	obj/kern/kernel.asm	/^f0105929:	66 c7 42 08 00 00    	movw   $0x0,0x8(%edx)$/;"	l
f010592f	obj/kern/kernel.asm	/^f010592f:	66 c7 42 0a ee 05    	movw   $0x5ee,0xa(%edx)$/;"	l
f0105935	obj/kern/kernel.asm	/^f0105935:	81 c2 fd 05 00 00    	add    $0x5fd,%edx$/;"	l
f010593b	obj/kern/kernel.asm	/^f010593b:	83 f8 32             	cmp    $0x32,%eax$/;"	l
f010593e	obj/kern/kernel.asm	/^f010593e:	0f 85 73 ff ff ff    	jne    f01058b7 <init_attach+0x10f>$/;"	l
f0105944	obj/kern/kernel.asm	/^f0105944:	b8 e0 1c 28 f0       	mov    $0xf0281ce0,%eax$/;"	l
f0105949	obj/kern/kernel.asm	/^f0105949:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010594e	obj/kern/kernel.asm	/^f010594e:	77 20                	ja     f0105970 <init_attach+0x1c8>$/;"	l
f0105950	obj/kern/kernel.asm	/^f0105950:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105954	obj/kern/kernel.asm	/^f0105954:	c7 44 24 08 fc 69 10 	movl   $0xf01069fc,0x8(%esp)$/;"	l
f010595b	obj/kern/kernel.asm	/^f010595b:	f0 $/;"	l
f010595c	obj/kern/kernel.asm	/^f010595c:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0105963	obj/kern/kernel.asm	/^f0105963:	00 $/;"	l
f0105964	obj/kern/kernel.asm	/^f0105964:	c7 04 24 8f 7c 10 f0 	movl   $0xf0107c8f,(%esp)$/;"	l
f010596b	obj/kern/kernel.asm	/^f010596b:	e8 15 a7 ff ff       	call   f0100085 <_panic>$/;"	l
f0105970	obj/kern/kernel.asm	/^f0105970:	8b 0d c8 f0 26 f0    	mov    0xf026f0c8,%ecx$/;"	l
f0105976	obj/kern/kernel.asm	/^f0105976:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010597b	obj/kern/kernel.asm	/^f010597b:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f010597e	obj/kern/kernel.asm	/^f010597e:	ef                   	out    %eax,(%dx)$/;"	l
f010597f	obj/kern/kernel.asm	/^f010597f:	8d 51 02             	lea    0x2(%ecx),%edx$/;"	l
f0105982	obj/kern/kernel.asm	/^f0105982:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0105987	obj/kern/kernel.asm	/^f0105987:	66 ef                	out    %ax,(%dx)$/;"	l
f0105989	obj/kern/kernel.asm	/^f0105989:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010598e	obj/kern/kernel.asm	/^f010598e:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105991	obj/kern/kernel.asm	/^f0105991:	5b                   	pop    %ebx$/;"	l
f0105992	obj/kern/kernel.asm	/^f0105992:	5e                   	pop    %esi$/;"	l
f0105993	obj/kern/kernel.asm	/^f0105993:	5f                   	pop    %edi$/;"	l
f0105994	obj/kern/kernel.asm	/^f0105994:	5d                   	pop    %ebp$/;"	l
f0105995	obj/kern/kernel.asm	/^f0105995:	c3                   	ret    $/;"	l
f0105996	obj/kern/kernel.asm	/^f0105996:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010599b	obj/kern/kernel.asm	/^f010599b:	a3 e4 f0 26 f0       	mov    %eax,0xf026f0e4$/;"	l
f01059a0	obj/kern/kernel.asm	/^f01059a0:	c7 05 e8 f0 26 f0 ff 	movl   $0xffffffff,0xf026f0e8$/;"	l
f01059a7	obj/kern/kernel.asm	/^f01059a7:	ff ff ff $/;"	l
f01059aa	obj/kern/kernel.asm	/^f01059aa:	66 c7 05 ec f0 26 f0 	movw   $0x5f0,0xf026f0ec$/;"	l
f01059b1	obj/kern/kernel.asm	/^f01059b1:	f0 05 $/;"	l
f01059b3	obj/kern/kernel.asm	/^f01059b3:	c6 05 ee f0 26 f0 e0 	movb   $0xe0,0xf026f0ee$/;"	l
f01059ba	obj/kern/kernel.asm	/^f01059ba:	c6 05 ef f0 26 f0 00 	movb   $0x0,0xf026f0ef$/;"	l
f01059c1	obj/kern/kernel.asm	/^f01059c1:	bb e2 f6 26 f0       	mov    $0xf026f6e2,%ebx$/;"	l
f01059c6	obj/kern/kernel.asm	/^f01059c6:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f01059cb	obj/kern/kernel.asm	/^f01059cb:	be e0 f0 26 f0       	mov    $0xf026f0e0,%esi$/;"	l
f01059d0	obj/kern/kernel.asm	/^f01059d0:	bf 1f 85 eb 51       	mov    $0x51eb851f,%edi$/;"	l
f01059d5	obj/kern/kernel.asm	/^f01059d5:	e9 42 fe ff ff       	jmp    f010581c <init_attach+0x74>$/;"	l
f01059da	obj/kern/kernel.asm	/^f01059da:	00 00                	add    %al,(%eax)$/;"	l
f01059dc	obj/kern/kernel.asm	/^f01059dc:	00 00                	add    %al,(%eax)$/;"	l
f01059e0	obj/kern/kernel.asm	/^f01059e0 <pci_attach_match>:$/;"	l
f01059e0	obj/kern/kernel.asm	/^f01059e0:	55                   	push   %ebp$/;"	l
f01059e1	obj/kern/kernel.asm	/^f01059e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01059e3	obj/kern/kernel.asm	/^f01059e3:	57                   	push   %edi$/;"	l
f01059e4	obj/kern/kernel.asm	/^f01059e4:	56                   	push   %esi$/;"	l
f01059e5	obj/kern/kernel.asm	/^f01059e5:	53                   	push   %ebx$/;"	l
f01059e6	obj/kern/kernel.asm	/^f01059e6:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01059e9	obj/kern/kernel.asm	/^f01059e9:	89 c7                	mov    %eax,%edi$/;"	l
f01059eb	obj/kern/kernel.asm	/^f01059eb:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01059ee	obj/kern/kernel.asm	/^f01059ee:	89 ce                	mov    %ecx,%esi$/;"	l
f01059f0	obj/kern/kernel.asm	/^f01059f0:	8b 41 08             	mov    0x8(%ecx),%eax$/;"	l
f01059f3	obj/kern/kernel.asm	/^f01059f3:	85 c0                	test   %eax,%eax$/;"	l
f01059f5	obj/kern/kernel.asm	/^f01059f5:	74 4d                	je     f0105a44 <pci_attach_match+0x64>$/;"	l
f01059f7	obj/kern/kernel.asm	/^f01059f7:	8d 59 0c             	lea    0xc(%ecx),%ebx$/;"	l
f01059fa	obj/kern/kernel.asm	/^f01059fa:	39 3e                	cmp    %edi,(%esi)$/;"	l
f01059fc	obj/kern/kernel.asm	/^f01059fc:	75 3a                	jne    f0105a38 <pci_attach_match+0x58>$/;"	l
f01059fe	obj/kern/kernel.asm	/^f01059fe:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105a01	obj/kern/kernel.asm	/^f0105a01:	39 56 04             	cmp    %edx,0x4(%esi)$/;"	l
f0105a04	obj/kern/kernel.asm	/^f0105a04:	75 32                	jne    f0105a38 <pci_attach_match+0x58>$/;"	l
f0105a06	obj/kern/kernel.asm	/^f0105a06:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105a09	obj/kern/kernel.asm	/^f0105a09:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105a0c	obj/kern/kernel.asm	/^f0105a0c:	ff d0                	call   *%eax$/;"	l
f0105a0e	obj/kern/kernel.asm	/^f0105a0e:	85 c0                	test   %eax,%eax$/;"	l
f0105a10	obj/kern/kernel.asm	/^f0105a10:	7f 37                	jg     f0105a49 <pci_attach_match+0x69>$/;"	l
f0105a12	obj/kern/kernel.asm	/^f0105a12:	85 c0                	test   %eax,%eax$/;"	l
f0105a14	obj/kern/kernel.asm	/^f0105a14:	79 22                	jns    f0105a38 <pci_attach_match+0x58>$/;"	l
f0105a16	obj/kern/kernel.asm	/^f0105a16:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0105a1a	obj/kern/kernel.asm	/^f0105a1a:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0105a1d	obj/kern/kernel.asm	/^f0105a1d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105a21	obj/kern/kernel.asm	/^f0105a21:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105a24	obj/kern/kernel.asm	/^f0105a24:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105a28	obj/kern/kernel.asm	/^f0105a28:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105a2c	obj/kern/kernel.asm	/^f0105a2c:	c7 04 24 04 7d 10 f0 	movl   $0xf0107d04,(%esp)$/;"	l
f0105a33	obj/kern/kernel.asm	/^f0105a33:	e8 93 df ff ff       	call   f01039cb <cprintf>$/;"	l
f0105a38	obj/kern/kernel.asm	/^f0105a38:	89 de                	mov    %ebx,%esi$/;"	l
f0105a3a	obj/kern/kernel.asm	/^f0105a3a:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0105a3d	obj/kern/kernel.asm	/^f0105a3d:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0105a40	obj/kern/kernel.asm	/^f0105a40:	85 c0                	test   %eax,%eax$/;"	l
f0105a42	obj/kern/kernel.asm	/^f0105a42:	75 b6                	jne    f01059fa <pci_attach_match+0x1a>$/;"	l
f0105a44	obj/kern/kernel.asm	/^f0105a44:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105a49	obj/kern/kernel.asm	/^f0105a49:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0105a4c	obj/kern/kernel.asm	/^f0105a4c:	5b                   	pop    %ebx$/;"	l
f0105a4d	obj/kern/kernel.asm	/^f0105a4d:	5e                   	pop    %esi$/;"	l
f0105a4e	obj/kern/kernel.asm	/^f0105a4e:	5f                   	pop    %edi$/;"	l
f0105a4f	obj/kern/kernel.asm	/^f0105a4f:	5d                   	pop    %ebp$/;"	l
f0105a50	obj/kern/kernel.asm	/^f0105a50:	c3                   	ret    $/;"	l
f0105a51	obj/kern/kernel.asm	/^f0105a51 <pci_conf1_set_addr>:$/;"	l
f0105a51	obj/kern/kernel.asm	/^f0105a51:	55                   	push   %ebp$/;"	l
f0105a52	obj/kern/kernel.asm	/^f0105a52:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a54	obj/kern/kernel.asm	/^f0105a54:	53                   	push   %ebx$/;"	l
f0105a55	obj/kern/kernel.asm	/^f0105a55:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105a58	obj/kern/kernel.asm	/^f0105a58:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105a5b	obj/kern/kernel.asm	/^f0105a5b:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
f0105a60	obj/kern/kernel.asm	/^f0105a60:	76 24                	jbe    f0105a86 <pci_conf1_set_addr+0x35>$/;"	l
f0105a62	obj/kern/kernel.asm	/^f0105a62:	c7 44 24 0c 5c 7e 10 	movl   $0xf0107e5c,0xc(%esp)$/;"	l
f0105a69	obj/kern/kernel.asm	/^f0105a69:	f0 $/;"	l
f0105a6a	obj/kern/kernel.asm	/^f0105a6a:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0105a71	obj/kern/kernel.asm	/^f0105a71:	f0 $/;"	l
f0105a72	obj/kern/kernel.asm	/^f0105a72:	c7 44 24 04 2a 00 00 	movl   $0x2a,0x4(%esp)$/;"	l
f0105a79	obj/kern/kernel.asm	/^f0105a79:	00 $/;"	l
f0105a7a	obj/kern/kernel.asm	/^f0105a7a:	c7 04 24 66 7e 10 f0 	movl   $0xf0107e66,(%esp)$/;"	l
f0105a81	obj/kern/kernel.asm	/^f0105a81:	e8 ff a5 ff ff       	call   f0100085 <_panic>$/;"	l
f0105a86	obj/kern/kernel.asm	/^f0105a86:	83 fa 1f             	cmp    $0x1f,%edx$/;"	l
f0105a89	obj/kern/kernel.asm	/^f0105a89:	76 24                	jbe    f0105aaf <pci_conf1_set_addr+0x5e>$/;"	l
f0105a8b	obj/kern/kernel.asm	/^f0105a8b:	c7 44 24 0c 71 7e 10 	movl   $0xf0107e71,0xc(%esp)$/;"	l
f0105a92	obj/kern/kernel.asm	/^f0105a92:	f0 $/;"	l
f0105a93	obj/kern/kernel.asm	/^f0105a93:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0105a9a	obj/kern/kernel.asm	/^f0105a9a:	f0 $/;"	l
f0105a9b	obj/kern/kernel.asm	/^f0105a9b:	c7 44 24 04 2b 00 00 	movl   $0x2b,0x4(%esp)$/;"	l
f0105aa2	obj/kern/kernel.asm	/^f0105aa2:	00 $/;"	l
f0105aa3	obj/kern/kernel.asm	/^f0105aa3:	c7 04 24 66 7e 10 f0 	movl   $0xf0107e66,(%esp)$/;"	l
f0105aaa	obj/kern/kernel.asm	/^f0105aaa:	e8 d6 a5 ff ff       	call   f0100085 <_panic>$/;"	l
f0105aaf	obj/kern/kernel.asm	/^f0105aaf:	83 f9 07             	cmp    $0x7,%ecx$/;"	l
f0105ab2	obj/kern/kernel.asm	/^f0105ab2:	76 24                	jbe    f0105ad8 <pci_conf1_set_addr+0x87>$/;"	l
f0105ab4	obj/kern/kernel.asm	/^f0105ab4:	c7 44 24 0c 7a 7e 10 	movl   $0xf0107e7a,0xc(%esp)$/;"	l
f0105abb	obj/kern/kernel.asm	/^f0105abb:	f0 $/;"	l
f0105abc	obj/kern/kernel.asm	/^f0105abc:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0105ac3	obj/kern/kernel.asm	/^f0105ac3:	f0 $/;"	l
f0105ac4	obj/kern/kernel.asm	/^f0105ac4:	c7 44 24 04 2c 00 00 	movl   $0x2c,0x4(%esp)$/;"	l
f0105acb	obj/kern/kernel.asm	/^f0105acb:	00 $/;"	l
f0105acc	obj/kern/kernel.asm	/^f0105acc:	c7 04 24 66 7e 10 f0 	movl   $0xf0107e66,(%esp)$/;"	l
f0105ad3	obj/kern/kernel.asm	/^f0105ad3:	e8 ad a5 ff ff       	call   f0100085 <_panic>$/;"	l
f0105ad8	obj/kern/kernel.asm	/^f0105ad8:	81 fb ff 00 00 00    	cmp    $0xff,%ebx$/;"	l
f0105ade	obj/kern/kernel.asm	/^f0105ade:	76 24                	jbe    f0105b04 <pci_conf1_set_addr+0xb3>$/;"	l
f0105ae0	obj/kern/kernel.asm	/^f0105ae0:	c7 44 24 0c 83 7e 10 	movl   $0xf0107e83,0xc(%esp)$/;"	l
f0105ae7	obj/kern/kernel.asm	/^f0105ae7:	f0 $/;"	l
f0105ae8	obj/kern/kernel.asm	/^f0105ae8:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0105aef	obj/kern/kernel.asm	/^f0105aef:	f0 $/;"	l
f0105af0	obj/kern/kernel.asm	/^f0105af0:	c7 44 24 04 2d 00 00 	movl   $0x2d,0x4(%esp)$/;"	l
f0105af7	obj/kern/kernel.asm	/^f0105af7:	00 $/;"	l
f0105af8	obj/kern/kernel.asm	/^f0105af8:	c7 04 24 66 7e 10 f0 	movl   $0xf0107e66,(%esp)$/;"	l
f0105aff	obj/kern/kernel.asm	/^f0105aff:	e8 81 a5 ff ff       	call   f0100085 <_panic>$/;"	l
f0105b04	obj/kern/kernel.asm	/^f0105b04:	f6 c3 03             	test   $0x3,%bl$/;"	l
f0105b07	obj/kern/kernel.asm	/^f0105b07:	74 24                	je     f0105b2d <pci_conf1_set_addr+0xdc>$/;"	l
f0105b09	obj/kern/kernel.asm	/^f0105b09:	c7 44 24 0c 90 7e 10 	movl   $0xf0107e90,0xc(%esp)$/;"	l
f0105b10	obj/kern/kernel.asm	/^f0105b10:	f0 $/;"	l
f0105b11	obj/kern/kernel.asm	/^f0105b11:	c7 44 24 08 94 71 10 	movl   $0xf0107194,0x8(%esp)$/;"	l
f0105b18	obj/kern/kernel.asm	/^f0105b18:	f0 $/;"	l
f0105b19	obj/kern/kernel.asm	/^f0105b19:	c7 44 24 04 2e 00 00 	movl   $0x2e,0x4(%esp)$/;"	l
f0105b20	obj/kern/kernel.asm	/^f0105b20:	00 $/;"	l
f0105b21	obj/kern/kernel.asm	/^f0105b21:	c7 04 24 66 7e 10 f0 	movl   $0xf0107e66,(%esp)$/;"	l
f0105b28	obj/kern/kernel.asm	/^f0105b28:	e8 58 a5 ff ff       	call   f0100085 <_panic>$/;"	l
f0105b2d	obj/kern/kernel.asm	/^f0105b2d:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0105b30	obj/kern/kernel.asm	/^f0105b30:	0d 00 00 00 80       	or     $0x80000000,%eax$/;"	l
f0105b35	obj/kern/kernel.asm	/^f0105b35:	c1 e2 0b             	shl    $0xb,%edx$/;"	l
f0105b38	obj/kern/kernel.asm	/^f0105b38:	09 d0                	or     %edx,%eax$/;"	l
f0105b3a	obj/kern/kernel.asm	/^f0105b3a:	09 d8                	or     %ebx,%eax$/;"	l
f0105b3c	obj/kern/kernel.asm	/^f0105b3c:	c1 e1 08             	shl    $0x8,%ecx$/;"	l
f0105b3f	obj/kern/kernel.asm	/^f0105b3f:	09 c8                	or     %ecx,%eax$/;"	l
f0105b41	obj/kern/kernel.asm	/^f0105b41:	ba f8 0c 00 00       	mov    $0xcf8,%edx$/;"	l
f0105b46	obj/kern/kernel.asm	/^f0105b46:	ef                   	out    %eax,(%dx)$/;"	l
f0105b47	obj/kern/kernel.asm	/^f0105b47:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105b4a	obj/kern/kernel.asm	/^f0105b4a:	5b                   	pop    %ebx$/;"	l
f0105b4b	obj/kern/kernel.asm	/^f0105b4b:	5d                   	pop    %ebp$/;"	l
f0105b4c	obj/kern/kernel.asm	/^f0105b4c:	c3                   	ret    $/;"	l
f0105b4d	obj/kern/kernel.asm	/^f0105b4d <pci_conf_read>:$/;"	l
f0105b4d	obj/kern/kernel.asm	/^f0105b4d:	55                   	push   %ebp$/;"	l
f0105b4e	obj/kern/kernel.asm	/^f0105b4e:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b50	obj/kern/kernel.asm	/^f0105b50:	53                   	push   %ebx$/;"	l
f0105b51	obj/kern/kernel.asm	/^f0105b51:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105b54	obj/kern/kernel.asm	/^f0105b54:	89 d3                	mov    %edx,%ebx$/;"	l
f0105b56	obj/kern/kernel.asm	/^f0105b56:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f0105b59	obj/kern/kernel.asm	/^f0105b59:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0105b5c	obj/kern/kernel.asm	/^f0105b5c:	8b 00                	mov    (%eax),%eax$/;"	l
f0105b5e	obj/kern/kernel.asm	/^f0105b5e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0105b61	obj/kern/kernel.asm	/^f0105b61:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105b64	obj/kern/kernel.asm	/^f0105b64:	e8 e8 fe ff ff       	call   f0105a51 <pci_conf1_set_addr>$/;"	l
f0105b69	obj/kern/kernel.asm	/^f0105b69:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f0105b6e	obj/kern/kernel.asm	/^f0105b6e:	ed                   	in     (%dx),%eax$/;"	l
f0105b6f	obj/kern/kernel.asm	/^f0105b6f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105b72	obj/kern/kernel.asm	/^f0105b72:	5b                   	pop    %ebx$/;"	l
f0105b73	obj/kern/kernel.asm	/^f0105b73:	5d                   	pop    %ebp$/;"	l
f0105b74	obj/kern/kernel.asm	/^f0105b74:	c3                   	ret    $/;"	l
f0105b75	obj/kern/kernel.asm	/^f0105b75 <pci_scan_bus>:$/;"	l
f0105b75	obj/kern/kernel.asm	/^f0105b75:	55                   	push   %ebp$/;"	l
f0105b76	obj/kern/kernel.asm	/^f0105b76:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b78	obj/kern/kernel.asm	/^f0105b78:	57                   	push   %edi$/;"	l
f0105b79	obj/kern/kernel.asm	/^f0105b79:	56                   	push   %esi$/;"	l
f0105b7a	obj/kern/kernel.asm	/^f0105b7a:	53                   	push   %ebx$/;"	l
f0105b7b	obj/kern/kernel.asm	/^f0105b7b:	81 ec 3c 01 00 00    	sub    $0x13c,%esp$/;"	l
f0105b81	obj/kern/kernel.asm	/^f0105b81:	89 c3                	mov    %eax,%ebx$/;"	l
f0105b83	obj/kern/kernel.asm	/^f0105b83:	c7 44 24 08 48 00 00 	movl   $0x48,0x8(%esp)$/;"	l
f0105b8a	obj/kern/kernel.asm	/^f0105b8a:	00 $/;"	l
f0105b8b	obj/kern/kernel.asm	/^f0105b8b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0105b92	obj/kern/kernel.asm	/^f0105b92:	00 $/;"	l
f0105b93	obj/kern/kernel.asm	/^f0105b93:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f0105b96	obj/kern/kernel.asm	/^f0105b96:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105b99	obj/kern/kernel.asm	/^f0105b99:	e8 18 f8 ff ff       	call   f01053b6 <memset>$/;"	l
f0105b9e	obj/kern/kernel.asm	/^f0105b9e:	89 5d a0             	mov    %ebx,-0x60(%ebp)$/;"	l
f0105ba1	obj/kern/kernel.asm	/^f0105ba1:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)$/;"	l
f0105ba8	obj/kern/kernel.asm	/^f0105ba8:	c7 85 fc fe ff ff 00 	movl   $0x0,-0x104(%ebp)$/;"	l
f0105baf	obj/kern/kernel.asm	/^f0105baf:	00 00 00 $/;"	l
f0105bb2	obj/kern/kernel.asm	/^f0105bb2:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f0105bb5	obj/kern/kernel.asm	/^f0105bb5:	89 85 f0 fe ff ff    	mov    %eax,-0x110(%ebp)$/;"	l
f0105bbb	obj/kern/kernel.asm	/^f0105bbb:	8d 8d 58 ff ff ff    	lea    -0xa8(%ebp),%ecx$/;"	l
f0105bc1	obj/kern/kernel.asm	/^f0105bc1:	89 8d f4 fe ff ff    	mov    %ecx,-0x10c(%ebp)$/;"	l
f0105bc7	obj/kern/kernel.asm	/^f0105bc7:	8d 85 10 ff ff ff    	lea    -0xf0(%ebp),%eax$/;"	l
f0105bcd	obj/kern/kernel.asm	/^f0105bcd:	89 85 ec fe ff ff    	mov    %eax,-0x114(%ebp)$/;"	l
f0105bd3	obj/kern/kernel.asm	/^f0105bd3:	89 8d 00 ff ff ff    	mov    %ecx,-0x100(%ebp)$/;"	l
f0105bd9	obj/kern/kernel.asm	/^f0105bd9:	89 85 04 ff ff ff    	mov    %eax,-0xfc(%ebp)$/;"	l
f0105bdf	obj/kern/kernel.asm	/^f0105bdf:	ba 0c 00 00 00       	mov    $0xc,%edx$/;"	l
f0105be4	obj/kern/kernel.asm	/^f0105be4:	8d 45 a0             	lea    -0x60(%ebp),%eax$/;"	l
f0105be7	obj/kern/kernel.asm	/^f0105be7:	e8 61 ff ff ff       	call   f0105b4d <pci_conf_read>$/;"	l
f0105bec	obj/kern/kernel.asm	/^f0105bec:	89 c2                	mov    %eax,%edx$/;"	l
f0105bee	obj/kern/kernel.asm	/^f0105bee:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0105bf1	obj/kern/kernel.asm	/^f0105bf1:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f0105bf4	obj/kern/kernel.asm	/^f0105bf4:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105bf7	obj/kern/kernel.asm	/^f0105bf7:	0f 87 77 01 00 00    	ja     f0105d74 <pci_scan_bus+0x1ff>$/;"	l
f0105bfd	obj/kern/kernel.asm	/^f0105bfd:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f0105c02	obj/kern/kernel.asm	/^f0105c02:	8b bd f4 fe ff ff    	mov    -0x10c(%ebp),%edi$/;"	l
f0105c08	obj/kern/kernel.asm	/^f0105c08:	8b b5 f0 fe ff ff    	mov    -0x110(%ebp),%esi$/;"	l
f0105c0e	obj/kern/kernel.asm	/^f0105c0e:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105c10	obj/kern/kernel.asm	/^f0105c10:	c7 85 60 ff ff ff 00 	movl   $0x0,-0xa0(%ebp)$/;"	l
f0105c17	obj/kern/kernel.asm	/^f0105c17:	00 00 00 $/;"	l
f0105c1a	obj/kern/kernel.asm	/^f0105c1a:	89 c3                	mov    %eax,%ebx$/;"	l
f0105c1c	obj/kern/kernel.asm	/^f0105c1c:	81 e3 00 00 80 00    	and    $0x800000,%ebx$/;"	l
f0105c22	obj/kern/kernel.asm	/^f0105c22:	e9 2f 01 00 00       	jmp    f0105d56 <pci_scan_bus+0x1e1>$/;"	l
f0105c27	obj/kern/kernel.asm	/^f0105c27:	8b bd ec fe ff ff    	mov    -0x114(%ebp),%edi$/;"	l
f0105c2d	obj/kern/kernel.asm	/^f0105c2d:	8b b5 f4 fe ff ff    	mov    -0x10c(%ebp),%esi$/;"	l
f0105c33	obj/kern/kernel.asm	/^f0105c33:	b9 12 00 00 00       	mov    $0x12,%ecx$/;"	l
f0105c38	obj/kern/kernel.asm	/^f0105c38:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105c3a	obj/kern/kernel.asm	/^f0105c3a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105c3f	obj/kern/kernel.asm	/^f0105c3f:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax$/;"	l
f0105c45	obj/kern/kernel.asm	/^f0105c45:	e8 03 ff ff ff       	call   f0105b4d <pci_conf_read>$/;"	l
f0105c4a	obj/kern/kernel.asm	/^f0105c4a:	89 85 1c ff ff ff    	mov    %eax,-0xe4(%ebp)$/;"	l
f0105c50	obj/kern/kernel.asm	/^f0105c50:	66 83 f8 ff          	cmp    $0xffffffff,%ax$/;"	l
f0105c54	obj/kern/kernel.asm	/^f0105c54:	0f 84 f5 00 00 00    	je     f0105d4f <pci_scan_bus+0x1da>$/;"	l
f0105c5a	obj/kern/kernel.asm	/^f0105c5a:	ba 3c 00 00 00       	mov    $0x3c,%edx$/;"	l
f0105c5f	obj/kern/kernel.asm	/^f0105c5f:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax$/;"	l
f0105c65	obj/kern/kernel.asm	/^f0105c65:	e8 e3 fe ff ff       	call   f0105b4d <pci_conf_read>$/;"	l
f0105c6a	obj/kern/kernel.asm	/^f0105c6a:	88 85 54 ff ff ff    	mov    %al,-0xac(%ebp)$/;"	l
f0105c70	obj/kern/kernel.asm	/^f0105c70:	ba 08 00 00 00       	mov    $0x8,%edx$/;"	l
f0105c75	obj/kern/kernel.asm	/^f0105c75:	8b 85 04 ff ff ff    	mov    -0xfc(%ebp),%eax$/;"	l
f0105c7b	obj/kern/kernel.asm	/^f0105c7b:	e8 cd fe ff ff       	call   f0105b4d <pci_conf_read>$/;"	l
f0105c80	obj/kern/kernel.asm	/^f0105c80:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%ebp)$/;"	l
f0105c86	obj/kern/kernel.asm	/^f0105c86:	89 c2                	mov    %eax,%edx$/;"	l
f0105c88	obj/kern/kernel.asm	/^f0105c88:	c1 ea 18             	shr    $0x18,%edx$/;"	l
f0105c8b	obj/kern/kernel.asm	/^f0105c8b:	b9 a4 7e 10 f0       	mov    $0xf0107ea4,%ecx$/;"	l
f0105c90	obj/kern/kernel.asm	/^f0105c90:	83 fa 06             	cmp    $0x6,%edx$/;"	l
f0105c93	obj/kern/kernel.asm	/^f0105c93:	77 07                	ja     f0105c9c <pci_scan_bus+0x127>$/;"	l
f0105c95	obj/kern/kernel.asm	/^f0105c95:	8b 0c 95 18 7f 10 f0 	mov    -0xfef80e8(,%edx,4),%ecx$/;"	l
f0105c9c	obj/kern/kernel.asm	/^f0105c9c:	8b bd 1c ff ff ff    	mov    -0xe4(%ebp),%edi$/;"	l
f0105ca2	obj/kern/kernel.asm	/^f0105ca2:	0f b6 b5 54 ff ff ff 	movzbl -0xac(%ebp),%esi$/;"	l
f0105ca9	obj/kern/kernel.asm	/^f0105ca9:	89 74 24 24          	mov    %esi,0x24(%esp)$/;"	l
f0105cad	obj/kern/kernel.asm	/^f0105cad:	89 4c 24 20          	mov    %ecx,0x20(%esp)$/;"	l
f0105cb1	obj/kern/kernel.asm	/^f0105cb1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105cb4	obj/kern/kernel.asm	/^f0105cb4:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f0105cb9	obj/kern/kernel.asm	/^f0105cb9:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0105cbd	obj/kern/kernel.asm	/^f0105cbd:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0105cc1	obj/kern/kernel.asm	/^f0105cc1:	89 f8                	mov    %edi,%eax$/;"	l
f0105cc3	obj/kern/kernel.asm	/^f0105cc3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105cc6	obj/kern/kernel.asm	/^f0105cc6:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0105cca	obj/kern/kernel.asm	/^f0105cca:	81 e7 ff ff 00 00    	and    $0xffff,%edi$/;"	l
f0105cd0	obj/kern/kernel.asm	/^f0105cd0:	89 7c 24 10          	mov    %edi,0x10(%esp)$/;"	l
f0105cd4	obj/kern/kernel.asm	/^f0105cd4:	8b 85 18 ff ff ff    	mov    -0xe8(%ebp),%eax$/;"	l
f0105cda	obj/kern/kernel.asm	/^f0105cda:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105cde	obj/kern/kernel.asm	/^f0105cde:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax$/;"	l
f0105ce4	obj/kern/kernel.asm	/^f0105ce4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105ce8	obj/kern/kernel.asm	/^f0105ce8:	8b 85 10 ff ff ff    	mov    -0xf0(%ebp),%eax$/;"	l
f0105cee	obj/kern/kernel.asm	/^f0105cee:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0105cf1	obj/kern/kernel.asm	/^f0105cf1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105cf5	obj/kern/kernel.asm	/^f0105cf5:	c7 04 24 30 7d 10 f0 	movl   $0xf0107d30,(%esp)$/;"	l
f0105cfc	obj/kern/kernel.asm	/^f0105cfc:	e8 ca dc ff ff       	call   f01039cb <cprintf>$/;"	l
f0105d01	obj/kern/kernel.asm	/^f0105d01:	8b 85 20 ff ff ff    	mov    -0xe0(%ebp),%eax$/;"	l
f0105d07	obj/kern/kernel.asm	/^f0105d07:	89 c2                	mov    %eax,%edx$/;"	l
f0105d09	obj/kern/kernel.asm	/^f0105d09:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0105d0c	obj/kern/kernel.asm	/^f0105d0c:	81 e2 ff 00 00 00    	and    $0xff,%edx$/;"	l
f0105d12	obj/kern/kernel.asm	/^f0105d12:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0105d15	obj/kern/kernel.asm	/^f0105d15:	8b 8d 04 ff ff ff    	mov    -0xfc(%ebp),%ecx$/;"	l
f0105d1b	obj/kern/kernel.asm	/^f0105d1b:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0105d1e	obj/kern/kernel.asm	/^f0105d1e:	b9 6c e3 11 f0       	mov    $0xf011e36c,%ecx$/;"	l
f0105d23	obj/kern/kernel.asm	/^f0105d23:	e8 b8 fc ff ff       	call   f01059e0 <pci_attach_match>$/;"	l
f0105d28	obj/kern/kernel.asm	/^f0105d28:	85 c0                	test   %eax,%eax$/;"	l
f0105d2a	obj/kern/kernel.asm	/^f0105d2a:	75 23                	jne    f0105d4f <pci_scan_bus+0x1da>$/;"	l
f0105d2c	obj/kern/kernel.asm	/^f0105d2c:	8b 85 1c ff ff ff    	mov    -0xe4(%ebp),%eax$/;"	l
f0105d32	obj/kern/kernel.asm	/^f0105d32:	89 c2                	mov    %eax,%edx$/;"	l
f0105d34	obj/kern/kernel.asm	/^f0105d34:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0105d37	obj/kern/kernel.asm	/^f0105d37:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f0105d3c	obj/kern/kernel.asm	/^f0105d3c:	8b 8d 04 ff ff ff    	mov    -0xfc(%ebp),%ecx$/;"	l
f0105d42	obj/kern/kernel.asm	/^f0105d42:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0105d45	obj/kern/kernel.asm	/^f0105d45:	b9 84 e3 11 f0       	mov    $0xf011e384,%ecx$/;"	l
f0105d4a	obj/kern/kernel.asm	/^f0105d4a:	e8 91 fc ff ff       	call   f01059e0 <pci_attach_match>$/;"	l
f0105d4f	obj/kern/kernel.asm	/^f0105d4f:	83 85 60 ff ff ff 01 	addl   $0x1,-0xa0(%ebp)$/;"	l
f0105d56	obj/kern/kernel.asm	/^f0105d56:	83 fb 01             	cmp    $0x1,%ebx$/;"	l
f0105d59	obj/kern/kernel.asm	/^f0105d59:	19 c0                	sbb    %eax,%eax$/;"	l
f0105d5b	obj/kern/kernel.asm	/^f0105d5b:	83 e0 f9             	and    $0xfffffff9,%eax$/;"	l
f0105d5e	obj/kern/kernel.asm	/^f0105d5e:	83 c0 08             	add    $0x8,%eax$/;"	l
f0105d61	obj/kern/kernel.asm	/^f0105d61:	3b 85 60 ff ff ff    	cmp    -0xa0(%ebp),%eax$/;"	l
f0105d67	obj/kern/kernel.asm	/^f0105d67:	0f 87 ba fe ff ff    	ja     f0105c27 <pci_scan_bus+0xb2>$/;"	l
f0105d6d	obj/kern/kernel.asm	/^f0105d6d:	83 85 fc fe ff ff 01 	addl   $0x1,-0x104(%ebp)$/;"	l
f0105d74	obj/kern/kernel.asm	/^f0105d74:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
f0105d77	obj/kern/kernel.asm	/^f0105d77:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105d7a	obj/kern/kernel.asm	/^f0105d7a:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
f0105d7d	obj/kern/kernel.asm	/^f0105d7d:	77 08                	ja     f0105d87 <pci_scan_bus+0x212>$/;"	l
f0105d7f	obj/kern/kernel.asm	/^f0105d7f:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
f0105d82	obj/kern/kernel.asm	/^f0105d82:	e9 58 fe ff ff       	jmp    f0105bdf <pci_scan_bus+0x6a>$/;"	l
f0105d87	obj/kern/kernel.asm	/^f0105d87:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax$/;"	l
f0105d8d	obj/kern/kernel.asm	/^f0105d8d:	81 c4 3c 01 00 00    	add    $0x13c,%esp$/;"	l
f0105d93	obj/kern/kernel.asm	/^f0105d93:	5b                   	pop    %ebx$/;"	l
f0105d94	obj/kern/kernel.asm	/^f0105d94:	5e                   	pop    %esi$/;"	l
f0105d95	obj/kern/kernel.asm	/^f0105d95:	5f                   	pop    %edi$/;"	l
f0105d96	obj/kern/kernel.asm	/^f0105d96:	5d                   	pop    %ebp$/;"	l
f0105d97	obj/kern/kernel.asm	/^f0105d97:	c3                   	ret    $/;"	l
f0105d98	obj/kern/kernel.asm	/^f0105d98 <pci_init>:$/;"	l
f0105d98	obj/kern/kernel.asm	/^f0105d98:	55                   	push   %ebp$/;"	l
f0105d99	obj/kern/kernel.asm	/^f0105d99:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d9b	obj/kern/kernel.asm	/^f0105d9b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105d9e	obj/kern/kernel.asm	/^f0105d9e:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f0105da5	obj/kern/kernel.asm	/^f0105da5:	00 $/;"	l
f0105da6	obj/kern/kernel.asm	/^f0105da6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0105dad	obj/kern/kernel.asm	/^f0105dad:	00 $/;"	l
f0105dae	obj/kern/kernel.asm	/^f0105dae:	c7 04 24 4c 48 29 f0 	movl   $0xf029484c,(%esp)$/;"	l
f0105db5	obj/kern/kernel.asm	/^f0105db5:	e8 fc f5 ff ff       	call   f01053b6 <memset>$/;"	l
f0105dba	obj/kern/kernel.asm	/^f0105dba:	b8 4c 48 29 f0       	mov    $0xf029484c,%eax$/;"	l
f0105dbf	obj/kern/kernel.asm	/^f0105dbf:	e8 b1 fd ff ff       	call   f0105b75 <pci_scan_bus>$/;"	l
f0105dc4	obj/kern/kernel.asm	/^f0105dc4:	c9                   	leave  $/;"	l
f0105dc5	obj/kern/kernel.asm	/^f0105dc5:	c3                   	ret    $/;"	l
f0105dc6	obj/kern/kernel.asm	/^f0105dc6 <pci_bridge_attach>:$/;"	l
f0105dc6	obj/kern/kernel.asm	/^f0105dc6:	55                   	push   %ebp$/;"	l
f0105dc7	obj/kern/kernel.asm	/^f0105dc7:	89 e5                	mov    %esp,%ebp$/;"	l
f0105dc9	obj/kern/kernel.asm	/^f0105dc9:	83 ec 48             	sub    $0x48,%esp$/;"	l
f0105dcc	obj/kern/kernel.asm	/^f0105dcc:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0105dcf	obj/kern/kernel.asm	/^f0105dcf:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0105dd2	obj/kern/kernel.asm	/^f0105dd2:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0105dd5	obj/kern/kernel.asm	/^f0105dd5:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105dd8	obj/kern/kernel.asm	/^f0105dd8:	ba 1c 00 00 00       	mov    $0x1c,%edx$/;"	l
f0105ddd	obj/kern/kernel.asm	/^f0105ddd:	89 d8                	mov    %ebx,%eax$/;"	l
f0105ddf	obj/kern/kernel.asm	/^f0105ddf:	e8 69 fd ff ff       	call   f0105b4d <pci_conf_read>$/;"	l
f0105de4	obj/kern/kernel.asm	/^f0105de4:	89 c7                	mov    %eax,%edi$/;"	l
f0105de6	obj/kern/kernel.asm	/^f0105de6:	ba 18 00 00 00       	mov    $0x18,%edx$/;"	l
f0105deb	obj/kern/kernel.asm	/^f0105deb:	89 d8                	mov    %ebx,%eax$/;"	l
f0105ded	obj/kern/kernel.asm	/^f0105ded:	e8 5b fd ff ff       	call   f0105b4d <pci_conf_read>$/;"	l
f0105df2	obj/kern/kernel.asm	/^f0105df2:	89 c6                	mov    %eax,%esi$/;"	l
f0105df4	obj/kern/kernel.asm	/^f0105df4:	83 e7 0f             	and    $0xf,%edi$/;"	l
f0105df7	obj/kern/kernel.asm	/^f0105df7:	83 ff 01             	cmp    $0x1,%edi$/;"	l
f0105dfa	obj/kern/kernel.asm	/^f0105dfa:	75 2a                	jne    f0105e26 <pci_bridge_attach+0x60>$/;"	l
f0105dfc	obj/kern/kernel.asm	/^f0105dfc:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0105dff	obj/kern/kernel.asm	/^f0105dff:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105e03	obj/kern/kernel.asm	/^f0105e03:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0105e06	obj/kern/kernel.asm	/^f0105e06:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105e0a	obj/kern/kernel.asm	/^f0105e0a:	8b 03                	mov    (%ebx),%eax$/;"	l
f0105e0c	obj/kern/kernel.asm	/^f0105e0c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0105e0f	obj/kern/kernel.asm	/^f0105e0f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105e13	obj/kern/kernel.asm	/^f0105e13:	c7 04 24 6c 7d 10 f0 	movl   $0xf0107d6c,(%esp)$/;"	l
f0105e1a	obj/kern/kernel.asm	/^f0105e1a:	e8 ac db ff ff       	call   f01039cb <cprintf>$/;"	l
f0105e1f	obj/kern/kernel.asm	/^f0105e1f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e24	obj/kern/kernel.asm	/^f0105e24:	eb 66                	jmp    f0105e8c <pci_bridge_attach+0xc6>$/;"	l
f0105e26	obj/kern/kernel.asm	/^f0105e26:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)$/;"	l
f0105e2d	obj/kern/kernel.asm	/^f0105e2d:	00 $/;"	l
f0105e2e	obj/kern/kernel.asm	/^f0105e2e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0105e35	obj/kern/kernel.asm	/^f0105e35:	00 $/;"	l
f0105e36	obj/kern/kernel.asm	/^f0105e36:	8d 7d e0             	lea    -0x20(%ebp),%edi$/;"	l
f0105e39	obj/kern/kernel.asm	/^f0105e39:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105e3c	obj/kern/kernel.asm	/^f0105e3c:	e8 75 f5 ff ff       	call   f01053b6 <memset>$/;"	l
f0105e41	obj/kern/kernel.asm	/^f0105e41:	89 5d e0             	mov    %ebx,-0x20(%ebp)$/;"	l
f0105e44	obj/kern/kernel.asm	/^f0105e44:	89 f2                	mov    %esi,%edx$/;"	l
f0105e46	obj/kern/kernel.asm	/^f0105e46:	0f b6 c6             	movzbl %dh,%eax$/;"	l
f0105e49	obj/kern/kernel.asm	/^f0105e49:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105e4c	obj/kern/kernel.asm	/^f0105e4c:	c1 ee 10             	shr    $0x10,%esi$/;"	l
f0105e4f	obj/kern/kernel.asm	/^f0105e4f:	81 e6 ff 00 00 00    	and    $0xff,%esi$/;"	l
f0105e55	obj/kern/kernel.asm	/^f0105e55:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
f0105e59	obj/kern/kernel.asm	/^f0105e59:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0105e5d	obj/kern/kernel.asm	/^f0105e5d:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105e64	obj/kern/kernel.asm	/^f0105e64:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0105e67	obj/kern/kernel.asm	/^f0105e67:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105e6b	obj/kern/kernel.asm	/^f0105e6b:	8b 03                	mov    (%ebx),%eax$/;"	l
f0105e6d	obj/kern/kernel.asm	/^f0105e6d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0105e70	obj/kern/kernel.asm	/^f0105e70:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105e74	obj/kern/kernel.asm	/^f0105e74:	c7 04 24 a0 7d 10 f0 	movl   $0xf0107da0,(%esp)$/;"	l
f0105e7b	obj/kern/kernel.asm	/^f0105e7b:	e8 4b db ff ff       	call   f01039cb <cprintf>$/;"	l
f0105e80	obj/kern/kernel.asm	/^f0105e80:	89 f8                	mov    %edi,%eax$/;"	l
f0105e82	obj/kern/kernel.asm	/^f0105e82:	e8 ee fc ff ff       	call   f0105b75 <pci_scan_bus>$/;"	l
f0105e87	obj/kern/kernel.asm	/^f0105e87:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0105e8c	obj/kern/kernel.asm	/^f0105e8c:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0105e8f	obj/kern/kernel.asm	/^f0105e8f:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0105e92	obj/kern/kernel.asm	/^f0105e92:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0105e95	obj/kern/kernel.asm	/^f0105e95:	89 ec                	mov    %ebp,%esp$/;"	l
f0105e97	obj/kern/kernel.asm	/^f0105e97:	5d                   	pop    %ebp$/;"	l
f0105e98	obj/kern/kernel.asm	/^f0105e98:	c3                   	ret    $/;"	l
f0105e99	obj/kern/kernel.asm	/^f0105e99 <pci_conf_write>:$/;"	l
f0105e99	obj/kern/kernel.asm	/^f0105e99:	55                   	push   %ebp$/;"	l
f0105e9a	obj/kern/kernel.asm	/^f0105e9a:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e9c	obj/kern/kernel.asm	/^f0105e9c:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105e9f	obj/kern/kernel.asm	/^f0105e9f:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
f0105ea2	obj/kern/kernel.asm	/^f0105ea2:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
f0105ea5	obj/kern/kernel.asm	/^f0105ea5:	89 d3                	mov    %edx,%ebx$/;"	l
f0105ea7	obj/kern/kernel.asm	/^f0105ea7:	89 ce                	mov    %ecx,%esi$/;"	l
f0105ea9	obj/kern/kernel.asm	/^f0105ea9:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
f0105eac	obj/kern/kernel.asm	/^f0105eac:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0105eaf	obj/kern/kernel.asm	/^f0105eaf:	8b 00                	mov    (%eax),%eax$/;"	l
f0105eb1	obj/kern/kernel.asm	/^f0105eb1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0105eb4	obj/kern/kernel.asm	/^f0105eb4:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105eb7	obj/kern/kernel.asm	/^f0105eb7:	e8 95 fb ff ff       	call   f0105a51 <pci_conf1_set_addr>$/;"	l
f0105ebc	obj/kern/kernel.asm	/^f0105ebc:	ba fc 0c 00 00       	mov    $0xcfc,%edx$/;"	l
f0105ec1	obj/kern/kernel.asm	/^f0105ec1:	89 f0                	mov    %esi,%eax$/;"	l
f0105ec3	obj/kern/kernel.asm	/^f0105ec3:	ef                   	out    %eax,(%dx)$/;"	l
f0105ec4	obj/kern/kernel.asm	/^f0105ec4:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
f0105ec7	obj/kern/kernel.asm	/^f0105ec7:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
f0105eca	obj/kern/kernel.asm	/^f0105eca:	89 ec                	mov    %ebp,%esp$/;"	l
f0105ecc	obj/kern/kernel.asm	/^f0105ecc:	5d                   	pop    %ebp$/;"	l
f0105ecd	obj/kern/kernel.asm	/^f0105ecd:	c3                   	ret    $/;"	l
f0105ece	obj/kern/kernel.asm	/^f0105ece <pci_func_enable>:$/;"	l
f0105ece	obj/kern/kernel.asm	/^f0105ece:	55                   	push   %ebp$/;"	l
f0105ecf	obj/kern/kernel.asm	/^f0105ecf:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ed1	obj/kern/kernel.asm	/^f0105ed1:	57                   	push   %edi$/;"	l
f0105ed2	obj/kern/kernel.asm	/^f0105ed2:	56                   	push   %esi$/;"	l
f0105ed3	obj/kern/kernel.asm	/^f0105ed3:	53                   	push   %ebx$/;"	l
f0105ed4	obj/kern/kernel.asm	/^f0105ed4:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0105ed7	obj/kern/kernel.asm	/^f0105ed7:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105eda	obj/kern/kernel.asm	/^f0105eda:	b9 07 00 00 00       	mov    $0x7,%ecx$/;"	l
f0105edf	obj/kern/kernel.asm	/^f0105edf:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
f0105ee4	obj/kern/kernel.asm	/^f0105ee4:	89 d8                	mov    %ebx,%eax$/;"	l
f0105ee6	obj/kern/kernel.asm	/^f0105ee6:	e8 ae ff ff ff       	call   f0105e99 <pci_conf_write>$/;"	l
f0105eeb	obj/kern/kernel.asm	/^f0105eeb:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f0105ef0	obj/kern/kernel.asm	/^f0105ef0:	89 f2                	mov    %esi,%edx$/;"	l
f0105ef2	obj/kern/kernel.asm	/^f0105ef2:	89 d8                	mov    %ebx,%eax$/;"	l
f0105ef4	obj/kern/kernel.asm	/^f0105ef4:	e8 54 fc ff ff       	call   f0105b4d <pci_conf_read>$/;"	l
f0105ef9	obj/kern/kernel.asm	/^f0105ef9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105efc	obj/kern/kernel.asm	/^f0105efc:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f0105f01	obj/kern/kernel.asm	/^f0105f01:	89 f2                	mov    %esi,%edx$/;"	l
f0105f03	obj/kern/kernel.asm	/^f0105f03:	89 d8                	mov    %ebx,%eax$/;"	l
f0105f05	obj/kern/kernel.asm	/^f0105f05:	e8 8f ff ff ff       	call   f0105e99 <pci_conf_write>$/;"	l
f0105f0a	obj/kern/kernel.asm	/^f0105f0a:	89 f2                	mov    %esi,%edx$/;"	l
f0105f0c	obj/kern/kernel.asm	/^f0105f0c:	89 d8                	mov    %ebx,%eax$/;"	l
f0105f0e	obj/kern/kernel.asm	/^f0105f0e:	e8 3a fc ff ff       	call   f0105b4d <pci_conf_read>$/;"	l
f0105f13	obj/kern/kernel.asm	/^f0105f13:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
f0105f18	obj/kern/kernel.asm	/^f0105f18:	85 c0                	test   %eax,%eax$/;"	l
f0105f1a	obj/kern/kernel.asm	/^f0105f1a:	0f 84 c4 00 00 00    	je     f0105fe4 <pci_func_enable+0x116>$/;"	l
f0105f20	obj/kern/kernel.asm	/^f0105f20:	8d 56 f0             	lea    -0x10(%esi),%edx$/;"	l
f0105f23	obj/kern/kernel.asm	/^f0105f23:	c1 ea 02             	shr    $0x2,%edx$/;"	l
f0105f26	obj/kern/kernel.asm	/^f0105f26:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0105f29	obj/kern/kernel.asm	/^f0105f29:	a8 01                	test   $0x1,%al$/;"	l
f0105f2b	obj/kern/kernel.asm	/^f0105f2b:	75 2c                	jne    f0105f59 <pci_func_enable+0x8b>$/;"	l
f0105f2d	obj/kern/kernel.asm	/^f0105f2d:	89 c2                	mov    %eax,%edx$/;"	l
f0105f2f	obj/kern/kernel.asm	/^f0105f2f:	83 e2 06             	and    $0x6,%edx$/;"	l
f0105f32	obj/kern/kernel.asm	/^f0105f32:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0105f35	obj/kern/kernel.asm	/^f0105f35:	0f 94 c2             	sete   %dl$/;"	l
f0105f38	obj/kern/kernel.asm	/^f0105f38:	0f b6 fa             	movzbl %dl,%edi$/;"	l
f0105f3b	obj/kern/kernel.asm	/^f0105f3b:	8d 3c bd 04 00 00 00 	lea    0x4(,%edi,4),%edi$/;"	l
f0105f42	obj/kern/kernel.asm	/^f0105f42:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105f45	obj/kern/kernel.asm	/^f0105f45:	89 c2                	mov    %eax,%edx$/;"	l
f0105f47	obj/kern/kernel.asm	/^f0105f47:	f7 da                	neg    %edx$/;"	l
f0105f49	obj/kern/kernel.asm	/^f0105f49:	21 d0                	and    %edx,%eax$/;"	l
f0105f4b	obj/kern/kernel.asm	/^f0105f4b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105f4e	obj/kern/kernel.asm	/^f0105f4e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105f51	obj/kern/kernel.asm	/^f0105f51:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105f54	obj/kern/kernel.asm	/^f0105f54:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105f57	obj/kern/kernel.asm	/^f0105f57:	eb 1a                	jmp    f0105f73 <pci_func_enable+0xa5>$/;"	l
f0105f59	obj/kern/kernel.asm	/^f0105f59:	83 e0 fc             	and    $0xfffffffc,%eax$/;"	l
f0105f5c	obj/kern/kernel.asm	/^f0105f5c:	89 c2                	mov    %eax,%edx$/;"	l
f0105f5e	obj/kern/kernel.asm	/^f0105f5e:	f7 da                	neg    %edx$/;"	l
f0105f60	obj/kern/kernel.asm	/^f0105f60:	21 d0                	and    %edx,%eax$/;"	l
f0105f62	obj/kern/kernel.asm	/^f0105f62:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105f65	obj/kern/kernel.asm	/^f0105f65:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105f68	obj/kern/kernel.asm	/^f0105f68:	83 e2 fc             	and    $0xfffffffc,%edx$/;"	l
f0105f6b	obj/kern/kernel.asm	/^f0105f6b:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
f0105f6e	obj/kern/kernel.asm	/^f0105f6e:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
f0105f73	obj/kern/kernel.asm	/^f0105f73:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0105f76	obj/kern/kernel.asm	/^f0105f76:	89 f2                	mov    %esi,%edx$/;"	l
f0105f78	obj/kern/kernel.asm	/^f0105f78:	89 d8                	mov    %ebx,%eax$/;"	l
f0105f7a	obj/kern/kernel.asm	/^f0105f7a:	e8 1a ff ff ff       	call   f0105e99 <pci_conf_write>$/;"	l
f0105f7f	obj/kern/kernel.asm	/^f0105f7f:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105f82	obj/kern/kernel.asm	/^f0105f82:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105f85	obj/kern/kernel.asm	/^f0105f85:	89 54 83 14          	mov    %edx,0x14(%ebx,%eax,4)$/;"	l
f0105f89	obj/kern/kernel.asm	/^f0105f89:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105f8c	obj/kern/kernel.asm	/^f0105f8c:	89 54 83 2c          	mov    %edx,0x2c(%ebx,%eax,4)$/;"	l
f0105f90	obj/kern/kernel.asm	/^f0105f90:	85 d2                	test   %edx,%edx$/;"	l
f0105f92	obj/kern/kernel.asm	/^f0105f92:	74 50                	je     f0105fe4 <pci_func_enable+0x116>$/;"	l
f0105f94	obj/kern/kernel.asm	/^f0105f94:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
f0105f98	obj/kern/kernel.asm	/^f0105f98:	75 4a                	jne    f0105fe4 <pci_func_enable+0x116>$/;"	l
f0105f9a	obj/kern/kernel.asm	/^f0105f9a:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0105f9d	obj/kern/kernel.asm	/^f0105f9d:	89 54 24 20          	mov    %edx,0x20(%esp)$/;"	l
f0105fa1	obj/kern/kernel.asm	/^f0105fa1:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105fa4	obj/kern/kernel.asm	/^f0105fa4:	89 54 24 1c          	mov    %edx,0x1c(%esp)$/;"	l
f0105fa8	obj/kern/kernel.asm	/^f0105fa8:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0105fab	obj/kern/kernel.asm	/^f0105fab:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0105faf	obj/kern/kernel.asm	/^f0105faf:	89 c2                	mov    %eax,%edx$/;"	l
f0105fb1	obj/kern/kernel.asm	/^f0105fb1:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0105fb4	obj/kern/kernel.asm	/^f0105fb4:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0105fb8	obj/kern/kernel.asm	/^f0105fb8:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f0105fbd	obj/kern/kernel.asm	/^f0105fbd:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0105fc1	obj/kern/kernel.asm	/^f0105fc1:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0105fc4	obj/kern/kernel.asm	/^f0105fc4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105fc8	obj/kern/kernel.asm	/^f0105fc8:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0105fcb	obj/kern/kernel.asm	/^f0105fcb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105fcf	obj/kern/kernel.asm	/^f0105fcf:	8b 03                	mov    (%ebx),%eax$/;"	l
f0105fd1	obj/kern/kernel.asm	/^f0105fd1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0105fd4	obj/kern/kernel.asm	/^f0105fd4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105fd8	obj/kern/kernel.asm	/^f0105fd8:	c7 04 24 d0 7d 10 f0 	movl   $0xf0107dd0,(%esp)$/;"	l
f0105fdf	obj/kern/kernel.asm	/^f0105fdf:	e8 e7 d9 ff ff       	call   f01039cb <cprintf>$/;"	l
f0105fe4	obj/kern/kernel.asm	/^f0105fe4:	01 fe                	add    %edi,%esi$/;"	l
f0105fe6	obj/kern/kernel.asm	/^f0105fe6:	83 fe 27             	cmp    $0x27,%esi$/;"	l
f0105fe9	obj/kern/kernel.asm	/^f0105fe9:	0f 86 01 ff ff ff    	jbe    f0105ef0 <pci_func_enable+0x22>$/;"	l
f0105fef	obj/kern/kernel.asm	/^f0105fef:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0105ff2	obj/kern/kernel.asm	/^f0105ff2:	89 c2                	mov    %eax,%edx$/;"	l
f0105ff4	obj/kern/kernel.asm	/^f0105ff4:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0105ff7	obj/kern/kernel.asm	/^f0105ff7:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0105ffb	obj/kern/kernel.asm	/^f0105ffb:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f0106000	obj/kern/kernel.asm	/^f0106000:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0106004	obj/kern/kernel.asm	/^f0106004:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0106007	obj/kern/kernel.asm	/^f0106007:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010600b	obj/kern/kernel.asm	/^f010600b:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f010600e	obj/kern/kernel.asm	/^f010600e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106012	obj/kern/kernel.asm	/^f0106012:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106014	obj/kern/kernel.asm	/^f0106014:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0106017	obj/kern/kernel.asm	/^f0106017:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010601b	obj/kern/kernel.asm	/^f010601b:	c7 04 24 2c 7e 10 f0 	movl   $0xf0107e2c,(%esp)$/;"	l
f0106022	obj/kern/kernel.asm	/^f0106022:	e8 a4 d9 ff ff       	call   f01039cb <cprintf>$/;"	l
f0106027	obj/kern/kernel.asm	/^f0106027:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f010602a	obj/kern/kernel.asm	/^f010602a:	5b                   	pop    %ebx$/;"	l
f010602b	obj/kern/kernel.asm	/^f010602b:	5e                   	pop    %esi$/;"	l
f010602c	obj/kern/kernel.asm	/^f010602c:	5f                   	pop    %edi$/;"	l
f010602d	obj/kern/kernel.asm	/^f010602d:	5d                   	pop    %ebp$/;"	l
f010602e	obj/kern/kernel.asm	/^f010602e:	c3                   	ret    $/;"	l
f0106030	obj/kern/kernel.asm	/^f0106030 <time_init>:$/;"	l
f0106030	obj/kern/kernel.asm	/^f0106030:	55                   	push   %ebp$/;"	l
f0106031	obj/kern/kernel.asm	/^f0106031:	89 e5                	mov    %esp,%ebp$/;"	l
f0106033	obj/kern/kernel.asm	/^f0106033:	c7 05 54 48 29 f0 00 	movl   $0x0,0xf0294854$/;"	l
f010603a	obj/kern/kernel.asm	/^f010603a:	00 00 00 $/;"	l
f010603d	obj/kern/kernel.asm	/^f010603d:	5d                   	pop    %ebp$/;"	l
f010603e	obj/kern/kernel.asm	/^f010603e:	c3                   	ret    $/;"	l
f010603f	obj/kern/kernel.asm	/^f010603f <time_msec>:$/;"	l
f010603f	obj/kern/kernel.asm	/^f010603f:	55                   	push   %ebp$/;"	l
f0106040	obj/kern/kernel.asm	/^f0106040:	89 e5                	mov    %esp,%ebp$/;"	l
f0106042	obj/kern/kernel.asm	/^f0106042:	a1 54 48 29 f0       	mov    0xf0294854,%eax$/;"	l
f0106047	obj/kern/kernel.asm	/^f0106047:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010604a	obj/kern/kernel.asm	/^f010604a:	01 c0                	add    %eax,%eax$/;"	l
f010604c	obj/kern/kernel.asm	/^f010604c:	5d                   	pop    %ebp$/;"	l
f010604d	obj/kern/kernel.asm	/^f010604d:	c3                   	ret    $/;"	l
f010604e	obj/kern/kernel.asm	/^f010604e <time_tick>:$/;"	l
f010604e	obj/kern/kernel.asm	/^f010604e:	55                   	push   %ebp$/;"	l
f010604f	obj/kern/kernel.asm	/^f010604f:	89 e5                	mov    %esp,%ebp$/;"	l
f0106051	obj/kern/kernel.asm	/^f0106051:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106054	obj/kern/kernel.asm	/^f0106054:	a1 54 48 29 f0       	mov    0xf0294854,%eax$/;"	l
f0106059	obj/kern/kernel.asm	/^f0106059:	83 c0 01             	add    $0x1,%eax$/;"	l
f010605c	obj/kern/kernel.asm	/^f010605c:	a3 54 48 29 f0       	mov    %eax,0xf0294854$/;"	l
f0106061	obj/kern/kernel.asm	/^f0106061:	8d 14 80             	lea    (%eax,%eax,4),%edx$/;"	l
f0106064	obj/kern/kernel.asm	/^f0106064:	01 d2                	add    %edx,%edx$/;"	l
f0106066	obj/kern/kernel.asm	/^f0106066:	39 d0                	cmp    %edx,%eax$/;"	l
f0106068	obj/kern/kernel.asm	/^f0106068:	76 1c                	jbe    f0106086 <time_tick+0x38>$/;"	l
f010606a	obj/kern/kernel.asm	/^f010606a:	c7 44 24 08 34 7f 10 	movl   $0xf0107f34,0x8(%esp)$/;"	l
f0106071	obj/kern/kernel.asm	/^f0106071:	f0 $/;"	l
f0106072	obj/kern/kernel.asm	/^f0106072:	c7 44 24 04 13 00 00 	movl   $0x13,0x4(%esp)$/;"	l
f0106079	obj/kern/kernel.asm	/^f0106079:	00 $/;"	l
f010607a	obj/kern/kernel.asm	/^f010607a:	c7 04 24 4f 7f 10 f0 	movl   $0xf0107f4f,(%esp)$/;"	l
f0106081	obj/kern/kernel.asm	/^f0106081:	e8 ff 9f ff ff       	call   f0100085 <_panic>$/;"	l
f0106086	obj/kern/kernel.asm	/^f0106086:	c9                   	leave  $/;"	l
f0106087	obj/kern/kernel.asm	/^f0106087:	c3                   	ret    $/;"	l
f0106090	obj/kern/kernel.asm	/^f0106090 <__udivdi3>:$/;"	l
f0106090	obj/kern/kernel.asm	/^f0106090:	55                   	push   %ebp$/;"	l
f0106091	obj/kern/kernel.asm	/^f0106091:	89 e5                	mov    %esp,%ebp$/;"	l
f0106093	obj/kern/kernel.asm	/^f0106093:	57                   	push   %edi$/;"	l
f0106094	obj/kern/kernel.asm	/^f0106094:	56                   	push   %esi$/;"	l
f0106095	obj/kern/kernel.asm	/^f0106095:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106098	obj/kern/kernel.asm	/^f0106098:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010609b	obj/kern/kernel.asm	/^f010609b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010609e	obj/kern/kernel.asm	/^f010609e:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01060a1	obj/kern/kernel.asm	/^f01060a1:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01060a4	obj/kern/kernel.asm	/^f01060a4:	85 c0                	test   %eax,%eax$/;"	l
f01060a6	obj/kern/kernel.asm	/^f01060a6:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
f01060a9	obj/kern/kernel.asm	/^f01060a9:	75 35                	jne    f01060e0 <__udivdi3+0x50>$/;"	l
f01060ab	obj/kern/kernel.asm	/^f01060ab:	39 fe                	cmp    %edi,%esi$/;"	l
f01060ad	obj/kern/kernel.asm	/^f01060ad:	77 61                	ja     f0106110 <__udivdi3+0x80>$/;"	l
f01060af	obj/kern/kernel.asm	/^f01060af:	85 f6                	test   %esi,%esi$/;"	l
f01060b1	obj/kern/kernel.asm	/^f01060b1:	75 0b                	jne    f01060be <__udivdi3+0x2e>$/;"	l
f01060b3	obj/kern/kernel.asm	/^f01060b3:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01060b8	obj/kern/kernel.asm	/^f01060b8:	31 d2                	xor    %edx,%edx$/;"	l
f01060ba	obj/kern/kernel.asm	/^f01060ba:	f7 f6                	div    %esi$/;"	l
f01060bc	obj/kern/kernel.asm	/^f01060bc:	89 c6                	mov    %eax,%esi$/;"	l
f01060be	obj/kern/kernel.asm	/^f01060be:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
f01060c1	obj/kern/kernel.asm	/^f01060c1:	31 d2                	xor    %edx,%edx$/;"	l
f01060c3	obj/kern/kernel.asm	/^f01060c3:	89 f8                	mov    %edi,%eax$/;"	l
f01060c5	obj/kern/kernel.asm	/^f01060c5:	f7 f6                	div    %esi$/;"	l
f01060c7	obj/kern/kernel.asm	/^f01060c7:	89 c7                	mov    %eax,%edi$/;"	l
f01060c9	obj/kern/kernel.asm	/^f01060c9:	89 c8                	mov    %ecx,%eax$/;"	l
f01060cb	obj/kern/kernel.asm	/^f01060cb:	f7 f6                	div    %esi$/;"	l
f01060cd	obj/kern/kernel.asm	/^f01060cd:	89 c1                	mov    %eax,%ecx$/;"	l
f01060cf	obj/kern/kernel.asm	/^f01060cf:	89 fa                	mov    %edi,%edx$/;"	l
f01060d1	obj/kern/kernel.asm	/^f01060d1:	89 c8                	mov    %ecx,%eax$/;"	l
f01060d3	obj/kern/kernel.asm	/^f01060d3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01060d6	obj/kern/kernel.asm	/^f01060d6:	5e                   	pop    %esi$/;"	l
f01060d7	obj/kern/kernel.asm	/^f01060d7:	5f                   	pop    %edi$/;"	l
f01060d8	obj/kern/kernel.asm	/^f01060d8:	5d                   	pop    %ebp$/;"	l
f01060d9	obj/kern/kernel.asm	/^f01060d9:	c3                   	ret    $/;"	l
f01060da	obj/kern/kernel.asm	/^f01060da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f01060e0	obj/kern/kernel.asm	/^f01060e0:	39 f8                	cmp    %edi,%eax$/;"	l
f01060e2	obj/kern/kernel.asm	/^f01060e2:	77 1c                	ja     f0106100 <__udivdi3+0x70>$/;"	l
f01060e4	obj/kern/kernel.asm	/^f01060e4:	0f bd d0             	bsr    %eax,%edx$/;"	l
f01060e7	obj/kern/kernel.asm	/^f01060e7:	83 f2 1f             	xor    $0x1f,%edx$/;"	l
f01060ea	obj/kern/kernel.asm	/^f01060ea:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f01060ed	obj/kern/kernel.asm	/^f01060ed:	75 39                	jne    f0106128 <__udivdi3+0x98>$/;"	l
f01060ef	obj/kern/kernel.asm	/^f01060ef:	3b 75 f0             	cmp    -0x10(%ebp),%esi$/;"	l
f01060f2	obj/kern/kernel.asm	/^f01060f2:	0f 86 a0 00 00 00    	jbe    f0106198 <__udivdi3+0x108>$/;"	l
f01060f8	obj/kern/kernel.asm	/^f01060f8:	39 f8                	cmp    %edi,%eax$/;"	l
f01060fa	obj/kern/kernel.asm	/^f01060fa:	0f 82 98 00 00 00    	jb     f0106198 <__udivdi3+0x108>$/;"	l
f0106100	obj/kern/kernel.asm	/^f0106100:	31 ff                	xor    %edi,%edi$/;"	l
f0106102	obj/kern/kernel.asm	/^f0106102:	31 c9                	xor    %ecx,%ecx$/;"	l
f0106104	obj/kern/kernel.asm	/^f0106104:	89 c8                	mov    %ecx,%eax$/;"	l
f0106106	obj/kern/kernel.asm	/^f0106106:	89 fa                	mov    %edi,%edx$/;"	l
f0106108	obj/kern/kernel.asm	/^f0106108:	83 c4 10             	add    $0x10,%esp$/;"	l
f010610b	obj/kern/kernel.asm	/^f010610b:	5e                   	pop    %esi$/;"	l
f010610c	obj/kern/kernel.asm	/^f010610c:	5f                   	pop    %edi$/;"	l
f010610d	obj/kern/kernel.asm	/^f010610d:	5d                   	pop    %ebp$/;"	l
f010610e	obj/kern/kernel.asm	/^f010610e:	c3                   	ret    $/;"	l
f010610f	obj/kern/kernel.asm	/^f010610f:	90                   	nop$/;"	l
f0106110	obj/kern/kernel.asm	/^f0106110:	89 d1                	mov    %edx,%ecx$/;"	l
f0106112	obj/kern/kernel.asm	/^f0106112:	89 fa                	mov    %edi,%edx$/;"	l
f0106114	obj/kern/kernel.asm	/^f0106114:	89 c8                	mov    %ecx,%eax$/;"	l
f0106116	obj/kern/kernel.asm	/^f0106116:	31 ff                	xor    %edi,%edi$/;"	l
f0106118	obj/kern/kernel.asm	/^f0106118:	f7 f6                	div    %esi$/;"	l
f010611a	obj/kern/kernel.asm	/^f010611a:	89 c1                	mov    %eax,%ecx$/;"	l
f010611c	obj/kern/kernel.asm	/^f010611c:	89 fa                	mov    %edi,%edx$/;"	l
f010611e	obj/kern/kernel.asm	/^f010611e:	89 c8                	mov    %ecx,%eax$/;"	l
f0106120	obj/kern/kernel.asm	/^f0106120:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106123	obj/kern/kernel.asm	/^f0106123:	5e                   	pop    %esi$/;"	l
f0106124	obj/kern/kernel.asm	/^f0106124:	5f                   	pop    %edi$/;"	l
f0106125	obj/kern/kernel.asm	/^f0106125:	5d                   	pop    %ebp$/;"	l
f0106126	obj/kern/kernel.asm	/^f0106126:	c3                   	ret    $/;"	l
f0106127	obj/kern/kernel.asm	/^f0106127:	90                   	nop$/;"	l
f0106128	obj/kern/kernel.asm	/^f0106128:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx$/;"	l
f010612c	obj/kern/kernel.asm	/^f010612c:	89 f2                	mov    %esi,%edx$/;"	l
f010612e	obj/kern/kernel.asm	/^f010612e:	d3 e0                	shl    %cl,%eax$/;"	d
f0106130	obj/kern/kernel.asm	/^f0106130:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0106133	obj/kern/kernel.asm	/^f0106133:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106138	obj/kern/kernel.asm	/^f0106138:	2b 45 f4             	sub    -0xc(%ebp),%eax$/;"	l
f010613b	obj/kern/kernel.asm	/^f010613b:	89 c1                	mov    %eax,%ecx$/;"	l
f010613d	obj/kern/kernel.asm	/^f010613d:	d3 ea                	shr    %cl,%edx$/;"	d
f010613f	obj/kern/kernel.asm	/^f010613f:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx$/;"	l
f0106143	obj/kern/kernel.asm	/^f0106143:	0b 55 ec             	or     -0x14(%ebp),%edx$/;"	l
f0106146	obj/kern/kernel.asm	/^f0106146:	d3 e6                	shl    %cl,%esi$/;"	d
f0106148	obj/kern/kernel.asm	/^f0106148:	89 c1                	mov    %eax,%ecx$/;"	l
f010614a	obj/kern/kernel.asm	/^f010614a:	89 75 e8             	mov    %esi,-0x18(%ebp)$/;"	l
f010614d	obj/kern/kernel.asm	/^f010614d:	89 fe                	mov    %edi,%esi$/;"	l
f010614f	obj/kern/kernel.asm	/^f010614f:	d3 ee                	shr    %cl,%esi$/;"	d
f0106151	obj/kern/kernel.asm	/^f0106151:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx$/;"	l
f0106155	obj/kern/kernel.asm	/^f0106155:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
f0106158	obj/kern/kernel.asm	/^f0106158:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010615b	obj/kern/kernel.asm	/^f010615b:	d3 e7                	shl    %cl,%edi$/;"	d
f010615d	obj/kern/kernel.asm	/^f010615d:	89 c1                	mov    %eax,%ecx$/;"	l
f010615f	obj/kern/kernel.asm	/^f010615f:	d3 ea                	shr    %cl,%edx$/;"	d
f0106161	obj/kern/kernel.asm	/^f0106161:	09 d7                	or     %edx,%edi$/;"	l
f0106163	obj/kern/kernel.asm	/^f0106163:	89 f2                	mov    %esi,%edx$/;"	l
f0106165	obj/kern/kernel.asm	/^f0106165:	89 f8                	mov    %edi,%eax$/;"	l
f0106167	obj/kern/kernel.asm	/^f0106167:	f7 75 ec             	divl   -0x14(%ebp)$/;"	l
f010616a	obj/kern/kernel.asm	/^f010616a:	89 d6                	mov    %edx,%esi$/;"	l
f010616c	obj/kern/kernel.asm	/^f010616c:	89 c7                	mov    %eax,%edi$/;"	l
f010616e	obj/kern/kernel.asm	/^f010616e:	f7 65 e8             	mull   -0x18(%ebp)$/;"	l
f0106171	obj/kern/kernel.asm	/^f0106171:	39 d6                	cmp    %edx,%esi$/;"	l
f0106173	obj/kern/kernel.asm	/^f0106173:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
f0106176	obj/kern/kernel.asm	/^f0106176:	72 30                	jb     f01061a8 <__udivdi3+0x118>$/;"	l
f0106178	obj/kern/kernel.asm	/^f0106178:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010617b	obj/kern/kernel.asm	/^f010617b:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx$/;"	l
f010617f	obj/kern/kernel.asm	/^f010617f:	d3 e2                	shl    %cl,%edx$/;"	d
f0106181	obj/kern/kernel.asm	/^f0106181:	39 c2                	cmp    %eax,%edx$/;"	l
f0106183	obj/kern/kernel.asm	/^f0106183:	73 05                	jae    f010618a <__udivdi3+0xfa>$/;"	l
f0106185	obj/kern/kernel.asm	/^f0106185:	3b 75 ec             	cmp    -0x14(%ebp),%esi$/;"	l
f0106188	obj/kern/kernel.asm	/^f0106188:	74 1e                	je     f01061a8 <__udivdi3+0x118>$/;"	l
f010618a	obj/kern/kernel.asm	/^f010618a:	89 f9                	mov    %edi,%ecx$/;"	l
f010618c	obj/kern/kernel.asm	/^f010618c:	31 ff                	xor    %edi,%edi$/;"	l
f010618e	obj/kern/kernel.asm	/^f010618e:	e9 71 ff ff ff       	jmp    f0106104 <__udivdi3+0x74>$/;"	l
f0106193	obj/kern/kernel.asm	/^f0106193:	90                   	nop$/;"	l
f0106194	obj/kern/kernel.asm	/^f0106194:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106198	obj/kern/kernel.asm	/^f0106198:	31 ff                	xor    %edi,%edi$/;"	l
f010619a	obj/kern/kernel.asm	/^f010619a:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f010619f	obj/kern/kernel.asm	/^f010619f:	e9 60 ff ff ff       	jmp    f0106104 <__udivdi3+0x74>$/;"	l
f01061a4	obj/kern/kernel.asm	/^f01061a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01061a8	obj/kern/kernel.asm	/^f01061a8:	8d 4f ff             	lea    -0x1(%edi),%ecx$/;"	l
f01061ab	obj/kern/kernel.asm	/^f01061ab:	31 ff                	xor    %edi,%edi$/;"	l
f01061ad	obj/kern/kernel.asm	/^f01061ad:	89 c8                	mov    %ecx,%eax$/;"	l
f01061af	obj/kern/kernel.asm	/^f01061af:	89 fa                	mov    %edi,%edx$/;"	l
f01061b1	obj/kern/kernel.asm	/^f01061b1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01061b4	obj/kern/kernel.asm	/^f01061b4:	5e                   	pop    %esi$/;"	l
f01061b5	obj/kern/kernel.asm	/^f01061b5:	5f                   	pop    %edi$/;"	l
f01061b6	obj/kern/kernel.asm	/^f01061b6:	5d                   	pop    %ebp$/;"	l
f01061b7	obj/kern/kernel.asm	/^f01061b7:	c3                   	ret    $/;"	l
f01061c0	obj/kern/kernel.asm	/^f01061c0 <__umoddi3>:$/;"	l
f01061c0	obj/kern/kernel.asm	/^f01061c0:	55                   	push   %ebp$/;"	l
f01061c1	obj/kern/kernel.asm	/^f01061c1:	89 e5                	mov    %esp,%ebp$/;"	l
f01061c3	obj/kern/kernel.asm	/^f01061c3:	57                   	push   %edi$/;"	l
f01061c4	obj/kern/kernel.asm	/^f01061c4:	56                   	push   %esi$/;"	l
f01061c5	obj/kern/kernel.asm	/^f01061c5:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01061c8	obj/kern/kernel.asm	/^f01061c8:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f01061cb	obj/kern/kernel.asm	/^f01061cb:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01061ce	obj/kern/kernel.asm	/^f01061ce:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01061d1	obj/kern/kernel.asm	/^f01061d1:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01061d4	obj/kern/kernel.asm	/^f01061d4:	85 d2                	test   %edx,%edx$/;"	l
f01061d6	obj/kern/kernel.asm	/^f01061d6:	89 c8                	mov    %ecx,%eax$/;"	l
f01061d8	obj/kern/kernel.asm	/^f01061d8:	89 4d f4             	mov    %ecx,-0xc(%ebp)$/;"	l
f01061db	obj/kern/kernel.asm	/^f01061db:	75 13                	jne    f01061f0 <__umoddi3+0x30>$/;"	l
f01061dd	obj/kern/kernel.asm	/^f01061dd:	39 f7                	cmp    %esi,%edi$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	76 3f                	jbe    f0106220 <__umoddi3+0x60>$/;"	l
f01061e1	obj/kern/kernel.asm	/^f01061e1:	89 f2                	mov    %esi,%edx$/;"	l
f01061e3	obj/kern/kernel.asm	/^f01061e3:	f7 f7                	div    %edi$/;"	l
f01061e5	obj/kern/kernel.asm	/^f01061e5:	89 d0                	mov    %edx,%eax$/;"	l
f01061e7	obj/kern/kernel.asm	/^f01061e7:	31 d2                	xor    %edx,%edx$/;"	l
f01061e9	obj/kern/kernel.asm	/^f01061e9:	83 c4 20             	add    $0x20,%esp$/;"	l
f01061ec	obj/kern/kernel.asm	/^f01061ec:	5e                   	pop    %esi$/;"	l
f01061ed	obj/kern/kernel.asm	/^f01061ed:	5f                   	pop    %edi$/;"	l
f01061ee	obj/kern/kernel.asm	/^f01061ee:	5d                   	pop    %ebp$/;"	l
f01061ef	obj/kern/kernel.asm	/^f01061ef:	c3                   	ret    $/;"	l
f01061f0	obj/kern/kernel.asm	/^f01061f0:	39 f2                	cmp    %esi,%edx$/;"	l
f01061f2	obj/kern/kernel.asm	/^f01061f2:	77 4c                	ja     f0106240 <__umoddi3+0x80>$/;"	l
f01061f4	obj/kern/kernel.asm	/^f01061f4:	0f bd ca             	bsr    %edx,%ecx$/;"	l
f01061f7	obj/kern/kernel.asm	/^f01061f7:	83 f1 1f             	xor    $0x1f,%ecx$/;"	l
f01061fa	obj/kern/kernel.asm	/^f01061fa:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f01061fd	obj/kern/kernel.asm	/^f01061fd:	75 51                	jne    f0106250 <__umoddi3+0x90>$/;"	l
f01061ff	obj/kern/kernel.asm	/^f01061ff:	3b 7d f4             	cmp    -0xc(%ebp),%edi$/;"	l
f0106202	obj/kern/kernel.asm	/^f0106202:	0f 87 e0 00 00 00    	ja     f01062e8 <__umoddi3+0x128>$/;"	l
f0106208	obj/kern/kernel.asm	/^f0106208:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010620b	obj/kern/kernel.asm	/^f010620b:	29 f8                	sub    %edi,%eax$/;"	l
f010620d	obj/kern/kernel.asm	/^f010620d:	19 d6                	sbb    %edx,%esi$/;"	l
f010620f	obj/kern/kernel.asm	/^f010620f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0106212	obj/kern/kernel.asm	/^f0106212:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106215	obj/kern/kernel.asm	/^f0106215:	89 f2                	mov    %esi,%edx$/;"	l
f0106217	obj/kern/kernel.asm	/^f0106217:	83 c4 20             	add    $0x20,%esp$/;"	l
f010621a	obj/kern/kernel.asm	/^f010621a:	5e                   	pop    %esi$/;"	l
f010621b	obj/kern/kernel.asm	/^f010621b:	5f                   	pop    %edi$/;"	l
f010621c	obj/kern/kernel.asm	/^f010621c:	5d                   	pop    %ebp$/;"	l
f010621d	obj/kern/kernel.asm	/^f010621d:	c3                   	ret    $/;"	l
f010621e	obj/kern/kernel.asm	/^f010621e:	66 90                	xchg   %ax,%ax$/;"	l
f0106220	obj/kern/kernel.asm	/^f0106220:	85 ff                	test   %edi,%edi$/;"	l
f0106222	obj/kern/kernel.asm	/^f0106222:	75 0b                	jne    f010622f <__umoddi3+0x6f>$/;"	l
f0106224	obj/kern/kernel.asm	/^f0106224:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106229	obj/kern/kernel.asm	/^f0106229:	31 d2                	xor    %edx,%edx$/;"	l
f010622b	obj/kern/kernel.asm	/^f010622b:	f7 f7                	div    %edi$/;"	l
f010622d	obj/kern/kernel.asm	/^f010622d:	89 c7                	mov    %eax,%edi$/;"	l
f010622f	obj/kern/kernel.asm	/^f010622f:	89 f0                	mov    %esi,%eax$/;"	l
f0106231	obj/kern/kernel.asm	/^f0106231:	31 d2                	xor    %edx,%edx$/;"	l
f0106233	obj/kern/kernel.asm	/^f0106233:	f7 f7                	div    %edi$/;"	l
f0106235	obj/kern/kernel.asm	/^f0106235:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106238	obj/kern/kernel.asm	/^f0106238:	f7 f7                	div    %edi$/;"	l
f010623a	obj/kern/kernel.asm	/^f010623a:	eb a9                	jmp    f01061e5 <__umoddi3+0x25>$/;"	l
f010623c	obj/kern/kernel.asm	/^f010623c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106240	obj/kern/kernel.asm	/^f0106240:	89 c8                	mov    %ecx,%eax$/;"	l
f0106242	obj/kern/kernel.asm	/^f0106242:	89 f2                	mov    %esi,%edx$/;"	l
f0106244	obj/kern/kernel.asm	/^f0106244:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106247	obj/kern/kernel.asm	/^f0106247:	5e                   	pop    %esi$/;"	l
f0106248	obj/kern/kernel.asm	/^f0106248:	5f                   	pop    %edi$/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249:	5d                   	pop    %ebp$/;"	l
f010624a	obj/kern/kernel.asm	/^f010624a:	c3                   	ret    $/;"	l
f010624b	obj/kern/kernel.asm	/^f010624b:	90                   	nop$/;"	l
f010624c	obj/kern/kernel.asm	/^f010624c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106250	obj/kern/kernel.asm	/^f0106250:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f0106254	obj/kern/kernel.asm	/^f0106254:	d3 e2                	shl    %cl,%edx$/;"	d
f0106256	obj/kern/kernel.asm	/^f0106256:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0106259	obj/kern/kernel.asm	/^f0106259:	ba 20 00 00 00       	mov    $0x20,%edx$/;"	l
f010625e	obj/kern/kernel.asm	/^f010625e:	2b 55 f0             	sub    -0x10(%ebp),%edx$/;"	l
f0106261	obj/kern/kernel.asm	/^f0106261:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
f0106264	obj/kern/kernel.asm	/^f0106264:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f0106268	obj/kern/kernel.asm	/^f0106268:	89 fa                	mov    %edi,%edx$/;"	l
f010626a	obj/kern/kernel.asm	/^f010626a:	d3 ea                	shr    %cl,%edx$/;"	d
f010626c	obj/kern/kernel.asm	/^f010626c:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f0106270	obj/kern/kernel.asm	/^f0106270:	0b 55 f4             	or     -0xc(%ebp),%edx$/;"	l
f0106273	obj/kern/kernel.asm	/^f0106273:	d3 e7                	shl    %cl,%edi$/;"	d
f0106275	obj/kern/kernel.asm	/^f0106275:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f0106279	obj/kern/kernel.asm	/^f0106279:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f010627c	obj/kern/kernel.asm	/^f010627c:	89 f2                	mov    %esi,%edx$/;"	l
f010627e	obj/kern/kernel.asm	/^f010627e:	89 7d e8             	mov    %edi,-0x18(%ebp)$/;"	l
f0106281	obj/kern/kernel.asm	/^f0106281:	89 c7                	mov    %eax,%edi$/;"	l
f0106283	obj/kern/kernel.asm	/^f0106283:	d3 ea                	shr    %cl,%edx$/;"	d
f0106285	obj/kern/kernel.asm	/^f0106285:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f0106289	obj/kern/kernel.asm	/^f0106289:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f010628c	obj/kern/kernel.asm	/^f010628c:	89 c2                	mov    %eax,%edx$/;"	l
f010628e	obj/kern/kernel.asm	/^f010628e:	d3 e6                	shl    %cl,%esi$/;"	d
f0106290	obj/kern/kernel.asm	/^f0106290:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f0106294	obj/kern/kernel.asm	/^f0106294:	d3 ea                	shr    %cl,%edx$/;"	d
f0106296	obj/kern/kernel.asm	/^f0106296:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f010629a	obj/kern/kernel.asm	/^f010629a:	09 d6                	or     %edx,%esi$/;"	l
f010629c	obj/kern/kernel.asm	/^f010629c:	89 f0                	mov    %esi,%eax$/;"	l
f010629e	obj/kern/kernel.asm	/^f010629e:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01062a1	obj/kern/kernel.asm	/^f01062a1:	d3 e7                	shl    %cl,%edi$/;"	d
f01062a3	obj/kern/kernel.asm	/^f01062a3:	89 f2                	mov    %esi,%edx$/;"	l
f01062a5	obj/kern/kernel.asm	/^f01062a5:	f7 75 f4             	divl   -0xc(%ebp)$/;"	l
f01062a8	obj/kern/kernel.asm	/^f01062a8:	89 d6                	mov    %edx,%esi$/;"	l
f01062aa	obj/kern/kernel.asm	/^f01062aa:	f7 65 e8             	mull   -0x18(%ebp)$/;"	l
f01062ad	obj/kern/kernel.asm	/^f01062ad:	39 d6                	cmp    %edx,%esi$/;"	l
f01062af	obj/kern/kernel.asm	/^f01062af:	72 2b                	jb     f01062dc <__umoddi3+0x11c>$/;"	l
f01062b1	obj/kern/kernel.asm	/^f01062b1:	39 c7                	cmp    %eax,%edi$/;"	l
f01062b3	obj/kern/kernel.asm	/^f01062b3:	72 23                	jb     f01062d8 <__umoddi3+0x118>$/;"	l
f01062b5	obj/kern/kernel.asm	/^f01062b5:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f01062b9	obj/kern/kernel.asm	/^f01062b9:	29 c7                	sub    %eax,%edi$/;"	l
f01062bb	obj/kern/kernel.asm	/^f01062bb:	19 d6                	sbb    %edx,%esi$/;"	l
f01062bd	obj/kern/kernel.asm	/^f01062bd:	89 f0                	mov    %esi,%eax$/;"	l
f01062bf	obj/kern/kernel.asm	/^f01062bf:	89 f2                	mov    %esi,%edx$/;"	l
f01062c1	obj/kern/kernel.asm	/^f01062c1:	d3 ef                	shr    %cl,%edi$/;"	d
f01062c3	obj/kern/kernel.asm	/^f01062c3:	0f b6 4d ec          	movzbl -0x14(%ebp),%ecx$/;"	l
f01062c7	obj/kern/kernel.asm	/^f01062c7:	d3 e0                	shl    %cl,%eax$/;"	d
f01062c9	obj/kern/kernel.asm	/^f01062c9:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx$/;"	l
f01062cd	obj/kern/kernel.asm	/^f01062cd:	09 f8                	or     %edi,%eax$/;"	l
f01062cf	obj/kern/kernel.asm	/^f01062cf:	d3 ea                	shr    %cl,%edx$/;"	d
f01062d1	obj/kern/kernel.asm	/^f01062d1:	83 c4 20             	add    $0x20,%esp$/;"	l
f01062d4	obj/kern/kernel.asm	/^f01062d4:	5e                   	pop    %esi$/;"	l
f01062d5	obj/kern/kernel.asm	/^f01062d5:	5f                   	pop    %edi$/;"	l
f01062d6	obj/kern/kernel.asm	/^f01062d6:	5d                   	pop    %ebp$/;"	l
f01062d7	obj/kern/kernel.asm	/^f01062d7:	c3                   	ret    $/;"	l
f01062d8	obj/kern/kernel.asm	/^f01062d8:	39 d6                	cmp    %edx,%esi$/;"	l
f01062da	obj/kern/kernel.asm	/^f01062da:	75 d9                	jne    f01062b5 <__umoddi3+0xf5>$/;"	l
f01062dc	obj/kern/kernel.asm	/^f01062dc:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
f01062df	obj/kern/kernel.asm	/^f01062df:	1b 55 f4             	sbb    -0xc(%ebp),%edx$/;"	l
f01062e2	obj/kern/kernel.asm	/^f01062e2:	eb d1                	jmp    f01062b5 <__umoddi3+0xf5>$/;"	l
f01062e4	obj/kern/kernel.asm	/^f01062e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01062e8	obj/kern/kernel.asm	/^f01062e8:	39 f2                	cmp    %esi,%edx$/;"	l
f01062ea	obj/kern/kernel.asm	/^f01062ea:	0f 82 18 ff ff ff    	jb     f0106208 <__umoddi3+0x48>$/;"	l
f01062f0	obj/kern/kernel.asm	/^f01062f0:	e9 1d ff ff ff       	jmp    f0106212 <__umoddi3+0x52>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
fail	grade-functions.sh	/^fail () {$/;"	f
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
fcstab	net/lwip/netif/ppp/ppp.c	/^static const u_short fcstab[256] = {$/;"	v	file:
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	net/lwip/netif/ppp/ppp.c	/^  sio_fd_t fd;                  \/* File device ID of port. *\/$/;"	m	struct:PPPControl_s	file:
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/ns.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/ns.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testinput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testinput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testoutput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testoutput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echosrv.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echosrv.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echotest.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echotest.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/httpd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/httpd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = -1;$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testtime.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testtime.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/writemotd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/writemotd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd2sockid	lib/sockets.c	/^fd2sockid(int fd)$/;"	f	file:
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_bits	net/lwip/include/lwip/sockets.h	/^          unsigned char fd_bits [(FD_SETSIZE+7)\/8];$/;"	m	struct:fd_set
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon1	typeref:struct:Fd::__anon1::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fd_set	net/lwip/include/lwip/sockets.h	/^        } fd_set;$/;"	t	typeref:struct:fd_set
fd_set	net/lwip/include/lwip/sockets.h	/^  typedef struct fd_set {$/;"	s
fd_sock	inc/fd.h	/^		struct FdSock fd_sock;$/;"	m	union:Fd::__anon1	typeref:struct:Fd::__anon1::FdSock
fdtab	lib/entry.S	/^fdtab:$/;"	l
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN + DHCP_SNAME_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_SNAME_LEN;$/;"	d
file	net/lwip/core/memp.c	/^  const char *file;$/;"	m	struct:memp	file:
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
file_remove	fs/fs.c	/^file_remove(const char *path)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
find_entry	net/lwip/netif/etharp.c	/^find_entry(struct ip_addr *ipaddr, u8_t flags, struct netif *netif)$/;"	f	file:
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finished	net/lwip/netif/ppp/fsm.h	/^  void (*finished)(fsm*);                           \/* Called when we don't want the lower layer *\/$/;"	m	struct:fsm_callbacks
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
first	obj/net/ns.asm	/^        first = 0;$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flag	obj/kern/kernel.asm	/^		flag = (inb(io_base))>>6;$/;"	d
flags	net/lwip/api/sockets.c	/^  u16_t flags;$/;"	m	struct:lwip_socket	file:
flags	net/lwip/core/tcp_in.c	/^static u8_t flags;$/;"	v	file:
flags	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t flags;$/;"	m	struct:ip_reassdata
flags	net/lwip/include/lwip/netif.h	/^  u8_t flags;$/;"	m	struct:netif
flags	net/lwip/include/lwip/pbuf.h	/^  u8_t flags;$/;"	m	struct:pbuf
flags	net/lwip/include/lwip/tcp.h	/^  u8_t flags;$/;"	m	struct:tcp_pcb
flags	net/lwip/include/lwip/udp.h	/^  u8_t flags;$/;"	m	struct:udp_pcb
flags	net/lwip/netif/ppp/fsm.h	/^  int flags;                       \/* Contains option bits *\/$/;"	m	struct:fsm
flags	net/lwip/netif/ppp/vj.h	/^  u_short flags;$/;"	m	struct:vjcompress
flags	obj/net/ns.asm	/^  flags = TCPH_FLAGS(tcphdr) & TCP_FLAGS;$/;"	d
flags1	net/lwip/core/dns.c	/^  u8_t flags1;$/;"	m	struct:dns_hdr	file:
flags2	net/lwip/core/dns.c	/^  u8_t flags2;$/;"	m	struct:dns_hdr	file:
flow1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
flow2	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t flow2;$/;"	m	struct:ip_hdr
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f
for_us	obj/net/ns.asm	/^    for_us = 0;$/;"	d
for_us	obj/net/ns.asm	/^    for_us = ip_addr_cmp(&dipaddr, &(netif->ip_addr));$/;"	d
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
found	net/lwip/core/dns.c	/^  dns_found_callback found;$/;"	m	struct:dns_table_entry	file:
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
fraghdr	obj/net/ns.asm	/^    fraghdr = (struct ip_hdr*)(ipr->p->payload);$/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)new_p->payload; $/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)p->payload;$/;"	d
free	lib/malloc.c	/^free(void *v)$/;"	f
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
free_etharp_q	net/lwip/netif/etharp.c	/^free_etharp_q(struct etharp_q_entry *q)$/;"	f	file:
free_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t free_msg;$/;"	m	struct:sys_mbox_entry	file:
free_page	kern/monitor.c	/^int free_page(int argc, char**argv, struct Trapframe *tf)$/;"	f
free_pbuf_and_return	obj/net/ns.asm	/^free_pbuf_and_return:$/;"	l
freeaddrinfo	net/lwip/include/lwip/netdb.h	104;"	d
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_mbox_entry	file:
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_sem_entry	file:
freepbuf	obj/net/ns.asm	/^freepbuf:$/;"	l
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/entry.S	/^fsipcbuf:$/;"	l
fsm	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm {$/;"	s
fsm	net/lwip/netif/ppp/fsm.h	/^} fsm;$/;"	t	typeref:struct:fsm
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm_callbacks {$/;"	s
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^} fsm_callbacks;$/;"	t	typeref:struct:fsm_callbacks
fsm_close	net/lwip/netif/ppp/fsm.c	/^fsm_close(fsm *f, char *reason)$/;"	f
fsm_init	net/lwip/netif/ppp/fsm.c	/^fsm_init(fsm *f)$/;"	f
fsm_input	net/lwip/netif/ppp/fsm.c	/^fsm_input(fsm *f, u_char *inpacket, int l)$/;"	f
fsm_lowerdown	net/lwip/netif/ppp/fsm.c	/^fsm_lowerdown(fsm *f)$/;"	f
fsm_lowerup	net/lwip/netif/ppp/fsm.c	/^fsm_lowerup(fsm *f)$/;"	f
fsm_open	net/lwip/netif/ppp/fsm.c	/^fsm_open(fsm *f)$/;"	f
fsm_protreject	net/lwip/netif/ppp/fsm.c	/^fsm_protreject(fsm *f)$/;"	f
fsm_rcoderej	net/lwip/netif/ppp/fsm.c	/^fsm_rcoderej(fsm *f, u_char *inp, int len)$/;"	f	file:
fsm_rconfack	net/lwip/netif/ppp/fsm.c	/^fsm_rconfack(fsm *f, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfnakrej	net/lwip/netif/ppp/fsm.c	/^fsm_rconfnakrej(fsm *f, int code, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_rconfreq(fsm *f, u_char id, u_char *inp, int len)$/;"	f	file:
fsm_rtermack	net/lwip/netif/ppp/fsm.c	/^fsm_rtermack(fsm *f)$/;"	f	file:
fsm_rtermreq	net/lwip/netif/ppp/fsm.c	/^fsm_rtermreq(fsm *f, int id, u_char *p, int len)$/;"	f	file:
fsm_sconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_sconfreq(fsm *f, int retransmit)$/;"	f	file:
fsm_sdata	net/lwip/netif/ppp/fsm.c	/^fsm_sdata( fsm *f, u_char code, u_char id, u_char *data, int datalen)$/;"	f
fsm_timeout	net/lwip/netif/ppp/fsm.c	/^fsm_timeout(void *arg)$/;"	f	file:
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
func	kern/pci.h	/^    uint32_t func;$/;"	m	struct:pci_func
func	net/lwip/jos/arch/sys_arch.c	/^    void (*func)(void *arg);$/;"	m	struct:lwip_thread	file:
func	net/serv.c	/^	void (*func)(void);$/;"	m	struct:timer_thread	file:
function	net/lwip/include/lwip/api_msg.h	/^  void (* function)(struct api_msg_msg *msg);$/;"	m	struct:api_msg
function	net/lwip/include/lwip/netifapi.h	/^  void (* function)(struct netifapi_msg_msg *msg);$/;"	m	struct:netifapi_msg
fw	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER fw;               \/* Forwarded packets. *\/$/;"	m	struct:stats_proto
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_ss	inc/mmu.h	/^	unsigned gd_ss : 16;         \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/pmap.c	/^struct Segdesc gdt[] =$/;"	v	typeref:struct:Segdesc
gdt_pd	kern/pmap.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gen	net/lwip/jos/arch/sys_arch.c	/^    int gen;$/;"	m	struct:sys_sem_entry	file:
gen_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t gen_trap;$/;"	m	struct:snmp_msg_trap
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_buffer	net/serv.c	/^get_buffer(void) {$/;"	f	file:
get_idle_time	net/lwip/netif/ppp/ppp.c	/^get_idle_time(int u, struct ppp_idle *ip)$/;"	f
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_array_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_list_rootnode
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_ram_array_node
get_object_def_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_a)(u8_t rid, u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_pc)(u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_object_def_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_q)(void* addr_inf, u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_objid	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_objid)(void* addr_inf, u8_t level, u16_t idx, s32_t *sub_id);$/;"	m	struct:mib_external_node
get_pap_passwd	net/lwip/netif/ppp/auth.c	/^get_pap_passwd(int unit, char *user, char *passwd)$/;"	f	file:
get_readIndex_dma_buffer	kern/e100.c	/^static int get_readIndex_dma_buffer()$/;"	f	file:
get_secret	net/lwip/netif/ppp/auth.c	/^int get_secret( int unit, char *client, char *server, char *secret, int *secret_len, int save_addrs)$/;"	f
get_socket	net/lwip/api/sockets.c	/^get_socket(int s)$/;"	f	file:
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
get_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
get_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
get_writeIndex_dma_buffer	kern/e100.c	/^static int get_writeIndex_dma_buffer()$/;"	f	file:
getaddrinfo	net/lwip/include/lwip/netdb.h	105;"	d
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
gethostbyname	net/lwip/include/lwip/netdb.h	101;"	d
gethostbyname_r	net/lwip/include/lwip/netdb.h	102;"	d
gethostbyname_r_helper	net/lwip/api/netdb.c	/^struct gethostbyname_r_helper {$/;"	s	file:
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getip_hl	net/lwip/netif/ppp/vj.c	51;"	d	file:
getip_hl	net/lwip/netif/ppp/vj.c	54;"	d	file:
getpeername	net/lwip/include/lwip/sockets.h	332;"	d
getsockname	net/lwip/include/lwip/sockets.h	331;"	d
getsockopt	net/lwip/include/lwip/sockets.h	334;"	d
getth_off	net/lwip/netif/ppp/vj.c	52;"	d	file:
getth_off	net/lwip/netif/ppp/vj.c	55;"	d	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
group_address	net/lwip/include/ipv4/lwip/igmp.h	/^  struct ip_addr     group_address;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::ip_addr
group_query_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER group_query_rxed; \/* *\/$/;"	m	struct:stats_igmp
group_state	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               group_state;$/;"	m	struct:igmp_group
grow	obj/net/ns.asm	/^  grow = new_len - p->tot_len;$/;"	d
gtrplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t gtrplen;$/;"	m	struct:snmp_trap_header_lengths
gtrplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t gtrplenlen;$/;"	m	struct:snmp_trap_header_lengths
gw	net/lwip/include/lwip/netif.h	/^  struct ip_addr gw;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
gw	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *gw;$/;"	m	struct:netifapi_msg_msg::__anon15::__anon16	typeref:struct:netifapi_msg_msg::__anon15::__anon16::ip_addr
h	net/lwip/include/lwip/sys.h	/^  sys_timeout_handler h;$/;"	m	struct:sys_timeo
h	net/lwip/include/lwip/tcpip.h	/^      sys_timeout_handler h;$/;"	m	struct:tcpip_msg::__anon28::__anon31
h	obj/net/ns.asm	/^      h   = tmptimeout->h;$/;"	d
h	obj/net/ns.asm	/^      h = tmptimeout->h;$/;"	d
h_addr	net/lwip/include/lwip/netdb.h	71;"	d
h_addr_list	net/lwip/include/lwip/netdb.h	/^    char **h_addr_list; \/* A pointer to an array of pointers to network addresses (in$/;"	m	struct:hostent
h_addrtype	net/lwip/include/lwip/netdb.h	/^    int    h_addrtype;  \/* Address type. *\/$/;"	m	struct:hostent
h_aliases	net/lwip/include/lwip/netdb.h	/^    char **h_aliases;   \/* A pointer to an array of pointers to alternative host names,$/;"	m	struct:hostent
h_errno	net/lwip/api/netdb.c	/^int h_errno;$/;"	v
h_length	net/lwip/include/lwip/netdb.h	/^    int    h_length;    \/* The length, in bytes, of the address. *\/$/;"	m	struct:hostent
h_name	net/lwip/include/lwip/netdb.h	/^    char  *h_name;      \/* Official name of the host. *\/$/;"	m	struct:hostent
handle_client	user/echosrv.c	/^handle_client(int sock)$/;"	f
handle_client	user/httpd.c	/^handle_client(int sock)$/;"	f	file:
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
have_chap_secret	net/lwip/netif/ppp/auth.c	/^have_chap_secret(char *client, char *server, u32_t remote)$/;"	f	file:
have_pap_secret	net/lwip/netif/ppp/auth.c	/^have_pap_secret(void)$/;"	f	file:
hdr	obj/net/ns.asm	/^  hdr = p->payload;$/;"	d
hdrlen	obj/net/ns.asm	/^  hdrlen = TCPH_HDRLEN(tcphdr);$/;"	d
head	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *head;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
head	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *head;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
head	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
header	obj/net/ns.asm	/^    header = pbuf_alloc(PBUF_LINK, 0, PBUF_RAM);$/;"	d
header	user/httpd.c	/^	char *header;$/;"	m	struct:responce_header	file:
headers	user/httpd.c	/^struct responce_header headers[] = {$/;"	v	typeref:struct:responce_header
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
hexdump	net/testinput.c	/^hexdump(const char *prefix, const void *data, int len)$/;"	f	file:
his_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
hisaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
hlen	obj/net/ns.asm	/^  hlen = IPH_HL(iphdr) * 4;$/;"	d
hoplim	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t hoplim;              \/* hop limit (TTL) *\/$/;"	m	struct:ip_hdr
hostent	net/lwip/include/lwip/netdb.h	/^struct hostent {$/;"	s
hostname	net/lwip/include/lwip/netif.h	/^  char*  hostname;$/;"	m	struct:netif
htonl	net/lwip/core/ipv4/inet.c	/^htonl(u32_t n)$/;"	f
htonl	net/lwip/include/ipv4/lwip/inet.h	56;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	72;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	79;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	85;"	d
htons	net/lwip/core/ipv4/inet.c	/^htons(u16_t n)$/;"	f
htons	net/lwip/include/ipv4/lwip/inet.h	53;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	70;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	77;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	83;"	d
http_request	user/httpd.c	/^struct http_request {$/;"	s	file:
http_request_parse	user/httpd.c	/^http_request_parse(struct http_request *req, char *request)$/;"	f	file:
hwaddr	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr[NETIF_MAX_HWADDR_LEN];$/;"	m	struct:netif
hwaddr_len	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr_len;$/;"	m	struct:netif
i	net/lwip/netif/ppp/md5.h	/^  u32_t i[2];               \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anon8
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = empty;$/;"	d
i	obj/net/ns.asm	/^    i = old_pending;$/;"	d
i	obj/net/ns.asm	/^    i = old_queue;$/;"	d
i	obj/net/ns.asm	/^    i = old_stable;$/;"	d
i	obj/net/ns.asm	/^    i = sys_sem_wait_timeout(select_cb.sem, msectimeout);$/;"	d
i	obj/net/ns.asm	/^  i = alloc_socket(conn);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY, NULL);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD, netif);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags, netif);$/;"	d
i	obj/net/testinput.asm	/^    i = 0;$/;"	d
i	obj/user/echosrv.asm	/^    i = 0;$/;"	d
i	obj/user/echotest.asm	/^    i = 0;$/;"	d
i	obj/user/httpd.asm	/^    i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f
i386_init	kern/init.c	/^i386_init(void)$/;"	f
i386_vm_init	kern/pmap.c	/^i386_vm_init(void)$/;"	f
icmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node icmp = {$/;"	v	typeref:struct:mib_array_node
icmp	net/lwip/include/lwip/stats.h	/^  struct stats_proto icmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
icmp_dest_unreach	net/lwip/core/ipv4/icmp.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dest_unreach	net/lwip/core/ipv6/icmp6.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dur_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_dur_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_echo_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_echo_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_get_object_def	net/lwip/core/snmp/mib2.c	/^icmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
icmp_get_value	net/lwip/core/snmp/mib2.c	/^icmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
icmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t icmp_ids[26] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 };$/;"	v
icmp_input	net/lwip/core/ipv4/icmp.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_input	net/lwip/core/ipv6/icmp6.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const icmp_nodes[26] = {$/;"	v
icmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node icmp_scalar = {$/;"	v
icmp_te_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_te_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_time_exceeded	net/lwip/core/ipv4/icmp.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmp_time_exceeded	net/lwip/core/ipv6/icmp6.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmaskreps = 0,$/;"	v	file:
icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmasks = 0,$/;"	v	file:
icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpindestunreachs = 0,$/;"	v	file:
icmpinechoreps	net/lwip/core/snmp/mib2.c	/^             icmpinechoreps = 0,$/;"	v	file:
icmpinechos	net/lwip/core/snmp/mib2.c	/^             icmpinechos = 0,$/;"	v	file:
icmpinerrors	net/lwip/core/snmp/mib2.c	/^             icmpinerrors = 0,$/;"	v	file:
icmpinmsgs	net/lwip/core/snmp/mib2.c	/^static u32_t icmpinmsgs = 0,$/;"	v	file:
icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpinparmprobs = 0,$/;"	v	file:
icmpinredirects	net/lwip/core/snmp/mib2.c	/^             icmpinredirects = 0,$/;"	v	file:
icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpinsrcquenchs = 0,$/;"	v	file:
icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpintimeexcds = 0,$/;"	v	file:
icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpintimestampreps = 0,$/;"	v	file:
icmpintimestamps	net/lwip/core/snmp/mib2.c	/^             icmpintimestamps = 0,$/;"	v	file:
icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmaskreps = 0;$/;"	v	file:
icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmasks = 0,$/;"	v	file:
icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpoutdestunreachs = 0,$/;"	v	file:
icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^             icmpoutechoreps = 0,$/;"	v	file:
icmpoutechos	net/lwip/core/snmp/mib2.c	/^             icmpoutechos = 0,$/;"	v	file:
icmpouterrors	net/lwip/core/snmp/mib2.c	/^             icmpouterrors = 0,$/;"	v	file:
icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^             icmpoutmsgs = 0,$/;"	v	file:
icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpoutparmprobs = 0,$/;"	v	file:
icmpoutredirects	net/lwip/core/snmp/mib2.c	/^             icmpoutredirects = 0,$/;"	v	file:
icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpoutsrcquenchs = 0,$/;"	v	file:
icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpouttimeexcds = 0,$/;"	v	file:
icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestampreps = 0,$/;"	v	file:
icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestamps = 0,$/;"	v	file:
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_dur_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_echo_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_te_hdr
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
id	net/lwip/core/dns.c	/^  u16_t id;$/;"	m	struct:dns_hdr	file:
id	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t id;$/;"	m	struct:icmp_echo_hdr
id	net/lwip/include/lwip/snmp.h	/^  s32_t id[LWIP_SNMP_OBJ_ID_LEN];$/;"	m	struct:snmp_obj_id
id	net/lwip/netif/ppp/chap.h	/^  u_char id;                              \/* Current id *\/$/;"	m	struct:chap_state
id	net/lwip/netif/ppp/fsm.h	/^  u_char id;                       \/* Current id *\/$/;"	m	struct:fsm
id_inst_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t  id_inst_len;$/;"	m	struct:obj_def
id_inst_ptr	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *id_inst_ptr;$/;"	m	struct:obj_def
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
ident	net/lwip/include/lwip/snmp_msg.h	/^  s32_t *ident;$/;"	m	struct:snmp_varbind
ident	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *ident;$/;"	m	struct:snmp_name_ptr
ident_cmp	net/lwip/include/lwip/snmp_structs.h	/^  s32_t (*ident_cmp)(void* addr_inf, u8_t level, u16_t idx, s32_t sub_id);$/;"	m	struct:mib_external_node
ident_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ident_len;$/;"	m	struct:snmp_varbind
ident_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t ident_len;$/;"	m	struct:snmp_name_ptr
idle_time_limit	net/lwip/netif/ppp/ppp.h	/^  u_short idle_time_limit;            \/* Shut down link if idle for this long *\/$/;"	m	struct:ppp_settings
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_init	kern/trap.c	/^idt_init(void)$/;"	f
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idur	obj/net/ns.asm	/^  idur = q->payload;$/;"	d
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
iecho	obj/net/ns.asm	/^    iecho = p->payload;$/;"	d
if_up	net/lwip/netif/ppp/ppp.c	/^  int  if_up;                   \/* True when the interface is up. *\/$/;"	m	struct:PPPControl_s	file:
ifentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ifentry = {$/;"	v	typeref:struct:mib_array_node
ifentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ifentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ifentry_get_value	net/lwip/core/snmp/mib2.c	/^ifentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ifentry_ids[22] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 };$/;"	v
ifentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ifentry_nodes[22] = {$/;"	v
ifentry_set_test	net/lwip/core/snmp/mib2.c	/^ifentry_set_test (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_set_value	net/lwip/core/snmp/mib2.c	/^ifentry_set_value (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifindiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifindiscards;$/;"	m	struct:netif
ifinnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinnucastpkts;$/;"	m	struct:netif
ifinoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifinoctets;$/;"	m	struct:netif
ifinucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinucastpkts;$/;"	m	struct:netif
iflist_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iflist_root = {$/;"	v	typeref:struct:mib_list_rootnode
ifoutdiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifoutdiscards;$/;"	m	struct:netif
ifoutnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutnucastpkts;$/;"	m	struct:netif
ifoutoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifoutoctets;$/;"	m	struct:netif
ifoutucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutucastpkts;$/;"	m	struct:netif
ifspecific	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id ifspecific = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iftable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iftable = {$/;"	v	typeref:struct:mib_ram_array_node
iftable_id	net/lwip/core/snmp/mib2.c	/^s32_t iftable_id = 1;$/;"	v
iftable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iftable_node = (struct mib_node* const)&ifentry;$/;"	v	typeref:struct:mib_node
igmp	net/lwip/include/lwip/stats.h	/^  struct stats_igmp igmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_igmp
igmp_delaying_member	net/lwip/core/ipv4/igmp.c	/^igmp_delaying_member( struct igmp_group *group, u8_t maxresp)$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	/^igmp_dump_group_list()$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	137;"	d	file:
igmp_group	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_group {$/;"	s
igmp_group_list	net/lwip/core/ipv4/igmp.c	/^static struct igmp_group* igmp_group_list;$/;"	v	typeref:struct:igmp_group	file:
igmp_init	net/lwip/core/ipv4/igmp.c	/^igmp_init(void)$/;"	f
igmp_input	net/lwip/core/ipv4/igmp.c	/^igmp_input(struct pbuf *p, struct netif *inp, struct ip_addr *dest)$/;"	f
igmp_ip_output_if	net/lwip/core/ipv4/igmp.c	/^igmp_ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
igmp_joingroup	net/lwip/core/ipv4/igmp.c	/^igmp_joingroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_leavegroup	net/lwip/core/ipv4/igmp.c	/^igmp_leavegroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_lookfor_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookfor_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_lookup_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookup_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_mac_filter	net/lwip/include/lwip/netif.h	/^  err_t (*igmp_mac_filter)( struct netif *netif, struct ip_addr *group, u8_t action);$/;"	m	struct:netif
igmp_msg	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_msg {$/;"	s
igmp_remove_group	net/lwip/core/ipv4/igmp.c	/^igmp_remove_group(struct igmp_group *group)$/;"	f
igmp_report_groups	net/lwip/core/ipv4/igmp.c	/^igmp_report_groups( struct netif *netif)$/;"	f
igmp_send	net/lwip/core/ipv4/igmp.c	/^igmp_send(struct igmp_group *group, u8_t type)$/;"	f
igmp_start	net/lwip/core/ipv4/igmp.c	/^igmp_start(struct netif *netif)$/;"	f
igmp_start_timer	net/lwip/core/ipv4/igmp.c	/^igmp_start_timer(struct igmp_group *group, u8_t max_time)$/;"	f
igmp_stop	net/lwip/core/ipv4/igmp.c	/^igmp_stop(struct netif *netif)$/;"	f
igmp_stop_timer	net/lwip/core/ipv4/igmp.c	/^igmp_stop_timer(struct igmp_group *group)$/;"	f
igmp_timeout	net/lwip/core/ipv4/igmp.c	/^igmp_timeout(struct igmp_group *group)$/;"	f
igmp_timer	net/lwip/api/tcpip.c	/^igmp_timer(void *arg)$/;"	f	file:
igmp_tmr	net/lwip/core/ipv4/igmp.c	/^igmp_tmr(void)$/;"	f
illegal	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER illegal;$/;"	m	struct:stats_mem
imr_interface	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_interface; \/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
imr_multiaddr	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_multiaddr; \/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
in	net/lwip/netif/ppp/md5.h	/^  unsigned char in[64];     \/* input buffer *\/$/;"	m	struct:__anon8
inACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm inACCM;              \/* Async-Ctl-Char-Map for input. *\/$/;"	m	struct:PPPControl_s	file:
inEscaped	net/lwip/netif/ppp/ppp.c	/^  char inEscaped;               \/* Escape next character. *\/$/;"	m	struct:PPPControl_s	file:
inFCS	net/lwip/netif/ppp/ppp.c	/^  u16_t inFCS;                  \/* Input Frame Check Sequence value. *\/$/;"	m	struct:PPPControl_s	file:
inHead	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pbuf	file:
inProtocol	net/lwip/netif/ppp/ppp.c	/^  u16_t inProtocol;             \/* The input protocol code. *\/$/;"	m	struct:PPPControl_s	file:
inState	net/lwip/netif/ppp/ppp.c	/^  PPPDevStates inState;         \/* The input process state. *\/$/;"	m	struct:PPPControl_s	file:
inTail	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::	file:
in_addr	net/lwip/include/ipv4/lwip/inet.h	/^struct in_addr {$/;"	s
in_range	net/lwip/core/ipv4/inet.c	45;"	d	file:
inactive	obj/net/ns.asm	/^      inactive = pcb;$/;"	d
inactive	obj/net/ns.asm	/^  inactive = NULL;$/;"	d
inactivity	obj/net/ns.asm	/^      inactivity = tcp_ticks - pcb->tmr;$/;"	d
inactivity	obj/net/ns.asm	/^  inactivity = 0;$/;"	d
inb	inc/x86.h	/^inb(int port)$/;"	f
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = -header_size_increment;$/;"	d
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = header_size_increment;$/;"	d
indirect_array	obj/fs/fs.asm	/^				indirect_array = (uint32_t *)diskaddr(f->f_indirect);$/;"	d
indirect_array	obj/fs/fs.asm	/^			indirect_array = (uint32_t *)diskaddr(f->f_indirect);$/;"	d
inet_addr	net/lwip/core/ipv4/inet.c	/^inet_addr(const char *cp)$/;"	f
inet_aton	net/lwip/core/ipv4/inet.c	/^inet_aton(const char *cp, struct in_addr *addr)$/;"	f
inet_chksum	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum	net/lwip/core/ipv6/inet6.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo_partial	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo_partial(struct pbuf *p,$/;"	f
inet_ntoa	net/lwip/core/ipv4/inet.c	/^inet_ntoa(struct in_addr addr)$/;"	f
inet_ntoa	net/lwip/netif/ppp/ipcp.c	199;"	d	file:
init	net/lwip/include/lwip/netifapi.h	/^      err_t (* init) (struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon15::__anon16
init	net/lwip/netif/ppp/ppp.h	/^    void (*init) (int unit);$/;"	m	struct:protent
init_attach	kern/e100.c	/^int init_attach( struct pci_func *pcif )$/;"	f
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
inl	inc/x86.h	/^inl(int port)$/;"	f
inp	net/lwip/include/lwip/tcpip.h	/^    } inp;$/;"	m	union:tcpip_msg::__anon28	typeref:struct:tcpip_msg::__anon28::__anon29
input	net/input.c	/^input(envid_t ns_envid)$/;"	f
input	net/lwip/include/lwip/netif.h	/^  err_t (* input)(struct pbuf *p, struct netif *inp);$/;"	m	struct:netif
input	net/lwip/include/lwip/netifapi.h	/^      err_t (* input)(struct pbuf *p, struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon15::__anon16
input	net/lwip/netif/ppp/ppp.h	/^    void (*input) (int unit, u_char *pkt, int len);$/;"	m	struct:protent
input_envid	net/serv.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	net/testinput.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	obj/net/ns.asm	/^	input_envid = fork();$/;"	d
input_envid	obj/net/testinput.asm	/^	input_envid = fork();$/;"	d
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
inseg	net/lwip/core/tcp_in.c	/^static struct tcp_seg inseg;$/;"	v	typeref:struct:tcp_seg	file:
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
instance	net/lwip/include/lwip/snmp_structs.h	/^  u8_t instance;$/;"	m	struct:obj_def
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int $/;"	l
int	obj/kern/kernel.asm	/^int alloc_page(int argc, char**argv, struct Trapframe *tf)$/;"	l
int	obj/kern/kernel.asm	/^int atoi(char *s)$/;"	l
int	obj/kern/kernel.asm	/^int changeperm(int argc, char**argv, struct Trapframe *tf)$/;"	l
int	obj/kern/kernel.asm	/^int free_page(int argc, char**argv, struct Trapframe *tf)$/;"	l
int	obj/kern/kernel.asm	/^int init_attach( struct pci_func *pcif )$/;"	l
int	obj/kern/kernel.asm	/^int page_status(int argc, char**argv, struct Trapframe *tf)$/;"	l
int	obj/kern/kernel.asm	/^int pkt_recv(void* data)$/;"	l
int	obj/kern/kernel.asm	/^int pkt_transmit(void* data, uint16_t length, int isEl)$/;"	l
int	obj/kern/kernel.asm	/^int showmappings(int argc, char **argv, struct Trapframe *tf)$/;"	l
int	obj/kern/kernel.asm	/^int sys_ns_recv(void *data)$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/net/ns.asm	/^int$/;"	l
int	obj/net/testinput.asm	/^int$/;"	l
int	obj/net/testoutput.asm	/^int$/;"	l
int	obj/user/echosrv.asm	/^int$/;"	l
int	obj/user/echotest.asm	/^int umain(void) $/;"	l
int	obj/user/echotest.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/httpd.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/testtime.asm	/^int$/;"	l
int	obj/user/writemotd.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/net/ns.asm	/^int32_t$/;"	l
int32_t	obj/net/testinput.asm	/^int32_t$/;"	l
int32_t	obj/net/testoutput.asm	/^int32_t$/;"	l
int32_t	obj/user/echosrv.asm	/^int32_t$/;"	l
int32_t	obj/user/echotest.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/httpd.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/testtime.asm	/^int32_t$/;"	l
int32_t	obj/user/writemotd.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interface	net/lwip/include/ipv4/lwip/igmp.h	/^  struct netif      *interface;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::netif
interface	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *interface;$/;"	m	struct:api_msg_msg::__anon20::__anon26	typeref:struct:api_msg_msg::__anon20::__anon26::ip_addr
interfaces	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node interfaces = {$/;"	v	typeref:struct:mib_array_node
interfaces_get_object_def	net/lwip/core/snmp/mib2.c	/^interfaces_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
interfaces_get_value	net/lwip/core/snmp/mib2.c	/^interfaces_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
interfaces_ids	net/lwip/core/snmp/mib2.c	/^const s32_t interfaces_ids[2] = { 1, 2 };$/;"	v
interfaces_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const interfaces_nodes[2] = {$/;"	v
interfaces_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node interfaces_scalar = {$/;"	v
internet	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node internet = {$/;"	v	typeref:struct:mib_array_node
internet_ids	net/lwip/core/snmp/mib2.c	/^const s32_t internet_ids[1] = { 2 };$/;"	v
internet_ids	net/lwip/core/snmp/mib2.c	/^s32_t internet_ids[2] = { 2, 4 };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[1] = { (struct mib_node* const)&mgmt };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[2] = { (struct mib_node* const)&mgmt, (struct mib_node* const)&private };$/;"	v
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root invb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
io_base	kern/e100.h	/^static uint32_t io_base;$/;"	v
io_base	obj/kern/kernel.asm	/^  	io_base = pcif->reg_base[1];$/;"	d
ioctlsocket	net/lwip/include/lwip/sockets.h	342;"	d
ip	net/lwip/include/lwip/api.h	/^    struct ip_pcb  *ip;$/;"	m	union:netconn::__anon14	typeref:struct:netconn::__anon14::ip_pcb
ip	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip	net/lwip/netif/ppp/vjbsdhdr.h	/^struct ip$/;"	s
ip4_addr1	net/lwip/include/ipv4/lwip/ip_addr.h	156;"	d
ip4_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	157;"	d
ip4_addr3	net/lwip/include/ipv4/lwip/ip_addr.h	158;"	d
ip4_addr4	net/lwip/include/ipv4/lwip/ip_addr.h	159;"	d
ip_addr	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr {$/;"	s
ip_addr	net/lwip/include/ipv6/lwip/ip_addr.h	/^ struct ip_addr {$/;"	s
ip_addr	net/lwip/include/lwip/netif.h	/^  struct ip_addr ip_addr;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
ip_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr2	net/lwip/include/ipv6/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr_any	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_any = { IP_ADDR_ANY_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_broadcast	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_broadcast = { IP_ADDR_BROADCAST_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_check	net/lwip/netif/ppp/auth.c	/^ip_addr_check(u32_t addr, struct wordlist *addrs)$/;"	f	file:
ip_addr_cmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_cmp(struct ip_addr *addr1, struct ip_addr *addr2)$/;"	f
ip_addr_cmp	net/lwip/include/ipv4/lwip/ip_addr.h	137;"	d
ip_addr_debug_print	net/lwip/include/ipv4/lwip/ip_addr.h	147;"	d
ip_addr_debug_print	net/lwip/include/ipv6/lwip/ip_addr.h	82;"	d
ip_addr_isany	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_isany(struct ip_addr *addr)$/;"	f
ip_addr_isany	net/lwip/include/ipv4/lwip/ip_addr.h	139;"	d
ip_addr_isbroadcast	net/lwip/core/ipv4/ip_addr.c	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	f
ip_addr_islinklocal	net/lwip/include/ipv4/lwip/ip_addr.h	145;"	d
ip_addr_ismulticast	net/lwip/include/ipv4/lwip/ip_addr.h	143;"	d
ip_addr_netcmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_netcmp(struct ip_addr *addr1, struct ip_addr *addr2,$/;"	f
ip_addr_netcmp	net/lwip/include/ipv4/lwip/ip_addr.h	133;"	d
ip_addr_set	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_set(struct ip_addr *dest, struct ip_addr *src)$/;"	f
ip_addr_set	net/lwip/include/ipv4/lwip/ip_addr.h	122;"	d
ip_addrentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_addrentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_debug_print	net/lwip/core/ipv4/ip.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_debug_print	net/lwip/core/ipv6/ip6.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_dst	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::
ip_forward	net/lwip/core/ipv4/ip.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr, struct netif *inp)$/;"	f	file:
ip_forward	net/lwip/core/ipv6/ip6.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr)$/;"	f	file:
ip_frag	net/lwip/core/ipv4/ip_frag.c	/^ip_frag(struct pbuf *p, struct netif *netif, struct ip_addr *dest)$/;"	f
ip_frag	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip_frag;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_get_value	net/lwip/core/snmp/mib2.c	/^ip_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_hdr	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hdr	net/lwip/include/ipv6/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hl_v	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   ip_hl_v;  \/* bug in GCC for mips means the bitfield stuff will sometimes break - so we use a char for both and get round it with macro's instead... *\/$/;"	m	struct:ip
ip_id	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_id;                 \/* identification *\/$/;"	m	struct:ip
ip_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ip_ids[23] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 };$/;"	v
ip_init	net/lwip/core/ipv6/ip6.c	/^ip_init(void)$/;"	f
ip_init	net/lwip/include/ipv4/lwip/ip.h	46;"	d
ip_input	net/lwip/core/ipv4/ip.c	/^ip_input(struct pbuf *p, struct netif *inp)$/;"	f
ip_input	net/lwip/core/ipv6/ip6.c	/^ip_input(struct pbuf *p, struct netif *inp) {$/;"	f
ip_len	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_len;                \/* total length *\/$/;"	m	struct:ip
ip_mreq	net/lwip/include/lwip/sockets.h	/^typedef struct ip_mreq {$/;"	s
ip_mreq	net/lwip/include/lwip/sockets.h	/^} ip_mreq;$/;"	t	typeref:struct:ip_mreq
ip_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ip_nodes[23] = {$/;"	v
ip_ntomentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_ntomentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_off;                \/* fragment offset field *\/$/;"	m	struct:ip
ip_output	net/lwip/core/ipv4/ip.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output	net/lwip/core/ipv6/ip6.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv4/ip.c	/^ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv6/ip6.c	/^ip_output_if (struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_p	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_p;                  \/* protocol *\/$/;"	m	struct:ip
ip_pcb	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_pcb {$/;"	s
ip_reass	net/lwip/core/ipv4/ip_frag.c	/^ip_reass(struct pbuf *p)$/;"	f
ip_reass_chain_frag_into_datagram_and_validate	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_chain_frag_into_datagram_and_validate(struct ip_reassdata *ipr, struct pbuf *new_p)$/;"	f	file:
ip_reass_dequeue_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_dequeue_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_enqueue_new_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_enqueue_new_datagram(struct ip_hdr *fraghdr, int clen)$/;"	f	file:
ip_reass_free_complete_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_free_complete_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_helper	net/lwip/core/ipv4/ip_frag.c	/^struct ip_reass_helper {$/;"	s	file:
ip_reass_pbufcount	net/lwip/core/ipv4/ip_frag.c	/^static u16_t ip_reass_pbufcount;$/;"	v	file:
ip_reass_remove_oldest_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_remove_oldest_datagram(struct ip_hdr *fraghdr, int pbufs_needed)$/;"	f	file:
ip_reass_timer	net/lwip/api/tcpip.c	/^ip_reass_timer(void *arg)$/;"	f	file:
ip_reass_tmr	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_tmr(void)$/;"	f
ip_reassdata	net/lwip/include/ipv4/lwip/ip_frag.h	/^struct ip_reassdata {$/;"	s
ip_route	net/lwip/core/ipv4/ip.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_route	net/lwip/core/ipv6/ip6.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_rteentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_rteentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node ip_scalar = {$/;"	v
ip_set_test	net/lwip/core/snmp/mib2.c	/^ip_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_src	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::in_addr
ip_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_sum;                \/* checksum *\/$/;"	m	struct:ip
ip_tos	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_tos;                \/* type of service *\/$/;"	m	struct:ip
ip_ttl	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_ttl;                \/* time to live *\/$/;"	m	struct:ip
ipaddr	net/lwip/core/dns.c	/^  struct ip_addr ipaddr;$/;"	m	struct:dns_table_entry	typeref:struct:dns_table_entry::ip_addr	file:
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon20::__anon22	typeref:struct:api_msg_msg::__anon20::__anon22::ip_addr
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon20::__anon23	typeref:struct:api_msg_msg::__anon20::__anon23::ip_addr
ipaddr	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:netifapi_msg_msg::__anon15::__anon16	typeref:struct:netifapi_msg_msg::__anon15::__anon16::ip_addr
ipaddr	net/lwip/netif/etharp.c	/^  struct ip_addr ipaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::ip_addr	file:
ipaddr	obj/net/ns.asm	/^        ipaddr = &(netif->gw);$/;"	d
ipaddrentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipaddrentry = {$/;"	v	typeref:struct:mib_array_node
ipaddrentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipaddrentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
ipaddrentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipaddrentry_nodes[5] = {$/;"	v
ipaddrtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipaddrtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipaddrtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipaddrtable_id = 1;$/;"	v
ipaddrtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipaddrtable_node = (struct mib_node* const)&ipaddrentry;$/;"	v	typeref:struct:mib_node
ipaddrtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipaddrtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
ipcb	obj/net/ns.asm	/^        ipcb = ipcb->next;$/;"	d
ipcb	obj/net/ns.asm	/^        ipcb = udp_pcbs;$/;"	d
ipcb	obj/net/ns.asm	/^    ipcb = udp_pcbs;$/;"	d
ipcp_ackci	net/lwip/netif/ppp/ipcp.c	/^ipcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_addci	net/lwip/netif/ppp/ipcp.c	/^ipcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
ipcp_allowoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
ipcp_callbacks	net/lwip/netif/ppp/ipcp.c	/^static fsm_callbacks ipcp_callbacks = { \/* IPCP callback routines *\/$/;"	v	file:
ipcp_cilen	net/lwip/netif/ppp/ipcp.c	/^ipcp_cilen(fsm *f)$/;"	f	file:
ipcp_clear_addrs	net/lwip/netif/ppp/ipcp.c	/^ipcp_clear_addrs(int unit)$/;"	f	file:
ipcp_close	net/lwip/netif/ppp/ipcp.c	/^ipcp_close(int unit, char *reason)$/;"	f	file:
ipcp_down	net/lwip/netif/ppp/ipcp.c	/^ipcp_down(fsm *f)$/;"	f	file:
ipcp_finished	net/lwip/netif/ppp/ipcp.c	/^ipcp_finished(fsm *f)$/;"	f	file:
ipcp_fsm	net/lwip/netif/ppp/ipcp.c	/^fsm ipcp_fsm[NUM_PPP]; \/* IPCP fsm structure *\/$/;"	v
ipcp_gotoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
ipcp_hisoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
ipcp_init	net/lwip/netif/ppp/ipcp.c	/^ipcp_init(int unit)$/;"	f	file:
ipcp_input	net/lwip/netif/ppp/ipcp.c	/^ipcp_input(int unit, u_char *p, int len)$/;"	f	file:
ipcp_lowerdown	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerdown(int unit)$/;"	f	file:
ipcp_lowerup	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerup(int unit)$/;"	f	file:
ipcp_nakci	net/lwip/netif/ppp/ipcp.c	/^ipcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_open	net/lwip/netif/ppp/ipcp.c	/^ipcp_open(int unit)$/;"	f	file:
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^typedef struct ipcp_options {$/;"	s
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^} ipcp_options;$/;"	t	typeref:struct:ipcp_options
ipcp_protent	net/lwip/netif/ppp/ipcp.c	/^struct protent ipcp_protent = {$/;"	v	typeref:struct:protent
ipcp_protrej	net/lwip/netif/ppp/ipcp.c	/^ipcp_protrej(int unit)$/;"	f	file:
ipcp_rejci	net/lwip/netif/ppp/ipcp.c	/^ipcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_reqci	net/lwip/netif/ppp/ipcp.c	/^ipcp_reqci(fsm *f, u_char *inp\/* Requested CIs *\/,int *len\/* Length of requested CIs *\/,int reject_if_disagree)$/;"	f	file:
ipcp_resetci	net/lwip/netif/ppp/ipcp.c	/^ipcp_resetci(fsm *f)$/;"	f	file:
ipcp_up	net/lwip/netif/ppp/ipcp.c	/^ipcp_up(fsm *f)$/;"	f	file:
ipcp_wantoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^             ipforwdatagrams = 0,$/;"	v	file:
ipfragcreates	net/lwip/core/snmp/mib2.c	/^             ipfragcreates = 0,$/;"	v	file:
ipfragfails	net/lwip/core/snmp/mib2.c	/^             ipfragfails = 0,$/;"	v	file:
ipfragoks	net/lwip/core/snmp/mib2.c	/^             ipfragoks = 0,$/;"	v	file:
iphdr	net/lwip/core/tcp_in.c	/^static struct ip_hdr *iphdr;$/;"	v	typeref:struct:ip_hdr	file:
iphdr	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_hdr iphdr;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_hdr
iphdr	obj/net/ns.asm	/^      iphdr = r->payload;$/;"	d
iphdr	obj/net/ns.asm	/^    iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = original_iphdr;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = rambuf->payload;$/;"	d
iphdr_hlen	obj/net/ns.asm	/^  iphdr_hlen = IPH_HL(iphdr);$/;"	d
iphdr_len	obj/net/ns.asm	/^  iphdr_len = ntohs(IPH_LEN(iphdr));$/;"	d
ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^             ipinaddrerrors = 0,$/;"	v	file:
ipindelivers	net/lwip/core/snmp/mib2.c	/^             ipindelivers = 0,$/;"	v	file:
ipindiscards	net/lwip/core/snmp/mib2.c	/^             ipindiscards = 0,$/;"	v	file:
ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^             ipinhdrerrors = 0,$/;"	v	file:
ipinreceives	net/lwip/core/snmp/mib2.c	/^static u32_t ipinreceives = 0,$/;"	v	file:
ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^             ipinunknownprotos = 0,$/;"	v	file:
ipntomentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipntomentry = {$/;"	v	typeref:struct:mib_array_node
ipntomentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipntomentry_ids[4] = { 1, 2, 3, 4 };$/;"	v
ipntomentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipntomentry_nodes[4] = {$/;"	v
ipntomtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipntomtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipntomtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipntomtable_id = 1;$/;"	v
ipntomtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipntomtable_node = (struct mib_node* const)&ipntomentry;$/;"	v	typeref:struct:mib_node
ipntomtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipntomtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipoutdiscards	net/lwip/core/snmp/mib2.c	/^             ipoutdiscards = 0,$/;"	v	file:
ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^             ipoutnoroutes = 0,$/;"	v	file:
ipoutrequests	net/lwip/core/snmp/mib2.c	/^             ipoutrequests = 0,$/;"	v	file:
ipr	obj/net/ns.asm	/^      ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipr	obj/net/ns.asm	/^  ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipr_prev	obj/net/ns.asm	/^    ipr_prev = ipr;$/;"	d
ipreasmfails	net/lwip/core/snmp/mib2.c	/^             ipreasmfails = 0,$/;"	v	file:
ipreasmoks	net/lwip/core/snmp/mib2.c	/^             ipreasmoks = 0,$/;"	v	file:
ipreasmreqds	net/lwip/core/snmp/mib2.c	/^             ipreasmreqds = 0,$/;"	v	file:
iprh	obj/net/ns.asm	/^          iprh = (struct ip_reass_helper*)q->payload;$/;"	d
iprh	obj/net/ns.asm	/^      iprh = (struct ip_reass_helper*)r->payload;$/;"	d
iprh	obj/net/ns.asm	/^    iprh = (struct ip_reass_helper *)p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper *)ipr->p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper*)new_p->payload;$/;"	d
iprh_prev	obj/net/ns.asm	/^          iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^        iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^    iprh_prev = iprh_tmp;$/;"	d
iprh_tmp	obj/net/ns.asm	/^    iprh_tmp = (struct ip_reass_helper*)q->payload;$/;"	d
iprouteinfo	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id iprouteinfo = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iproutingdiscards	net/lwip/core/snmp/mib2.c	/^             iproutingdiscards = 0;$/;"	v	file:
iprteentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node iprteentry = {$/;"	v	typeref:struct:mib_array_node
iprteentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t iprteentry_ids[13] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };$/;"	v
iprteentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const iprteentry_nodes[13] = {$/;"	v
iprtetable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iprtetable = {$/;"	v	typeref:struct:mib_ram_array_node
iprtetable_id	net/lwip/core/snmp/mib2.c	/^s32_t iprtetable_id = 1;$/;"	v
iprtetable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iprtetable_node = (struct mib_node* const)&iprteentry;$/;"	v	typeref:struct:mib_node
iprtetree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iprtetree_root = {$/;"	v	typeref:struct:mib_list_rootnode
irq_eoi	kern/picirq.c	/^irq_eoi(void)$/;"	f
irq_line	kern/pci.h	/^    uint8_t irq_line;$/;"	m	struct:pci_func
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
isdigit	net/lwip/core/ipv4/inet.c	47;"	d	file:
isfree	lib/malloc.c	/^isfree(void *v, size_t n)$/;"	f	file:
islower	net/lwip/core/ipv4/inet.c	49;"	d	file:
isprint	net/lwip/core/ipv4/inet.c	46;"	d	file:
iss	obj/net/ns.asm	/^    iss = tcp_next_iss();$/;"	d
iss	obj/net/ns.asm	/^  iss = tcp_next_iss();$/;"	d
isspace	net/lwip/core/ipv4/inet.c	50;"	d	file:
isxdigit	net/lwip/core/ipv4/inet.c	48;"	d	file:
jb_ebp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebp;$/;"	m	struct:jos_jmp_buf
jb_ebx	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebx;$/;"	m	struct:jos_jmp_buf
jb_edi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_edi;$/;"	m	struct:jos_jmp_buf
jb_eip	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_eip;$/;"	m	struct:jos_jmp_buf
jb_esi	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esi;$/;"	m	struct:jos_jmp_buf
jb_esp	net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esp;$/;"	m	struct:jos_jmp_buf
jif	net/lwip/jos/jif/jif.c	/^struct jif {$/;"	s	file:
jif	obj/net/ns.asm	/^    jif = mem_malloc(sizeof(struct jif));$/;"	d
jif	obj/net/ns.asm	/^    jif = netif->state;$/;"	d
jif_init	net/lwip/jos/jif/jif.c	/^jif_init(struct netif *netif)$/;"	f
jif_input	net/lwip/jos/jif/jif.c	/^jif_input(struct netif *netif, void *va)$/;"	f
jif_output	net/lwip/jos/jif/jif.c	/^jif_output(struct netif *netif, struct pbuf *p,$/;"	f	file:
jif_pkt	inc/ns.h	/^struct jif_pkt {$/;"	s
jl	net/lwip/include/lwip/api_msg.h	/^    } jl;$/;"	m	union:api_msg_msg::__anon20	typeref:struct:api_msg_msg::__anon20::__anon26
join_or_leave	net/lwip/include/lwip/api_msg.h	/^      enum netconn_igmp join_or_leave;$/;"	m	struct:api_msg_msg::__anon20::__anon26	typeref:enum:api_msg_msg::__anon20::__anon26::netconn_igmp
join_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER join_sent;        \/* *\/$/;"	m	struct:stats_igmp
jos_jmp_buf	net/lwip/jos/arch/i386/setjmp.h	/^struct jos_jmp_buf {$/;"	s
jp_data	inc/ns.h	/^	char jp_data[0];$/;"	m	struct:jif_pkt
jp_len	inc/ns.h	/^	int jp_len;$/;"	m	struct:jif_pkt
k	obj/net/ns.asm	/^  k = ETHARP_HWADDR_LEN;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kclock_init	kern/kclock.c	/^kclock_init(void)$/;"	f
keep_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t keep_cnt;$/;"	m	struct:tcp_pcb
keep_cnt_sent	net/lwip/include/lwip/tcp.h	/^  u8_t keep_cnt_sent;$/;"	m	struct:tcp_pcb
keep_idle	net/lwip/include/lwip/tcp.h	/^  u32_t keep_idle;$/;"	m	struct:tcp_pcb
keep_intvl	net/lwip/include/lwip/tcp.h	/^  u32_t keep_intvl;$/;"	m	struct:tcp_pcb
key1	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
key2	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
kill_link	net/lwip/netif/ppp/ppp.c	/^  int  kill_link;               \/* Shut the link down. *\/$/;"	m	struct:PPPControl_s	file:
kill_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue kill_queue;$/;"	v	typeref:struct:thread_queue	file:
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
l_linger	net/lwip/include/lwip/sockets.h	/^       int l_linger;               \/* linger time *\/$/;"	m	struct:linger
l_onoff	net/lwip/include/lwip/sockets.h	/^       int l_onoff;                \/* option on\/off *\/$/;"	m	struct:linger
last	obj/net/ns.asm	/^    last = (left <= mtu - IP_HLEN);$/;"	d
lastXMit	net/lwip/netif/ppp/ppp.c	/^  u_long lastXMit;              \/* Time of last transmission. *\/$/;"	m	struct:PPPControl_s	file:
last_cs	net/lwip/netif/ppp/vj.h	/^  struct cstate *last_cs;          \/* most recently used tstate *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
last_recv	net/lwip/netif/ppp/vj.h	/^  u_char last_recv;                \/* last rcvd conn. id *\/$/;"	m	struct:vjcompress
last_reporter_flag	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               last_reporter_flag; \/* signifies we were the last person to report *\/$/;"	m	struct:igmp_group
last_xmit	net/lwip/netif/ppp/vj.h	/^  u_char last_xmit;                \/* last sent conn. id *\/$/;"	m	struct:vjcompress
lastack	net/lwip/include/lwip/tcp.h	/^  u32_t lastack; \/* Highest acknowledged seqno. *\/$/;"	m	struct:tcp_pcb
lastconflict	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t lastconflict;        \/* ticks until a conflict can be solved by defending *\/$/;"	m	struct:autoip
lastdata	net/lwip/api/sockets.c	/^  struct netbuf *lastdata;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netbuf	file:
lastoffset	net/lwip/api/sockets.c	/^  u16_t lastoffset;$/;"	m	struct:lwip_socket	file:
lb	net/lwip/include/lwip/api_msg.h	/^    } lb;$/;"	m	union:api_msg_msg::__anon20	typeref:struct:api_msg_msg::__anon20::__anon27
lcp_ackci	net/lwip/netif/ppp/lcp.c	/^lcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_addci	net/lwip/netif/ppp/lcp.c	/^lcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
lcp_allowoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
lcp_callbacks	net/lwip/netif/ppp/lcp.c	/^static fsm_callbacks lcp_callbacks = { \/* LCP callback routines *\/$/;"	v	file:
lcp_cilen	net/lwip/netif/ppp/lcp.c	/^static int lcp_cilen(fsm *f)$/;"	f	file:
lcp_close	net/lwip/netif/ppp/lcp.c	/^lcp_close(int unit, char *reason)$/;"	f
lcp_down	net/lwip/netif/ppp/lcp.c	/^lcp_down(fsm *f)$/;"	f	file:
lcp_echo_fails	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_fails         = LCP_MAXECHOFAILS; \/* Tolerance to unanswered echo-requests *\/$/;"	v	file:
lcp_echo_interval	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_interval      = LCP_ECHOINTERVAL; \/* Interval between LCP echo-requests *\/$/;"	v	file:
lcp_echo_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerdown (int unit)$/;"	f	file:
lcp_echo_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerup (int unit)$/;"	f	file:
lcp_echo_number	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_number        = 0;                \/* ID number of next echo frame *\/$/;"	v	file:
lcp_echo_timer_running	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_timer_running = 0;                \/* TRUE if a timer is running *\/$/;"	v	file:
lcp_echos_pending	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echos_pending      = 0;                \/* Number of outstanding echo msgs *\/$/;"	v	file:
lcp_extcode	net/lwip/netif/ppp/lcp.c	/^lcp_extcode(fsm *f, int code, u_char id, u_char *inp, int len)$/;"	f	file:
lcp_finished	net/lwip/netif/ppp/lcp.c	/^lcp_finished(fsm *f)$/;"	f	file:
lcp_fsm	net/lwip/netif/ppp/lcp.c	/^static fsm lcp_fsm[NUM_PPP];                            \/* LCP fsm structure (global)*\/$/;"	v	file:
lcp_gotoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
lcp_hisoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
lcp_init	net/lwip/netif/ppp/lcp.c	/^lcp_init(int unit)$/;"	f
lcp_input	net/lwip/netif/ppp/lcp.c	/^lcp_input(int unit, u_char *p, int len)$/;"	f	file:
lcp_loopbackfail	net/lwip/netif/ppp/lcp.c	/^int lcp_loopbackfail = DEFLOOPBACKFAIL;$/;"	v
lcp_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_lowerdown(int unit)$/;"	f
lcp_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_lowerup(int unit)$/;"	f
lcp_nakci	net/lwip/netif/ppp/lcp.c	/^lcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_open	net/lwip/netif/ppp/lcp.c	/^lcp_open(int unit)$/;"	f
lcp_options	net/lwip/netif/ppp/lcp.h	/^typedef struct lcp_options {$/;"	s
lcp_options	net/lwip/netif/ppp/lcp.h	/^} lcp_options;$/;"	t	typeref:struct:lcp_options
lcp_phase	net/lwip/netif/ppp/lcp.c	/^LinkPhase lcp_phase[NUM_PPP];          \/* Phase of link session (RFC 1661) *\/$/;"	v
lcp_protent	net/lwip/netif/ppp/lcp.c	/^struct protent lcp_protent = {$/;"	v	typeref:struct:protent
lcp_protrej	net/lwip/netif/ppp/lcp.c	/^lcp_protrej(int unit)$/;"	f	file:
lcp_received_echo_reply	net/lwip/netif/ppp/lcp.c	/^lcp_received_echo_reply (fsm *f, int id, u_char *inp, int len)$/;"	f	file:
lcp_rejci	net/lwip/netif/ppp/lcp.c	/^lcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_reqci	net/lwip/netif/ppp/lcp.c	/^lcp_reqci(fsm *f, $/;"	f	file:
lcp_resetci	net/lwip/netif/ppp/lcp.c	/^lcp_resetci(fsm *f)$/;"	f	file:
lcp_rprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_rprotrej(fsm *f, u_char *inp, int len)$/;"	f	file:
lcp_sprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_sprotrej(int unit, u_char *p, int len)$/;"	f
lcp_starting	net/lwip/netif/ppp/lcp.c	/^lcp_starting(fsm *f)$/;"	f	file:
lcp_up	net/lwip/netif/ppp/lcp.c	/^lcp_up(fsm *f)$/;"	f	file:
lcp_wantoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
leave_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER leave_sent;       \/* *\/$/;"	m	struct:stats_igmp
left	obj/net/ns.asm	/^  left = len;$/;"	d
left	obj/net/ns.asm	/^  left = p->tot_len - IP_HLEN;$/;"	d
len	net/lwip/core/dns.c	/^  u16_t len;$/;"	m	struct:dns_answer	file:
len	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t len;                \/* payload length *\/$/;"	m	struct:ip_hdr
len	net/lwip/include/lwip/api_msg.h	/^      int len;$/;"	m	struct:api_msg_msg::__anon20::__anon24
len	net/lwip/include/lwip/api_msg.h	/^      u16_t len;$/;"	m	struct:api_msg_msg::__anon20::__anon25
len	net/lwip/include/lwip/pbuf.h	/^  u16_t len;  $/;"	m	struct:pbuf
len	net/lwip/include/lwip/snmp.h	/^  u8_t len;$/;"	m	struct:snmp_obj_id
len	net/lwip/include/lwip/tcp.h	/^  u16_t len;               \/* the TCP length of this segment *\/$/;"	m	struct:tcp_seg
len	obj/net/ns.asm	/^      len = 0;$/;"	d
len	obj/net/ns.asm	/^      len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^      len = p_from->len - offset_from;$/;"	d
len	obj/net/ns.asm	/^      len = p_to->len - offset_to;$/;"	d
len	obj/net/ns.asm	/^    len = 0;$/;"	d
len	obj/net/ns.asm	/^    len = conn->write_msg->msg.w.len - conn->write_offset;$/;"	d
len	obj/net/ns.asm	/^    len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^  len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);$/;"	d
len	obj/net/ns.asm	/^  len = 0;$/;"	d
len	obj/net/ns.asm	/^  len = ntohs(IPH_LEN(fraghdr)) - IPH_HL(fraghdr) * 4;$/;"	d
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_igmp
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_proto
lenerr	obj/net/ns.asm	/^lenerr:$/;"	l
level	net/lwip/api/sockets.c	/^  int level;$/;"	m	struct:lwip_setgetsockopt_data	file:
level	obj/net/ns.asm	/^  level = data->level;$/;"	d
level_length	net/lwip/include/lwip/snmp_structs.h	/^  u16_t (*level_length)(void* addr_inf, u8_t level);$/;"	m	struct:mib_external_node
lexceptset	obj/net/ns.asm	/^      lexceptset = *exceptset;$/;"	d
lexceptset	obj/net/ns.asm	/^    lexceptset = *exceptset;$/;"	d
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/ns.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testinput.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testoutput.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echosrv.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echotest.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/httpd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testtime.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/writemotd.asm	/^		lflag = 0;$/;"	d
lfree	net/lwip/core/mem.c	/^static struct mem *lfree;$/;"	v	typeref:struct:mem	file:
lfree	obj/net/ns.asm	/^            lfree = (struct mem *)&ram[lfree->next];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = (struct mem *)&ram[ptr2];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem2;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = pmem;$/;"	d
lfree	obj/net/ns.asm	/^    lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^  lfree = (struct mem *)ram;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
line	net/lwip/core/memp.c	/^  int line;$/;"	m	struct:memp	file:
linger	net/lwip/include/lwip/sockets.h	/^struct linger {$/;"	s
link	kern/e100.c	/^		uint32_t link;$/;"	m	struct:e100_ru	file:
link	kern/e100.c	/^    uint32_t link;$/;"	m	struct:e100_cb	file:
link	net/lwip/include/lwip/stats.h	/^  struct stats_proto link;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
linkStatusCB	net/lwip/netif/ppp/ppp.c	/^  void (*linkStatusCB)(void *ctx, int errCode, void *arg);$/;"	m	struct:PPPControl_s	file:
linkStatusCtx	net/lwip/netif/ppp/ppp.c	/^  void *linkStatusCtx;$/;"	m	struct:PPPControl_s	file:
link_callback	net/lwip/include/lwip/netif.h	/^  void (* link_callback)(struct netif *netif);$/;"	m	struct:netif
link_down	net/lwip/netif/ppp/auth.c	/^link_down(int unit)$/;"	f
link_established	net/lwip/netif/ppp/auth.c	/^link_established(int unit)$/;"	f
link_required	net/lwip/netif/ppp/auth.c	/^link_required(int unit)$/;"	f
link_speed	net/lwip/include/lwip/netif.h	/^  u32_t link_speed;$/;"	m	struct:netif
link_terminated	net/lwip/netif/ppp/auth.c	/^link_terminated(int unit)$/;"	f
link_type	net/lwip/include/lwip/netif.h	/^  u8_t link_type;$/;"	m	struct:netif
linkoutput	net/lwip/include/lwip/netif.h	/^  err_t (* linkoutput)(struct netif *netif, struct pbuf *p);$/;"	m	struct:netif
listen	inc/ns.h	/^	} listen;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_listen
listen	lib/sockets.c	/^listen(int s, int backlog)$/;"	f
listen	net/lwip/include/lwip/sockets.h	335;"	d
listen_pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb_listen *listen_pcbs; $/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb_listen
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  struct ip_addr llipaddr;  \/* the currently selected, probed, announced or used LL IP-Address *\/$/;"	m	struct:autoip	typeref:struct:autoip::ip_addr
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary, size_t size)$/;"	f	file:
local	net/lwip/include/lwip/api_msg.h	/^      u8_t local;$/;"	m	struct:api_msg_msg::__anon20::__anon23
local_match	obj/net/ns.asm	/^        local_match = 1;$/;"	d
local_mem_free_count	obj/net/ns.asm	/^        local_mem_free_count = mem_free_count;$/;"	d
local_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
local_port	obj/net/ns.asm	/^    local_port = pcb->local_port;$/;"	d
lock_tcpip_core	net/lwip/api/tcpip.c	/^sys_sem_t lock_tcpip_core;$/;"	v
lock_tcpip_core	obj/net/ns.asm	/^  lock_tcpip_core = sys_sem_new(1);$/;"	d
logged_in	net/lwip/netif/ppp/auth.c	/^static int logged_in;$/;"	v	file:
logout	net/lwip/netif/ppp/auth.c	/^logout(void)$/;"	f	file:
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/net/ns.asm	/^long$/;"	l
long	obj/net/testinput.asm	/^long$/;"	l
long	obj/net/testoutput.asm	/^long$/;"	l
long	obj/user/echosrv.asm	/^long$/;"	l
long	obj/user/echotest.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/httpd.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/testtime.asm	/^long$/;"	l
long	obj/user/writemotd.asm	/^long$/;"	l
loop_cnt_current	net/lwip/include/lwip/netif.h	/^  u16_t loop_cnt_current;$/;"	m	struct:netif
loop_first	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_first;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loop_last	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_last;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loopif_init	net/lwip/netif/loopif.c	/^loopif_init(struct netif *netif)$/;"	f
loopif_poll	net/lwip/include/netif/loopif.h	44;"	d
low_level_init	net/lwip/jos/jif/jif.c	/^low_level_init(struct netif *netif)$/;"	f	file:
low_level_input	net/lwip/jos/jif/jif.c	/^low_level_input(void *va)$/;"	f	file:
low_level_output	net/lwip/jos/jif/jif.c	/^low_level_output(struct netif *netif, struct pbuf *p)$/;"	f	file:
lowerdown	net/lwip/netif/ppp/ppp.h	/^    void (*lowerdown) (int unit);$/;"	m	struct:protent
lowerup	net/lwip/netif/ppp/ppp.h	/^    void (*lowerup) (int unit);$/;"	m	struct:protent
lpcb	obj/net/ns.asm	/^  lpcb = memp_malloc(MEMP_TCP_PCB_LISTEN);$/;"	d
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
lqr_period	net/lwip/netif/ppp/lcp.h	/^    u32_t lqr_period;            \/* Reporting period for LQR 1\/100ths second *\/$/;"	m	struct:lcp_options
lreadset	obj/net/ns.asm	/^      lreadset = *readset;$/;"	d
lreadset	obj/net/ns.asm	/^    lreadset = *readset;$/;"	d
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
lwip_accept	net/lwip/api/sockets.c	/^lwip_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
lwip_bind	net/lwip/api/sockets.c	/^lwip_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_close	net/lwip/api/sockets.c	/^lwip_close(int s)$/;"	f
lwip_connect	net/lwip/api/sockets.c	/^lwip_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_core_lock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_lock(void)$/;"	f
lwip_core_unlock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_unlock(void)$/;"	f
lwip_event	net/lwip/include/lwip/tcp.h	/^enum lwip_event {$/;"	g
lwip_freeaddrinfo	net/lwip/api/netdb.c	/^lwip_freeaddrinfo(struct addrinfo *ai)$/;"	f
lwip_getaddrinfo	net/lwip/api/netdb.c	/^lwip_getaddrinfo(const char *nodename, const char *servname,$/;"	f
lwip_getaddrname	net/lwip/api/sockets.c	/^lwip_getaddrname(int s, struct sockaddr *name, socklen_t *namelen, u8_t local)$/;"	f	file:
lwip_gethostbyname	net/lwip/api/netdb.c	/^lwip_gethostbyname(const char *name)$/;"	f
lwip_gethostbyname_r	net/lwip/api/netdb.c	/^lwip_gethostbyname_r(const char *name, struct hostent *ret, char *buf,$/;"	f
lwip_getpeername	net/lwip/api/sockets.c	/^lwip_getpeername(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockname	net/lwip/api/sockets.c	/^lwip_getsockname(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockopt	net/lwip/api/sockets.c	/^lwip_getsockopt(int s, int level, int optname, void *optval, socklen_t *optlen)$/;"	f
lwip_getsockopt_internal	net/lwip/api/sockets.c	/^lwip_getsockopt_internal(void *arg)$/;"	f	file:
lwip_init	net/lwip/core/init.c	/^lwip_init(void)$/;"	f
lwip_init	net/serv.c	/^lwip_init(struct netif *nif, void *if_state,$/;"	f	file:
lwip_ioctl	net/lwip/api/sockets.c	/^lwip_ioctl(int s, long cmd, void *argp)$/;"	f
lwip_listen	net/lwip/api/sockets.c	/^lwip_listen(int s, int backlog)$/;"	f
lwip_read	net/lwip/api/sockets.c	/^lwip_read(int s, void *mem, int len)$/;"	f
lwip_recv	net/lwip/api/sockets.c	/^lwip_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
lwip_recvfrom	net/lwip/api/sockets.c	/^lwip_recvfrom(int s, void *mem, int len, unsigned int flags,$/;"	f
lwip_sanity_check	net/lwip/core/init.c	/^lwip_sanity_check(void)$/;"	f	file:
lwip_sanity_check	net/lwip/core/init.c	209;"	d	file:
lwip_select	net/lwip/api/sockets.c	/^lwip_select(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset,$/;"	f
lwip_select_cb	net/lwip/api/sockets.c	/^struct lwip_select_cb {$/;"	s	file:
lwip_selscan	net/lwip/api/sockets.c	/^lwip_selscan(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset)$/;"	f	file:
lwip_send	net/lwip/api/sockets.c	/^lwip_send(int s, const void *data, int size, unsigned int flags)$/;"	f
lwip_sendto	net/lwip/api/sockets.c	/^lwip_sendto(int s, const void *data, int size, unsigned int flags,$/;"	f
lwip_setgetsockopt_data	net/lwip/api/sockets.c	/^struct lwip_setgetsockopt_data {$/;"	s	file:
lwip_setsockopt	net/lwip/api/sockets.c	/^lwip_setsockopt(int s, int level, int optname, const void *optval, socklen_t optlen)$/;"	f
lwip_setsockopt_internal	net/lwip/api/sockets.c	/^lwip_setsockopt_internal(void *arg)$/;"	f	file:
lwip_shutdown	net/lwip/api/sockets.c	/^lwip_shutdown(int s, int how)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^lwip_socket(int domain, int type, int protocol)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^struct lwip_socket {$/;"	s	file:
lwip_socket_init	net/lwip/api/sockets.c	/^lwip_socket_init(void)$/;"	f
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, int len)$/;"	f	file:
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, u16_t len)$/;"	f	file:
lwip_stats	net/lwip/core/stats.c	/^struct stats_ lwip_stats;$/;"	v	typeref:struct:stats_
lwip_strerr	net/lwip/api/err.c	/^lwip_strerr(err_t err)$/;"	f
lwip_strerr	net/lwip/include/lwip/err.h	80;"	d
lwip_thread	net/lwip/jos/arch/sys_arch.c	/^struct lwip_thread {$/;"	s	file:
lwip_thread_entry	net/lwip/jos/arch/sys_arch.c	/^lwip_thread_entry(uint32_t arg)$/;"	f	file:
lwip_write	net/lwip/api/sockets.c	/^lwip_write(int s, const void *data, int size)$/;"	f
lwriteset	obj/net/ns.asm	/^      lwriteset = *writeset;$/;"	d
lwriteset	obj/net/ns.asm	/^    lwriteset = *writeset;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^        m = -m;$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sa >> 3);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sv >> 2);$/;"	d
m	obj/net/testinput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/testoutput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echosrv.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echotest.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/httpd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testtime.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/writemotd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
magic	net/lwip/netif/ppp/magic.c	/^u32_t magic()$/;"	f
magicInit	net/lwip/netif/ppp/magic.c	/^void magicInit()$/;"	f
magicnumber	net/lwip/netif/ppp/lcp.h	/^    u32_t magicnumber;$/;"	m	struct:lcp_options
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
malloc	lib/malloc.c	/^malloc(size_t n)$/;"	f
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz, $/;"	f	file:
max	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER max;$/;"	m	struct:stats_syselem
max	net/lwip/include/lwip/stats.h	/^  mem_size_t max;$/;"	m	struct:stats_mem
maxSlotIndex	net/lwip/netif/ppp/vj.h	/^  u_char maxSlotIndex;$/;"	m	struct:vjcompress
max_tid	net/lwip/jos/arch/thread.c	/^static thread_id_t max_tid;$/;"	v	file:
max_tid	obj/net/ns.asm	/^    max_tid = 0;$/;"	d
max_transmits	net/lwip/netif/ppp/chap.h	/^  int max_transmits;                      \/* Maximum # of challenge transmissions *\/$/;"	m	struct:chap_state
maxconfreqtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxconfreqtransmits;         \/* Maximum Configure-Request transmissions *\/$/;"	m	struct:fsm
maxconnect	net/lwip/netif/ppp/ppp.h	/^  int  maxconnect;                    \/* Maximum connect time (seconds) *\/$/;"	m	struct:ppp_settings
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_array_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_external_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_list_rootnode
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_ram_array_node
maxnakloops	net/lwip/netif/ppp/fsm.h	/^  int maxnakloops;                 \/* Maximum number of nak loops tolerated *\/$/;"	m	struct:fsm
maxpa	kern/pmap.c	/^static physaddr_t maxpa;	\/\/ Maximum physical address$/;"	v	file:
maxpa	obj/kern/kernel.asm	/^		maxpa = EXTPHYSMEM + extmem;$/;"	d
maxpa	obj/kern/kernel.asm	/^		maxpa = basemem;$/;"	d
maxslotindex	net/lwip/netif/ppp/ipcp.h	/^  u_char  maxslotindex;      \/* VJ slots - 1. *\/$/;"	m	struct:ipcp_options
maxtermtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxtermtransmits;            \/* Maximum Terminate-Request transmissions *\/$/;"	m	struct:fsm
mbegin	lib/malloc.c	/^static uint8_t *mbegin = (uint8_t*) 0x08000000;$/;"	v	file:
mbox	net/lwip/api/tcpip.c	/^static sys_mbox_t mbox = SYS_MBOX_NULL;$/;"	v	file:
mbox	net/lwip/include/lwip/stats.h	/^  struct stats_syselem mbox;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
mbox	obj/net/ns.asm	/^  mbox = sys_mbox_new(TCPIP_MBOX_SIZE);$/;"	d
mboxes	net/lwip/jos/arch/sys_arch.c	/^static struct sys_mbox_entry mboxes[NMBOX];$/;"	v	typeref:struct:sys_mbox_entry	file:
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem	net/lwip/core/mem.c	/^struct mem {$/;"	s	file:
mem	net/lwip/include/lwip/stats.h	/^  struct stats_mem mem;$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
mem	obj/net/ns.asm	/^      mem = (struct mem *)&ram[ptr];$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)((u8_t *)rmem - SIZEOF_STRUCT_MEM);$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)ram;$/;"	d
mem2	obj/net/ns.asm	/^          mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^    mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^  mem2 = (struct mem *)&ram[mem->next];$/;"	d
mem_calloc	net/lwip/core/mem.c	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	f
mem_calloc	net/lwip/include/lwip/mem.h	59;"	d
mem_free	net/lwip/core/mem.c	/^mem_free(void *rmem)$/;"	f
mem_free	net/lwip/include/lwip/mem.h	53;"	d
mem_free_callback	net/lwip/api/tcpip.c	/^mem_free_callback(void *m)$/;"	f
mem_free_count	net/lwip/core/mem.c	/^static volatile u8_t mem_free_count;$/;"	v	file:
mem_free_count	obj/net/ns.asm	/^      mem_free_count = 0;$/;"	d
mem_free_count	obj/net/ns.asm	/^  mem_free_count = 1;$/;"	d
mem_helper	net/lwip/core/mem.c	/^struct mem_helper$/;"	s	file:
mem_init	net/lwip/core/mem.c	/^mem_init(void)$/;"	f
mem_init	net/lwip/include/lwip/mem.h	48;"	d
mem_init	net/lwip/include/lwip/mem.h	77;"	d
mem_malloc	net/lwip/core/mem.c	/^mem_malloc(mem_size_t size)$/;"	f
mem_malloc	net/lwip/include/lwip/mem.h	56;"	d
mem_ptr_t	net/lwip/jos/arch/cc.h	/^typedef uintptr_t mem_ptr_t;$/;"	t
mem_realloc	net/lwip/core/mem.c	/^mem_realloc(void *rmem, mem_size_t newsize)$/;"	f
mem_realloc	net/lwip/include/lwip/mem.h	62;"	d
mem_realloc	net/lwip/include/lwip/mem.h	80;"	d
mem_sem	net/lwip/core/mem.c	/^static sys_sem_t mem_sem;$/;"	v	file:
mem_sem	obj/net/ns.asm	/^  mem_sem = sys_sem_new(1);$/;"	d
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef size_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u16_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u32_t mem_size_t;$/;"	t
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, void *src, size_t n)$/;"	f
memerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER memerr;           \/* Out of memory error. *\/$/;"	m	struct:stats_proto
memerr	obj/net/ns.asm	/^memerr:$/;"	l
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memp	net/lwip/core/memp.c	/^struct memp {$/;"	s	file:
memp	net/lwip/include/lwip/stats.h	/^  struct stats_mem memp[MEMP_MAX];$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
memp	obj/net/ns.asm	/^      memp = (struct memp *)((u8_t *)memp + MEMP_SIZE + memp_sizes[i]);$/;"	d
memp	obj/net/ns.asm	/^  memp = LWIP_MEM_ALIGN(memp_memory);$/;"	d
memp	obj/net/ns.asm	/^  memp = memp_tab[type];$/;"	d
memp_desc	net/lwip/core/memp.c	/^static const char *memp_desc[MEMP_MAX] = {$/;"	v	file:
memp_free	net/lwip/core/memp.c	/^memp_free(memp_t type, void *mem)$/;"	f
memp_init	net/lwip/core/memp.c	/^memp_init(void)$/;"	f
memp_malloc	net/lwip/core/memp.c	/^memp_malloc(memp_t type)$/;"	f
memp_malloc	net/lwip/include/lwip/memp.h	84;"	d
memp_memory	net/lwip/core/memp.c	/^static u8_t memp_memory[MEM_ALIGNMENT - 1 $/;"	v	file:
memp_num	net/lwip/core/memp.c	/^static const u16_t memp_num[MEMP_MAX] = {$/;"	v	file:
memp_overflow_check_all	net/lwip/core/memp.c	/^memp_overflow_check_all(void)$/;"	f	file:
memp_overflow_check_element	net/lwip/core/memp.c	/^memp_overflow_check_element(struct memp *p, u16_t memp_size)$/;"	f	file:
memp_overflow_init	net/lwip/core/memp.c	/^memp_overflow_init(void)$/;"	f	file:
memp_pool_helper_t	net/lwip/include/lwip/memp.h	/^} memp_pool_helper_t;$/;"	t	typeref:enum:__anon19
memp_sanity	net/lwip/core/memp.c	/^memp_sanity(void)$/;"	f	file:
memp_sizes	net/lwip/core/memp.c	/^const u16_t memp_sizes[MEMP_MAX] = {$/;"	v	file:
memp_t	net/lwip/include/lwip/memp.h	/^} memp_t;$/;"	t	typeref:enum:__anon18
memp_tab	net/lwip/core/memp.c	/^static struct memp *memp_tab[MEMP_MAX];$/;"	v	typeref:struct:memp	file:
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
mend	lib/malloc.c	/^static uint8_t *mend   = (uint8_t*) 0x10000000;$/;"	v	file:
mgmt	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mgmt = {$/;"	v	typeref:struct:mib_array_node
mgmt_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mgmt_ids[1] = { 1 };$/;"	v
mgmt_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mgmt_nodes[1] = { (struct mib_node* const)&mib2 };$/;"	v
mib2	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2 = {$/;"	v	typeref:struct:mib_array_node
mib2_at_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* mib2_at_node = (struct mib_node* const)&attable;$/;"	v	typeref:struct:mib_node
mib2_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mib2_ids[MIB2_GROUPS] =$/;"	v
mib2_ip	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2_ip = {$/;"	v	typeref:struct:mib_array_node
mib2_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mib2_nodes[MIB2_GROUPS] = {$/;"	v
mib_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_array_node$/;"	s
mib_external_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_external_node$/;"	s
mib_list_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_node$/;"	s
mib_list_rootnode	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_rootnode$/;"	s
mib_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_node$/;"	s
mib_ram_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_ram_array_node$/;"	s
mib_scalar_node	net/lwip/include/lwip/snmp_structs.h	/^typedef struct mib_node mib_scalar_node;$/;"	t	typeref:struct:mib_node
mime_type	user/httpd.c	/^mime_type(const char *file)$/;"	f	file:
mode	net/lwip/netif/ppp/ppp.c	/^  enum NPmode mode;$/;"	m	struct:npioctl	typeref:enum:npioctl::NPmode	file:
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mprio	obj/net/ns.asm	/^      mprio = pcb->prio;$/;"	d
mprio	obj/net/ns.asm	/^  mprio = TCP_PRIO_MAX;$/;"	d
mptr	lib/malloc.c	/^static uint8_t *mptr;$/;"	v	file:
mptr	obj/net/ns.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/net/ns.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/net/ns.asm	/^		mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = mbegin;$/;"	d
mrru	net/lwip/netif/ppp/lcp.h	/^    u_short mrru;                \/* Value of MRRU, and multilink enable *\/$/;"	m	struct:lcp_options
mru	net/lwip/netif/ppp/lcp.h	/^    u_short mru;                 \/* Value of MRU *\/$/;"	m	struct:lcp_options
msec	net/serv.c	/^	uint32_t msec;$/;"	m	struct:timer_thread	file:
msecs	net/lwip/include/lwip/tcpip.h	/^      u32_t msecs;$/;"	m	struct:tcpip_msg::__anon28::__anon31
msecs	obj/net/ns.asm	/^  msecs = 10*1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = 500;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 2000 : 20 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? (dhcp->tries + 1) * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? dhcp->tries * 1000 : 4 * 1000;$/;"	d
msectimeout	obj/net/ns.asm	/^        msectimeout = 1;$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout =  ((timeout->tv_sec * 1000) + ((timeout->tv_usec + 500)\/1000));$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout = 0;$/;"	d
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	net/lwip/include/lwip/api_msg.h	/^  struct api_msg_msg msg;$/;"	m	struct:api_msg	typeref:struct:api_msg::api_msg_msg
msg	net/lwip/include/lwip/api_msg.h	/^  } msg;$/;"	m	struct:api_msg_msg	typeref:union:api_msg_msg::__anon20
msg	net/lwip/include/lwip/netifapi.h	/^  struct netifapi_msg_msg msg;$/;"	m	struct:netifapi_msg	typeref:struct:netifapi_msg::netifapi_msg_msg
msg	net/lwip/include/lwip/netifapi.h	/^  } msg;$/;"	m	struct:netifapi_msg_msg	typeref:union:netifapi_msg_msg::__anon15
msg	net/lwip/include/lwip/tcpip.h	/^  } msg;$/;"	m	struct:tcpip_msg	typeref:union:tcpip_msg::__anon28
msg	net/lwip/jos/arch/sys_arch.c	/^    void *msg[MBOXSLOTS];$/;"	m	struct:sys_mbox_entry	file:
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_API);$/;"	d
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_INPKT);$/;"	d
msg	user/echotest.c	/^char *msg = "Hello world!\\n";$/;"	v
msg	user/httpd.c	/^	char *msg;$/;"	m	struct:error_messages	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon39	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon39	file:
msg_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_in;$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_input_list	net/lwip/core/snmp/msg_in.c	/^struct snmp_msg_pstat msg_input_list[SNMP_CONCURRENT_REQUESTS];$/;"	v	typeref:struct:snmp_msg_pstat
msg_out	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_out; \/* outgoing msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_type	obj/net/ns.asm	/^  msg_type = dhcp_get_option_byte(options_ptr + 2);$/;"	d
mss	net/lwip/include/lwip/tcp.h	/^  u16_t mss;   \/* maximum segment size *\/$/;"	m	struct:tcp_pcb
mss	obj/net/ns.asm	/^        mss = (opts[c + 2] << 8) | opts[c + 3];$/;"	d
mss_s	obj/net/ns.asm	/^    mss_s = outif->mtu - IP_HLEN - TCP_HLEN;$/;"	d
mtu	net/lwip/include/lwip/netif.h	/^  u16_t mtu;$/;"	m	struct:netif
mtu	net/lwip/netif/ppp/ppp.c	/^  int  mtu;                     \/* Peer's mru *\/$/;"	m	struct:PPPControl_s	file:
multiaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *multiaddr;$/;"	m	struct:api_msg_msg::__anon20::__anon26	typeref:struct:api_msg_msg::__anon20::__anon26::ip_addr
multicast_ip	net/lwip/include/lwip/udp.h	/^  struct ip_addr multicast_ip;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::ip_addr
mygdt	kern/entry.S	/^mygdt:$/;"	l
mygdtdesc	kern/entry.S	/^mygdtdesc:$/;"	l
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:
n	net/lwip/include/lwip/api_msg.h	/^    } n;$/;"	m	union:api_msg_msg::__anon20	typeref:struct:api_msg_msg::__anon20::__anon21
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npage*sizeof(struct Page), PGSIZE);$/;"	d
n	obj/net/ns.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/net/ns.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/net/testinput.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/echosrv.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/echotest.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/httpd.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/user/httpd.asm	/^  n = pp - parts + 1;$/;"	d
nPut	net/lwip/netif/ppp/ppp.c	/^nPut(PPPControl *pc, struct pbuf *nb)$/;"	f	file:
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
nak_buffer	net/lwip/netif/ppp/lcp.c	/^static u_char nak_buffer[PPP_MRU]; \/* where we construct a nak packet *\/$/;"	v	file:
nakci	net/lwip/netif/ppp/fsm.h	/^  int  (*nakci)(fsm*, u_char*, int);                \/* NAK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
nakloops	net/lwip/netif/ppp/fsm.h	/^  int nakloops;                    \/* Number of nak loops since last ack *\/$/;"	m	struct:fsm
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
name	net/lwip/core/dns.c	/^  char name[DNS_MAX_NAME_LENGTH];$/;"	m	struct:dns_table_entry	file:
name	net/lwip/include/lwip/api_msg.h	/^  const char *name;$/;"	m	struct:dns_api_msg
name	net/lwip/include/lwip/netif.h	/^  char name[2];$/;"	m	struct:netif
name	net/lwip/netif/ppp/ppp.h	/^    char *name;         \/* Text name of protocol *\/$/;"	m	struct:protent
name	net/serv.c	/^	const char *name;$/;"	m	struct:timer_thread	file:
name_size	net/lwip/jos/arch/threadq.h	/^enum { name_size = 32 };$/;"	e	enum:__anon37
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
neg_accompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_accompression : 1; \/* HDLC Address\/Control Field Compression? *\/$/;"	m	struct:lcp_options
neg_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_addr      : 1; \/* Negotiate IP Address? *\/$/;"	m	struct:ipcp_options
neg_asyncmap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_asyncmap      : 1; \/* Negotiate the async map? *\/$/;"	m	struct:lcp_options
neg_cbcp	net/lwip/netif/ppp/lcp.h	/^    u_int neg_cbcp          : 1; \/* Negotiate use of CBCP *\/$/;"	m	struct:lcp_options
neg_chap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_chap          : 1; \/* Ask for CHAP authentication? *\/$/;"	m	struct:lcp_options
neg_endpoint	net/lwip/netif/ppp/lcp.h	/^    u_int neg_endpoint      : 1; \/* Negotiate endpoint discriminator *\/$/;"	m	struct:lcp_options
neg_lqr	net/lwip/netif/ppp/lcp.h	/^    u_int neg_lqr           : 1; \/* Negotiate use of Link Quality Reports *\/$/;"	m	struct:lcp_options
neg_magicnumber	net/lwip/netif/ppp/lcp.h	/^    u_int neg_magicnumber   : 1; \/* Ask for magic number? *\/$/;"	m	struct:lcp_options
neg_mrru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mrru          : 1; \/* Negotiate multilink MRRU *\/$/;"	m	struct:lcp_options
neg_mru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mru           : 1; \/* Negotiate the MRU? *\/$/;"	m	struct:lcp_options
neg_pcompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_pcompression  : 1; \/* HDLC Protocol Field Compression? *\/$/;"	m	struct:lcp_options
neg_ssnhf	net/lwip/netif/ppp/lcp.h	/^    u_int neg_ssnhf         : 1; \/* Negotiate short sequence numbers *\/$/;"	m	struct:lcp_options
neg_upap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_upap          : 1; \/* Ask for UPAP authentication? *\/$/;"	m	struct:lcp_options
neg_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_vj        : 1; \/* Van Jacobson Compression? *\/$/;"	m	struct:ipcp_options
net_timer	net/serv.c	/^net_timer(uint32_t arg)$/;"	f	file:
netbuf	net/lwip/include/lwip/netbuf.h	/^struct netbuf {$/;"	s
netbuf	obj/net/ns.asm	/^netbuf *netbuf_new(void)$/;"	l
netbuf_alloc	net/lwip/api/netbuf.c	/^netbuf_alloc(struct netbuf *buf, u16_t size)$/;"	f
netbuf_chain	net/lwip/api/netbuf.c	/^netbuf_chain(struct netbuf *head, struct netbuf *tail)$/;"	f
netbuf_copy	net/lwip/include/lwip/netbuf.h	67;"	d
netbuf_copy_partial	net/lwip/include/lwip/netbuf.h	65;"	d
netbuf_data	net/lwip/api/netbuf.c	/^netbuf_data(struct netbuf *buf, void **dataptr, u16_t *len)$/;"	f
netbuf_delete	net/lwip/api/netbuf.c	/^netbuf_delete(struct netbuf *buf)$/;"	f
netbuf_first	net/lwip/api/netbuf.c	/^netbuf_first(struct netbuf *buf)$/;"	f
netbuf_free	net/lwip/api/netbuf.c	/^netbuf_free(struct netbuf *buf)$/;"	f
netbuf_fromaddr	net/lwip/include/lwip/netbuf.h	69;"	d
netbuf_fromport	net/lwip/include/lwip/netbuf.h	70;"	d
netbuf_len	net/lwip/include/lwip/netbuf.h	68;"	d
netbuf_new	net/lwip/api/netbuf.c	/^netbuf *netbuf_new(void)$/;"	f
netbuf_next	net/lwip/api/netbuf.c	/^netbuf_next(struct netbuf *buf)$/;"	f
netbuf_ref	net/lwip/api/netbuf.c	/^netbuf_ref(struct netbuf *buf, const void *dataptr, u16_t size)$/;"	f
netconn	net/lwip/include/lwip/api.h	/^struct netconn {$/;"	s
netconn_accept	net/lwip/api/api_lib.c	/^netconn_accept(struct netconn *conn)$/;"	f
netconn_addr	net/lwip/include/lwip/api.h	176;"	d
netconn_alloc	net/lwip/api/api_msg.c	/^netconn_alloc(enum netconn_type t, netconn_callback callback)$/;"	f
netconn_bind	net/lwip/api/api_lib.c	/^netconn_bind(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_callback	net/lwip/include/lwip/api.h	/^typedef void (* netconn_callback)(struct netconn *, enum netconn_evt, u16_t len);$/;"	t
netconn_close	net/lwip/api/api_lib.c	/^netconn_close(struct netconn *conn)$/;"	f
netconn_connect	net/lwip/api/api_lib.c	/^netconn_connect(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_delete	net/lwip/api/api_lib.c	/^netconn_delete(struct netconn *conn)$/;"	f
netconn_disconnect	net/lwip/api/api_lib.c	/^netconn_disconnect(struct netconn *conn)$/;"	f
netconn_err	net/lwip/include/lwip/api.h	208;"	d
netconn_evt	net/lwip/include/lwip/api.h	/^enum netconn_evt {$/;"	g
netconn_free	net/lwip/api/api_msg.c	/^netconn_free(struct netconn *conn)$/;"	f
netconn_getaddr	net/lwip/api/api_lib.c	/^netconn_getaddr(struct netconn *conn, struct ip_addr *addr, u16_t *port, u8_t local)$/;"	f
netconn_gethostbyname	net/lwip/api/api_lib.c	/^netconn_gethostbyname(const char *name, struct ip_addr *addr)$/;"	f
netconn_igmp	net/lwip/include/lwip/api.h	/^enum netconn_igmp {$/;"	g
netconn_join_leave_group	net/lwip/api/api_lib.c	/^netconn_join_leave_group(struct netconn *conn,$/;"	f
netconn_listen	net/lwip/include/lwip/api.h	186;"	d
netconn_listen_with_backlog	net/lwip/api/api_lib.c	/^netconn_listen_with_backlog(struct netconn *conn, u8_t backlog)$/;"	f
netconn_new	net/lwip/include/lwip/api.h	163;"	d
netconn_new_with_callback	net/lwip/include/lwip/api.h	164;"	d
netconn_new_with_proto_and_callback	net/lwip/api/api_lib.c	/^netconn_new_with_proto_and_callback(enum netconn_type t, u8_t proto, netconn_callback callback)$/;"	f
netconn_peer	net/lwip/include/lwip/api.h	175;"	d
netconn_recv	net/lwip/api/api_lib.c	/^netconn_recv(struct netconn *conn)$/;"	f
netconn_recv_bufsize	net/lwip/include/lwip/api.h	209;"	d
netconn_send	net/lwip/api/api_lib.c	/^netconn_send(struct netconn *conn, struct netbuf *buf)$/;"	f
netconn_sendto	net/lwip/api/api_lib.c	/^netconn_sendto(struct netconn *conn, struct netbuf *buf, struct ip_addr *addr, u16_t port)$/;"	f
netconn_state	net/lwip/include/lwip/api.h	/^enum netconn_state {$/;"	g
netconn_type	net/lwip/api/api_lib.c	/^netconn_type(struct netconn *conn)$/;"	f
netconn_type	net/lwip/include/lwip/api.h	/^enum netconn_type {$/;"	g
netconn_write	net/lwip/api/api_lib.c	/^netconn_write(struct netconn *conn, const void *dataptr, int size, u8_t apiflags)$/;"	f
netif	net/lwip/include/lwip/netif.h	/^struct netif {$/;"	s
netif	net/lwip/include/lwip/netifapi.h	/^  struct netif *netif;$/;"	m	struct:netifapi_msg_msg	typeref:struct:netifapi_msg_msg::netif
netif	net/lwip/include/lwip/tcpip.h	/^      struct netif *netif;$/;"	m	struct:tcpip_msg::__anon28::__anon29	typeref:struct:tcpip_msg::__anon28::__anon29::netif
netif	net/lwip/netif/etharp.c	/^  struct netif *netif;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::netif	file:
netif	net/lwip/netif/ppp/ppp.c	/^  struct netif netif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
netif	obj/net/ns.asm	/^        netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif_list;$/;"	d
netif	obj/net/ns.asm	/^    netif = ip_route(&(pcb->remote_ip));$/;"	d
netif	obj/net/ns.asm	/^    netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route((ip_addr_ismulticast(dst_ip))?(&(pcb->multicast_ip)):(dst_ip));$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route(dst_ip);$/;"	d
netif_add	net/lwip/core/netif.c	/^netif_add(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_default	net/lwip/core/netif.c	/^struct netif *netif_default;$/;"	v	typeref:struct:netif
netif_default	obj/net/ns.asm	/^  netif_default = netif;$/;"	d
netif_find	net/lwip/core/netif.c	/^netif_find(char *name)$/;"	f
netif_init	net/lwip/include/lwip/netif.h	205;"	d
netif_is_link_up	net/lwip/core/netif.c	/^u8_t netif_is_link_up(struct netif *netif)$/;"	f
netif_is_up	net/lwip/core/netif.c	/^u8_t netif_is_up(struct netif *netif)$/;"	f
netif_list	net/lwip/core/netif.c	/^struct netif *netif_list;$/;"	v	typeref:struct:netif
netif_list	obj/net/ns.asm	/^    netif_list = netif->next;$/;"	d
netif_list	obj/net/ns.asm	/^  netif_list = netif;$/;"	d
netif_loop_output	net/lwip/core/netif.c	/^netif_loop_output(struct netif *netif, struct pbuf *p,$/;"	f
netif_poll	net/lwip/core/netif.c	/^netif_poll(struct netif *netif)$/;"	f
netif_poll_all	net/lwip/core/netif.c	/^netif_poll_all(void)$/;"	f
netif_remove	net/lwip/core/netif.c	/^void netif_remove(struct netif * netif)$/;"	f
netif_set_addr	net/lwip/core/netif.c	/^netif_set_addr(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_set_default	net/lwip/core/netif.c	/^netif_set_default(struct netif *netif)$/;"	f
netif_set_down	net/lwip/core/netif.c	/^void netif_set_down(struct netif *netif)$/;"	f
netif_set_gw	net/lwip/core/netif.c	/^netif_set_gw(struct netif *netif, struct ip_addr *gw)$/;"	f
netif_set_ipaddr	net/lwip/core/netif.c	/^netif_set_ipaddr(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
netif_set_link_callback	net/lwip/core/netif.c	/^void netif_set_link_callback(struct netif *netif, void (* link_callback)(struct netif *netif ))$/;"	f
netif_set_link_down	net/lwip/core/netif.c	/^void netif_set_link_down(struct netif *netif )$/;"	f
netif_set_link_up	net/lwip/core/netif.c	/^void netif_set_link_up(struct netif *netif )$/;"	f
netif_set_netmask	net/lwip/core/netif.c	/^netif_set_netmask(struct netif *netif, struct ip_addr *netmask)$/;"	f
netif_set_status_callback	net/lwip/core/netif.c	/^void netif_set_status_callback(struct netif *netif, void (* status_callback)(struct netif *netif ))$/;"	f
netif_set_up	net/lwip/core/netif.c	/^void netif_set_up(struct netif *netif)$/;"	f
netifapi_autoip_start	net/lwip/include/lwip/netifapi.h	91;"	d
netifapi_autoip_stop	net/lwip/include/lwip/netifapi.h	92;"	d
netifapi_dhcp_start	net/lwip/include/lwip/netifapi.h	89;"	d
netifapi_dhcp_stop	net/lwip/include/lwip/netifapi.h	90;"	d
netifapi_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg {$/;"	s
netifapi_msg_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg_msg {$/;"	s
netifapi_netif_add	net/lwip/api/netifapi.c	/^netifapi_netif_add(struct netif *netif,$/;"	f
netifapi_netif_common	net/lwip/api/netifapi.c	/^netifapi_netif_common( struct netif *netif,$/;"	f
netifapi_netif_remove	net/lwip/include/lwip/netifapi.h	85;"	d
netifapi_netif_set_default	net/lwip/include/lwip/netifapi.h	88;"	d
netifapi_netif_set_down	net/lwip/include/lwip/netifapi.h	87;"	d
netifapi_netif_set_up	net/lwip/include/lwip/netifapi.h	86;"	d
netifapimsg	net/lwip/include/lwip/tcpip.h	/^    struct netifapi_msg *netifapimsg;$/;"	m	union:tcpip_msg::__anon28	typeref:struct:tcpip_msg::__anon28::netifapi_msg
netmask	net/lwip/include/lwip/netif.h	/^  struct ip_addr netmask;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
netmask	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *netmask;$/;"	m	struct:netifapi_msg_msg::__anon15::__anon16	typeref:struct:netifapi_msg_msg::__anon15::__anon16::ip_addr
netmask	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
network_phase	net/lwip/netif/ppp/auth.c	/^network_phase(int unit)$/;"	f	file:
new_entry	obj/net/ns.asm	/^        new_entry = memp_malloc(MEMP_ARP_QUEUE);$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
new_tot_len	obj/net/ns.asm	/^        new_tot_len = (u16_t)(inseg.p->tot_len - off);$/;"	d
newconn	obj/net/ns.asm	/^    newconn = NULL;$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_accept(sock->conn);$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_alloc(conn->type, conn->callback);$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/ns.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testinput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testoutput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echosrv.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echotest.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/httpd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testtime.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/writemotd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newsize	obj/net/ns.asm	/^    newsize = MIN_SIZE_ALIGNED;$/;"	d
newsize	obj/net/ns.asm	/^  newsize = LWIP_MEM_ALIGN_SIZE(newsize);$/;"	d
newsock	obj/net/ns.asm	/^  newsock = alloc_socket(newconn);$/;"	d
next	net/lwip/api/sockets.c	/^  struct lwip_select_cb *next;$/;"	m	struct:lwip_select_cb	typeref:struct:lwip_select_cb::lwip_select_cb	file:
next	net/lwip/core/mem.c	/^  mem_size_t next;$/;"	m	struct:mem	file:
next	net/lwip/core/memp.c	/^  struct memp *next;$/;"	m	struct:memp	typeref:struct:memp::memp	file:
next	net/lwip/include/ipv4/lwip/igmp.h	/^  struct igmp_group *next;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::igmp_group
next	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_reassdata *next;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_reassdata
next	net/lwip/include/lwip/netif.h	/^  struct netif *next;$/;"	m	struct:netif	typeref:struct:netif::netif
next	net/lwip/include/lwip/pbuf.h	/^  struct pbuf *next;$/;"	m	struct:pbuf	typeref:struct:pbuf::pbuf
next	net/lwip/include/lwip/raw.h	/^  struct raw_pcb *next;$/;"	m	struct:raw_pcb	typeref:struct:raw_pcb::raw_pcb
next	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *next;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
next	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *next;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeo	typeref:struct:sys_timeo::sys_timeo
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeouts	typeref:struct:sys_timeouts::sys_timeo
next	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *next;    \/* used when putting segements on a queue *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_seg
next	net/lwip/include/lwip/udp.h	/^  struct udp_pcb *next;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::udp_pcb
next	net/lwip/include/netif/etharp.h	/^  struct etharp_q_entry *next;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::etharp_q_entry
next	net/lwip/netif/ppp/auth.c	/^  struct wordlist *next;$/;"	m	struct:wordlist	typeref:struct:wordlist::wordlist	file:
next	obj/net/ns.asm	/^                    next = cseg->next;$/;"	d
next	obj/net/ns.asm	/^        next = pcb->unacked;$/;"	d
next	obj/net/ns.asm	/^      next = pcb->unsent;$/;"	d
next	obj/net/ns.asm	/^    next = mem2->next;$/;"	d
next	obj/net/ns.asm	/^    next = seg->next;$/;"	d
next_i	net/serv.c	/^static int next_i(int i) { return (i+1) % QUEUE_SIZE; }$/;"	f	file:
next_pbuf	net/lwip/core/ipv4/ip_frag.c	/^  struct pbuf *next_pbuf;$/;"	m	struct:ip_reass_helper	typeref:struct:ip_reass_helper::pbuf	file:
nexthdr	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t nexthdr;             \/* next header *\/$/;"	m	struct:ip_hdr
nextq	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
nfb	obj/net/ns.asm	/^  nfb = (mtu - IP_HLEN) \/ 8;$/;"	d
nif	net/serv.c	/^struct netif nif;$/;"	v	typeref:struct:netif
nmem	obj/net/ns.asm	/^  nmem = (struct mem *)&ram[mem->next];$/;"	d
node_stack	net/lwip/core/snmp/mib_structs.c	/^static struct nse node_stack[NODE_STACK_SIZE];$/;"	v	typeref:struct:nse	file:
node_stack_cnt	net/lwip/core/snmp/mib_structs.c	/^static u8_t node_stack_cnt;$/;"	v	file:
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_array_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_external_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_list_rootnode
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_ram_array_node
noleafs_get_object_def	net/lwip/core/snmp/mib2.c	/^noleafs_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f
noleafs_get_value	net/lwip/core/snmp/mib2.c	/^noleafs_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_test	net/lwip/core/snmp/mib2.c	/^noleafs_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_value	net/lwip/core/snmp/mib2.c	/^noleafs_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
now	obj/net/ns.asm	/^	now = sys_time_msec();$/;"	d
np_down	net/lwip/netif/ppp/auth.c	/^np_down(int unit, u16_t proto)$/;"	f
np_finished	net/lwip/netif/ppp/auth.c	/^np_finished(int unit, u16_t proto)$/;"	f
np_up	net/lwip/netif/ppp/auth.c	/^np_up(int unit, u16_t proto)$/;"	f
npage	kern/pmap.c	/^size_t npage;			\/\/ Amount of physical memory (in pages)$/;"	v
npage	obj/kern/kernel.asm	/^	npage = maxpa \/ PGSIZE;$/;"	d
npcb	obj/net/ns.asm	/^    npcb = tcp_alloc(pcb->prio);$/;"	d
npioctl	net/lwip/netif/ppp/ppp.c	/^struct npioctl {$/;"	s	file:
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node **nptr;$/;"	m	struct:mib_ram_array_node	typeref:struct:mib_ram_array_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node *nptr;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node* const *nptr;$/;"	m	struct:mib_array_node
nready	obj/net/ns.asm	/^    nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nready	obj/net/ns.asm	/^  nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nrtx	net/lwip/include/lwip/tcp.h	/^  u8_t nrtx;    \/* number of retransmissions *\/$/;"	m	struct:tcp_pcb
nse	net/lwip/core/snmp/mib_structs.c	/^struct nse$/;"	s	file:
nsipc	lib/nsipc.c	/^nsipc(unsigned type)$/;"	f	file:
nsipc_accept	lib/nsipc.c	/^nsipc_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
nsipc_bind	lib/nsipc.c	/^nsipc_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_close	lib/nsipc.c	/^nsipc_close(int s)$/;"	f
nsipc_connect	lib/nsipc.c	/^nsipc_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_listen	lib/nsipc.c	/^nsipc_listen(int s, int backlog)$/;"	f
nsipc_recv	lib/nsipc.c	/^nsipc_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
nsipc_send	lib/nsipc.c	/^nsipc_send(int s, const void *buf, int size, unsigned int flags)$/;"	f
nsipc_shutdown	lib/nsipc.c	/^nsipc_shutdown(int s, int how)$/;"	f
nsipc_socket	lib/nsipc.c	/^nsipc_socket(int domain, int type, int protocol)$/;"	f
nsipcbuf	lib/entry.S	/^nsipcbuf:$/;"	l
nsock	obj/net/ns.asm	/^  nsock = &sockets[newsock];$/;"	d
ntohl	net/lwip/core/ipv4/inet.c	/^ntohl(u32_t n)$/;"	f
ntohl	net/lwip/include/ipv4/lwip/inet.h	62;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	73;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	80;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	86;"	d
ntohs	net/lwip/core/ipv4/inet.c	/^ntohs(u16_t n)$/;"	f
ntohs	net/lwip/include/ipv4/lwip/inet.h	59;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	71;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	78;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	84;"	d
null_login	net/lwip/netif/ppp/auth.c	/^null_login(int unit)$/;"	f	file:
nullreturn	obj/net/ns.asm	/^nullreturn:$/;"	l
num	net/lwip/include/lwip/netif.h	/^  u8_t num;$/;"	m	struct:netif
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/ns.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/ns.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/ns.asm	/^  num = name[2] - '0';$/;"	d
num	obj/net/testinput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testinput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testinput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testinput.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testoutput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testoutput.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/net/testoutput.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echosrv.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echosrv.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echosrv.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echotest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echotest.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echotest.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/httpd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/httpd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/httpd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testtime.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testtime.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testtime.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/writemotd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/writemotd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/writemotd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/writemotd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num_np_open	net/lwip/netif/ppp/auth.c	/^static int num_np_open;$/;"	v	file:
num_np_up	net/lwip/netif/ppp/auth.c	/^static int num_np_up;$/;"	v	file:
numanswers	net/lwip/core/dns.c	/^  u16_t numanswers;$/;"	m	struct:dns_hdr	file:
numauthrr	net/lwip/core/dns.c	/^  u16_t numauthrr;$/;"	m	struct:dns_hdr	file:
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/net/ns.asm	/^		number:$/;"	l
number	obj/net/testinput.asm	/^		number:$/;"	l
number	obj/net/testoutput.asm	/^		number:$/;"	l
number	obj/user/echosrv.asm	/^		number:$/;"	l
number	obj/user/echotest.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/httpd.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/testtime.asm	/^		number:$/;"	l
number	obj/user/writemotd.asm	/^		number:$/;"	l
numdns	net/lwip/core/dns.c	/^  u8_t  numdns;$/;"	m	struct:dns_table_entry	file:
numextrarr	net/lwip/core/dns.c	/^  u16_t numextrarr;$/;"	m	struct:dns_hdr	file:
numloops	net/lwip/netif/ppp/lcp.h	/^    int numloops;                \/* Number of loops during magic number neg. *\/$/;"	m	struct:lcp_options
numquestions	net/lwip/core/dns.c	/^  u16_t numquestions;$/;"	m	struct:dns_hdr	file:
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/ns.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testinput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testoutput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echosrv.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echotest.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/httpd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testtime.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/writemotd.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
nwrap	obj/net/ns.asm	/^	nwrap = 0;$/;"	d
nwrap	obj/user/httpd.asm	/^	nwrap = 0;$/;"	d
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
obj_def	net/lwip/include/lwip/snmp_structs.h	/^struct obj_def$/;"	s
objectidncpy	net/lwip/core/snmp/mib2.c	/^void objectidncpy(s32_t *dst, s32_t *src, u8_t n)$/;"	f
objid	net/lwip/include/lwip/snmp_structs.h	/^  const s32_t *objid;$/;"	m	struct:mib_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *objid;$/;"	m	struct:mib_ram_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t objid;$/;"	m	struct:mib_list_node
ocstrncpy	net/lwip/core/snmp/mib2.c	/^void ocstrncpy(u8_t *dst, u8_t *src, u8_t n)$/;"	f
octetptr	obj/net/ns.asm	/^  octetptr = (u8_t*)dataptr;$/;"	d
off	obj/net/ns.asm	/^      off = pcb->rcv_nxt - seqno;$/;"	d
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offered_bc_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_bc_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_dns_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_dns_addr[DHCP_MAX_DNS]; \/* DNS server addresses *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_gw_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_gw_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_ip_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_sn_mask	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_sn_mask;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_t0_lease	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t0_lease; \/* lease period (in seconds) *\/$/;"	m	struct:dhcp
offered_t1_renew	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t1_renew; \/* recommended renew time (usually 50% of lease period) *\/$/;"	m	struct:dhcp
offered_t2_rebind	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t2_rebind; \/* recommended rebind time (usually 66% of lease period)  *\/$/;"	m	struct:dhcp
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offset	obj/net/ns.asm	/^      offset = 0;$/;"	d
offset	obj/net/ns.asm	/^  offset = (ntohs(IPH_OFFSET(fraghdr)) & IP_OFFMASK) * 8;$/;"	d
offset	obj/net/ns.asm	/^  offset = 0;$/;"	d
offset_from	obj/net/ns.asm	/^      offset_from = 0;$/;"	d
offset_to	obj/net/ns.asm	/^      offset_to = 0;$/;"	d
offsetof	inc/types.h	70;"	d
ofo	obj/net/ns.asm	/^  ofo = tmp & IP_OFFMASK;$/;"	d
old_addrs	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_addrs     : 1; \/* Use old (IP-Addresses) option? *\/$/;"	m	struct:ipcp_options
old_cwnd	obj/net/ns.asm	/^        old_cwnd = pcb->cwnd;$/;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
old_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_vj        : 1; \/* use old (short) form of VJ option? *\/$/;"	m	struct:ipcp_options
oldest	obj/net/ns.asm	/^          oldest = r;$/;"	d
oldest	obj/net/ns.asm	/^    oldest = NULL;$/;"	d
olen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t olen;$/;"	m	struct:snmp_varbind
olenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t olenlen;$/;"	m	struct:snmp_varbind
omf	obj/net/ns.asm	/^  omf = tmp & IP_MF;$/;"	d
ooseq	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *ooseq;    \/* Received out of sequence segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
op_completed	net/lwip/include/lwip/api.h	/^  sys_sem_t op_completed;$/;"	m	struct:netconn
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
open	net/lwip/netif/ppp/ppp.h	/^    void (*open) (int unit);$/;"	m	struct:protent
openFlag	net/lwip/netif/ppp/ppp.c	/^  char openFlag;                \/* True when in use. *\/$/;"	m	struct:PPPControl_s	file:
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
opt	obj/net/ns.asm	/^      opt = opts[c];$/;"	d
optdata	obj/net/ns.asm	/^    optdata = TCP_BUILD_MSS_OPTION();$/;"	d
optdata	obj/net/ns.asm	/^  optdata = TCP_BUILD_MSS_OPTION();$/;"	d
opterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER opterr;           \/* Error in options. *\/$/;"	m	struct:stats_proto
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_BROADCAST);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_DNS_SERVER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_LEASE_TIME);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_ROUTER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_SUBNET_MASK);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T1);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T2);$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->file;$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->sname;$/;"	d
options_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *options_in; $/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
options_in_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_in_len;$/;"	m	struct:dhcp
options_out_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_out_len; \/* outgoing msg options length *\/$/;"	m	struct:dhcp
options_ptr	obj/net/ns.asm	/^  options_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_MESSAGE_TYPE);$/;"	d
optlen	net/lwip/api/sockets.c	/^  socklen_t *optlen;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	net/lwip/api/sockets.c	/^  int optname;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	obj/net/ns.asm	/^  optname = data->optname;$/;"	d
opts	obj/net/ns.asm	/^  opts = (u8_t *)tcphdr + TCP_HLEN;$/;"	d
optval	net/lwip/api/sockets.c	/^  void *optval;$/;"	m	struct:lwip_setgetsockopt_data	file:
optval	obj/net/ns.asm	/^  optval = data->optval;$/;"	d
original_iphdr	obj/net/ns.asm	/^  original_iphdr = p->payload;$/;"	d
other_datagrams	obj/net/ns.asm	/^    other_datagrams = 0;$/;"	d
our_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::ip_addr
our_name	net/lwip/netif/ppp/ppp.h	/^  char our_name   [MAXNAMELEN   + 1]; \/* Our name for authentication purposes *\/$/;"	m	struct:ppp_settings
ouraddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
out	obj/net/ns.asm	/^out:$/;"	l
out	obj/net/testinput.asm	/^			out = buf + snprintf(buf, end - buf,$/;"	d
outACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm outACCM;             \/* Async-Ctl-Char-Map for output. *\/$/;"	m	struct:PPPControl_s	file:
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outif	obj/net/ns.asm	/^  outif = ip_route(addr);$/;"	d
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outpacket_buf	net/lwip/netif/ppp/ppp.c	/^u_char *outpacket_buf[NUM_PPP];  $/;"	v
output	net/lwip/include/lwip/netif.h	/^  err_t (* output)(struct netif *netif, struct pbuf *p,$/;"	m	struct:netif
output	net/output.c	/^void output(uint32_t ns_envid)$/;"	f
output_envid	net/serv.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testinput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testoutput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	obj/net/ns.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/ns.asm	/^    output_envid = (envid_t *)netif->state;$/;"	d
output_envid	obj/net/testinput.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/testoutput.asm	/^	output_envid = fork();$/;"	d
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_varbind_root
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/ns.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testinput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testoutput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echosrv.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echotest.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/httpd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testtime.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/writemotd.asm	/^	ova = fd2data(oldfd);$/;"	d
overload	obj/net/ns.asm	/^        overload = options[offset++];$/;"	d
p	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct pbuf *p;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::pbuf
p	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p;$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::pbuf
p	net/lwip/include/lwip/tcp.h	/^  struct pbuf *p;          \/* buffer containing data + TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::pbuf
p	net/lwip/include/lwip/tcpip.h	/^      struct pbuf *p;$/;"	m	struct:tcpip_msg::__anon28::__anon29	typeref:struct:tcpip_msg::__anon28::__anon29::pbuf
p	net/lwip/include/netif/etharp.h	/^  struct pbuf *p;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::pbuf
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/kern/kernel.asm	/^	p = pgdir_walk( pgdir, va, 0);$/;"	d
p	obj/net/ns.asm	/^				p = "(null)";$/;"	d
p	obj/net/ns.asm	/^	p = sys_time_msec();$/;"	d
p	obj/net/ns.asm	/^          p = NULL;$/;"	d
p	obj/net/ns.asm	/^          p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = NULL;$/;"	d
p	obj/net/ns.asm	/^        p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^        p = q;$/;"	d
p	obj/net/ns.asm	/^      p = NULL;$/;"	d
p	obj/net/ns.asm	/^      p = inseg.p;$/;"	d
p	obj/net/ns.asm	/^      p = memp_malloc(MEMP_PBUF_POOL);$/;"	d
p	obj/net/ns.asm	/^      p = q;$/;"	d
p	obj/net/ns.asm	/^      p = r;$/;"	d
p	obj/net/ns.asm	/^    p = (struct pbuf*)mem_malloc(LWIP_MEM_ALIGN_SIZE(SIZEOF_STRUCT_PBUF + offset) + LWIP_MEM_ALIGN_SIZE(length));$/;"	d
p	obj/net/ns.asm	/^    p = ip_reass(p);$/;"	d
p	obj/net/ns.asm	/^    p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^    p = iprh->next_pbuf;$/;"	d
p	obj/net/ns.asm	/^    p = memp_malloc(MEMP_PBUF);$/;"	d
p	obj/net/ns.asm	/^    p = p->next;$/;"	d
p	obj/net/ns.asm	/^    p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^    p = q->p;$/;"	d
p	obj/net/ns.asm	/^  p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^  p = mem_malloc(count * size);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN + 1, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_LINK, sizeof(struct etharp_hdr), PBUF_RAM);$/;"	d
p	obj/net/testinput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testoutput.asm	/^				p = "(null)";$/;"	d
p	obj/user/echosrv.asm	/^				p = "(null)";$/;"	d
p	obj/user/echotest.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/httpd.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/testtime.asm	/^				p = "(null)";$/;"	d
p	obj/user/writemotd.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_from	obj/net/ns.asm	/^      p_from = p_from->next;$/;"	d
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_out	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p_out; \/* pbuf of outcoming msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_sock	obj/net/ns.asm	/^      p_sock = get_socket(i);$/;"	d
p_to	obj/net/ns.asm	/^      p_to = p_to->next;$/;"	d
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = e->env_cr3;$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
page2kva	kern/pmap.h	/^page2kva(struct Page *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct Page *pp)$/;"	f
page2ppn	kern/pmap.h	/^page2ppn(struct Page *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(struct Page **pp_store)$/;"	f
page_check	kern/pmap.c	/^page_check(void)$/;"	f	file:
page_decref	kern/pmap.c	/^page_decref(struct Page* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct Page *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct Page_list page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:Page_list	file:
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_initpp	kern/pmap.c	/^page_initpp(struct Page *pp)$/;"	f	file:
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct Page *pp, void *va, int perm) $/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
page_status	kern/monitor.c	/^int page_status(int argc, char**argv, struct Trapframe *tf)$/;"	f
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct Page* pages;		\/\/ Virtual address of physical page array$/;"	v	typeref:struct:Page
pages	obj/kern/kernel.asm	/^	pages = (struct Page *)boot_alloc (npage*sizeof(struct Page), PGSIZE);$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^static const char *panicstr;$/;"	v	file:
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pap_protent	net/lwip/netif/ppp/pap.c	/^struct protent pap_protent = {$/;"	v	typeref:struct:protent
parent_bridge	kern/pci.h	/^    struct pci_func *parent_bridge;$/;"	m	struct:pci_bus	typeref:struct:pci_bus::pci_func
pass	grade-functions.sh	/^pass () {$/;"	f
passfailmsg	grade-functions.sh	/^passfailmsg () {$/;"	f
passive	net/lwip/netif/ppp/lcp.h	/^    u_int passive           : 1; \/* Don't die if we don't get a response *\/$/;"	m	struct:lcp_options
passwd	net/lwip/netif/ppp/ppp.h	/^  char passwd     [MAXSECRETLEN + 1]; \/* Password for PAP, secret for CHAP *\/$/;"	m	struct:ppp_settings
passwd_from_file	net/lwip/netif/ppp/auth.c	/^static int passwd_from_file;$/;"	v	file:
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
payload	net/lwip/include/lwip/pbuf.h	/^  void *payload;$/;"	m	struct:pbuf
payload	obj/net/ns.asm	/^  payload = p->payload;$/;"	d
pbuf	net/lwip/include/lwip/pbuf.h	/^struct pbuf {$/;"	s
pbuf_alloc	net/lwip/core/pbuf.c	/^pbuf_alloc(pbuf_layer layer, u16_t length, pbuf_type type)$/;"	f
pbuf_cat	net/lwip/core/pbuf.c	/^pbuf_cat(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_chain	net/lwip/core/pbuf.c	/^pbuf_chain(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_clen	net/lwip/core/pbuf.c	/^pbuf_clen(struct pbuf *p)$/;"	f
pbuf_copy	net/lwip/core/pbuf.c	/^pbuf_copy(struct pbuf *p_to, struct pbuf *p_from)$/;"	f
pbuf_copy_partial	net/lwip/core/pbuf.c	/^pbuf_copy_partial(struct pbuf *buf, void *dataptr, u16_t len, u16_t offset)$/;"	f
pbuf_dechain	net/lwip/core/pbuf.c	/^pbuf_dechain(struct pbuf *p)$/;"	f
pbuf_free	net/lwip/core/pbuf.c	/^pbuf_free(struct pbuf *p)$/;"	f
pbuf_free_callback	net/lwip/api/tcpip.c	/^pbuf_free_callback(struct pbuf *p)$/;"	f
pbuf_free_int	net/lwip/api/tcpip.c	/^pbuf_free_int(void *p)$/;"	f	file:
pbuf_header	net/lwip/core/pbuf.c	/^pbuf_header(struct pbuf *p, s16_t header_size_increment)$/;"	f
pbuf_init	net/lwip/include/lwip/pbuf.h	99;"	d
pbuf_layer	net/lwip/include/lwip/pbuf.h	/^} pbuf_layer;$/;"	t	typeref:enum:__anon32
pbuf_realloc	net/lwip/core/pbuf.c	/^pbuf_realloc(struct pbuf *p, u16_t new_len)$/;"	f
pbuf_ref	net/lwip/core/pbuf.c	/^pbuf_ref(struct pbuf *p)$/;"	f
pbuf_type	net/lwip/include/lwip/pbuf.h	/^} pbuf_type;$/;"	t	typeref:enum:__anon33
pbufs_freed_current	obj/net/ns.asm	/^      pbufs_freed_current = ip_reass_free_complete_datagram(oldest, prev);$/;"	d
pcb	net/lwip/include/lwip/api.h	/^  } pcb;$/;"	m	struct:netconn	typeref:union:netconn::__anon14
pcb	net/lwip/include/lwip/dhcp.h	/^  struct udp_pcb *pcb;$/;"	m	struct:dhcp	typeref:struct:dhcp::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::udp_pcb
pcb	obj/net/ns.asm	/^        pcb = next;$/;"	d
pcb	obj/net/ns.asm	/^        pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb2;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = uncon_pcb;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^    pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = conn->pcb.tcp;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_RAW_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_UDP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = raw_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_tw_pcbs;$/;"	d
pcb2	obj/net/ns.asm	/^      pcb2 = pcb->next;$/;"	d
pcb_new	net/lwip/api/api_msg.c	/^pcb_new(struct api_msg_msg *msg)$/;"	f	file:
pcb_remove	obj/net/ns.asm	/^    pcb_remove = 0;$/;"	d
pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb *pcbs;$/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb
pci_attach	kern/pci.c	/^pci_attach(struct pci_func *f)$/;"	f	file:
pci_attach_class	kern/pci.c	/^struct pci_driver pci_attach_class[] = {$/;"	v	typeref:struct:pci_driver
pci_attach_match	kern/pci.c	/^pci_attach_match(uint32_t key1, uint32_t key2,$/;"	f	file:
pci_attach_vendor	kern/pci.c	/^struct pci_driver pci_attach_vendor[] = {$/;"	v	typeref:struct:pci_driver
pci_bridge_attach	kern/pci.c	/^pci_bridge_attach(struct pci_func *pcif)$/;"	f	file:
pci_bus	kern/pci.h	/^struct pci_bus {$/;"	s
pci_class	kern/pci.c	/^static const char *pci_class[] = $/;"	v	file:
pci_class_t	kern/pcireg.h	/^typedef uint8_t pci_class_t;$/;"	t
pci_conf1_addr_ioport	kern/pci.c	/^static uint32_t pci_conf1_addr_ioport = 0x0cf8;$/;"	v	file:
pci_conf1_data_ioport	kern/pci.c	/^static uint32_t pci_conf1_data_ioport = 0x0cfc;$/;"	v	file:
pci_conf1_set_addr	kern/pci.c	/^pci_conf1_set_addr(uint32_t bus,$/;"	f	file:
pci_conf_read	kern/pci.c	/^pci_conf_read(struct pci_func *f, uint32_t off)$/;"	f	file:
pci_conf_write	kern/pci.c	/^pci_conf_write(struct pci_func *f, uint32_t off, uint32_t v)$/;"	f	file:
pci_driver	kern/pci.c	/^struct pci_driver {$/;"	s	file:
pci_func	kern/pci.h	/^struct pci_func {$/;"	s
pci_func_enable	kern/pci.c	/^pci_func_enable(struct pci_func *f)$/;"	f
pci_init	kern/pci.c	/^pci_init(void)$/;"	f
pci_interface_t	kern/pcireg.h	/^typedef uint8_t pci_interface_t;$/;"	t
pci_intr_grant_t	kern/pcireg.h	/^typedef uint8_t pci_intr_grant_t;$/;"	t
pci_intr_latency_t	kern/pcireg.h	/^typedef uint8_t pci_intr_latency_t;$/;"	t
pci_intr_line_t	kern/pcireg.h	/^typedef uint8_t pci_intr_line_t;$/;"	t
pci_intr_pin_t	kern/pcireg.h	/^typedef uint8_t pci_intr_pin_t;$/;"	t
pci_print_func	kern/pci.c	/^pci_print_func(struct pci_func *f)$/;"	f	file:
pci_product_id_t	kern/pcireg.h	/^typedef uint16_t pci_product_id_t;$/;"	t
pci_res_bus	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon5
pci_res_io	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon5
pci_res_max	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon5
pci_res_mem	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon5
pci_revision_t	kern/pcireg.h	/^typedef uint8_t pci_revision_t;$/;"	t
pci_scan_bus	kern/pci.c	/^pci_scan_bus(struct pci_bus *bus)$/;"	f	file:
pci_show_addrs	kern/pci.c	/^static int pci_show_addrs = 0;$/;"	v	file:
pci_show_devs	kern/pci.c	/^static int pci_show_devs = 1;$/;"	v	file:
pci_subclass_t	kern/pcireg.h	/^typedef uint8_t pci_subclass_t;$/;"	t
pci_vendor_id_t	kern/pcireg.h	/^typedef uint16_t pci_vendor_id_t;$/;"	t
pci_vpd	kern/pcireg.h	/^struct pci_vpd {$/;"	s
pci_vpd_largeres	kern/pcireg.h	/^struct pci_vpd_largeres {$/;"	s
pci_vpd_smallres	kern/pcireg.h	/^struct pci_vpd_smallres {$/;"	s
pcomp	net/lwip/netif/ppp/ppp.c	/^  int  pcomp;                   \/* Does peer accept protocol compression? *\/$/;"	m	struct:PPPControl_s	file:
pcur	obj/net/ns.asm	/^    pcur = p;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_resp_header_lengths
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_trap_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_resp_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_trap_header_lengths
peer_authname	net/lwip/netif/ppp/auth.c	/^static char peer_authname[MAXNAMELEN];$/;"	v	file:
peer_mru	net/lwip/netif/ppp/fsm.c	/^int peer_mru[NUM_PPP];$/;"	v
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/net/ns.asm	/^		perm = 0;$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perror	net/lwip/jos/arch/perror.c	/^perror(const char *s) {$/;"	f
persist_backoff	net/lwip/include/lwip/tcp.h	/^  u8_t persist_backoff;$/;"	m	struct:tcp_pcb
persist_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t persist_cnt;$/;"	m	struct:tcp_pcb
pg	obj/fs/fs.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/fs/fs.asm	/^		pg = (void*) UTOP;$/;"	d
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pg	obj/net/ns.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/net/ns.asm	/^		pg = (void*) UTOP;$/;"	d
pg	obj/net/testinput.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/net/testinput.asm	/^		pg = (void*) UTOP;$/;"	d
pg	obj/net/testoutput.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/net/testoutput.asm	/^		pg = (void*) UTOP;$/;"	d
pg	obj/user/echosrv.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/echosrv.asm	/^		pg = (void*) UTOP;$/;"	d
pg	obj/user/echotest.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/echotest.asm	/^		pg = (void*) UTOP;$/;"	d
pg	obj/user/hello.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/hello.asm	/^		pg = (void*) UTOP;$/;"	d
pg	obj/user/httpd.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/httpd.asm	/^		pg = (void*) UTOP;$/;"	d
pg	obj/user/icode.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/icode.asm	/^		pg = (void*) UTOP;$/;"	d
pg	obj/user/idle.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/idle.asm	/^		pg = (void*) UTOP;$/;"	d
pg	obj/user/init.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/init.asm	/^		pg = (void*) UTOP;$/;"	d
pg	obj/user/pingpong.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/pingpong.asm	/^		pg = (void*) UTOP;$/;"	d
pg	obj/user/primes.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/primes.asm	/^		pg = (void*) UTOP;$/;"	d
pg	obj/user/testtime.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testtime.asm	/^		pg = (void*) UTOP;$/;"	d
pg	obj/user/writemotd.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/writemotd.asm	/^		pg = (void*) UTOP;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = boot_alloc(PGSIZE, PGSIZE);$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = boot_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^        ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pkt	inc/ns.h	/^	struct jif_pkt pkt;$/;"	m	union:Nsipc	typeref:struct:Nsipc::jif_pkt
pkt	net/testinput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
pkt	net/testoutput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
pkt_recv	kern/e100.c	/^int pkt_recv(void* data)$/;"	f
pkt_transmit	kern/e100.c	/^int pkt_transmit(void* data, uint16_t length, int isEl)$/;"	f
plug_holes	net/lwip/core/mem.c	/^plug_holes(struct mem *mem)$/;"	f	file:
pmem	obj/net/ns.asm	/^  pmem = (struct mem *)&ram[mem->prev];$/;"	d
poff	obj/net/ns.asm	/^    poff = newpbuflen;$/;"	d
poll	net/lwip/include/lwip/tcp.h	/^  err_t (* poll)(void *arg, struct tcp_pcb *pcb);$/;"	m	struct:tcp_pcb
poll_tcp	net/lwip/api/api_msg.c	/^poll_tcp(void *arg, struct tcp_pcb *pcb)$/;"	f	file:
pollinterval	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
polltmr	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
poolnr	net/lwip/core/mem.c	/^   memp_t poolnr;$/;"	m	struct:mem_helper	file:
pop_node	net/lwip/core/snmp/mib_structs.c	/^pop_node(struct nse* node)$/;"	f	file:
port	net/lwip/include/lwip/api_msg.h	/^      u16_t *port;$/;"	m	struct:api_msg_msg::__anon20::__anon23
port	net/lwip/include/lwip/api_msg.h	/^      u16_t port;$/;"	m	struct:api_msg_msg::__anon20::__anon22
port	net/lwip/include/lwip/netbuf.h	/^  u16_t port;$/;"	m	struct:netbuf
port	obj/net/ns.asm	/^      port = netbuf_fromport(buf);$/;"	d
port	obj/net/ns.asm	/^    port = TCP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = UDP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = tcp_new_port();$/;"	d
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	Page_LIST_entry_t pp_link;	\/* free list link *\/$/;"	m	struct:Page
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:Page
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pppACCMMask	net/lwip/netif/ppp/ppp.c	/^static u_char pppACCMMask[] = {$/;"	v	file:
pppAppend	net/lwip/netif/ppp/ppp.c	/^pppAppend(u_char c, struct pbuf *nb, ext_accm *outACCM)$/;"	f	file:
pppAuthType	net/lwip/netif/ppp/ppp.h	/^enum pppAuthType {$/;"	g
pppClose	net/lwip/netif/ppp/ppp.c	/^pppClose(int pd)$/;"	f
pppControl	net/lwip/netif/ppp/ppp.c	/^static PPPControl pppControl[NUM_PPP]; \/* The PPP interface control blocks. *\/$/;"	v	file:
pppDrop	net/lwip/netif/ppp/ppp.c	/^pppDrop(PPPControl *pc)$/;"	f	file:
pppHupCB	net/lwip/netif/ppp/ppp.c	/^pppHupCB(void *arg)$/;"	f	file:
pppIOCtl	net/lwip/netif/ppp/ppp.c	/^pppIOCtl(int pd, int cmd, void *arg)$/;"	f
pppInProc	net/lwip/netif/ppp/ppp.c	/^pppInProc(int pd, u_char *s, int l)$/;"	f	file:
pppInProcOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppInProcOverEthernet(int pd, struct pbuf *pb)$/;"	f
pppInit	net/lwip/netif/ppp/ppp.c	/^pppInit(void)$/;"	f
pppInput	net/lwip/netif/ppp/ppp.c	/^pppInput(void *arg)$/;"	f	file:
pppInputHeader	net/lwip/netif/ppp/ppp.c	/^struct pppInputHeader {$/;"	s	file:
pppLinkDown	net/lwip/netif/ppp/ppp.c	/^pppLinkDown(int pd)$/;"	f
pppLinkTerminated	net/lwip/netif/ppp/ppp.c	/^pppLinkTerminated(int pd)$/;"	f
pppMTU	net/lwip/netif/ppp/ppp.c	/^pppMTU(int pd)$/;"	f
pppMain	net/lwip/netif/ppp/ppp.c	/^pppMain(void *arg)$/;"	f	file:
pppMainWakeup	net/lwip/netif/ppp/ppp.c	/^pppMainWakeup(int pd)$/;"	f
pppOpen	net/lwip/netif/ppp/ppp.h	393;"	d
pppOverEthernetClose	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetClose(int pd)$/;"	f
pppOverEthernetInitFailed	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetInitFailed(void* arg)$/;"	f
pppOverEthernetLinkStatusCB	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetLinkStatusCB(int pd, int up)$/;"	f	file:
pppOverEthernetOpen	net/lwip/netif/ppp/ppp.c	/^int pppOverEthernetOpen(struct netif *ethif, const char *service_name, const char *concentrator_name, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppOverSerialOpen	net/lwip/netif/ppp/ppp.c	/^pppOverSerialOpen(sio_fd_t fd, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppSetAuth	net/lwip/netif/ppp/ppp.c	/^pppSetAuth(enum pppAuthType authType, const char *user, const char *passwd)$/;"	f
pppSigHUP	net/lwip/netif/ppp/ppp.c	/^pppSigHUP(int pd)$/;"	f
pppSingleBuf	net/lwip/netif/ppp/ppp.c	/^pppSingleBuf(struct pbuf *p)$/;"	f
pppStartCB	net/lwip/netif/ppp/ppp.c	/^pppStartCB(void *arg)$/;"	f	file:
pppStopCB	net/lwip/netif/ppp/ppp.c	/^pppStopCB(void *arg)$/;"	f	file:
pppWrite	net/lwip/netif/ppp/ppp.c	/^pppWrite(int pd, const u_char *s, int n)$/;"	f
pppWriteOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppWriteOverEthernet(int pd, const u_char *s, int n)$/;"	f
ppp_addrs	net/lwip/netif/ppp/ppp.h	/^struct ppp_addrs {$/;"	s
ppp_idle	net/lwip/netif/ppp/ppp.h	/^struct ppp_idle {$/;"	s
ppp_protocols	net/lwip/netif/ppp/ppp.c	/^struct protent *ppp_protocols[] = {$/;"	v	typeref:struct:protent
ppp_recv_config	net/lwip/netif/ppp/ppp.c	/^ppp_recv_config( int unit, int mru, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_send_config	net/lwip/netif/ppp/ppp.c	/^ppp_send_config( int unit, int mtu, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_set_xaccm	net/lwip/netif/ppp/ppp.c	/^ppp_set_xaccm(int unit, ext_accm *accm)$/;"	f
ppp_settings	net/lwip/netif/ppp/ppp.c	/^struct ppp_settings ppp_settings;$/;"	v	typeref:struct:ppp_settings
ppp_settings	net/lwip/netif/ppp/ppp.h	/^struct ppp_settings {$/;"	s
ppperr_strerr	net/lwip/netif/ppp/fsm.c	/^static const char *ppperr_strerr[] = {$/;"	v	file:
pppifNetifInit	net/lwip/netif/ppp/ppp.c	/^pppifNetifInit(struct netif *netif)$/;"	f	file:
pppifOutput	net/lwip/netif/ppp/ppp.c	/^pppifOutput(struct netif *netif, struct pbuf *pb, struct ip_addr *ipaddr)$/;"	f	file:
pppifOutputOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppifOutputOverEthernet(int pd, struct pbuf *p)$/;"	f	file:
pppoe_abort_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_abort_connect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_clear_softc	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_clear_softc(struct pppoe_softc *sc, const char *message)$/;"	f	file:
pppoe_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_connect(struct pppoe_softc *sc)$/;"	f
pppoe_create	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_create(struct netif *ethif, int pd, void (*linkStatusCB)(int pd, int up), struct pppoe_softc **scptr)$/;"	f
pppoe_data_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_data_input(struct netif *netif, struct pbuf *pb)$/;"	f
pppoe_destroy	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_destroy(struct netif *ifp)$/;"	f
pppoe_disc_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disc_input(struct netif *netif, struct pbuf *p)$/;"	f
pppoe_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disconnect(struct pppoe_softc *sc)$/;"	f
pppoe_dispatch_disc_pkt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_dispatch_disc_pkt(struct netif *netif, struct pbuf *pb)$/;"	f	file:
pppoe_do_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_do_disconnect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_find_softc_by_hunique	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_hunique(u8_t *token, size_t len, struct netif *rcvif)$/;"	f	file:
pppoe_find_softc_by_session	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_session(u_int session, struct netif *rcvif)$/;"	f	file:
pppoe_hdrlen	net/lwip/netif/ppp/ppp_oe.c	/^int pppoe_hdrlen;$/;"	v
pppoe_init	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_init(void)$/;"	f
pppoe_linkstatus_up	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_linkstatus_up(void *arg)$/;"	f	file:
pppoe_output	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_output(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f	file:
pppoe_sc	net/lwip/netif/ppp/ppp.c	/^  struct pppoe_softc *pppoe_sc;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pppoe_softc	file:
pppoe_send_padi	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padi(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pado	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pado(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padr	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padr(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pads	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pads(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padt(struct netif *outgoing_if, u_int session, const u8_t *dest)$/;"	f	file:
pppoe_softc	net/lwip/netif/ppp/ppp_oe.c	/^struct pppoe_softc {$/;"	s	file:
pppoe_timeout	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_timeout(void *arg)$/;"	f	file:
pppoe_xmit	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_xmit(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f
pppoehdr	net/lwip/include/netif/ppp_oe.h	/^struct pppoehdr {$/;"	s
pppoetag	net/lwip/include/netif/ppp_oe.h	/^struct pppoetag {$/;"	s
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/net/ns.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/ns.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/ns.asm	/^		precision = -1;$/;"	d
precision	obj/net/testinput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testinput.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/testinput.asm	/^		precision = -1;$/;"	d
precision	obj/net/testoutput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testoutput.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/net/testoutput.asm	/^		precision = -1;$/;"	d
precision	obj/user/echosrv.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echosrv.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echosrv.asm	/^		precision = -1;$/;"	d
precision	obj/user/echotest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echotest.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echotest.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/httpd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/httpd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/httpd.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/testtime.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testtime.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testtime.asm	/^		precision = -1;$/;"	d
precision	obj/user/writemotd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/writemotd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/writemotd.asm	/^		precision = -1;$/;"	d
prefix	net/lwip/core/snmp/mib_structs.c	/^const s32_t prefix[4] = {1, 3, 6, 1};$/;"	v
prev	net/lwip/core/mem.c	/^  mem_size_t prev;$/;"	m	struct:mem	file:
prev	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *prev;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
prev	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *prev;  $/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
prev	obj/net/ns.asm	/^          prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^        prev = r;$/;"	d
prev	obj/net/ns.asm	/^      prev = (struct tcp_pcb *)lpcb;$/;"	d
prev	obj/net/ns.asm	/^      prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^      prev = r;$/;"	d
prev	obj/net/ns.asm	/^    prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^    prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;    $/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;$/;"	d
prev_i	net/serv.c	/^static int prev_i(int i) { return (i ? i-1 : QUEUE_SIZE-1); }$/;"	f	file:
primeproc	user/primes.c	/^primeproc(void)$/;"	f
print_jb	net/lwip/jos/arch/thread.c	/^print_jb(struct thread_context *tc) {$/;"	f	file:
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/net/ns.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testinput.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testoutput.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echosrv.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echotest.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/httpd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testtime.asm	/^		process_precision:$/;"	l
process_precision	obj/user/writemotd.asm	/^		process_precision:$/;"	l
process_timer	net/serv.c	/^process_timer(envid_t envid) {$/;"	f	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
protent	net/lwip/netif/ppp/ppp.h	/^struct protent {$/;"	s
proterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER proterr;          \/* Protocol error. *\/$/;"	m	struct:stats_proto
proto	net/lwip/include/lwip/api_msg.h	/^      u8_t proto;$/;"	m	struct:api_msg_msg::__anon20::__anon21
proto	net/lwip/netif/ppp/ppp.c	/^  u16_t proto;$/;"	m	struct:pppInputHeader	file:
proto	obj/net/ns.asm	/^  proto = IPH_PROTO(iphdr);$/;"	d
proto_name	net/lwip/netif/ppp/fsm.h	/^  char *proto_name;                                 \/* String name for protocol (for messages) *\/$/;"	m	struct:fsm_callbacks
protocol	net/lwip/include/lwip/raw.h	/^  u8_t protocol;$/;"	m	struct:raw_pcb
protocol	net/lwip/netif/ppp/fsm.h	/^  u_short protocol;                \/* Data Link Layer Protocol field value *\/$/;"	m	struct:fsm
protocol	net/lwip/netif/ppp/ppp.c	/^  int         protocol; \/* PPP procotol, e.g. PPP_IP *\/$/;"	m	struct:npioctl	file:
protocol	net/lwip/netif/ppp/ppp.h	/^    u_short protocol;       \/* PPP protocol number *\/$/;"	m	struct:protent
protrej	net/lwip/netif/ppp/ppp.h	/^    void (*protrej) (int unit);$/;"	m	struct:protent
protreject	net/lwip/netif/ppp/fsm.h	/^  void (*protreject)(int);                          \/* Called when Protocol-Reject received *\/$/;"	m	struct:fsm_callbacks
proxy_arp	net/lwip/netif/ppp/ipcp.h	/^  u_int   proxy_arp     : 1; \/* Make proxy ARP entry for peer? *\/$/;"	m	struct:ipcp_options
psem	net/lwip/core/sys.c	/^  sys_sem_t *psem;$/;"	m	struct:sswt_cb	file:
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^	pte = vpt[VPN(v)];$/;"	d
pte	obj/net/ns.asm	/^        pte = vpt[pn];$/;"	d
pte	obj/net/testinput.asm	/^        pte = vpt[pn];$/;"	d
pte	obj/net/testoutput.asm	/^        pte = vpt[pn];$/;"	d
pte	obj/user/pingpong.asm	/^        pte = vpt[pn];$/;"	d
pte	obj/user/primes.asm	/^        pte = vpt[pn];$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = KADDR(PTE_ADDR(boot_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(boot_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = KADDR(PTE_ADDR(boot_pgdir[PDX(va)]));$/;"	d
ptr	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::
ptr	obj/net/ns.asm	/^         ptr = ((struct mem *)&ram[ptr])->next) {$/;"	d
ptr	obj/net/ns.asm	/^    ptr = (void *)((u8_t *)ptr + seglen);$/;"	d
ptr	obj/net/ns.asm	/^  ptr = (u8_t *)mem - ram;$/;"	d
ptr	obj/net/ns.asm	/^  ptr = arg;$/;"	d
ptr2	obj/net/ns.asm	/^          ptr2 = ptr + SIZEOF_STRUCT_MEM + size;$/;"	d
ptr2	obj/net/ns.asm	/^    ptr2 = ptr + SIZEOF_STRUCT_MEM + newsize;$/;"	d
push_node	net/lwip/core/snmp/mib_structs.c	/^push_node(struct nse* node)$/;"	f	file:
put_buffer	net/serv.c	/^put_buffer(void *va) {$/;"	f	file:
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
q	net/lwip/netif/etharp.c	/^  struct etharp_q_entry *q;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::etharp_q_entry	file:
q	obj/net/ns.asm	/^          q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^        q = NULL;$/;"	d
q	obj/net/ns.asm	/^        q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^      q = memp_malloc(MEMP_PBUF_POOL);$/;"	d
q	obj/net/ns.asm	/^      q = p->next;$/;"	d
q	obj/net/ns.asm	/^    q = iprh_tmp->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^    q = mem_realloc(q, (u8_t *)q->payload - (u8_t *)q + rem_len);$/;"	d
q	obj/net/ns.asm	/^    q = p;$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, 0, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, UDP_HLEN, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = q->next;$/;"	d
q	obj/net/ns.asm	/^  q = p->next;$/;"	d
q	obj/net/ns.asm	/^  q = p;$/;"	d
q	obj/net/ns.asm	/^  q = pbuf_alloc(PBUF_IP, sizeof(struct icmp_dur_hdr) + IP_HLEN + ICMP_DEST_UNREACH_DATASIZE,$/;"	d
queue	obj/net/ns.asm	/^      queue = seg;$/;"	d
queued_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t queued_msg;$/;"	m	struct:sys_mbox_entry	file:
queuelen	obj/net/ns.asm	/^  queuelen = pcb->snd_queuelen;$/;"	d
quicktest	grade-functions.sh	/^quicktest () {$/;"	f
r	net/lwip/include/lwip/api_msg.h	/^    } r;$/;"	m	union:api_msg_msg::__anon20	typeref:struct:api_msg_msg::__anon20::__anon25
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^	r = file_write(o->o_file, req->req_buf, req->req_n, o->o_fd->fd_offset);$/;"	d
r	obj/fs/fs.asm	/^	r = fsipc(FSREQ_WRITE, (void *)&fsipcbuf);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/net/ns.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/ns.asm	/^			r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = -E_INVAL;$/;"	d
r	obj/net/ns.asm	/^		r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = lwip_accept(req->accept.req_s, &ret.ret_addr,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_bind(req->bind.req_s, &req->bind.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_close(req->close.req_s);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_connect(req->connect.req_s, &req->connect.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_listen(req->listen.req_s, req->listen.req_backlog);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_recv(req->recv.req_s, req->recvRet.ret_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_send(req->send.req_s, &req->send.req_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_shutdown(req->shutdown.req_s, req->shutdown.req_how);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_socket(req->socket.req_domain, req->socket.req_type,$/;"	d
r	obj/net/ns.asm	/^	r = fsipc(FSREQ_WRITE, (void *)&fsipcbuf);$/;"	d
r	obj/net/ns.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/ns.asm	/^              r = r->next;$/;"	d
r	obj/net/ns.asm	/^            r = arp_table[i].q;$/;"	d
r	obj/net/ns.asm	/^      r = iprh->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^      r = pbuf_alloc(PBUF_LINK, p->tot_len, PBUF_RAM);$/;"	d
r	obj/net/ns.asm	/^      r = r->next;$/;"	d
r	obj/net/ns.asm	/^    r = ((struct ip_reass_helper*)ipr->p->payload)->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^    r = p;$/;"	d
r	obj/net/ns.asm	/^    r = q;$/;"	d
r	obj/net/ns.asm	/^    r = reassdatagrams;$/;"	d
r	obj/net/ns.asm	/^  r = reassdatagrams;$/;"	d
r	obj/net/testinput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testinput.asm	/^			r = 0;$/;"	d
r	obj/net/testinput.asm	/^	r = fsipc(FSREQ_WRITE, (void *)&fsipcbuf);$/;"	d
r	obj/net/testinput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testoutput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testoutput.asm	/^			r = 0;$/;"	d
r	obj/net/testoutput.asm	/^	r = fsipc(FSREQ_WRITE, (void *)&fsipcbuf);$/;"	d
r	obj/net/testoutput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echosrv.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echosrv.asm	/^			r = 0;$/;"	d
r	obj/user/echosrv.asm	/^	r = fsipc(FSREQ_WRITE, (void *)&fsipcbuf);$/;"	d
r	obj/user/echosrv.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echotest.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echotest.asm	/^			r = 0;$/;"	d
r	obj/user/echotest.asm	/^	r = fsipc(FSREQ_WRITE, (void *)&fsipcbuf);$/;"	d
r	obj/user/echotest.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^	r = fsipc(FSREQ_WRITE, (void *)&fsipcbuf);$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/httpd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/httpd.asm	/^			r = 0;$/;"	d
r	obj/user/httpd.asm	/^	r = fsipc(FSREQ_WRITE, (void *)&fsipcbuf);$/;"	d
r	obj/user/httpd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 512, "HTTP\/" HTTP_VERSION" %d %s\\r\\n"$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^	r = fsipc(FSREQ_WRITE, (void *)&fsipcbuf);$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^	r = fsipc(FSREQ_WRITE, (void *)&fsipcbuf);$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^	r = fsipc(FSREQ_WRITE, (void *)&fsipcbuf);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^	r = fsipc(FSREQ_WRITE, (void *)&fsipcbuf);$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^	r = fsipc(FSREQ_WRITE, (void *)&fsipcbuf);$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testtime.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testtime.asm	/^			r = 0;$/;"	d
r	obj/user/testtime.asm	/^	r = fsipc(FSREQ_WRITE, (void *)&fsipcbuf);$/;"	d
r	obj/user/testtime.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/writemotd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/writemotd.asm	/^			r = 0;$/;"	d
r	obj/user/writemotd.asm	/^	r = fsipc(FSREQ_WRITE, (void *)&fsipcbuf);$/;"	d
r	obj/user/writemotd.asm	/^	r = fstat(fd, stat);$/;"	d
r_id	net/lwip/core/snmp/mib_structs.c	/^  s32_t r_id;$/;"	m	struct:nse	file:
r_nl	net/lwip/core/snmp/mib_structs.c	/^  u8_t r_nl;$/;"	m	struct:nse	file:
r_ptr	net/lwip/core/snmp/mib_structs.c	/^  struct mib_node* r_ptr;$/;"	m	struct:nse	typeref:struct:nse::mib_node	file:
ram	net/lwip/core/mem.c	/^static u8_t *ram;$/;"	v	file:
ram	obj/net/ns.asm	/^  ram = LWIP_MEM_ALIGN(ram_heap);$/;"	d
ram_end	net/lwip/core/mem.c	/^static struct mem *ram_end;$/;"	v	typeref:struct:mem	file:
ram_end	obj/net/ns.asm	/^  ram_end = (struct mem *)&ram[MEM_SIZE_ALIGNED];$/;"	d
ram_heap	net/lwip/core/mem.c	/^static u8_t ram_heap[MEM_SIZE_ALIGNED + (2*SIZEOF_STRUCT_MEM) + MEM_ALIGNMENT];$/;"	v	file:
rambuf	obj/net/ns.asm	/^  rambuf = pbuf_alloc(PBUF_LINK, 0, PBUF_REF);$/;"	d
rand	grade-lab6.sh	/^rand() {$/;"	f
randCount	net/lwip/netif/ppp/randm.c	/^static long randCount = 0;      \/* Pseudo-random incrementer *\/$/;"	v	file:
randPool	net/lwip/netif/ppp/randm.c	/^static char randPool[RANDPOOLSZ];   \/* Pool of randomness. *\/$/;"	v	file:
raw	net/lwip/include/lwip/api.h	/^    struct raw_pcb *raw;$/;"	m	union:netconn::__anon14	typeref:struct:netconn::__anon14::raw_pcb
raw_bind	net/lwip/core/raw.c	/^raw_bind(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_connect	net/lwip/core/raw.c	/^raw_connect(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_init	net/lwip/include/lwip/raw.h	89;"	d
raw_input	net/lwip/core/raw.c	/^raw_input(struct pbuf *p, struct netif *inp)$/;"	f
raw_new	net/lwip/core/raw.c	/^raw_new(u8_t proto) {$/;"	f
raw_pcb	net/lwip/include/lwip/raw.h	/^struct raw_pcb {$/;"	s
raw_pcbs	net/lwip/core/raw.c	/^static struct raw_pcb *raw_pcbs;$/;"	v	typeref:struct:raw_pcb	file:
raw_pcbs	obj/net/ns.asm	/^            raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = raw_pcbs->next;$/;"	d
raw_recv	net/lwip/core/raw.c	/^raw_recv(struct raw_pcb *pcb,$/;"	f
raw_remove	net/lwip/core/raw.c	/^raw_remove(struct raw_pcb *pcb)$/;"	f
raw_send	net/lwip/core/raw.c	/^raw_send(struct raw_pcb *pcb, struct pbuf *p)$/;"	f
raw_sendto	net/lwip/core/raw.c	/^raw_sendto(struct raw_pcb *pcb, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/ns.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testinput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/net/testoutput.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echosrv.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echotest.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/httpd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testtime.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/writemotd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
rcv_ann_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_ann_wnd; \/* announced receive window *\/$/;"	m	struct:tcp_pcb
rcv_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t rcv_nxt;   \/* next seqno expected *\/$/;"	m	struct:tcp_pcb
rcv_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_wnd;   \/* receiver window *\/$/;"	m	struct:tcp_pcb
rcvevent	net/lwip/api/sockets.c	/^  u16_t rcvevent;$/;"	m	struct:lwip_socket	file:
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
read	net/lwip/include/lwip/sockets.h	345;"	d
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_eip	kern/monitor.c	/^read_eip()$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t va, uint32_t count, uint32_t offset)$/;"	f
readset	net/lwip/api/sockets.c	/^  fd_set *readset;$/;"	m	struct:lwip_select_cb	file:
reassdatagrams	net/lwip/core/ipv4/ip_frag.c	/^static struct ip_reassdata *reassdatagrams;$/;"	v	typeref:struct:ip_reassdata	file:
reassdatagrams	obj/net/ns.asm	/^    reassdatagrams = ipr->next;$/;"	d
reassdatagrams	obj/net/ns.asm	/^  reassdatagrams = ipr;$/;"	d
rebind	obj/net/ns.asm	/^  rebind = 0;$/;"	d
recv	inc/ns.h	/^	} recv;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_recv
recv	net/lwip/include/lwip/raw.h	/^  u8_t (* recv)(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	m	struct:raw_pcb
recv	net/lwip/include/lwip/sockets.h	336;"	d
recv	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER recv;             \/* Received packets. *\/$/;"	m	struct:stats_proto
recv	net/lwip/include/lwip/tcp.h	/^  err_t (* recv)(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err);$/;"	m	struct:tcp_pcb
recv	net/lwip/include/lwip/udp.h	/^  void (* recv)(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	m	struct:udp_pcb
recvRet	inc/ns.h	/^	} recvRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_recv
recv_arg	net/lwip/include/lwip/raw.h	/^  void *recv_arg;$/;"	m	struct:raw_pcb
recv_arg	net/lwip/include/lwip/udp.h	/^  void *recv_arg;  $/;"	m	struct:udp_pcb
recv_avail	net/lwip/include/lwip/api.h	/^  u16_t recv_avail;$/;"	m	struct:netconn
recv_bufsize	net/lwip/include/lwip/api.h	/^  int recv_bufsize;$/;"	m	struct:netconn
recv_data	net/lwip/core/tcp_in.c	/^static struct pbuf *recv_data;$/;"	v	typeref:struct:pbuf	file:
recv_data	obj/net/ns.asm	/^              recv_data = cseg->p;$/;"	d
recv_data	obj/net/ns.asm	/^          recv_data = inseg.p;$/;"	d
recv_data	obj/net/ns.asm	/^    recv_data = NULL;$/;"	d
recv_flags	net/lwip/core/tcp_in.c	/^static u8_t recv_flags;$/;"	v	file:
recv_flags	obj/net/ns.asm	/^            recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^          recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_CLOSED;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_RESET;$/;"	d
recv_flags	obj/net/ns.asm	/^    recv_flags = 0;$/;"	d
recv_idle	net/lwip/netif/ppp/ppp.h	/^  u_short recv_idle;      \/* seconds since last NP packet received *\/$/;"	m	struct:ppp_idle
recv_raw	net/lwip/api/api_msg.c	/^recv_raw(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	f	file:
recv_tcp	net/lwip/api/api_msg.c	/^recv_tcp(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
recv_timeout	net/lwip/include/lwip/api.h	/^  int recv_timeout;$/;"	m	struct:netconn
recv_udp	net/lwip/api/api_msg.c	/^recv_udp(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	f	file:
recvfrom	net/lwip/include/lwip/sockets.h	337;"	d
recvmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t recvmbox;$/;"	m	struct:netconn
ref	net/lwip/include/lwip/pbuf.h	/^  u16_t ref;$/;"	m	struct:pbuf
ref	obj/net/ns.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
ref	obj/net/ns.asm	/^    ref = --(p->ref);$/;"	d
ref	obj/user/httpd.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
refuse_chap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_chap       : 1;       \/* Don't wanna auth. ourselves with CHAP *\/$/;"	m	struct:ppp_settings
refuse_pap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_pap        : 1;       \/* Don't wanna auth. ourselves with PAP *\/$/;"	m	struct:ppp_settings
refused_data	net/lwip/include/lwip/tcp.h	/^  struct pbuf *refused_data; \/* Data previously received but not yet taken by upper layer *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::pbuf
reg_base	kern/pci.h	/^    uint32_t reg_base[6];$/;"	m	struct:pci_func
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
reg_size	kern/pci.h	/^    uint32_t reg_size[6];$/;"	m	struct:pci_func
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
rejci	net/lwip/netif/ppp/fsm.h	/^  int  (*rejci)(fsm*, u_char*, int);                \/* Reject our Configuration Information *\/$/;"	m	struct:fsm_callbacks
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
rem	obj/net/ns.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/net/testinput.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echosrv.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echotest.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/httpd.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem_len	obj/net/ns.asm	/^    rem_len = length - p->len;$/;"	d
rem_len	obj/net/ns.asm	/^  rem_len = new_len;$/;"	d
remote_name	net/lwip/netif/ppp/ppp.h	/^  char remote_name[MAXNAMELEN   + 1]; \/* Peer's name for authentication *\/$/;"	m	struct:ppp_settings
remote_port	net/lwip/include/lwip/tcp.h	/^  u16_t remote_port;$/;"	m	struct:tcp_pcb
remote_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
remote_port	obj/net/ns.asm	/^    remote_port      = 0;$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port      = ntohs(((struct sockaddr_in *)to)->sin_port);$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port = pcb->remote_port;$/;"	d
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
remove	lib/file.c	/^remove(const char *path)$/;"	f
report_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_rxed;      \/* *\/$/;"	m	struct:stats_igmp
report_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_sent;      \/* *\/$/;"	m	struct:stats_igmp
req	net/serv.c	/^	union Nsipc *req;$/;"	m	struct:st_args	typeref:union:st_args::Nsipc	file:
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_addr      : 1; \/* Ask peer to send IP address? *\/$/;"	m	struct:ipcp_options
req_backlog	inc/ns.h	/^		int req_backlog;$/;"	m	struct:Nsipc::Nsreq_listen
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_buf	inc/ns.h	/^		char req_buf[0];$/;"	m	struct:Nsipc::Nsreq_send
req_dns1	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns1      : 1; \/* Ask peer to send primary DNS address? *\/$/;"	m	struct:ipcp_options
req_dns2	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns2      : 1; \/* Ask peer to send secondary DNS address? *\/$/;"	m	struct:ipcp_options
req_domain	inc/ns.h	/^		int req_domain;$/;"	m	struct:Nsipc::Nsreq_socket
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_recv
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_send
req_free	user/httpd.c	/^req_free(struct http_request *req)$/;"	f	file:
req_how	inc/ns.h	/^		int req_how;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_len	inc/ns.h	/^		int req_len;$/;"	m	struct:Nsipc::Nsreq_recv
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_bind	typeref:struct:Nsipc::Nsreq_bind::sockaddr
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_connect	typeref:struct:Nsipc::Nsreq_connect::sockaddr
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_bind
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_connect
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_protocol	inc/ns.h	/^		int req_protocol;$/;"	m	struct:Nsipc::Nsreq_socket
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_accept
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_bind
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_close
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_connect
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_listen
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_recv
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_send
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
req_size	inc/ns.h	/^		int req_size;$/;"	m	struct:Nsipc::Nsreq_send
req_type	inc/ns.h	/^		int req_type;$/;"	m	struct:Nsipc::Nsreq_socket
reqci	net/lwip/netif/ppp/fsm.h	/^  int  (*reqci)(fsm*, u_char*, int*, int);          \/* Request peer's Configuration Information *\/$/;"	m	struct:fsm_callbacks
reqid	net/lwip/netif/ppp/fsm.h	/^  u_char reqid;                    \/* Current request id *\/$/;"	m	struct:fsm
reqno	net/serv.c	/^	int32_t reqno;$/;"	m	struct:st_args	file:
reqno	obj/net/ns.asm	/^		reqno = ipc_recv((int32_t *) &whom, (void *) va, &perm);$/;"	d
request_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t request_timeout; \/* #ticks with period DHCP_FINE_TIMER_SECS for request timeout *\/$/;"	m	struct:dhcp
res	kern/e100.c	/^		uint32_t res;$/;"	m	struct:e100_ru	file:
resetci	net/lwip/netif/ppp/fsm.h	/^  void (*resetci)(fsm*);                            \/* Reset our Configuration Information *\/$/;"	m	struct:fsm_callbacks
resp_id	net/lwip/netif/ppp/chap.h	/^  u_char resp_id;                         \/* ID for response messages *\/$/;"	m	struct:chap_state
resp_length	net/lwip/netif/ppp/chap.h	/^  u_char resp_length;                     \/* length of response *\/$/;"	m	struct:chap_state
resp_name	net/lwip/netif/ppp/chap.h	/^  char *resp_name;                        \/* Our name to send with response *\/$/;"	m	struct:chap_state
resp_transmits	net/lwip/netif/ppp/chap.h	/^  int resp_transmits;                     \/* Number of transmissions of response *\/$/;"	m	struct:chap_state
resp_type	net/lwip/netif/ppp/chap.h	/^  u_char resp_type;                       \/* hash algorithm for responses *\/$/;"	m	struct:chap_state
responce_header	user/httpd.c	/^struct responce_header {$/;"	s	file:
response	net/lwip/netif/ppp/chap.h	/^  u_char response[MAX_RESPONSE_LENGTH];   \/* Response to send *\/$/;"	m	struct:chap_state
restart	net/lwip/netif/ppp/lcp.h	/^    u_int restart           : 1; \/* Restart vs. exit after close *\/$/;"	m	struct:lcp_options
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
result	obj/net/ns.asm	/^          result = ERR_OK;$/;"	d
result	obj/net/ns.asm	/^      result = etharp_send_ip(netif, q, srcaddr, &(arp_table[i].ethaddr));$/;"	d
result	obj/net/ns.asm	/^    result = etharp_request(netif, ipaddr);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_create_request(netif);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_discover(netif);$/;"	d
result	obj/net/ns.asm	/^  result = etharp_query(netif, &dhcp->offered_ip_addr, NULL);$/;"	d
result	obj/net/ns.asm	/^  result = netif->linkoutput(netif, p);$/;"	d
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/net/ns.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testinput.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testoutput.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echosrv.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echotest.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/httpd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testtime.asm	/^	reswitch:$/;"	l
reswitch	obj/user/writemotd.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^				ret = (int)sys_ns_send((char*)a1,(uint16_t)a2,(char)a3);$/;"	d
ret	obj/kern/kernel.asm	/^				ret = 0;$/;"	d
ret	obj/kern/kernel.asm	/^				ret = sys_cgetc();$/;"	d
ret	obj/kern/kernel.asm	/^				ret = sys_env_destroy((envid_t)a1);$/;"	d
ret	obj/kern/kernel.asm	/^				ret = sys_env_set_pgfault_upcall(a1, (void *)a2);$/;"	d
ret	obj/kern/kernel.asm	/^				ret = sys_env_set_trapframe((envid_t)a1, (struct Trapframe*)a2);$/;"	d
ret	obj/kern/kernel.asm	/^				ret = sys_getenvid();$/;"	d
ret	obj/kern/kernel.asm	/^				ret = sys_ipc_try_send((envid_t)a1, (uint32_t)a2, (void *)a3, (unsigned)a4);$/;"	d
ret	obj/kern/kernel.asm	/^				ret = sys_page_alloc(a1, (void *)a2, a3);$/;"	d
ret	obj/kern/kernel.asm	/^				ret = sys_page_map(a1, (void *)a2, a3, (void *)a4, a5);$/;"	d
ret	obj/kern/kernel.asm	/^				ret = sys_time_msec();$/;"	d
ret	obj/kern/kernel.asm	/^		ret = -E_INVAL;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = pkt_recv(data);$/;"	d
ret	obj/kern/kernel.asm	/^                                 ret = (int)sys_ns_recv((void*)a1);$/;"	d
ret	obj/net/ns.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^      ret = ip_output_if(p, &(iphdr->src), IP_HDRINCL,$/;"	d
ret	obj/net/ns.asm	/^    ret = pbuf_copy_partial(dhcp->p, dhcp->options_in, dhcp->options_in_len, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN);$/;"	d
ret	obj/net/ns.asm	/^  ret = pbuf_copy_partial(dhcp->p, dhcp->msg_in, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN, 0);$/;"	d
ret	obj/net/ns.asm	/^  ret = tcp_enqueue(pcb, NULL, 0, TCP_SYN, 0, (u8_t *)&optdata, 4);$/;"	d
ret	obj/net/testinput.asm	/^	ret = dst;$/;"	d
ret	obj/net/testoutput.asm	/^	ret = dst;$/;"	d
ret	obj/user/echosrv.asm	/^	ret = dst;$/;"	d
ret	obj/user/echotest.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/httpd.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/testtime.asm	/^	ret = dst;$/;"	d
ret	obj/user/writemotd.asm	/^	ret = dst;$/;"	d
ret_addr	inc/ns.h	/^		struct sockaddr ret_addr;$/;"	m	struct:Nsipc::Nsret_accept	typeref:struct:Nsipc::Nsret_accept::sockaddr
ret_addrlen	inc/ns.h	/^		socklen_t ret_addrlen;$/;"	m	struct:Nsipc::Nsret_accept
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_buf	inc/ns.h	/^		char ret_buf[0];$/;"	m	struct:Nsipc::Nsret_recv
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
retransmit	net/lwip/netif/ppp/fsm.h	/^  void (*retransmit)(fsm*);                         \/* Retransmission is necessary *\/$/;"	m	struct:fsm_callbacks
retransmits	net/lwip/netif/ppp/fsm.h	/^  int retransmits;                 \/* Number of retransmissions left *\/$/;"	m	struct:fsm
retries	net/lwip/core/dns.c	/^  u8_t  retries;$/;"	m	struct:dns_table_entry	file:
return	obj/kern/kernel.asm	/^return 0;$/;"	l
rfd	kern/e100.c	/^static struct e100_ru rfd[MAX_RING_SZ];$/;"	v	typeref:struct:e100_ru	file:
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rhl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_resp_header_lengths rhl;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_resp_header_lengths
rid	net/lwip/include/lwip/snmp_msg.h	/^  s32_t rid;$/;"	m	struct:snmp_msg_pstat
ridlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t ridlen;$/;"	m	struct:snmp_resp_header_lengths
ridlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ridlenlen;$/;"	m	struct:snmp_resp_header_lengths
right_wnd_edge	obj/net/ns.asm	/^    right_wnd_edge = pcb->snd_wnd + pcb->snd_wl1;$/;"	d
rindex	kern/e100.c	/^static uint32_t rindex = 0;$/;"	v	file:
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rp	obj/net/ns.asm	/^  rp = str;$/;"	d
rp	obj/net/testinput.asm	/^  rp = str;$/;"	d
rp	obj/user/echosrv.asm	/^  rp = str;$/;"	d
rp	obj/user/echotest.asm	/^  rp = str;$/;"	d
rp	obj/user/httpd.asm	/^  rp = str;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon6	file:
rseg	obj/net/ns.asm	/^      rseg = pcb->unacked;$/;"	d
rstate	net/lwip/netif/ppp/vj.h	/^  struct cstate rstate[MAX_SLOTS]; \/* receive connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
rt	net/lwip/include/lwip/snmp_msg.h	/^  u8_t rt;$/;"	m	struct:snmp_msg_pstat
rterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER rterr;            \/* Routing error. *\/$/;"	m	struct:stats_proto
rtime	net/lwip/include/lwip/tcp.h	/^  s16_t rtime;$/;"	m	struct:tcp_pcb
rto	net/lwip/include/lwip/tcp.h	/^  s16_t rto;    \/* retransmission time-out *\/$/;"	m	struct:tcp_pcb
rtseq	net/lwip/include/lwip/tcp.h	/^  u32_t rtseq;  \/* sequence number being timed *\/$/;"	m	struct:tcp_pcb
rttest	net/lwip/include/lwip/tcp.h	/^  u32_t rttest; \/* RTT estimate in 500ms ticks *\/$/;"	m	struct:tcp_pcb
run	grade-functions.sh	/^run () {$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runtest	grade-functions.sh	/^runtest () {$/;"	f
runtest1	grade-functions.sh	/^runtest1 () {$/;"	f
s	net/lwip/api/sockets.c	/^  int s;$/;"	m	struct:lwip_setgetsockopt_data	file:
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^    s = conn->socket;$/;"	d
s	obj/net/ns.asm	/^  s = data->s;$/;"	d
s	obj/net/testinput.asm	/^	s = src;$/;"	d
s	obj/net/testoutput.asm	/^	s = src;$/;"	d
s	obj/user/echosrv.asm	/^	s = src;$/;"	d
s	obj/user/echotest.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/httpd.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/testtime.asm	/^	s = src;$/;"	d
s	obj/user/writemotd.asm	/^	s = src;$/;"	d
s16_t	net/lwip/jos/arch/cc.h	/^typedef int16_t s16_t;$/;"	t
s32_t	net/lwip/jos/arch/cc.h	/^typedef int32_t s32_t;$/;"	t
s64_t	net/lwip/jos/arch/cc.h	/^typedef int64_t s64_t;$/;"	t
s8_t	net/lwip/jos/arch/cc.h	/^typedef int8_t s8_t;$/;"	t
s8_t	obj/net/ns.asm	/^s8_t$/;"	l
s_addr	net/lwip/include/ipv4/lwip/inet.h	/^  u32_t s_addr;$/;"	m	struct:in_addr
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
sa	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
sa_data	net/lwip/include/lwip/sockets.h	/^  char sa_data[14];$/;"	m	struct:sockaddr
sa_family	net/lwip/include/lwip/sockets.h	/^  u8_t sa_family;$/;"	m	struct:sockaddr
sa_len	net/lwip/include/lwip/sockets.h	/^  u8_t sa_len;$/;"	m	struct:sockaddr
sc_ac_cookie	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_ac_cookie;          \/* content of AC cookie we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_ac_cookie_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_ac_cookie_len;     \/* length of cookie data *\/$/;"	m	struct:pppoe_softc	file:
sc_concentrator_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_concentrator_name;  \/* if != NULL: requested concentrator id *\/$/;"	m	struct:pppoe_softc	file:
sc_dest	net/lwip/netif/ppp/ppp_oe.c	/^  struct eth_addr sc_dest;     \/* hardware address of concentrator *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::eth_addr	file:
sc_ethif	net/lwip/netif/ppp/ppp_oe.c	/^  struct netif *sc_ethif;      \/* ethernet interface we are using *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::netif	file:
sc_hunique	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_hunique;            \/* content of host unique we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_hunique_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_hunique_len;       \/* length of host unique *\/$/;"	m	struct:pppoe_softc	file:
sc_linkStatusCB	net/lwip/netif/ppp/ppp_oe.c	/^  void (*sc_linkStatusCB)(int pd, int up);$/;"	m	struct:pppoe_softc	file:
sc_padi_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padi_retried;         \/* number of PADI retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_padr_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padr_retried;         \/* number of PADR retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_pd	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_pd;                   \/* ppp unit number *\/$/;"	m	struct:pppoe_softc	file:
sc_service_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_service_name;       \/* if != NULL: requested name of service *\/$/;"	m	struct:pppoe_softc	file:
sc_session	net/lwip/netif/ppp/ppp_oe.c	/^  u16_t sc_session;            \/* PPPoE session id *\/$/;"	m	struct:pppoe_softc	file:
sc_state	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_state;                \/* discovery phase or session connected *\/$/;"	m	struct:pppoe_softc	file:
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
seen_ack	net/lwip/netif/ppp/fsm.h	/^  u_char seen_ack;                 \/* Have received valid Ack\/Nak\/Rej to Req *\/$/;"	m	struct:fsm
seg	obj/net/ns.asm	/^      seg = NULL;$/;"	d
seg	obj/net/ns.asm	/^    seg = memp_malloc(MEMP_TCP_SEG);$/;"	d
seg	obj/net/ns.asm	/^    seg = next;$/;"	d
seg	obj/net/ns.asm	/^    seg = pcb->unsent;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked->next;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unsent;$/;"	d
seglen	obj/net/ns.asm	/^    seglen = left > pcb->mss? pcb->mss: left;$/;"	d
seglen	obj/net/ns.asm	/^  seglen = 0;$/;"	d
segment_alloc	kern/env.c	/^segment_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
select	net/lwip/include/lwip/sockets.h	341;"	d
select_cb_list	net/lwip/api/sockets.c	/^static struct lwip_select_cb *select_cb_list;$/;"	v	typeref:struct:lwip_select_cb	file:
select_cb_list	obj/net/ns.asm	/^      select_cb_list = select_cb.next;$/;"	d
select_cb_list	obj/net/ns.asm	/^    select_cb_list = &select_cb;$/;"	d
selectsem	net/lwip/api/sockets.c	/^static sys_sem_t selectsem;$/;"	v	file:
selectsem	obj/net/ns.asm	/^  selectsem = sys_sem_new(1);$/;"	d
sem	net/lwip/api/sockets.c	/^  sys_sem_t sem;$/;"	m	struct:lwip_select_cb	file:
sem	net/lwip/include/lwip/api_msg.h	/^  sys_sem_t sem;$/;"	m	struct:dns_api_msg
sem	net/lwip/include/lwip/netifapi.h	/^  sys_sem_t sem;$/;"	m	struct:netifapi_msg_msg
sem	net/lwip/include/lwip/stats.h	/^  struct stats_syselem sem;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
sem	net/lwip/include/lwip/tcpip.h	/^  sys_sem_t *sem;$/;"	m	struct:tcpip_msg
sem_signalled	net/lwip/api/sockets.c	/^  int sem_signalled;$/;"	m	struct:lwip_select_cb	file:
sems	net/lwip/jos/arch/sys_arch.c	/^static struct sys_sem_entry sems[NSEM];$/;"	v	typeref:struct:sys_sem_entry	file:
send	inc/ns.h	/^	} send;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_send
send	net/lwip/include/lwip/sockets.h	338;"	d
send_content_type	user/httpd.c	/^send_content_type(struct http_request *req)$/;"	f	file:
send_data	user/httpd.c	/^send_data(struct http_request *req, int fd)$/;"	f	file:
send_error	user/httpd.c	/^send_error(struct http_request *req, int code)$/;"	f	file:
send_file	user/httpd.c	/^send_file(struct http_request *req)$/;"	f	file:
send_header	user/httpd.c	/^send_header(struct http_request *req, int code)$/;"	f	file:
send_header_fin	user/httpd.c	/^send_header_fin(struct http_request *req)$/;"	f	file:
send_size	user/httpd.c	/^send_size(struct http_request *req, off_t size)$/;"	f	file:
sendevent	net/lwip/api/sockets.c	/^  u16_t sendevent;$/;"	m	struct:lwip_socket	file:
sendmss	obj/net/ns.asm	/^    sendmss = LWIP_MIN(sendmss, mss_s);$/;"	d
sendto	net/lwip/include/lwip/sockets.h	339;"	d
sent	net/lwip/include/lwip/tcp.h	/^  err_t (* sent)(void *arg, struct tcp_pcb *pcb, u16_t space);$/;"	m	struct:tcp_pcb
sent_num	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t sent_num;            \/* sent number of probes or announces, dependent on state *\/$/;"	m	struct:autoip
sent_tcp	net/lwip/api/api_msg.c	/^sent_tcp(void *arg, struct tcp_pcb *pcb, u16_t len)$/;"	f	file:
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_resp_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_trap_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind_root
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_resp_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_trap_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind_root
seqno	net/lwip/core/dns.c	/^  u8_t  seqno;$/;"	m	struct:dns_table_entry	file:
seqno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
seqno	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t seqno;$/;"	m	struct:icmp_echo_hdr
seqno	obj/net/ns.asm	/^          seqno = pcb->ooseq->tcphdr->seqno;$/;"	d
seqno	obj/net/ns.asm	/^    seqno = pcb->snd_nxt;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = pcb->snd_lbb;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = tcphdr->seqno = ntohl(tcphdr->seqno);$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serve	fs/serv.c	/^serve(void)$/;"	f
serve	net/serv.c	/^serve(void) {$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_init	net/serv.c	/^serve_init(uint32_t ipaddr, uint32_t netmask, uint32_t gw)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_remove	fs/serv.c	/^serve_remove(envid_t envid, struct Fsreq_remove *req)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f
serve_thread	net/serv.c	/^serve_thread(uint32_t a) {$/;"	f	file:
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f
server_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr server_ip_addr; \/* dhcp server address that offered this lease *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
serverstate	net/lwip/netif/ppp/chap.h	/^  int serverstate;                        \/* Server state *\/$/;"	m	struct:chap_state
set_errno	net/lwip/api/sockets.c	153;"	d	file:
set_errno	net/lwip/api/sockets.c	155;"	d	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_test_a	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_test_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);  $/;"	m	struct:mib_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_q)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
setsockopt	net/lwip/include/lwip/sockets.h	333;"	d
setup_tcp	net/lwip/api/api_msg.c	/^setup_tcp(struct netconn *conn)$/;"	f	file:
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] = $/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] = $/;"	v	file:
showfinal	grade-functions.sh	/^showfinal () {$/;"	f
showmap	kern/monitor.c	/^void showmap(uintptr_t start)$/;"	f
showmappings	kern/monitor.c	/^int showmappings(int argc, char **argv, struct Trapframe *tf)$/;"	f
showpart	grade-functions.sh	/^showpart () {$/;"	f
shutdown	inc/ns.h	/^	} shutdown;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_shutdown
shutdown	lib/sockets.c	/^shutdown(int s, int how)$/;"	f
shutdown	net/lwip/include/lwip/sockets.h	328;"	d
sifaddr	net/lwip/netif/ppp/ppp.c	/^sifaddr( int pd, u32_t o, u32_t h, u32_t m, u32_t ns1, u32_t ns2)$/;"	f
sifdefaultroute	net/lwip/netif/ppp/ppp.c	/^sifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
sifdown	net/lwip/netif/ppp/ppp.c	/^sifdown(int pd)$/;"	f
sifnpmode	net/lwip/netif/ppp/ppp.c	/^sifnpmode(int u, int proto, enum NPmode mode)$/;"	f
sifup	net/lwip/netif/ppp/ppp.c	/^sifup(int pd)$/;"	f
sifvjcomp	net/lwip/netif/ppp/ppp.c	/^sifvjcomp( int pd, int vjcomp, int cidcomp, int maxcid)$/;"	f
sig_hup	net/lwip/netif/ppp/ppp.c	/^  int  sig_hup;                 \/* Carrier lost. *\/$/;"	m	struct:PPPControl_s	file:
silent	net/lwip/netif/ppp/lcp.h	/^    u_int silent            : 1; \/* Wait for the other end to start first *\/$/;"	m	struct:lcp_options
sin_addr	net/lwip/include/lwip/sockets.h	/^  struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr
sin_family	net/lwip/include/lwip/sockets.h	/^  u8_t sin_family;$/;"	m	struct:sockaddr_in
sin_len	net/lwip/include/lwip/sockets.h	/^  u8_t sin_len;$/;"	m	struct:sockaddr_in
sin_port	net/lwip/include/lwip/sockets.h	/^  u16_t sin_port;$/;"	m	struct:sockaddr_in
sin_zero	net/lwip/include/lwip/sockets.h	/^  char sin_zero[8];$/;"	m	struct:sockaddr_in
sio_fd_t	net/lwip/include/lwip/sio.h	/^typedef void * sio_fd_t;$/;"	t
sip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr sip;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::ip_addr
sip_raw	net/lwip/include/lwip/snmp_msg.h	/^  u8_t sip_raw[4];$/;"	m	struct:snmp_msg_trap
size	kern/e100.c	/^		uint16_t size; $/;"	m	struct:e100_ru	file:
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_IO_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_MEM_SIZE(rv);$/;"	d
size	obj/net/ns.asm	/^    size = MIN_SIZE_ALIGNED;$/;"	d
size	obj/net/ns.asm	/^  size = LWIP_MEM_ALIGN_SIZE(size);$/;"	d
size	obj/net/ns.asm	/^  size = mem->next - ptr - SIZEOF_STRUCT_MEM;$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/net/ns.asm	/^size_t$/;"	l
size_t	obj/net/testinput.asm	/^size_t$/;"	l
size_t	obj/net/testoutput.asm	/^size_t$/;"	l
size_t	obj/user/echosrv.asm	/^size_t$/;"	l
size_t	obj/user/echotest.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/httpd.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/testtime.asm	/^size_t$/;"	l
size_t	obj/user/writemotd.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
sleep	user/testtime.c	/^sleep(int sec)$/;"	f
slipif_init	net/lwip/netif/slipif.c	/^slipif_init(struct netif *netif)$/;"	f
slipif_input	net/lwip/netif/slipif.c	/^slipif_input(struct netif *netif)$/;"	f	file:
slipif_loop	net/lwip/netif/slipif.c	/^slipif_loop(void *nf)$/;"	f	file:
slipif_output	net/lwip/netif/slipif.c	/^slipif_output(struct netif *netif, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
snd_buf	net/lwip/include/lwip/tcp.h	/^  u16_t snd_buf;   \/* Available buffer space for sending (in bytes). *\/$/;"	m	struct:tcp_pcb
snd_lbb	net/lwip/include/lwip/tcp.h	/^    snd_lbb;       \/* Sequence number of next byte to be buffered. *\/$/;"	m	struct:tcp_pcb
snd_max	net/lwip/include/lwip/tcp.h	/^    snd_max;       \/* Highest seqno sent. *\/$/;"	m	struct:tcp_pcb
snd_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t snd_nxt,   \/* next seqno to be sent *\/$/;"	m	struct:tcp_pcb
snd_queuelen	net/lwip/include/lwip/tcp.h	/^  u16_t snd_queuelen; \/* Available buffer space for sending (in tcp_segs). *\/$/;"	m	struct:tcp_pcb
snd_wl1	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wl2	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t snd_wnd;   \/* sender window *\/$/;"	m	struct:tcp_pcb
snmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node snmp = {$/;"	v	typeref:struct:mib_array_node
snmp1_pcb	net/lwip/core/snmp/msg_in.c	/^struct udp_pcb *snmp1_pcb;$/;"	v	typeref:struct:udp_pcb
snmp_add_ifinoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifinoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifinoctets	net/lwip/include/lwip/snmp.h	242;"	d
snmp_add_ifoutoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifoutoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifoutoctets	net/lwip/include/lwip/snmp.h	246;"	d
snmp_add_snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalreqvars(u8_t value)$/;"	f
snmp_add_snmpintotalreqvars	net/lwip/include/lwip/snmp.h	338;"	d
snmp_add_snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalsetvars(u8_t value)$/;"	f
snmp_add_snmpintotalsetvars	net/lwip/include/lwip/snmp.h	339;"	d
snmp_add_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_add_sysuptime(u32_t value)$/;"	f
snmp_add_sysuptime	net/lwip/include/lwip/snmp.h	235;"	d
snmp_asn1_dec_length	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_length(struct pbuf *p, u16_t ofs, u8_t *octets_used, u16_t *length)$/;"	f
snmp_asn1_dec_oid	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_oid(struct pbuf *p, u16_t ofs, u16_t len, struct snmp_obj_id *oid)$/;"	f
snmp_asn1_dec_raw	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_raw(struct pbuf *p, u16_t ofs, u16_t len, u16_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_dec_s32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_s32t(struct pbuf *p, u16_t ofs, u16_t len, s32_t *value)$/;"	f
snmp_asn1_dec_type	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_type(struct pbuf *p, u16_t ofs, u8_t *type)$/;"	f
snmp_asn1_dec_u32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_u32t(struct pbuf *p, u16_t ofs, u16_t len, u32_t *value)$/;"	f
snmp_asn1_enc_length	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length(struct pbuf *p, u16_t ofs, u16_t length)$/;"	f
snmp_asn1_enc_length_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length_cnt(u16_t length, u8_t *octets_needed)$/;"	f
snmp_asn1_enc_oid	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid(struct pbuf *p, u16_t ofs, u8_t ident_len, s32_t *ident)$/;"	f
snmp_asn1_enc_oid_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid_cnt(u8_t ident_len, s32_t *ident, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_raw	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_raw(struct pbuf *p, u16_t ofs, u8_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_enc_s32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, s32_t value)$/;"	f
snmp_asn1_enc_s32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t_cnt(s32_t value, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_type	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_type(struct pbuf *p, u16_t ofs, u8_t type)$/;"	f
snmp_asn1_enc_u32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, u32_t value)$/;"	f
snmp_asn1_enc_u32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t_cnt(u32_t value, u16_t *octets_needed)$/;"	f
snmp_authfail_trap	net/lwip/core/snmp/msg_out.c	/^snmp_authfail_trap(void)$/;"	f
snmp_coldstart_trap	net/lwip/core/snmp/msg_out.c	/^snmp_coldstart_trap(void)$/;"	f
snmp_dec_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_dec_iflist(void)$/;"	f
snmp_dec_iflist	net/lwip/include/lwip/snmp.h	251;"	d
snmp_delete_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_delete_arpidx_tree	net/lwip/include/lwip/snmp.h	255;"	d
snmp_delete_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_delete_ipaddridx_tree	net/lwip/include/lwip/snmp.h	276;"	d
snmp_delete_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_delete_iprteidx_tree	net/lwip/include/lwip/snmp.h	278;"	d
snmp_delete_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_delete_udpidx_tree	net/lwip/include/lwip/snmp.h	324;"	d
snmp_error_response	net/lwip/core/snmp/msg_in.c	/^snmp_error_response(struct snmp_msg_pstat *msg_ps, u8_t error)$/;"	f	file:
snmp_expand_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_expand_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_get_object_def	net/lwip/core/snmp/mib2.c	/^snmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
snmp_get_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_get_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	356;"	d
snmp_get_snmpgrpid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpgrpid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_snmpgrpid_ptr	net/lwip/include/lwip/snmp.h	354;"	d
snmp_get_sysobjid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysobjid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_sysobjid_ptr	net/lwip/include/lwip/snmp.h	233;"	d
snmp_get_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysuptime(u32_t *value)$/;"	f
snmp_get_sysuptime	net/lwip/include/lwip/snmp.h	236;"	d
snmp_get_value	net/lwip/core/snmp/mib2.c	/^snmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t snmp_ids[28] = {$/;"	v
snmp_ifType	net/lwip/include/lwip/snmp.h	/^enum snmp_ifType {$/;"	g
snmp_ifType_basicISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_basicISDN,$/;"	e	enum:snmp_ifType
snmp_ifType_ddn_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ddn_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_ds1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds1,                    \/* T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ds3	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds3,                    \/* T-3 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_e1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_e1,                     \/* european equiv. of T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_eon	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_eon,                    \/* CLNP over IP [11] *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_3Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_3Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_fddi	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_fddi,$/;"	e	enum:snmp_ifType
snmp_ifType_frame_relay	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_frame_relay$/;"	e	enum:snmp_ifType
snmp_ifType_hdh1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hdh1822,$/;"	e	enum:snmp_ifType
snmp_ifType_hyperchannel	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hyperchannel,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88023_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88023_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88024_tokenBus	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88024_tokenBus,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88025_tokenRing	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88025_tokenRing,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88026_man	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88026_man,$/;"	e	enum:snmp_ifType
snmp_ifType_lapb	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_lapb,$/;"	e	enum:snmp_ifType
snmp_ifType_nsip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_nsip,                   \/* XNS over IP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_other	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_other=1,                \/* none of the following *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ppp	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ppp,$/;"	e	enum:snmp_ifType
snmp_ifType_primaryISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_primaryISDN,            \/* proprietary serial *\/$/;"	e	enum:snmp_ifType
snmp_ifType_propPointToPointSerial	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_propPointToPointSerial,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_10Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_10Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_80Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_80Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_regular1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_regular1822,$/;"	e	enum:snmp_ifType
snmp_ifType_rfc877_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_rfc877_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_sdlc	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sdlc,$/;"	e	enum:snmp_ifType
snmp_ifType_sip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sip,                    \/* SMDS *\/$/;"	e	enum:snmp_ifType
snmp_ifType_slip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_slip,                   \/* generic SLIP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_softwareLoopback	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_softwareLoopback,$/;"	e	enum:snmp_ifType
snmp_ifType_starLan	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_starLan,$/;"	e	enum:snmp_ifType
snmp_ifType_ultra	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ultra,                  \/* ULTRA technologies *\/$/;"	e	enum:snmp_ifType
snmp_ifindextonetif	net/lwip/core/snmp/mib_structs.c	/^snmp_ifindextonetif(s32_t ifindex, struct netif **netif)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmaskreps(void)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/include/lwip/snmp.h	293;"	d
snmp_inc_icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmasks(void)$/;"	f
snmp_inc_icmpinaddrmasks	net/lwip/include/lwip/snmp.h	292;"	d
snmp_inc_icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpindestunreachs(void)$/;"	f
snmp_inc_icmpindestunreachs	net/lwip/include/lwip/snmp.h	283;"	d
snmp_inc_icmpinechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechoreps(void)$/;"	f
snmp_inc_icmpinechoreps	net/lwip/include/lwip/snmp.h	289;"	d
snmp_inc_icmpinechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechos(void)$/;"	f
snmp_inc_icmpinechos	net/lwip/include/lwip/snmp.h	288;"	d
snmp_inc_icmpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinerrors(void)$/;"	f
snmp_inc_icmpinerrors	net/lwip/include/lwip/snmp.h	282;"	d
snmp_inc_icmpinmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinmsgs(void)$/;"	f
snmp_inc_icmpinmsgs	net/lwip/include/lwip/snmp.h	281;"	d
snmp_inc_icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinparmprobs(void)$/;"	f
snmp_inc_icmpinparmprobs	net/lwip/include/lwip/snmp.h	285;"	d
snmp_inc_icmpinredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinredirects(void)$/;"	f
snmp_inc_icmpinredirects	net/lwip/include/lwip/snmp.h	287;"	d
snmp_inc_icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinsrcquenchs(void)$/;"	f
snmp_inc_icmpinsrcquenchs	net/lwip/include/lwip/snmp.h	286;"	d
snmp_inc_icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimeexcds(void)$/;"	f
snmp_inc_icmpintimeexcds	net/lwip/include/lwip/snmp.h	284;"	d
snmp_inc_icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestampreps(void)$/;"	f
snmp_inc_icmpintimestampreps	net/lwip/include/lwip/snmp.h	291;"	d
snmp_inc_icmpintimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestamps(void)$/;"	f
snmp_inc_icmpintimestamps	net/lwip/include/lwip/snmp.h	290;"	d
snmp_inc_icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmaskreps(void)$/;"	f
snmp_inc_icmpoutaddrmaskreps	net/lwip/include/lwip/snmp.h	306;"	d
snmp_inc_icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmasks(void)$/;"	f
snmp_inc_icmpoutaddrmasks	net/lwip/include/lwip/snmp.h	305;"	d
snmp_inc_icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutdestunreachs(void)$/;"	f
snmp_inc_icmpoutdestunreachs	net/lwip/include/lwip/snmp.h	296;"	d
snmp_inc_icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechoreps(void)$/;"	f
snmp_inc_icmpoutechoreps	net/lwip/include/lwip/snmp.h	302;"	d
snmp_inc_icmpoutechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechos(void)$/;"	f
snmp_inc_icmpoutechos	net/lwip/include/lwip/snmp.h	301;"	d
snmp_inc_icmpouterrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouterrors(void)$/;"	f
snmp_inc_icmpouterrors	net/lwip/include/lwip/snmp.h	295;"	d
snmp_inc_icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutmsgs(void)$/;"	f
snmp_inc_icmpoutmsgs	net/lwip/include/lwip/snmp.h	294;"	d
snmp_inc_icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutparmprobs(void)$/;"	f
snmp_inc_icmpoutparmprobs	net/lwip/include/lwip/snmp.h	298;"	d
snmp_inc_icmpoutredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutredirects(void)$/;"	f
snmp_inc_icmpoutredirects	net/lwip/include/lwip/snmp.h	300;"	d
snmp_inc_icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutsrcquenchs(void)$/;"	f
snmp_inc_icmpoutsrcquenchs	net/lwip/include/lwip/snmp.h	299;"	d
snmp_inc_icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimeexcds(void)$/;"	f
snmp_inc_icmpouttimeexcds	net/lwip/include/lwip/snmp.h	297;"	d
snmp_inc_icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestampreps(void)$/;"	f
snmp_inc_icmpouttimestampreps	net/lwip/include/lwip/snmp.h	304;"	d
snmp_inc_icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestamps(void)$/;"	f
snmp_inc_icmpouttimestamps	net/lwip/include/lwip/snmp.h	303;"	d
snmp_inc_ifindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifindiscards(struct netif *ni)$/;"	f
snmp_inc_ifindiscards	net/lwip/include/lwip/snmp.h	245;"	d
snmp_inc_ifinnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinnucastpkts	net/lwip/include/lwip/snmp.h	244;"	d
snmp_inc_ifinucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinucastpkts	net/lwip/include/lwip/snmp.h	243;"	d
snmp_inc_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iflist(void)$/;"	f
snmp_inc_iflist	net/lwip/include/lwip/snmp.h	250;"	d
snmp_inc_ifoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutdiscards(struct netif *ni)$/;"	f
snmp_inc_ifoutdiscards	net/lwip/include/lwip/snmp.h	249;"	d
snmp_inc_ifoutnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutnucastpkts	net/lwip/include/lwip/snmp.h	248;"	d
snmp_inc_ifoutucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutucastpkts	net/lwip/include/lwip/snmp.h	247;"	d
snmp_inc_ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipforwdatagrams(void)$/;"	f
snmp_inc_ipforwdatagrams	net/lwip/include/lwip/snmp.h	261;"	d
snmp_inc_ipfragcreates	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragcreates(void)$/;"	f
snmp_inc_ipfragcreates	net/lwip/include/lwip/snmp.h	273;"	d
snmp_inc_ipfragfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragfails(void)$/;"	f
snmp_inc_ipfragfails	net/lwip/include/lwip/snmp.h	272;"	d
snmp_inc_ipfragoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragoks(void)$/;"	f
snmp_inc_ipfragoks	net/lwip/include/lwip/snmp.h	271;"	d
snmp_inc_ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinaddrerrors(void)$/;"	f
snmp_inc_ipinaddrerrors	net/lwip/include/lwip/snmp.h	260;"	d
snmp_inc_ipindelivers	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindelivers(void)$/;"	f
snmp_inc_ipindelivers	net/lwip/include/lwip/snmp.h	264;"	d
snmp_inc_ipindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindiscards(void)$/;"	f
snmp_inc_ipindiscards	net/lwip/include/lwip/snmp.h	263;"	d
snmp_inc_ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinhdrerrors(void)$/;"	f
snmp_inc_ipinhdrerrors	net/lwip/include/lwip/snmp.h	259;"	d
snmp_inc_ipinreceives	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinreceives(void)$/;"	f
snmp_inc_ipinreceives	net/lwip/include/lwip/snmp.h	258;"	d
snmp_inc_ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinunknownprotos(void)$/;"	f
snmp_inc_ipinunknownprotos	net/lwip/include/lwip/snmp.h	262;"	d
snmp_inc_ipoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutdiscards(void)$/;"	f
snmp_inc_ipoutdiscards	net/lwip/include/lwip/snmp.h	266;"	d
snmp_inc_ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutnoroutes(void)$/;"	f
snmp_inc_ipoutnoroutes	net/lwip/include/lwip/snmp.h	267;"	d
snmp_inc_ipoutrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutrequests(void)$/;"	f
snmp_inc_ipoutrequests	net/lwip/include/lwip/snmp.h	265;"	d
snmp_inc_ipreasmfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmfails(void)$/;"	f
snmp_inc_ipreasmfails	net/lwip/include/lwip/snmp.h	270;"	d
snmp_inc_ipreasmoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmoks(void)$/;"	f
snmp_inc_ipreasmoks	net/lwip/include/lwip/snmp.h	269;"	d
snmp_inc_ipreasmreqds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmreqds(void)$/;"	f
snmp_inc_ipreasmreqds	net/lwip/include/lwip/snmp.h	268;"	d
snmp_inc_iproutingdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iproutingdiscards(void)$/;"	f
snmp_inc_iproutingdiscards	net/lwip/include/lwip/snmp.h	274;"	d
snmp_inc_snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinasnparseerrs(void)$/;"	f
snmp_inc_snmpinasnparseerrs	net/lwip/include/lwip/snmp.h	332;"	d
snmp_inc_snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunitynames(void)$/;"	f
snmp_inc_snmpinbadcommunitynames	net/lwip/include/lwip/snmp.h	330;"	d
snmp_inc_snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunityuses(void)$/;"	f
snmp_inc_snmpinbadcommunityuses	net/lwip/include/lwip/snmp.h	331;"	d
snmp_inc_snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadvalues(void)$/;"	f
snmp_inc_snmpinbadvalues	net/lwip/include/lwip/snmp.h	335;"	d
snmp_inc_snmpinbadversions	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadversions(void)$/;"	f
snmp_inc_snmpinbadversions	net/lwip/include/lwip/snmp.h	329;"	d
snmp_inc_snmpingenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingenerrs(void)$/;"	f
snmp_inc_snmpingenerrs	net/lwip/include/lwip/snmp.h	337;"	d
snmp_inc_snmpingetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetnexts(void)$/;"	f
snmp_inc_snmpingetnexts	net/lwip/include/lwip/snmp.h	341;"	d
snmp_inc_snmpingetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetrequests(void)$/;"	f
snmp_inc_snmpingetrequests	net/lwip/include/lwip/snmp.h	340;"	d
snmp_inc_snmpingetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetresponses(void)$/;"	f
snmp_inc_snmpingetresponses	net/lwip/include/lwip/snmp.h	343;"	d
snmp_inc_snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinnosuchnames(void)$/;"	f
snmp_inc_snmpinnosuchnames	net/lwip/include/lwip/snmp.h	334;"	d
snmp_inc_snmpinpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinpkts(void)$/;"	f
snmp_inc_snmpinpkts	net/lwip/include/lwip/snmp.h	327;"	d
snmp_inc_snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinreadonlys(void)$/;"	f
snmp_inc_snmpinreadonlys	net/lwip/include/lwip/snmp.h	336;"	d
snmp_inc_snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinsetrequests(void)$/;"	f
snmp_inc_snmpinsetrequests	net/lwip/include/lwip/snmp.h	342;"	d
snmp_inc_snmpintoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintoobigs(void)$/;"	f
snmp_inc_snmpintoobigs	net/lwip/include/lwip/snmp.h	333;"	d
snmp_inc_snmpintraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintraps(void)$/;"	f
snmp_inc_snmpintraps	net/lwip/include/lwip/snmp.h	344;"	d
snmp_inc_snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutbadvalues(void)$/;"	f
snmp_inc_snmpoutbadvalues	net/lwip/include/lwip/snmp.h	347;"	d
snmp_inc_snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgenerrs(void)$/;"	f
snmp_inc_snmpoutgenerrs	net/lwip/include/lwip/snmp.h	348;"	d
snmp_inc_snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetnexts(void)$/;"	f
snmp_inc_snmpoutgetnexts	net/lwip/include/lwip/snmp.h	350;"	d
snmp_inc_snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetrequests(void)$/;"	f
snmp_inc_snmpoutgetrequests	net/lwip/include/lwip/snmp.h	349;"	d
snmp_inc_snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetresponses(void)$/;"	f
snmp_inc_snmpoutgetresponses	net/lwip/include/lwip/snmp.h	352;"	d
snmp_inc_snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutnosuchnames(void)$/;"	f
snmp_inc_snmpoutnosuchnames	net/lwip/include/lwip/snmp.h	346;"	d
snmp_inc_snmpoutpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutpkts(void)$/;"	f
snmp_inc_snmpoutpkts	net/lwip/include/lwip/snmp.h	328;"	d
snmp_inc_snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutsetrequests(void)$/;"	f
snmp_inc_snmpoutsetrequests	net/lwip/include/lwip/snmp.h	351;"	d
snmp_inc_snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttoobigs(void)$/;"	f
snmp_inc_snmpouttoobigs	net/lwip/include/lwip/snmp.h	345;"	d
snmp_inc_snmpouttraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttraps(void)$/;"	f
snmp_inc_snmpouttraps	net/lwip/include/lwip/snmp.h	353;"	d
snmp_inc_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_inc_sysuptime(void)$/;"	f
snmp_inc_sysuptime	net/lwip/include/lwip/snmp.h	234;"	d
snmp_inc_tcpactiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpactiveopens(void)$/;"	f
snmp_inc_tcpactiveopens	net/lwip/include/lwip/snmp.h	308;"	d
snmp_inc_tcpattemptfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpattemptfails(void)$/;"	f
snmp_inc_tcpattemptfails	net/lwip/include/lwip/snmp.h	310;"	d
snmp_inc_tcpestabresets	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpestabresets(void)$/;"	f
snmp_inc_tcpestabresets	net/lwip/include/lwip/snmp.h	311;"	d
snmp_inc_tcpinerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinerrs(void)$/;"	f
snmp_inc_tcpinerrs	net/lwip/include/lwip/snmp.h	315;"	d
snmp_inc_tcpinsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinsegs(void)$/;"	f
snmp_inc_tcpinsegs	net/lwip/include/lwip/snmp.h	312;"	d
snmp_inc_tcpoutrsts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutrsts(void)$/;"	f
snmp_inc_tcpoutrsts	net/lwip/include/lwip/snmp.h	316;"	d
snmp_inc_tcpoutsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutsegs(void)$/;"	f
snmp_inc_tcpoutsegs	net/lwip/include/lwip/snmp.h	313;"	d
snmp_inc_tcppassiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcppassiveopens(void)$/;"	f
snmp_inc_tcppassiveopens	net/lwip/include/lwip/snmp.h	309;"	d
snmp_inc_tcpretranssegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpretranssegs(void)$/;"	f
snmp_inc_tcpretranssegs	net/lwip/include/lwip/snmp.h	314;"	d
snmp_inc_udpindatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpindatagrams(void)$/;"	f
snmp_inc_udpindatagrams	net/lwip/include/lwip/snmp.h	319;"	d
snmp_inc_udpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpinerrors(void)$/;"	f
snmp_inc_udpinerrors	net/lwip/include/lwip/snmp.h	321;"	d
snmp_inc_udpnoports	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpnoports(void)$/;"	f
snmp_inc_udpnoports	net/lwip/include/lwip/snmp.h	320;"	d
snmp_inc_udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpoutdatagrams(void)$/;"	f
snmp_inc_udpoutdatagrams	net/lwip/include/lwip/snmp.h	322;"	d
snmp_init	net/lwip/core/snmp/msg_in.c	/^snmp_init(void)$/;"	f
snmp_insert_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_insert_arpidx_tree	net/lwip/include/lwip/snmp.h	254;"	d
snmp_insert_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_insert_ipaddridx_tree	net/lwip/include/lwip/snmp.h	275;"	d
snmp_insert_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_insert_iprteidx_tree	net/lwip/include/lwip/snmp.h	277;"	d
snmp_insert_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_insert_udpidx_tree	net/lwip/include/lwip/snmp.h	323;"	d
snmp_iptooid	net/lwip/core/snmp/mib_structs.c	/^snmp_iptooid(struct ip_addr *ip, s32_t *ident)$/;"	f
snmp_iso_prefix_expand	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_expand(u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_iso_prefix_tst	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_tst(u8_t ident_len, s32_t *ident)$/;"	f
snmp_mib_ln_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_alloc(s32_t id)$/;"	f
snmp_mib_ln_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_free(struct mib_list_node *ln)$/;"	f
snmp_mib_lrn_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_alloc(void)$/;"	f
snmp_mib_lrn_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_free(struct mib_list_rootnode *lrn)$/;"	f
snmp_mib_node_delete	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_delete(struct mib_list_rootnode *rn, struct mib_list_node *n)$/;"	f
snmp_mib_node_find	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_find(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **fn)$/;"	f
snmp_mib_node_insert	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_insert(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **insn)$/;"	f
snmp_msg_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_event(u8_t request_id)$/;"	f
snmp_msg_get_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_get_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_getnext_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_getnext_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_pstat	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_pstat$/;"	s
snmp_msg_set_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_set_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_trap	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_trap$/;"	s
snmp_name_ptr	net/lwip/include/lwip/snmp_structs.h	/^struct snmp_name_ptr$/;"	s
snmp_netiftoifindex	net/lwip/core/snmp/mib_structs.c	/^snmp_netiftoifindex(struct netif *netif, s32_t *ifidx)$/;"	f
snmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const snmp_nodes[28] = {$/;"	v
snmp_obj_id	net/lwip/include/lwip/snmp.h	/^struct snmp_obj_id$/;"	s
snmp_oidtoip	net/lwip/core/snmp/mib_structs.c	/^snmp_oidtoip(s32_t *ident, struct ip_addr *ip)$/;"	f
snmp_ok_response	net/lwip/core/snmp/msg_in.c	/^snmp_ok_response(struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_pdu_dec_varbindlist	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_dec_varbindlist(struct pbuf *p, u16_t ofs, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_pdu_header_check	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_header_check(struct pbuf *p, u16_t ofs, u16_t pdu_len, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_publiccommunity	net/lwip/core/snmp/msg_in.c	/^const char snmp_publiccommunity[7] = "public";$/;"	v
snmp_recv	net/lwip/core/snmp/msg_in.c	/^snmp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
snmp_resp_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_enc(struct snmp_msg_pstat *m_stat, struct pbuf *p)$/;"	f	file:
snmp_resp_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_resp_header_lengths$/;"	s
snmp_resp_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_sum(struct snmp_msg_pstat *m_stat, u16_t vb_len)$/;"	f	file:
snmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node snmp_scalar = {$/;"	v
snmp_search_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_search_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_name_ptr *np)$/;"	f
snmp_send_response	net/lwip/core/snmp/msg_out.c	/^snmp_send_response(struct snmp_msg_pstat *m_stat)$/;"	f
snmp_send_trap	net/lwip/core/snmp/msg_out.c	/^snmp_send_trap(s8_t generic_trap, struct snmp_obj_id *eoid, s32_t specific_trap)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_set_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	355;"	d
snmp_set_syscontact	net/lwip/core/snmp/mib2.c	/^void snmp_set_syscontact(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syscontact	net/lwip/include/lwip/snmp.h	237;"	d
snmp_set_sysdesr	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysdesr(u8_t *str, u8_t *len)$/;"	f
snmp_set_sysdesr	net/lwip/include/lwip/snmp.h	231;"	d
snmp_set_syslocation	net/lwip/core/snmp/mib2.c	/^void snmp_set_syslocation(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syslocation	net/lwip/include/lwip/snmp.h	239;"	d
snmp_set_sysname	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysname(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_sysname	net/lwip/include/lwip/snmp.h	238;"	d
snmp_set_sysobjid	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysobjid(struct snmp_obj_id *oid)$/;"	f
snmp_set_sysobjid	net/lwip/include/lwip/snmp.h	232;"	d
snmp_set_test	net/lwip/core/snmp/mib2.c	/^snmp_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_set_value	net/lwip/core/snmp/mib2.c	/^snmp_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst$/;"	s	file:
snmp_trap_dst_enable	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_enable(u8_t dst_idx, u8_t enable)$/;"	f
snmp_trap_dst_ip_set	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_ip_set(u8_t dst_idx, struct ip_addr *dst)$/;"	f
snmp_trap_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_enc(struct snmp_msg_trap *m_trap, struct pbuf *p)$/;"	f	file:
snmp_trap_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_trap_header_lengths$/;"	s
snmp_trap_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_sum(struct snmp_msg_trap *m_trap, u16_t vb_len)$/;"	f	file:
snmp_varbind	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind$/;"	s
snmp_varbind_alloc	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_alloc(struct snmp_obj_id *oid, u8_t type, u8_t len)$/;"	f
snmp_varbind_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_free(struct snmp_varbind *vb)$/;"	f
snmp_varbind_list_enc	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_enc(struct snmp_varbind_root *root, struct pbuf *p, u16_t ofs)$/;"	f	file:
snmp_varbind_list_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_list_free(struct snmp_varbind_root *root)$/;"	f
snmp_varbind_list_sum	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_sum(struct snmp_varbind_root *root)$/;"	f	file:
snmp_varbind_root	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind_root$/;"	s
snmp_varbind_tail_add	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_add(struct snmp_varbind_root *root, struct snmp_varbind *vb)$/;"	f
snmp_varbind_tail_remove	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_remove(struct snmp_varbind_root *root)$/;"	f
snmp_version	net/lwip/core/snmp/msg_in.c	/^const s32_t snmp_version = 0;$/;"	v
snmpenableauthentraps_default	net/lwip/core/snmp/mib2.c	/^static const u8_t snmpenableauthentraps_default = 2; \/* disabled *\/$/;"	v	file:
snmpenableauthentraps_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* snmpenableauthentraps_ptr = (u8_t*)&snmpenableauthentraps_default;$/;"	v	file:
snmpgrp_id	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id snmpgrp_id = {7,{1,3,6,1,2,1,11}};$/;"	v	typeref:struct:snmp_obj_id	file:
snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^             snmpinasnparseerrs = 0,$/;"	v	file:
snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunitynames = 0,$/;"	v	file:
snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunityuses = 0,$/;"	v	file:
snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpinbadvalues = 0,$/;"	v	file:
snmpinbadversions	net/lwip/core/snmp/mib2.c	/^             snmpinbadversions = 0,$/;"	v	file:
snmpingenerrs	net/lwip/core/snmp/mib2.c	/^             snmpingenerrs = 0,$/;"	v	file:
snmpingetnexts	net/lwip/core/snmp/mib2.c	/^             snmpingetnexts = 0,$/;"	v	file:
snmpingetrequests	net/lwip/core/snmp/mib2.c	/^             snmpingetrequests = 0,$/;"	v	file:
snmpingetresponses	net/lwip/core/snmp/mib2.c	/^             snmpingetresponses = 0,$/;"	v	file:
snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpinnosuchnames = 0,$/;"	v	file:
snmpinpkts	net/lwip/core/snmp/mib2.c	/^static u32_t snmpinpkts = 0,$/;"	v	file:
snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^             snmpinreadonlys = 0,$/;"	v	file:
snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpinsetrequests = 0,$/;"	v	file:
snmpintoobigs	net/lwip/core/snmp/mib2.c	/^             snmpintoobigs = 0,$/;"	v	file:
snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalreqvars = 0,$/;"	v	file:
snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalsetvars = 0,$/;"	v	file:
snmpintraps	net/lwip/core/snmp/mib2.c	/^             snmpintraps = 0,$/;"	v	file:
snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpoutbadvalues = 0,$/;"	v	file:
snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^             snmpoutgenerrs = 0,$/;"	v	file:
snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^             snmpoutgetnexts = 0,$/;"	v	file:
snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutgetrequests = 0,$/;"	v	file:
snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^             snmpoutgetresponses = 0,$/;"	v	file:
snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpoutnosuchnames = 0,$/;"	v	file:
snmpoutpkts	net/lwip/core/snmp/mib2.c	/^             snmpoutpkts = 0,$/;"	v	file:
snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutsetrequests = 0,$/;"	v	file:
snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^             snmpouttoobigs = 0,$/;"	v	file:
snmpouttraps	net/lwip/core/snmp/mib2.c	/^             snmpouttraps = 0;$/;"	v	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
so	obj/net/ns.asm	/^       so do nothing here! *\/$/;"	d
sock	net/lwip/api/sockets.c	/^  struct lwip_socket *sock;$/;"	m	struct:lwip_setgetsockopt_data	typeref:struct:lwip_setgetsockopt_data::lwip_socket	file:
sock	obj/net/ns.asm	/^    sock = get_socket(s);$/;"	d
sock	obj/net/ns.asm	/^  sock = &sockets[s];$/;"	d
sock	obj/net/ns.asm	/^  sock = data->sock;$/;"	d
sock	obj/net/ns.asm	/^  sock = get_socket(s);$/;"	d
sock	user/httpd.c	/^	int sock;$/;"	m	struct:http_request	file:
sock_set_errno	net/lwip/api/sockets.c	158;"	d	file:
sockaddr	net/lwip/include/lwip/sockets.h	/^struct sockaddr {$/;"	s
sockaddr_in	net/lwip/include/lwip/sockets.h	/^struct sockaddr_in {$/;"	s
socket	inc/ns.h	/^	} socket;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_socket
socket	lib/sockets.c	/^socket(int domain, int type, int protocol)$/;"	f
socket	net/lwip/include/lwip/api.h	/^  int socket;$/;"	m	struct:netconn
socket	net/lwip/include/lwip/sockets.h	340;"	d
sockets	net/lwip/api/sockets.c	/^static struct lwip_socket sockets[NUM_SOCKETS];$/;"	v	typeref:struct:lwip_socket	file:
sockid	inc/fd.h	/^	int sockid;$/;"	m	struct:FdSock
socklen_t	net/lwip/include/lwip/sockets.h	64;"	d
socksem	net/lwip/api/sockets.c	/^static sys_sem_t socksem;$/;"	v	file:
socksem	obj/net/ns.asm	/^  socksem   = sys_sem_new(1);$/;"	d
sp	net/lwip/include/lwip/snmp_msg.h	/^  u16_t sp;$/;"	m	struct:snmp_msg_pstat
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
spc_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t spc_trap;$/;"	m	struct:snmp_msg_trap
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
src	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::ip_addr
src	obj/net/ns.asm	/^    src = (*octetptr) << 8;$/;"	d
src	obj/net/ns.asm	/^  src = ntohs(udphdr->src);$/;"	d
src_ip	obj/net/ns.asm	/^    src_ip = &(netif->ip_addr);$/;"	d
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/net/ns.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testinput.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testoutput.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echosrv.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echotest.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/httpd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testtime.asm	/^ssize_t$/;"	l
ssize_t	obj/user/writemotd.asm	/^ssize_t$/;"	l
ssthresh	net/lwip/include/lwip/tcp.h	/^  u16_t ssthresh;$/;"	m	struct:tcp_pcb
sswt_cb	net/lwip/core/sys.c	/^struct sswt_cb$/;"	s	file:
sswt_handler	net/lwip/core/sys.c	/^sswt_handler(void *arg)$/;"	f	file:
st_args	net/serv.c	/^struct st_args {$/;"	s	file:
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
stack_size	net/lwip/jos/arch/threadq.h	/^enum { stack_size = PGSIZE };$/;"	e	enum:__anon38
stacktop	obj/net/ns.asm	/^    stacktop = stacktop - 4;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	net/lwip/core/ipv4/ip_frag.c	/^  u16_t start;$/;"	m	struct:ip_reass_helper	file:
start	obj/boot/boot.asm	/^start:$/;"	l
start	obj/net/ns.asm	/^	start = sys_time_msec();$/;"	d
start_timer	net/serv.c	/^start_timer(struct timer_thread *t, void (*func)(void), const char *name, int msec)$/;"	f	file:
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
starting	net/lwip/netif/ppp/fsm.h	/^  void (*starting)(fsm*);                           \/* Called when we want the lower layer *\/$/;"	m	struct:fsm_callbacks
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
state	net/lwip/core/dns.c	/^  u8_t  state;$/;"	m	struct:dns_table_entry	file:
state	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t state;               \/* current AutoIP state machine state *\/$/;"	m	struct:autoip
state	net/lwip/include/lwip/api.h	/^  enum netconn_state state;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_state
state	net/lwip/include/lwip/dhcp.h	/^  u8_t state;$/;"	m	struct:dhcp
state	net/lwip/include/lwip/netif.h	/^  void *state;$/;"	m	struct:netif
state	net/lwip/include/lwip/netifapi.h	/^      void *state;$/;"	m	struct:netifapi_msg_msg::__anon15::__anon16
state	net/lwip/include/lwip/snmp_msg.h	/^  u8_t state;$/;"	m	struct:snmp_msg_pstat
state	net/lwip/netif/etharp.c	/^  enum etharp_state state;$/;"	m	struct:etharp_entry	typeref:enum:etharp_entry::etharp_state	file:
state	net/lwip/netif/ppp/fsm.h	/^  int state;                       \/* State *\/$/;"	m	struct:fsm
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static __inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static struct Dev *devtab[] =$/;"	t
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^	static struct pci_bus root_bus;$/;"	t
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void $/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline ppn_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct Page*$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int $/;"	l
static	obj/kern/kernel.asm	/^static int __attribute__((warn_unused_result))$/;"	l
static	obj/kern/kernel.asm	/^static int get_writeIndex_dma_buffer()$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct e100_ru rfd[MAX_RING_SZ];$/;"	t
static	obj/kern/kernel.asm	/^static uint32_t rindex = 0;$/;"	l
static	obj/kern/kernel.asm	/^static uint32_t windex = -1;$/;"	l
static	obj/kern/kernel.asm	/^static uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned int ticks;$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void $/;"	l
static	obj/kern/kernel.asm	/^static void cons_intr(int (*proc)(void));$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static void*$/;"	l
static	obj/net/ns.asm	/^static LIST_HEAD(thread_list, sys_thread) threads[thread_hash_size];$/;"	l
static	obj/net/ns.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/net/ns.asm	/^static __inline envid_t$/;"	l
static	obj/net/ns.asm	/^static err_t$/;"	l
static	obj/net/ns.asm	/^static inline struct thread_context *$/;"	l
static	obj/net/ns.asm	/^static inline void $/;"	l
static	obj/net/ns.asm	/^static inline void$/;"	l
static	obj/net/ns.asm	/^static int$/;"	l
static	obj/net/ns.asm	/^static long long$/;"	l
static	obj/net/ns.asm	/^static ssize_t$/;"	l
static	obj/net/ns.asm	/^static struct Dev *devtab[] =$/;"	t
static	obj/net/ns.asm	/^static struct ip_reassdata*$/;"	t
static	obj/net/ns.asm	/^static struct lwip_socket *$/;"	t
static	obj/net/ns.asm	/^static struct pbuf *$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue kill_queue;$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue thread_queue;$/;"	t
static	obj/net/ns.asm	/^static thread_id_t$/;"	l
static	obj/net/ns.asm	/^static u16_t$/;"	l
static	obj/net/ns.asm	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	l
static	obj/net/ns.asm	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	l
static	obj/net/ns.asm	/^static u8_t$/;"	l
static	obj/net/ns.asm	/^static unsigned long long$/;"	l
static	obj/net/ns.asm	/^static void *$/;"	l
static	obj/net/ns.asm	/^static void __attribute__((noreturn))$/;"	l
static	obj/net/ns.asm	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	l
static	obj/net/ns.asm	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	l
static	obj/net/ns.asm	/^static void$/;"	l
static	obj/net/testinput.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/net/testinput.asm	/^static __inline envid_t$/;"	l
static	obj/net/testinput.asm	/^static int$/;"	l
static	obj/net/testinput.asm	/^static long long$/;"	l
static	obj/net/testinput.asm	/^static ssize_t$/;"	l
static	obj/net/testinput.asm	/^static struct Dev *devtab[] =$/;"	t
static	obj/net/testinput.asm	/^static unsigned long long$/;"	l
static	obj/net/testinput.asm	/^static void$/;"	l
static	obj/net/testoutput.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/net/testoutput.asm	/^static __inline envid_t$/;"	l
static	obj/net/testoutput.asm	/^static int$/;"	l
static	obj/net/testoutput.asm	/^static long long$/;"	l
static	obj/net/testoutput.asm	/^static ssize_t$/;"	l
static	obj/net/testoutput.asm	/^static struct Dev *devtab[] =$/;"	t
static	obj/net/testoutput.asm	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	t
static	obj/net/testoutput.asm	/^static unsigned long long$/;"	l
static	obj/net/testoutput.asm	/^static void$/;"	l
static	obj/user/echosrv.asm	/^static int$/;"	l
static	obj/user/echosrv.asm	/^static long long$/;"	l
static	obj/user/echosrv.asm	/^static ssize_t$/;"	l
static	obj/user/echosrv.asm	/^static struct Dev *devtab[] =$/;"	t
static	obj/user/echosrv.asm	/^static unsigned long long$/;"	l
static	obj/user/echosrv.asm	/^static void$/;"	l
static	obj/user/echotest.asm	/^static int$/;"	l
static	obj/user/echotest.asm	/^static long long$/;"	l
static	obj/user/echotest.asm	/^static ssize_t$/;"	l
static	obj/user/echotest.asm	/^static struct Dev *devtab[] =$/;"	t
static	obj/user/echotest.asm	/^static unsigned long long$/;"	l
static	obj/user/echotest.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static struct Dev *devtab[] =$/;"	t
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/httpd.asm	/^static int$/;"	l
static	obj/user/httpd.asm	/^static long long$/;"	l
static	obj/user/httpd.asm	/^static ssize_t$/;"	l
static	obj/user/httpd.asm	/^static struct Dev *devtab[] =$/;"	t
static	obj/user/httpd.asm	/^static unsigned long long$/;"	l
static	obj/user/httpd.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static struct Dev *devtab[] =$/;"	t
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/idle.asm	/^static __inline void$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static struct Dev *devtab[] =$/;"	t
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static struct Dev *devtab[] =$/;"	t
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static struct Dev *devtab[] =$/;"	t
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t sys_exofork(void) __attribute__((always_inline));$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static struct Dev *devtab[] =$/;"	t
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/testtime.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testtime.asm	/^static __inline void$/;"	l
static	obj/user/testtime.asm	/^static int$/;"	l
static	obj/user/testtime.asm	/^static long long$/;"	l
static	obj/user/testtime.asm	/^static ssize_t$/;"	l
static	obj/user/testtime.asm	/^static struct Dev *devtab[] =$/;"	t
static	obj/user/testtime.asm	/^static unsigned long long$/;"	l
static	obj/user/testtime.asm	/^static void$/;"	l
static	obj/user/writemotd.asm	/^static int$/;"	l
static	obj/user/writemotd.asm	/^static long long$/;"	l
static	obj/user/writemotd.asm	/^static ssize_t$/;"	l
static	obj/user/writemotd.asm	/^static struct Dev *devtab[] =$/;"	t
static	obj/user/writemotd.asm	/^static unsigned long long$/;"	l
static	obj/user/writemotd.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stats	net/lwip/netif/ppp/vj.h	/^  struct vjstat stats;$/;"	m	struct:vjcompress	typeref:struct:vjcompress::vjstat
stats_	net/lwip/include/lwip/stats.h	/^struct stats_ {$/;"	s
stats_display	net/lwip/core/stats.c	/^stats_display(void)$/;"	f
stats_display	net/lwip/include/lwip/stats.h	271;"	d
stats_display_igmp	net/lwip/core/stats.c	/^stats_display_igmp(struct stats_igmp *igmp)$/;"	f
stats_display_igmp	net/lwip/include/lwip/stats.h	273;"	d
stats_display_mem	net/lwip/core/stats.c	/^stats_display_mem(struct stats_mem *mem, char *name)$/;"	f
stats_display_mem	net/lwip/include/lwip/stats.h	274;"	d
stats_display_memp	net/lwip/core/stats.c	/^stats_display_memp(struct stats_mem *mem, int index)$/;"	f
stats_display_memp	net/lwip/include/lwip/stats.h	275;"	d
stats_display_proto	net/lwip/core/stats.c	/^stats_display_proto(struct stats_proto *proto, char *name)$/;"	f
stats_display_proto	net/lwip/include/lwip/stats.h	272;"	d
stats_display_sys	net/lwip/core/stats.c	/^stats_display_sys(struct stats_sys *sys)$/;"	f
stats_display_sys	net/lwip/include/lwip/stats.h	276;"	d
stats_igmp	net/lwip/include/lwip/stats.h	/^struct stats_igmp {$/;"	s
stats_init	net/lwip/include/lwip/stats.h	142;"	d
stats_init	net/lwip/include/lwip/stats.h	147;"	d
stats_mem	net/lwip/include/lwip/stats.h	/^struct stats_mem {$/;"	s
stats_proto	net/lwip/include/lwip/stats.h	/^struct stats_proto {$/;"	s
stats_sys	net/lwip/include/lwip/stats.h	/^struct stats_sys {$/;"	s
stats_syselem	net/lwip/include/lwip/stats.h	/^struct stats_syselem {$/;"	s
status	kern/e100.c	/^		volatile uint8_t status;$/;"	m	struct:e100_ru	file:
status	kern/e100.c	/^    volatile uint16_t status;$/;"	m	struct:e100_cb	file:
status_callback	net/lwip/include/lwip/netif.h	/^  void (* status_callback)(struct netif *netif);$/;"	m	struct:netif
stemp	obj/kern/kernel.asm	/^                stemp = pgdir_walk(curenv->env_pgdir, start, 0);$/;"	d
stop	obj/net/ns.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testinput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testoutput.asm	/^			stop = sys_time_msec() + to;$/;"	d
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t strplen;$/;"	m	struct:snmp_trap_header_lengths
strplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t strplenlen;$/;"	m	struct:snmp_trap_header_lengths
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
subnetMask	net/lwip/netif/ppp/ppp.c	/^u_long subnetMask;$/;"	v
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
sv	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
swapped	obj/net/ns.asm	/^      swapped = 1 - swapped;$/;"	d
swapped	obj/net/ns.asm	/^  swapped = 0;$/;"	d
sync	lib/file.c	/^sync(void)$/;"	f
sys	net/lwip/include/lwip/stats.h	/^  struct stats_sys sys;$/;"	m	struct:stats_	typeref:struct:stats_::stats_sys
sys_arch_mbox_fetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_fetch(sys_mbox_t mbox, void **msg, u32_t tm_msec)$/;"	f
sys_arch_mbox_tryfetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_tryfetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_arch_sem_wait	net/lwip/include/lwip/sys.h	57;"	d
sys_arch_sem_wait	net/lwip/jos/arch/sys_arch.c	/^sys_arch_sem_wait(sys_sem_t sem, u32_t tm_msec)$/;"	f
sys_arch_timeouts	net/lwip/jos/arch/sys_arch.c	/^sys_arch_timeouts(void)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_errlist	net/lwip/jos/arch/perror.c	/^const char *sys_errlist[] = {$/;"	v
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_init	net/lwip/include/lwip/sys.h	50;"	d
sys_init	net/lwip/jos/arch/sys_arch.c	/^sys_init(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_mbox_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_mbox_entry {$/;"	s	file:
sys_mbox_fetch	net/lwip/core/sys.c	/^sys_mbox_fetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_mbox_fetch	net/lwip/include/lwip/sys.h	60;"	d
sys_mbox_free	net/lwip/include/lwip/sys.h	64;"	d
sys_mbox_free	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_free(sys_mbox_t mbox)$/;"	f
sys_mbox_new	net/lwip/include/lwip/sys.h	59;"	d
sys_mbox_new	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_new(int size)$/;"	f
sys_mbox_post	net/lwip/include/lwip/sys.h	62;"	d
sys_mbox_post	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_post(sys_mbox_t mbox, void *msg)$/;"	f
sys_mbox_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_mbox_t;$/;"	t
sys_mbox_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_mbox_t;$/;"	t
sys_mbox_t	obj/net/ns.asm	/^sys_mbox_t$/;"	l
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	135;"	d
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	61;"	d
sys_mbox_trypost	net/lwip/include/lwip/sys.h	63;"	d
sys_mbox_trypost	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_trypost(sys_mbox_t mbox, void *msg)$/;"	f
sys_msleep	net/lwip/core/sys.c	/^sys_msleep(u32_t ms)$/;"	f
sys_ns_recv	kern/syscall.c	/^int sys_ns_recv(void *data)$/;"	f
sys_ns_recv	lib/syscall.c	/^sys_ns_recv(void* data)$/;"	f
sys_ns_send	kern/syscall.c	/^sys_ns_send(void* data, uint16_t length, int isEl)$/;"	f
sys_ns_send	lib/syscall.c	/^sys_ns_send(char* data, uint16_t length, char isEl)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_prot_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_prot_t;$/;"	t
sys_sem_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_sem_entry {$/;"	s	file:
sys_sem_free	net/lwip/include/lwip/sys.h	58;"	d
sys_sem_free	net/lwip/jos/arch/sys_arch.c	/^sys_sem_free(sys_sem_t sem)$/;"	f
sys_sem_new	net/lwip/include/lwip/sys.h	53;"	d
sys_sem_new	net/lwip/jos/arch/sys_arch.c	/^sys_sem_new(u8_t count)$/;"	f
sys_sem_signal	net/lwip/include/lwip/sys.h	54;"	d
sys_sem_signal	net/lwip/jos/arch/sys_arch.c	/^sys_sem_signal(sys_sem_t sem)$/;"	f
sys_sem_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_sem_t;$/;"	t
sys_sem_t	net/lwip/jos/arch/sys_arch.h	/^typedef	int sys_sem_t;$/;"	t
sys_sem_t	obj/net/ns.asm	/^sys_sem_t$/;"	l
sys_sem_wait	net/lwip/core/sys.c	/^sys_sem_wait(sys_sem_t sem)$/;"	f
sys_sem_wait	net/lwip/include/lwip/sys.h	55;"	d
sys_sem_wait_timeout	net/lwip/core/sys.c	/^sys_sem_wait_timeout(sys_sem_t sem, u32_t timeout)$/;"	f
sys_sem_wait_timeout	net/lwip/include/lwip/sys.h	56;"	d
sys_tem	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node sys_tem = {$/;"	v	typeref:struct:mib_array_node
sys_tem_ids	net/lwip/core/snmp/mib2.c	/^const s32_t sys_tem_ids[7] = { 1, 2, 3, 4, 5, 6, 7 };$/;"	v
sys_tem_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const sys_tem_nodes[7] = {$/;"	v
sys_tem_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node sys_tem_scalar = {$/;"	v
sys_thread	net/lwip/jos/arch/sys_arch.c	/^struct sys_thread {$/;"	s	file:
sys_thread_new	net/lwip/include/lwip/sys.h	66;"	d
sys_thread_new	net/lwip/jos/arch/sys_arch.c	/^sys_thread_new(char *name, void (* thread)(void *arg), void *arg, $/;"	f
sys_thread_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_thread_t;$/;"	t
sys_thread_t	obj/net/ns.asm	/^sys_thread_t$/;"	l
sys_time_msec	kern/syscall.c	/^sys_time_msec(void) $/;"	f	file:
sys_time_msec	lib/syscall.c	/^sys_time_msec(void)$/;"	f
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {$/;"	s
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	s
sys_timeout	net/lwip/core/sys.c	/^sys_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
sys_timeout	net/lwip/include/lwip/sys.h	51;"	d
sys_timeout_handler	net/lwip/include/lwip/sys.h	/^typedef void (* sys_timeout_handler)(void *arg);$/;"	t
sys_timeouts	net/lwip/include/lwip/sys.h	/^struct sys_timeouts {$/;"	s
sys_untimeout	net/lwip/core/sys.c	/^sys_untimeout(sys_timeout_handler h, void *arg)$/;"	f
sys_untimeout	net/lwip/include/lwip/sys.h	52;"	d
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
syscontact_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_default[] = "";$/;"	v	file:
syscontact_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_len_default = 0;$/;"	v	file:
syscontact_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_len_ptr = (u8_t*)&syscontact_len_default;$/;"	v	file:
syscontact_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_ptr = (u8_t*)&syscontact_default[0];$/;"	v	file:
sysdescr_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_default[] = "lwIP";$/;"	v	file:
sysdescr_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_len_default = 4;$/;"	v	file:
sysdescr_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_len_ptr = (u8_t*)&sysdescr_len_default;$/;"	v	file:
sysdescr_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_ptr = (u8_t*)&sysdescr_default[0];$/;"	v	file:
syslocation_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_default[] = "";$/;"	v	file:
syslocation_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_len_default = 0;$/;"	v	file:
syslocation_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_len_ptr = (u8_t*)&syslocation_len_default;$/;"	v	file:
syslocation_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_ptr = (u8_t*)&syslocation_default[0];$/;"	v	file:
sysname_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_default[] = "FQDN-unk";$/;"	v	file:
sysname_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_len_default = 8;$/;"	v	file:
sysname_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_len_ptr = (u8_t*)&sysname_len_default;$/;"	v	file:
sysname_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_ptr = (u8_t*)&sysname_default[0];$/;"	v	file:
sysobjid	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id sysobjid = {SNMP_SYSOBJID_LEN, SNMP_SYSOBJID};$/;"	v	typeref:struct:snmp_obj_id	file:
sysservices	net/lwip/core/snmp/mib2.c	/^static const s32_t sysservices = SNMP_SYSSERVICES;$/;"	v	file:
system_get_object_def	net/lwip/core/snmp/mib2.c	/^system_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
system_get_value	net/lwip/core/snmp/mib2.c	/^system_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_test	net/lwip/core/snmp/mib2.c	/^system_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_value	net/lwip/core/snmp/mib2.c	/^system_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
sysuptime	net/lwip/core/snmp/mib2.c	/^static u32_t sysuptime = 0;$/;"	v	file:
sz	obj/fs/fs.asm	/^		sz = PGSIZE;$/;"	d
t	obj/net/ns.asm	/^    t = malloc(sizeof(*t));$/;"	d
t1_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t1_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for renewal time *\/$/;"	m	struct:dhcp
t2_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t2_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for rebind time *\/$/;"	m	struct:dhcp
t_arp	net/serv.c	/^static struct timer_thread t_arp;$/;"	v	typeref:struct:timer_thread	file:
t_tcpf	net/serv.c	/^static struct timer_thread t_tcpf;$/;"	v	typeref:struct:timer_thread	file:
t_tcps	net/serv.c	/^static struct timer_thread t_tcps;$/;"	v	typeref:struct:timer_thread	file:
tail	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *tail;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
tail	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *tail;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
tail_gone	obj/net/ns.asm	/^    tail_gone = pbuf_free(q);$/;"	d
tbd	kern/e100.c	/^    uint8_t tbd;$/;"	m	struct:e100_cb	file:
tbd_a_addr	kern/e100.c	/^    uint32_t tbd_a_addr; \/\/ 0xFFFFFFFF$/;"	m	struct:e100_cb	file:
tc	obj/net/ns.asm	/^	tc = tc->tc_queue_link;$/;"	d
tc_arg	net/lwip/jos/arch/threadq.h	/^    uint32_t		tc_arg;$/;"	m	struct:thread_context
tc_entry	net/lwip/jos/arch/threadq.h	/^    void		(*tc_entry)(uint32_t);$/;"	m	struct:thread_context
tc_jb	net/lwip/jos/arch/threadq.h	/^    struct jos_jmp_buf	tc_jb;$/;"	m	struct:thread_context	typeref:struct:thread_context::jos_jmp_buf
tc_name	net/lwip/jos/arch/threadq.h	/^    char 		tc_name[name_size];$/;"	m	struct:thread_context
tc_nonhalt	net/lwip/jos/arch/threadq.h	/^    int			tc_nonhalt;$/;"	m	struct:thread_context
tc_onhalt	net/lwip/jos/arch/threadq.h	/^    void		(*tc_onhalt[THREAD_NUM_ONHALT])(thread_id_t);$/;"	m	struct:thread_context
tc_queue_link	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tc_queue_link;$/;"	m	struct:thread_context	typeref:struct:thread_context::thread_context
tc_stack_bottom	net/lwip/jos/arch/threadq.h	/^    void		*tc_stack_bottom;$/;"	m	struct:thread_context
tc_tid	net/lwip/jos/arch/threadq.h	/^    thread_id_t		tc_tid;$/;"	m	struct:thread_context
tc_wait_addr	net/lwip/jos/arch/threadq.h	/^    volatile uint32_t	*tc_wait_addr;$/;"	m	struct:thread_context
tc_wakeup	net/lwip/jos/arch/threadq.h	/^    volatile char	tc_wakeup;$/;"	m	struct:thread_context
tcb_byte_count	kern/e100.c	/^    uint16_t tcb_byte_count;$/;"	m	struct:e100_cb	file:
tclass1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
tclass2	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
tcp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcp = {$/;"	v	typeref:struct:mib_array_node
tcp	net/lwip/include/lwip/api.h	/^    struct tcp_pcb *tcp;$/;"	m	union:netconn::__anon14	typeref:struct:netconn::__anon14::tcp_pcb
tcp	net/lwip/include/lwip/stats.h	/^  struct stats_proto tcp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
tcp_abort	net/lwip/core/tcp.c	/^tcp_abort(struct tcp_pcb *pcb)$/;"	f
tcp_accept	net/lwip/core/tcp.c	/^tcp_accept(struct tcp_pcb *pcb,$/;"	f
tcp_accept_null	net/lwip/core/tcp.c	/^tcp_accept_null(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
tcp_accepted	net/lwip/include/lwip/tcp.h	83;"	d
tcp_accepted	net/lwip/include/lwip/tcp.h	85;"	d
tcp_ack	net/lwip/include/lwip/tcp.h	509;"	d
tcp_ack_now	net/lwip/include/lwip/tcp.h	517;"	d
tcp_active_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_active_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb->next;$/;"	d
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb;$/;"	d
tcp_alloc	net/lwip/core/tcp.c	/^tcp_alloc(u8_t prio)$/;"	f
tcp_arg	net/lwip/core/tcp.c	/^tcp_arg(struct tcp_pcb *pcb, void *arg)$/;"	f
tcp_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_backoff[13] =$/;"	v
tcp_bind	net/lwip/core/tcp.c	/^tcp_bind(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
tcp_bound_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_bound_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_close	net/lwip/core/tcp.c	/^tcp_close(struct tcp_pcb *pcb)$/;"	f
tcp_connect	net/lwip/core/tcp.c	/^tcp_connect(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port,$/;"	f
tcp_debug_print	net/lwip/core/tcp.c	/^tcp_debug_print(struct tcp_hdr *tcphdr)$/;"	f
tcp_debug_print	net/lwip/include/lwip/tcp.h	550;"	d
tcp_debug_print_flags	net/lwip/core/tcp.c	/^tcp_debug_print_flags(u8_t flags)$/;"	f
tcp_debug_print_flags	net/lwip/include/lwip/tcp.h	551;"	d
tcp_debug_print_pcbs	net/lwip/core/tcp.c	/^tcp_debug_print_pcbs(void)$/;"	f
tcp_debug_print_pcbs	net/lwip/include/lwip/tcp.h	553;"	d
tcp_debug_print_state	net/lwip/core/tcp.c	/^tcp_debug_print_state(enum tcp_state s)$/;"	f
tcp_debug_print_state	net/lwip/include/lwip/tcp.h	552;"	d
tcp_do_output_nagle	net/lwip/include/lwip/tcp.h	134;"	d
tcp_eff_send_mss	net/lwip/core/tcp.c	/^tcp_eff_send_mss(u16_t sendmss, struct ip_addr *addr)$/;"	f
tcp_enqueue	net/lwip/core/tcp_out.c	/^tcp_enqueue(struct tcp_pcb *pcb, void *arg, u16_t len,$/;"	f
tcp_err	net/lwip/core/tcp.c	/^tcp_err(struct tcp_pcb *pcb,$/;"	f
tcp_fasttmr	net/lwip/core/tcp.c	/^tcp_fasttmr(void)$/;"	f
tcp_get_object_def	net/lwip/core/snmp/mib2.c	/^tcp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcp_get_value	net/lwip/core/snmp/mib2.c	/^tcp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcp_hdr	net/lwip/include/lwip/tcp.h	/^struct tcp_hdr {$/;"	s
tcp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcp_ids[15] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };$/;"	v
tcp_init	net/lwip/include/lwip/tcp.h	55;"	d
tcp_input	net/lwip/core/tcp_in.c	/^tcp_input(struct pbuf *p, struct netif *inp)$/;"	f
tcp_input_pcb	net/lwip/core/tcp_in.c	/^struct tcp_pcb *tcp_input_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = NULL;$/;"	d
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = pcb;$/;"	d
tcp_keepalive	net/lwip/core/tcp_out.c	/^tcp_keepalive(struct tcp_pcb *pcb)$/;"	f
tcp_kill_prio	net/lwip/core/tcp.c	/^tcp_kill_prio(u8_t prio)$/;"	f	file:
tcp_kill_timewait	net/lwip/core/tcp.c	/^tcp_kill_timewait(void)$/;"	f	file:
tcp_listen	net/lwip/include/lwip/tcp.h	97;"	d
tcp_listen_input	net/lwip/core/tcp_in.c	/^tcp_listen_input(struct tcp_pcb_listen *pcb)$/;"	f	file:
tcp_listen_pcbs	net/lwip/core/tcp.c	/^union tcp_listen_pcbs_t tcp_listen_pcbs;$/;"	v	typeref:union:tcp_listen_pcbs_t
tcp_listen_pcbs_t	net/lwip/include/lwip/tcp.h	/^union tcp_listen_pcbs_t { \/* List of all TCP PCBs in LISTEN state. *\/$/;"	u
tcp_listen_with_backlog	net/lwip/core/tcp.c	/^tcp_listen_with_backlog(struct tcp_pcb *pcb, u8_t backlog)$/;"	f
tcp_mss	net/lwip/include/lwip/tcp.h	79;"	d
tcp_new	net/lwip/core/tcp.c	/^tcp_new(void)$/;"	f
tcp_new_port	net/lwip/core/tcp.c	/^tcp_new_port(void)$/;"	f	file:
tcp_next_iss	net/lwip/core/tcp.c	/^tcp_next_iss(void)$/;"	f
tcp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcp_nodes[15] = {$/;"	v
tcp_output	net/lwip/core/tcp_out.c	/^tcp_output(struct tcp_pcb *pcb)$/;"	f
tcp_output_nagle	net/lwip/include/lwip/tcp.h	138;"	d
tcp_output_segment	net/lwip/core/tcp_out.c	/^tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb)$/;"	f	file:
tcp_parseopt	net/lwip/core/tcp_in.c	/^tcp_parseopt(struct tcp_pcb *pcb)$/;"	f	file:
tcp_pcb	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb {$/;"	s
tcp_pcb_listen	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb_listen {  $/;"	s
tcp_pcb_purge	net/lwip/core/tcp.c	/^tcp_pcb_purge(struct tcp_pcb *pcb)$/;"	f
tcp_pcb_remove	net/lwip/core/tcp.c	/^tcp_pcb_remove(struct tcp_pcb **pcblist, struct tcp_pcb *pcb)$/;"	f
tcp_pcbs_sane	net/lwip/core/tcp.c	/^tcp_pcbs_sane(void)$/;"	f
tcp_pcbs_sane	net/lwip/include/lwip/tcp.h	554;"	d
tcp_persist_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_persist_backoff[7] = { 3, 6, 12, 24, 48, 96, 120 };$/;"	v
tcp_poll	net/lwip/core/tcp.c	/^tcp_poll(struct tcp_pcb *pcb,$/;"	f
tcp_process	net/lwip/core/tcp_in.c	/^tcp_process(struct tcp_pcb *pcb)$/;"	f	file:
tcp_receive	net/lwip/core/tcp_in.c	/^tcp_receive(struct tcp_pcb *pcb)$/;"	f	file:
tcp_recv	net/lwip/core/tcp.c	/^tcp_recv(struct tcp_pcb *pcb,$/;"	f
tcp_recv_null	net/lwip/core/tcp.c	/^tcp_recv_null(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
tcp_recved	net/lwip/core/tcp.c	/^tcp_recved(struct tcp_pcb *pcb, u16_t len)$/;"	f
tcp_rexmit	net/lwip/core/tcp_out.c	/^tcp_rexmit(struct tcp_pcb *pcb)$/;"	f
tcp_rexmit_rto	net/lwip/core/tcp_out.c	/^tcp_rexmit_rto(struct tcp_pcb *pcb)$/;"	f
tcp_rst	net/lwip/core/tcp_out.c	/^tcp_rst(u32_t seqno, u32_t ackno,$/;"	f
tcp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node tcp_scalar = {$/;"	v
tcp_seg	net/lwip/include/lwip/tcp.h	/^struct tcp_seg {$/;"	s
tcp_seg_copy	net/lwip/core/tcp.c	/^tcp_seg_copy(struct tcp_seg *seg)$/;"	f
tcp_seg_free	net/lwip/core/tcp.c	/^tcp_seg_free(struct tcp_seg *seg)$/;"	f
tcp_segs_free	net/lwip/core/tcp.c	/^tcp_segs_free(struct tcp_seg *seg)$/;"	f
tcp_send_ctrl	net/lwip/core/tcp_out.c	/^tcp_send_ctrl(struct tcp_pcb *pcb, u8_t flags)$/;"	f
tcp_sent	net/lwip/core/tcp.c	/^tcp_sent(struct tcp_pcb *pcb,$/;"	f
tcp_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^typedef u32_t tcp_seq;$/;"	t
tcp_setprio	net/lwip/core/tcp.c	/^tcp_setprio(struct tcp_pcb *pcb, u8_t prio)$/;"	f
tcp_slowtmr	net/lwip/core/tcp.c	/^tcp_slowtmr(void)$/;"	f
tcp_sndbuf	net/lwip/include/lwip/tcp.h	80;"	d
tcp_state	net/lwip/include/lwip/tcp.h	/^enum tcp_state {$/;"	g
tcp_ticks	net/lwip/core/tcp.c	/^u32_t tcp_ticks;$/;"	v
tcp_timer	net/lwip/core/tcp.c	/^static u8_t tcp_timer;$/;"	v	file:
tcp_timer_needed	net/lwip/api/tcpip.c	/^tcp_timer_needed(void)$/;"	f
tcp_timer_needed	net/lwip/include/lwip/tcp.h	558;"	d
tcp_timewait_input	net/lwip/core/tcp_in.c	/^tcp_timewait_input(struct tcp_pcb *pcb)$/;"	f	file:
tcp_tmp_pcb	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tmp_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_tmr	net/lwip/core/tcp.c	/^tcp_tmr(void)$/;"	f
tcp_tw_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tw_pcbs;$/;"	v	typeref:struct:tcp_pcb
tcp_tw_pcbs	obj/net/ns.asm	/^        tcp_tw_pcbs = pcb->next;$/;"	d
tcp_write	net/lwip/core/tcp_out.c	/^tcp_write(struct tcp_pcb *pcb, const void *data, u16_t len, u8_t apiflags)$/;"	f
tcp_zero_window_probe	net/lwip/core/tcp_out.c	/^tcp_zero_window_probe(struct tcp_pcb *pcb)$/;"	f
tcpactiveopens	net/lwip/core/snmp/mib2.c	/^static u32_t tcpactiveopens = 0,$/;"	v	file:
tcpattemptfails	net/lwip/core/snmp/mib2.c	/^             tcpattemptfails = 0,$/;"	v	file:
tcpconnentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcpconnentry = {$/;"	v	typeref:struct:mib_array_node
tcpconnentry_get_object_def	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcpconnentry_get_value	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcpconnentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcpconnentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
tcpconnentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcpconnentry_nodes[5] = {$/;"	v
tcpconntable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node tcpconntable = {$/;"	v	typeref:struct:mib_ram_array_node
tcpconntable_id	net/lwip/core/snmp/mib2.c	/^s32_t tcpconntable_id = 1;$/;"	v
tcpconntable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* tcpconntable_node = (struct mib_node* const)&tcpconnentry;$/;"	v	typeref:struct:mib_node
tcpconntree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode tcpconntree_root = {$/;"	v	typeref:struct:mib_list_rootnode
tcpestabresets	net/lwip/core/snmp/mib2.c	/^             tcpestabresets = 0,$/;"	v	file:
tcphdr	net/lwip/core/tcp_in.c	/^static struct tcp_hdr *tcphdr;$/;"	v	typeref:struct:tcp_hdr	file:
tcphdr	net/lwip/include/lwip/tcp.h	/^  struct tcp_hdr *tcphdr;  \/* the TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_hdr
tcphdr	net/lwip/netif/ppp/vjbsdhdr.h	/^struct tcphdr  $/;"	s
tcphdr	obj/net/ns.asm	/^    tcphdr = p->payload;$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = (struct tcp_hdr *)((u8_t *)p->payload + IPH_HL(iphdr) * 4);$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = p->payload;$/;"	d
tcpinerrs	net/lwip/core/snmp/mib2.c	/^             tcpinerrs = 0,$/;"	v	file:
tcpinsegs	net/lwip/core/snmp/mib2.c	/^             tcpinsegs = 0,$/;"	v	file:
tcpip_apimsg	net/lwip/api/tcpip.c	/^tcpip_apimsg(struct api_msg *apimsg)$/;"	f
tcpip_apimsg_lock	net/lwip/api/tcpip.c	/^tcpip_apimsg_lock(struct api_msg *apimsg)$/;"	f
tcpip_callback	net/lwip/include/lwip/tcpip.h	86;"	d
tcpip_callback_with_block	net/lwip/api/tcpip.c	/^tcpip_callback_with_block(void (*f)(void *ctx), void *ctx, u8_t block)$/;"	f
tcpip_init	net/lwip/api/tcpip.c	/^tcpip_init(void (* initfunc)(void *), void *arg)$/;"	f
tcpip_init_done	net/lwip/api/tcpip.c	/^static void (* tcpip_init_done)(void *arg);$/;"	v	file:
tcpip_init_done	net/serv.c	/^tcpip_init_done(void *arg)$/;"	f	file:
tcpip_init_done	obj/net/ns.asm	/^  tcpip_init_done = initfunc;$/;"	d
tcpip_init_done_arg	net/lwip/api/tcpip.c	/^static void *tcpip_init_done_arg;$/;"	v	file:
tcpip_init_done_arg	obj/net/ns.asm	/^  tcpip_init_done_arg = arg;$/;"	d
tcpip_input	net/lwip/api/tcpip.c	/^tcpip_input(struct pbuf *p, struct netif *inp)$/;"	f
tcpip_msg	net/lwip/include/lwip/tcpip.h	/^struct tcpip_msg {$/;"	s
tcpip_msg_type	net/lwip/include/lwip/tcpip.h	/^enum tcpip_msg_type {$/;"	g
tcpip_netifapi	net/lwip/api/tcpip.c	/^tcpip_netifapi(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_netifapi_lock	net/lwip/api/tcpip.c	/^tcpip_netifapi_lock(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_tcp_timer	net/lwip/api/tcpip.c	/^tcpip_tcp_timer(void *arg)$/;"	f	file:
tcpip_tcp_timer_active	net/lwip/api/tcpip.c	/^static int tcpip_tcp_timer_active;$/;"	v	file:
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 0;$/;"	d
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 1;$/;"	d
tcpip_thread	net/lwip/api/tcpip.c	/^tcpip_thread(void *arg)$/;"	f	file:
tcpip_timeout	net/lwip/api/tcpip.c	/^tcpip_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
tcpip_untimeout	net/lwip/include/lwip/tcpip.h	93;"	d
tcplen	net/lwip/core/tcp_in.c	/^static u16_t tcplen;$/;"	v	file:
tcplen	obj/net/ns.asm	/^        tcplen = TCP_TCPLEN(&inseg);$/;"	d
tcplen	obj/net/ns.asm	/^  tcplen = p->tot_len + ((flags & TCP_FIN || flags & TCP_SYN)? 1: 0);$/;"	d
tcpoutrsts	net/lwip/core/snmp/mib2.c	/^             tcpoutrsts = 0;$/;"	v	file:
tcpoutsegs	net/lwip/core/snmp/mib2.c	/^             tcpoutsegs = 0,$/;"	v	file:
tcppassiveopens	net/lwip/core/snmp/mib2.c	/^             tcppassiveopens = 0,$/;"	v	file:
tcpretranssegs	net/lwip/core/snmp/mib2.c	/^             tcpretranssegs = 0,$/;"	v	file:
tehdr	obj/net/ns.asm	/^  tehdr = q->payload;$/;"	d
temp	obj/kern/kernel.asm	/^			temp = temp - 97 + 10;$/;"	d
term_reason	net/lwip/netif/ppp/fsm.h	/^  char* term_reason;               \/* Reason for closing protocol *\/$/;"	m	struct:fsm
term_reason_len	net/lwip/netif/ppp/fsm.h	/^  int term_reason_len;             \/* Length of term_reason *\/$/;"	m	struct:fsm
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
th_ack	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_ack;      \/* acknowledgement number *\/$/;"	m	struct:tcphdr
th_dport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_dport;    \/* destination port *\/$/;"	m	struct:tcphdr
th_flags	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_flags;$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_off:4;    \/* data offset *\/$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_off:4,    \/* data offset *\/$/;"	m	struct:tcphdr
th_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_seq;      \/* sequence number *\/$/;"	m	struct:tcphdr
th_sport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sport;    \/* source port *\/$/;"	m	struct:tcphdr
th_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sum;      \/* checksum *\/$/;"	m	struct:tcphdr
th_urp	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_urp;      \/* urgent pointer *\/$/;"	m	struct:tcphdr
th_win	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_win;      \/* window *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_x2 :4;    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_x2 :4,    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_x2_off;$/;"	m	struct:tcphdr
thl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_trap_header_lengths thl;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_trap_header_lengths
thread_clean	net/lwip/jos/arch/thread.c	/^thread_clean(struct thread_context *tc) {$/;"	f	file:
thread_context	net/lwip/jos/arch/threadq.h	/^struct thread_context {$/;"	s
thread_create	net/lwip/jos/arch/thread.c	/^thread_create(thread_id_t *tid, const char *name, $/;"	f
thread_entry	net/lwip/jos/arch/thread.c	/^thread_entry(void) {$/;"	f	file:
thread_halt	net/lwip/jos/arch/thread.c	/^thread_halt() {$/;"	f
thread_hash_size	net/lwip/jos/arch/sys_arch.c	/^enum { thread_hash_size = 257 };$/;"	e	enum:__anon36	file:
thread_id	net/lwip/jos/arch/thread.c	/^thread_id(void) {$/;"	f
thread_id_t	net/lwip/jos/arch/thread.h	/^typedef uint32_t thread_id_t;$/;"	t
thread_init	net/lwip/jos/arch/thread.c	/^thread_init(void) {$/;"	f
thread_onhalt	net/lwip/jos/arch/thread.c	/^thread_onhalt(void (*fun)(thread_id_t)) {$/;"	f
thread_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue thread_queue;$/;"	v	typeref:struct:thread_queue	file:
thread_queue	net/lwip/jos/arch/threadq.h	/^struct thread_queue$/;"	s
thread_set_name	net/lwip/jos/arch/thread.c	/^thread_set_name(struct thread_context *tc, const char *name)$/;"	f	file:
thread_wait	net/lwip/jos/arch/thread.c	/^thread_wait(volatile uint32_t *addr, uint32_t val, uint32_t msec) {$/;"	f
thread_wakeup	net/lwip/jos/arch/thread.c	/^thread_wakeup(volatile uint32_t *addr) {$/;"	f
thread_wakeups_pending	net/lwip/jos/arch/thread.c	/^thread_wakeups_pending(void)$/;"	f
thread_yield	net/lwip/jos/arch/thread.c	/^thread_yield(void) {$/;"	f
threadq_init	net/lwip/jos/arch/threadq.h	/^threadq_init(struct thread_queue *tq)$/;"	f
threadq_pop	net/lwip/jos/arch/threadq.h	/^threadq_pop(struct thread_queue *tq)$/;"	f
threadq_push	net/lwip/jos/arch/threadq.h	/^threadq_push(struct thread_queue *tq, struct thread_context *tc)$/;"	f
thrs	kern/e100.c	/^    uint8_t thrs; \/\/0xE0$/;"	m	struct:e100_cb	file:
ticks	kern/time.c	/^static unsigned int ticks;$/;"	v	file:
ticks	obj/kern/kernel.asm	/^	ticks = 0;$/;"	d
tid	net/lwip/jos/arch/sys_arch.c	/^    thread_id_t tid;$/;"	m	struct:sys_thread	file:
time	net/lwip/include/lwip/sys.h	/^  u32_t time;$/;"	m	struct:sys_timeo
time_init	kern/time.c	/^time_init(void) $/;"	f
time_msec	kern/time.c	/^time_msec(void) $/;"	f
time_needed	obj/net/ns.asm	/^      time_needed = SYS_ARCH_TIMEOUT;$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_mbox_fetch(mbox, msg, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_sem_wait(sem, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^    time_needed = sys_arch_mbox_fetch(mbox, msg, 0);$/;"	d
time_tick	kern/time.c	/^time_tick(void) $/;"	f
timeflag	net/lwip/core/sys.c	/^  s16_t timeflag;$/;"	m	struct:sswt_cb	file:
timeout	obj/net/ns.asm	/^      timeout = 0xffff;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t1_renew + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t2_rebind + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^  timeout = memp_malloc(MEMP_SYS_TIMEOUT);$/;"	d
timeout_cleanup	net/lwip/jos/arch/sys_arch.c	/^timeout_cleanup(thread_id_t tid)$/;"	f	file:
timeouts	obj/net/ns.asm	/^  timeouts = sys_arch_timeouts();$/;"	d
timeouttime	net/lwip/netif/ppp/chap.h	/^  int timeouttime;                        \/* Timeout time in seconds *\/$/;"	m	struct:chap_state
timeouttime	net/lwip/netif/ppp/fsm.h	/^  int timeouttime;                 \/* Timeout time in milliseconds *\/$/;"	m	struct:fsm
timer	net/lwip/include/ipv4/lwip/igmp.h	/^  u16_t              timer;$/;"	m	struct:igmp_group
timer	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t timer;$/;"	m	struct:ip_reassdata
timer	net/timer.c	/^timer(envid_t ns_envid, uint32_t initial_to) {$/;"	f
timer_envid	net/serv.c	/^static envid_t timer_envid;$/;"	v	file:
timer_envid	obj/net/ns.asm	/^	timer_envid = fork();$/;"	d
timer_thread	net/serv.c	/^struct timer_thread {$/;"	s	file:
timeval	net/lwip/include/lwip/sockets.h	/^struct timeval {$/;"	s
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
tmain	net/serv.c	/^tmain(uint32_t arg) {$/;"	f	file:
tmo	net/lwip/include/lwip/tcpip.h	/^    } tmo;$/;"	m	union:tcpip_msg::__anon28	typeref:struct:tcpip_msg::__anon28::__anon31
tmo	net/lwip/jos/arch/sys_arch.c	/^    struct sys_timeouts tmo;$/;"	m	struct:sys_thread	typeref:struct:sys_thread::sys_timeouts	file:
tmp	obj/net/ns.asm	/^      tmp = r;$/;"	d
tmp	obj/net/ns.asm	/^      tmp = tmp | IP_MF;$/;"	d
tmp	obj/net/ns.asm	/^    tmp = omf | (IP_OFFMASK & (ofo));$/;"	d
tmp	obj/net/ns.asm	/^  tmp = ntohs(IPH_OFFSET(iphdr));$/;"	d
tmptimeout	obj/net/ns.asm	/^      tmptimeout = timeouts->next;$/;"	d
tmr	net/lwip/core/dns.c	/^  u8_t  tmr;$/;"	m	struct:dns_table_entry	file:
tmr	net/lwip/include/lwip/tcp.h	/^  u32_t tmr;$/;"	m	struct:tcp_pcb
to	obj/net/ns.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/ns.asm	/^	to = TIMER_INTERVAL - (now - start);$/;"	d
to	obj/net/testinput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/testoutput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
togglecode	kern/console.c	/^static uint8_t togglecode[256] = $/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
tot_len	net/lwip/include/lwip/pbuf.h	/^  u16_t tot_len;$/;"	m	struct:pbuf
tq_first	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_first;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
tq_last	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_last;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst trap_dst[SNMP_TRAP_DESTINATIONS];$/;"	v	typeref:struct:snmp_trap_dst
trap_msg	net/lwip/core/snmp/msg_out.c	/^struct snmp_msg_trap trap_msg;$/;"	v	typeref:struct:snmp_msg_trap
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
tree_levels	net/lwip/include/lwip/snmp_structs.h	/^  u8_t tree_levels;$/;"	m	struct:mib_external_node
tried_llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t tried_llipaddr;      \/* total number of probed\/used Link Local IP-Addresses *\/$/;"	m	struct:autoip
tries	net/lwip/include/lwip/dhcp.h	/^  u8_t tries;$/;"	m	struct:dhcp
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts	net/lwip/include/lwip/netif.h	/^  u32_t ts;$/;"	m	struct:netif
ts	net/lwip/include/lwip/snmp_msg.h	/^  u32_t ts;$/;"	m	struct:snmp_msg_trap
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
tslen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t tslen;$/;"	m	struct:snmp_trap_header_lengths
tslenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t tslenlen;$/;"	m	struct:snmp_trap_header_lengths
tstate	net/lwip/netif/ppp/vj.h	/^  struct cstate tstate[MAX_SLOTS]; \/* xmit connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_answer	file:
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_table_entry	file:
ttw	net/lwip/include/ipv4/lwip/autoip.h	/^  u16_t ttw;                \/* ticks to wait, tick is AUTOIP_TMR_INTERVAL long *\/$/;"	m	struct:autoip
tv_sec	net/lwip/include/lwip/sockets.h	/^  long    tv_sec;         \/* seconds *\/$/;"	m	struct:timeval
tv_usec	net/lwip/include/lwip/sockets.h	/^  long    tv_usec;        \/* and microseconds *\/$/;"	m	struct:timeval
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_answer	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_query	file:
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_dur_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_echo_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_te_hdr
type	net/lwip/include/lwip/api.h	/^  enum netconn_type type;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_type
type	net/lwip/include/lwip/pbuf.h	/^  u8_t \/*pbuf_type*\/ type;$/;"	m	struct:pbuf
type	net/lwip/include/lwip/tcpip.h	/^  enum tcpip_msg_type type;$/;"	m	struct:tcpip_msg	typeref:enum:tcpip_msg::tcpip_msg_type
type	obj/net/ns.asm	/^      type = p->type;$/;"	d
type	obj/net/ns.asm	/^  type = *((u8_t *)p->payload);$/;"	d
type	obj/net/ns.asm	/^  type = p->type;$/;"	d
u16_t	net/lwip/jos/arch/cc.h	/^typedef uint16_t u16_t;$/;"	t
u16_t	obj/net/ns.asm	/^u16_t$/;"	l
u16_t	obj/net/testinput.asm	/^u16_t$/;"	l
u16_t	obj/user/echosrv.asm	/^u16_t$/;"	l
u16_t	obj/user/echotest.asm	/^u16_t$/;"	l
u16_t	obj/user/httpd.asm	/^u16_t$/;"	l
u32_t	net/lwip/jos/arch/cc.h	/^typedef uint32_t u32_t;$/;"	t
u32_t	obj/net/ns.asm	/^u32_t $/;"	l
u32_t	obj/net/ns.asm	/^u32_t$/;"	l
u32_t	obj/net/testinput.asm	/^u32_t$/;"	l
u32_t	obj/user/echosrv.asm	/^u32_t$/;"	l
u32_t	obj/user/echotest.asm	/^u32_t$/;"	l
u32_t	obj/user/httpd.asm	/^u32_t$/;"	l
u64_t	net/lwip/jos/arch/cc.h	/^typedef uint64_t u64_t;$/;"	t
u8_t	net/lwip/jos/arch/cc.h	/^typedef uint8_t u8_t;$/;"	t
u8_t	obj/net/ns.asm	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t netif_is_up(struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t$/;"	l
u_char	net/lwip/netif/ppp/ppp.h	/^typedef unsigned char  u_char;$/;"	t
u_int	net/lwip/netif/ppp/ppp.h	/^typedef unsigned int   u_int;$/;"	t
u_long	net/lwip/netif/ppp/ppp.h	/^typedef unsigned long  u_long;$/;"	t
u_short	net/lwip/netif/ppp/ppp.h	/^typedef unsigned short u_short;$/;"	t
udp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udp = {$/;"	v	typeref:struct:mib_array_node
udp	net/lwip/include/lwip/api.h	/^    struct udp_pcb *udp;$/;"	m	union:netconn::__anon14	typeref:struct:netconn::__anon14::udp_pcb
udp	net/lwip/include/lwip/stats.h	/^  struct stats_proto udp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
udp_bind	net/lwip/core/udp.c	/^udp_bind(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_connect	net/lwip/core/udp.c	/^udp_connect(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_debug_print	net/lwip/core/udp.c	/^udp_debug_print(struct udp_hdr *udphdr)$/;"	f
udp_debug_print	net/lwip/include/lwip/udp.h	141;"	d
udp_disconnect	net/lwip/core/udp.c	/^udp_disconnect(struct udp_pcb *pcb)$/;"	f
udp_flags	net/lwip/include/lwip/udp.h	130;"	d
udp_get_object_def	net/lwip/core/snmp/mib2.c	/^udp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udp_get_value	net/lwip/core/snmp/mib2.c	/^udp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udp_hdr	net/lwip/include/lwip/udp.h	/^struct udp_hdr {$/;"	s
udp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udp_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
udp_init	net/lwip/include/lwip/udp.h	136;"	d
udp_input	net/lwip/core/udp.c	/^udp_input(struct pbuf *p, struct netif *inp)$/;"	f
udp_new	net/lwip/core/udp.c	/^udp_new(void)$/;"	f
udp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udp_nodes[5] = {$/;"	v
udp_pcb	net/lwip/include/lwip/udp.h	/^struct udp_pcb {$/;"	s
udp_pcbs	net/lwip/core/udp.c	/^struct udp_pcb *udp_pcbs;$/;"	v	typeref:struct:udp_pcb
udp_pcbs	obj/net/ns.asm	/^          udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = udp_pcbs->next;$/;"	d
udp_pcbs	obj/net/ns.asm	/^  udp_pcbs = pcb;$/;"	d
udp_recv	net/lwip/core/udp.c	/^udp_recv(struct udp_pcb *pcb,$/;"	f
udp_remove	net/lwip/core/udp.c	/^udp_remove(struct udp_pcb *pcb)$/;"	f
udp_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode udp_root = {$/;"	v	typeref:struct:mib_list_rootnode
udp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node udp_scalar = {$/;"	v
udp_send	net/lwip/core/udp.c	/^udp_send(struct udp_pcb *pcb, struct pbuf *p)$/;"	f
udp_sendto	net/lwip/core/udp.c	/^udp_sendto(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_sendto_if	net/lwip/core/udp.c	/^udp_sendto_if(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_setflags	net/lwip/include/lwip/udp.h	131;"	d
udpentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udpentry = {$/;"	v	typeref:struct:mib_array_node
udpentry_get_object_def	net/lwip/core/snmp/mib2.c	/^udpentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udpentry_get_value	net/lwip/core/snmp/mib2.c	/^udpentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udpentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udpentry_ids[2] = { 1, 2 };$/;"	v
udpentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udpentry_nodes[2] = {$/;"	v
udphdr	obj/net/ns.asm	/^  udphdr = (struct udp_hdr *)p->payload;$/;"	d
udphdr	obj/net/ns.asm	/^  udphdr = q->payload;$/;"	d
udpindatagrams	net/lwip/core/snmp/mib2.c	/^static u32_t udpindatagrams = 0,$/;"	v	file:
udpinerrors	net/lwip/core/snmp/mib2.c	/^             udpinerrors = 0,$/;"	v	file:
udpnoports	net/lwip/core/snmp/mib2.c	/^             udpnoports = 0,$/;"	v	file:
udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^             udpoutdatagrams = 0;$/;"	v	file:
udptable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node udptable = {$/;"	v	typeref:struct:mib_ram_array_node
udptable_id	net/lwip/core/snmp/mib2.c	/^s32_t udptable_id = 1;$/;"	v
udptable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* udptable_node = (struct mib_node* const)&udpentry;$/;"	v	typeref:struct:mib_node
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/net/ns.asm	/^uint32_t$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(void)$/;"	f
umain	net/serv.c	/^umain(void)$/;"	f
umain	net/testinput.c	/^umain(void)$/;"	f
umain	net/testoutput.c	/^umain(void)$/;"	f
umain	user/badsegment.c	/^umain(void)$/;"	f
umain	user/breakpoint.c	/^umain(void)$/;"	f
umain	user/buggyhello.c	/^umain(void)$/;"	f
umain	user/buggyhello2.c	/^umain(void)$/;"	f
umain	user/divzero.c	/^umain(void)$/;"	f
umain	user/dumbfork.c	/^umain(void)$/;"	f
umain	user/echosrv.c	/^umain(void)$/;"	f
umain	user/echotest.c	/^int umain(void) $/;"	f
umain	user/evilhello.c	/^umain(void)$/;"	f
umain	user/fairness.c	/^umain(void)$/;"	f
umain	user/faultalloc.c	/^umain(void)$/;"	f
umain	user/faultallocbad.c	/^umain(void)$/;"	f
umain	user/faultbadhandler.c	/^umain(void)$/;"	f
umain	user/faultdie.c	/^umain(void)$/;"	f
umain	user/faultevilhandler.c	/^umain(void)$/;"	f
umain	user/faultnostack.c	/^umain(void)$/;"	f
umain	user/faultread.c	/^umain(void)$/;"	f
umain	user/faultreadkernel.c	/^umain(void)$/;"	f
umain	user/faultregs.c	/^umain(void)$/;"	f
umain	user/faultwrite.c	/^umain(void)$/;"	f
umain	user/faultwritekernel.c	/^umain(void)$/;"	f
umain	user/forktree.c	/^umain(void)$/;"	f
umain	user/hello.c	/^umain(void)$/;"	f
umain	user/httpd.c	/^umain(void)$/;"	f
umain	user/icode.c	/^umain(void)$/;"	f
umain	user/idle.c	/^umain(void)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(void)$/;"	f
umain	user/pingpongs.c	/^umain(void)$/;"	f
umain	user/primes.c	/^umain(void)$/;"	f
umain	user/softint.c	/^umain(void)$/;"	f
umain	user/spawnhello.c	/^umain(void)$/;"	f
umain	user/spawninit.c	/^umain(void)$/;"	f
umain	user/spin.c	/^umain(void)$/;"	f
umain	user/testbss.c	/^umain(void)$/;"	f
umain	user/testfile.c	/^umain(void)$/;"	f
umain	user/testtime.c	/^umain(int argc, char **argv)$/;"	f
umain	user/writemotd.c	/^umain(void)$/;"	f
umain	user/yield.c	/^umain(void)$/;"	f
unacked	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unacked;  \/* Sent but unacknowledged segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
uncon_pcb	obj/net/ns.asm	/^          uncon_pcb = pcb;$/;"	d
uncon_pcb	obj/net/ns.asm	/^    uncon_pcb = NULL;$/;"	d
unicast_query	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER unicast_query;    \/* *\/$/;"	m	struct:stats_igmp
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unit	net/lwip/netif/ppp/chap.h	/^  int unit;                               \/* Interface unit number *\/$/;"	m	struct:chap_state
unit	net/lwip/netif/ppp/fsm.h	/^  int unit;                        \/* Interface unit number *\/$/;"	m	struct:fsm
unit	net/lwip/netif/ppp/ppp.c	/^  int unit;$/;"	m	struct:pppInputHeader	file:
unsent	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unsent;   \/* Unsent (queued) segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
unsigned	obj/fs/fs.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned int HexToDecimal(char * in)$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/net/ns.asm	/^unsigned int$/;"	l
unsigned	obj/net/testinput.asm	/^unsigned int$/;"	l
unsigned	obj/net/testoutput.asm	/^unsigned int$/;"	l
unsigned	obj/user/echosrv.asm	/^unsigned int$/;"	l
unsigned	obj/user/echotest.asm	/^unsigned int$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
unsigned	obj/user/httpd.asm	/^unsigned int$/;"	l
unsigned	obj/user/icode.asm	/^unsigned int$/;"	l
unsigned	obj/user/idle.asm	/^unsigned int$/;"	l
unsigned	obj/user/init.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpong.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/testtime.asm	/^unsigned int$/;"	l
unsigned	obj/user/writemotd.asm	/^unsigned int$/;"	l
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_dur_hdr
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_te_hdr
up	net/lwip/netif/ppp/fsm.h	/^  void (*up)(fsm*);                                 \/* Called when fsm reaches LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
upap	net/lwip/netif/ppp/pap.c	/^upap_state upap[NUM_PPP]; \/* UPAP state; one for each unit *\/$/;"	v
upap_authpeer	net/lwip/netif/ppp/pap.c	/^upap_authpeer(int unit)$/;"	f
upap_authwithpeer	net/lwip/netif/ppp/pap.c	/^upap_authwithpeer(int unit, char *user, char *password)$/;"	f
upap_init	net/lwip/netif/ppp/pap.c	/^upap_init(int unit)$/;"	f	file:
upap_input	net/lwip/netif/ppp/pap.c	/^upap_input(int unit, u_char *inpacket, int l)$/;"	f	file:
upap_lowerdown	net/lwip/netif/ppp/pap.c	/^upap_lowerdown(int unit)$/;"	f	file:
upap_lowerup	net/lwip/netif/ppp/pap.c	/^upap_lowerup(int unit)$/;"	f	file:
upap_protrej	net/lwip/netif/ppp/pap.c	/^upap_protrej(int unit)$/;"	f	file:
upap_rauthack	net/lwip/netif/ppp/pap.c	/^upap_rauthack(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthnak	net/lwip/netif/ppp/pap.c	/^upap_rauthnak(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthreq	net/lwip/netif/ppp/pap.c	/^upap_rauthreq(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_reqtimeout	net/lwip/netif/ppp/pap.c	/^upap_reqtimeout(void *arg)$/;"	f	file:
upap_sauthreq	net/lwip/netif/ppp/pap.c	/^upap_sauthreq(upap_state *u)$/;"	f	file:
upap_setloginpasswd	net/lwip/netif/ppp/pap.c	/^upap_setloginpasswd(int unit, const char *luser, const char *lpassword)$/;"	f
upap_sresp	net/lwip/netif/ppp/pap.c	/^upap_sresp(upap_state *u, u_char code, u_char id, char *msg, int msglen)$/;"	f	file:
upap_state	net/lwip/netif/ppp/pap.h	/^typedef struct upap_state {$/;"	s
upap_state	net/lwip/netif/ppp/pap.h	/^} upap_state;$/;"	t	typeref:struct:upap_state
upap_timeout	net/lwip/netif/ppp/pap.c	/^upap_timeout(void *arg)$/;"	f	file:
update_arp_entry	net/lwip/netif/etharp.c	/^update_arp_entry(struct netif *netif, struct ip_addr *ipaddr, struct eth_addr *ethaddr, u8_t flags)$/;"	f	file:
url	obj/user/httpd.asm	/^	url = request;$/;"	d
url	user/httpd.c	/^	char *url;$/;"	m	struct:http_request	file:
url_len	obj/user/httpd.asm	/^	url_len = request - url;$/;"	d
us_clientstate	net/lwip/netif/ppp/pap.h	/^  int us_clientstate;    \/* Client state *\/$/;"	m	struct:upap_state
us_id	net/lwip/netif/ppp/pap.h	/^  u_char us_id;          \/* Current id *\/$/;"	m	struct:upap_state
us_maxtransmits	net/lwip/netif/ppp/pap.h	/^  int us_maxtransmits;   \/* Maximum number of auth-reqs to send *\/$/;"	m	struct:upap_state
us_passwd	net/lwip/netif/ppp/pap.h	/^  const char *us_passwd; \/* Password *\/$/;"	m	struct:upap_state
us_passwdlen	net/lwip/netif/ppp/pap.h	/^  int us_passwdlen;      \/* Password length *\/$/;"	m	struct:upap_state
us_reqtimeout	net/lwip/netif/ppp/pap.h	/^  int us_reqtimeout;     \/* Time to wait for auth-req from peer *\/$/;"	m	struct:upap_state
us_serverstate	net/lwip/netif/ppp/pap.h	/^  int us_serverstate;    \/* Server state *\/$/;"	m	struct:upap_state
us_timeouttime	net/lwip/netif/ppp/pap.h	/^  int us_timeouttime;    \/* Timeout (seconds) for auth-req retrans. *\/$/;"	m	struct:upap_state
us_transmits	net/lwip/netif/ppp/pap.h	/^  int us_transmits;      \/* Number of auth-reqs sent *\/$/;"	m	struct:upap_state
us_unit	net/lwip/netif/ppp/pap.h	/^  int us_unit;           \/* Interface unit number *\/$/;"	m	struct:upap_state
us_user	net/lwip/netif/ppp/pap.h	/^  const char *us_user;   \/* User *\/$/;"	m	struct:upap_state
us_userlen	net/lwip/netif/ppp/pap.h	/^  int us_userlen;        \/* User length *\/$/;"	m	struct:upap_state
usage	fs/fsformat.c	/^usage(void)$/;"	f
use	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               use; \/* counter of simultaneous uses *\/$/;"	m	struct:igmp_group
used	net/lwip/core/mem.c	/^  u8_t used;$/;"	m	struct:mem	file:
used	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER used;$/;"	m	struct:stats_syselem
used	net/lwip/include/lwip/stats.h	/^  mem_size_t used;$/;"	m	struct:stats_mem
useg	obj/net/ns.asm	/^          useg = useg->next;$/;"	d
useg	obj/net/ns.asm	/^    useg = NULL;$/;"	d
useg	obj/net/ns.asm	/^  useg = pcb->unacked;$/;"	d
useg	obj/net/ns.asm	/^  useg = queue = seg = NULL;$/;"	d
usehostname	net/lwip/netif/ppp/ppp.h	/^  u_int  usehostname       : 1;       \/* Use hostname for our_name *\/$/;"	m	struct:ppp_settings
usepeerdns	net/lwip/netif/ppp/ppp.h	/^  u_int  usepeerdns        : 1;       \/* Ask peer for DNS adds *\/$/;"	m	struct:ppp_settings
user	net/lwip/netif/ppp/ppp.h	/^  char user       [MAXNAMELEN   + 1]; \/* Username for PAP *\/$/;"	m	struct:ppp_settings
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = (uintptr_t)orig_va;$/;"	d
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
v	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
v	net/lwip/jos/arch/sys_arch.c	/^	uint32_t v;$/;"	m	union:sys_sem_entry::__anon34	file:
v	obj/kern/kernel.asm	/^	v = boot_freemem;$/;"	d
v	obj/net/ns.asm	/^			v = mptr;$/;"	d
v	obj/net/ns.asm	/^	v = mptr;$/;"	d
v	obj/user/httpd.asm	/^			v = mptr;$/;"	d
v	obj/user/httpd.asm	/^	v = mptr;$/;"	d
v1_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER v1_rxed;          \/* *\/$/;"	m	struct:stats_igmp
v_len	net/lwip/include/lwip/snmp_structs.h	/^  u16_t v_len;$/;"	m	struct:obj_def
va	obj/kern/kernel.asm	/^		va = start;$/;"	d
va	obj/kern/kernel.asm	/^	  va = HexToDecimal(argv[i]);$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/net/ns.asm	/^		va = get_buffer();$/;"	d
va	obj/net/ns.asm	/^	va = (void *)(REQVA + i * PGSIZE);$/;"	d
va	obj/net/ns.asm	/^        va = (void *)(pn * PGSIZE);$/;"	d
va	obj/net/testinput.asm	/^        va = (void *)(pn * PGSIZE);$/;"	d
va	obj/net/testoutput.asm	/^        va = (void *)(pn * PGSIZE);$/;"	d
va	obj/user/pingpong.asm	/^        va = (void *)(pn * PGSIZE);$/;"	d
va	obj/user/primes.asm	/^        va = (void *)(pn * PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	obj/net/ns.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/ns.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/ns.asm	/^    val = 0;$/;"	d
val	obj/net/testinput.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/testinput.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/testinput.asm	/^    val = 0;$/;"	d
val	obj/user/echosrv.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echosrv.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echosrv.asm	/^    val = 0;$/;"	d
val	obj/user/echotest.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echotest.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echotest.asm	/^    val = 0;$/;"	d
val	obj/user/httpd.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/httpd.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/httpd.asm	/^    val = 0;$/;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
valid	obj/net/ns.asm	/^            valid = 0;$/;"	d
valid	obj/net/ns.asm	/^          valid = 0;$/;"	d
valid	obj/net/ns.asm	/^        valid = 0;$/;"	d
value	net/lwip/include/lwip/snmp_msg.h	/^  void *value;$/;"	m	struct:snmp_varbind
value	obj/net/ns.asm	/^  value = (u32_t)(*ptr++) << 24;$/;"	d
value_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_len;$/;"	m	struct:snmp_varbind
value_type	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_type;$/;"	m	struct:snmp_varbind
vb_idx	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vb_idx;$/;"	m	struct:snmp_msg_pstat
vb_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *vb_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_resp_header_lengths
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_trap_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_resp_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_trap_header_lengths
version	obj/user/httpd.asm	/^	version = request;$/;"	d
version	user/httpd.c	/^	char *version;$/;"	m	struct:http_request	file:
version_len	obj/user/httpd.asm	/^	version_len = request - version;$/;"	d
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
vjComp	net/lwip/netif/ppp/ppp.c	/^  struct vjcompress vjComp;     \/* Van Jabobsen compression header. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::vjcompress	file:
vjEnabled	net/lwip/netif/ppp/ppp.c	/^  int  vjEnabled;               \/* Flag indicating VJ compression enabled. *\/$/;"	m	struct:PPPControl_s	file:
vj_compress_init	net/lwip/netif/ppp/vj.c	/^vj_compress_init(struct vjcompress *comp)$/;"	f
vj_compress_tcp	net/lwip/netif/ppp/vj.c	/^vj_compress_tcp(struct vjcompress *comp, struct pbuf *pb)$/;"	f
vj_protocol	net/lwip/netif/ppp/ipcp.h	/^  u_short vj_protocol;       \/* protocol value to use in VJ option *\/$/;"	m	struct:ipcp_options
vj_uncompress_err	net/lwip/netif/ppp/vj.c	/^vj_uncompress_err(struct vjcompress *comp)$/;"	f
vj_uncompress_tcp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_tcp(struct pbuf **nb, struct vjcompress *comp)$/;"	f
vj_uncompress_uncomp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_uncomp(struct pbuf *nb, struct vjcompress *comp)$/;"	f
vjcompress	net/lwip/netif/ppp/vj.h	/^struct vjcompress {$/;"	s
vjcs_u	net/lwip/netif/ppp/vj.h	/^  } vjcs_u;$/;"	m	struct:cstate	typeref:union:cstate::__anon10
vjs_compressed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressed;     \/* outbound compressed packets *\/$/;"	m	struct:vjstat
vjs_compressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressedin;   \/* inbound compressed packets *\/$/;"	m	struct:vjstat
vjs_errorin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_errorin;        \/* inbound unknown type packets *\/$/;"	m	struct:vjstat
vjs_misses	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_misses;         \/* times couldn't find conn. state *\/$/;"	m	struct:vjstat
vjs_packets	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_packets;        \/* outbound packets *\/$/;"	m	struct:vjstat
vjs_searches	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_searches;       \/* searches for connection state *\/$/;"	m	struct:vjstat
vjs_tossed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_tossed;         \/* inbound packets tossed because of error *\/$/;"	m	struct:vjstat
vjs_uncompressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_uncompressedin; \/* inbound uncompressed packets *\/$/;"	m	struct:vjstat
vjstat	net/lwip/netif/ppp/vj.h	/^struct vjstat {$/;"	s
vlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t vlen;$/;"	m	struct:snmp_varbind
vlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vlenlen;$/;"	m	struct:snmp_varbind
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void clear_rfd( struct e100_ru *rf)$/;"	l
void	obj/kern/kernel.asm	/^void irq_error();$/;"	l
void	obj/kern/kernel.asm	/^void irq_ide();$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void showmap(uintptr_t start)$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/net/ns.asm	/^void *$/;"	l
void	obj/net/ns.asm	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	l
void	obj/net/ns.asm	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	l
void	obj/net/ns.asm	/^void netif_remove(struct netif * netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_down(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_up(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void output(uint32_t ns_envid)$/;"	l
void	obj/net/ns.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/ns.asm	/^void$/;"	l
void	obj/net/testinput.asm	/^void *$/;"	l
void	obj/net/testinput.asm	/^void output(uint32_t ns_envid)$/;"	l
void	obj/net/testinput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testinput.asm	/^void$/;"	l
void	obj/net/testoutput.asm	/^void *$/;"	l
void	obj/net/testoutput.asm	/^void output(uint32_t ns_envid)$/;"	l
void	obj/net/testoutput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testoutput.asm	/^void$/;"	l
void	obj/user/echosrv.asm	/^void *$/;"	l
void	obj/user/echosrv.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echosrv.asm	/^void$/;"	l
void	obj/user/echotest.asm	/^void *$/;"	l
void	obj/user/echotest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echotest.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/httpd.asm	/^void *$/;"	l
void	obj/user/httpd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/httpd.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/testtime.asm	/^void *$/;"	l
void	obj/user/testtime.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testtime.asm	/^void$/;"	l
void	obj/user/writemotd.asm	/^void *$/;"	l
void	obj/user/writemotd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/writemotd.asm	/^void$/;"	l
voidfunc	net/lwip/include/lwip/netifapi.h	/^      void  (* voidfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon15::__anon17
volatile	obj/fs/fs.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/net/ns.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/net/testinput.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/net/testoutput.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/echosrv.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/echotest.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/hello.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/httpd.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/icode.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/idle.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/init.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/pingpong.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/primes.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/testtime.asm	/^volatile struct Env *env;$/;"	t
volatile	obj/user/writemotd.asm	/^volatile struct Env *env;$/;"	t
vpd_key0	kern/pcireg.h	/^	uint8_t		vpd_key0;$/;"	m	struct:pci_vpd
vpd_key1	kern/pcireg.h	/^	uint8_t		vpd_key1;$/;"	m	struct:pci_vpd
vpd_len	kern/pcireg.h	/^	uint8_t		vpd_len;		\/* length of data only *\/$/;"	m	struct:pci_vpd
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;		\/* length of data + tag *\/$/;"	m	struct:pci_vpd_smallres
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;$/;"	m	struct:pci_vpd_largeres
vpdres_len_lsb	kern/pcireg.h	/^	uint8_t		vpdres_len_lsb;		\/* length of data only *\/$/;"	m	struct:pci_vpd_largeres
vpdres_len_msb	kern/pcireg.h	/^	uint8_t		vpdres_len_msb;$/;"	m	struct:pci_vpd_largeres
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vpte	obj/kern/kernel.asm	/^	vpte = (pte_t*)KADDR(pte);$/;"	d
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
w	net/lwip/include/lwip/api_msg.h	/^    } w;$/;"	m	union:api_msg_msg::__anon20	typeref:struct:api_msg_msg::__anon20::__anon24
wait_for_line	grade-lab6.sh	/^wait_for_line() {$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
waiters	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t waiters;$/;"	m	struct:sys_sem_entry::__anon34::__anon35	file:
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
we	obj/net/ns.asm	/^       we do NOT return to the application thread, since ERR_MEM is$/;"	d
whom	net/serv.c	/^	uint32_t whom;$/;"	m	struct:st_args	file:
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/net/ns.asm	/^				width = 0;$/;"	d
width	obj/net/ns.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/ns.asm	/^		width = -1;$/;"	d
width	obj/net/testinput.asm	/^				width = 0;$/;"	d
width	obj/net/testinput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testinput.asm	/^		width = -1;$/;"	d
width	obj/net/testoutput.asm	/^				width = 0;$/;"	d
width	obj/net/testoutput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testoutput.asm	/^		width = -1;$/;"	d
width	obj/user/echosrv.asm	/^				width = 0;$/;"	d
width	obj/user/echosrv.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echosrv.asm	/^		width = -1;$/;"	d
width	obj/user/echotest.asm	/^				width = 0;$/;"	d
width	obj/user/echotest.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echotest.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/httpd.asm	/^				width = 0;$/;"	d
width	obj/user/httpd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/httpd.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/testtime.asm	/^				width = 0;$/;"	d
width	obj/user/testtime.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testtime.asm	/^		width = -1;$/;"	d
width	obj/user/writemotd.asm	/^				width = 0;$/;"	d
width	obj/user/writemotd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/writemotd.asm	/^		width = -1;$/;"	d
windex	kern/e100.c	/^static uint32_t windex = -1;$/;"	v	file:
windex	obj/kern/kernel.asm	/^	windex = windex % MAX_RING_SZ;$/;"	d
winsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   winsaddr[2];       \/* Primary and secondary MS WINS entries *\/$/;"	m	struct:ipcp_options
wnd	obj/net/ns.asm	/^  wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);$/;"	d
word	net/lwip/netif/ppp/auth.c	/^  char        word[1];$/;"	m	struct:wordlist	file:
wordlist	net/lwip/netif/ppp/auth.c	/^struct wordlist {$/;"	s	file:
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon6	file:
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write	net/lwip/include/lwip/sockets.h	346;"	d
write_delayed	net/lwip/include/lwip/api.h	/^  u8_t write_delayed;$/;"	m	struct:netconn
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
write_finished	obj/net/ns.asm	/^      write_finished = 1;$/;"	d
write_finished	obj/net/ns.asm	/^    write_finished = 1;$/;"	d
write_msg	net/lwip/include/lwip/api.h	/^  struct api_msg_msg *write_msg;$/;"	m	struct:netconn	typeref:struct:netconn::api_msg_msg
write_offset	net/lwip/include/lwip/api.h	/^  int write_offset;$/;"	m	struct:netconn
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
writeset	net/lwip/api/sockets.c	/^  fd_set *writeset;$/;"	m	struct:lwip_select_cb	file:
xid	net/lwip/core/dhcp.c	/^static u32_t xid = 0xABCD0000;$/;"	v	file:
xid	net/lwip/include/lwip/dhcp.h	/^  u32_t xid;$/;"	m	struct:dhcp
xmit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER xmit;             \/* Transmitted packets. *\/$/;"	m	struct:stats_proto
xmit_accm	net/lwip/netif/ppp/lcp.c	/^ext_accm xmit_accm[NUM_PPP];           \/* extended transmit ACCM *\/$/;"	v
xmit_idle	net/lwip/netif/ppp/ppp.h	/^  u_short xmit_idle;      \/* seconds since last NP packet sent *\/$/;"	m	struct:ppp_idle
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
zero	user/divzero.c	/^int zero;$/;"	v
